<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgPlacementOfStreamlines2" kind="group">
    <compoundname>PkgPlacementOfStreamlines2</compoundname>
    <title>2D Placement of Streamlines Reference</title>
    <innerclass refid="classCGAL_1_1Euler__integrator__2" prot="public">CGAL::Euler_integrator_2</innerclass>
    <innerclass refid="classCGAL_1_1Regular__grid__2" prot="public">CGAL::Regular_grid_2</innerclass>
    <innerclass refid="classCGAL_1_1Runge__kutta__integrator__2" prot="public">CGAL::Runge_kutta_integrator_2</innerclass>
    <innerclass refid="classCGAL_1_1Stream__lines__2" prot="public">CGAL::Stream_lines_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangular__field__2" prot="public">CGAL::Triangular_field_2</innerclass>
    <innergroup refid="group__PkgPlacementOfStreamlines2Concepts">Concepts</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="streamlines-small.jpg"></image>
   Abdelkrim Mebarki Visualizing vector fields is important for many application domains. A good way to do it is to generate streamlines that describe the flow behavior. This package implements the &quot;Farthest Point Seeding&quot; algorithm for placing streamlines in 2D vector fields. It generates a list of streamlines corresponding to an input flow using a specified separating distance. The algorithm uses a Delaunay triangulation to model objects and address different queries, and relies on choosing the centers of the biggest empty circles to start the integration of the streamlines. <linebreak/>
   <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2Summary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">2D Triangulation</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:m-ps-18b">cgal:m-ps-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/4.13/streamlines.zip">2D Stream Lines</ulink><linebreak/>
<bold>Common Demo Dlls:</bold> <ulink url="https://www.cgal.org/demo/4.13/CGAL-demoDLLs.zip">dlls</ulink><linebreak/>
 </para><para>Vector and direction fields are commonly used for modeling physical phenomena, where a direction and magnitude, namely a vector is assigned to each point inside a domain.</para><para>A streamline is a curve everywhere tangent to the field. It can be considered as the path traced by an imaginary massless particle dropped into a steady fluid flow described by the field.</para><para>A streamline is represented as a polyline iteratively elongated by bidirectional numerical integration started from a seed point, until it comes close to another streamline, hits the domain boundary, or reaches a critical point.</para><para>The <computeroutput><ref refid="classCGAL_1_1Stream__lines__2" kindref="compound">CGAL::Stream_lines_2</ref></computeroutput> class consists of saturating the domain with a set of tangential streamlines in accordance with a specified density.</para><para>Streamlines are represented as containers of points, manipulated by an iterator range of points, and the whole placement is accessible via an iterator range of streamlines.</para><para>The main class in this package, the class <computeroutput><ref refid="classCGAL_1_1Stream__lines__2" kindref="compound">CGAL::Stream_lines_2</ref></computeroutput>, depends on two template parameters. The first template parameter stands for a class which represents both the vector field and the visualization domain with operations on them, and should be instantiated by a model of the concept <computeroutput><ref refid="classVectorField__2" kindref="compound">VectorField_2</ref></computeroutput>. The second template parameter stands for a function object that ensures the numerical integration used to construct the streamlines, and should be instantiated by a model of the concept <computeroutput><ref refid="classIntegrator__2" kindref="compound">Integrator_2</ref></computeroutput>.</para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classStreamLinesTraits__2" kindref="compound">StreamLinesTraits_2</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classIntegrator__2" kindref="compound">Integrator_2</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classVectorField__2" kindref="compound">VectorField_2</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Stream__lines__2" kindref="compound">CGAL::Stream_lines_2</ref>&lt;<ref refid="classVectorField__2" kindref="compound">VectorField_2</ref>,<ref refid="classIntegrator__2" kindref="compound">Integrator_2</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Euler__integrator__2" kindref="compound">CGAL::Euler_integrator_2</ref>&lt;<ref refid="classVectorField__2" kindref="compound">VectorField_2</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Runge__kutta__integrator__2" kindref="compound">CGAL::Runge_kutta_integrator_2</ref>&lt;<ref refid="classVectorField__2" kindref="compound">VectorField_2</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Regular__grid__2" kindref="compound">CGAL::Regular_grid_2</ref>&lt;<ref refid="classStreamLinesTraits__2" kindref="compound">StreamLinesTraits_2</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Triangular__field__2" kindref="compound">CGAL::Triangular_field_2</ref>&lt;<ref refid="classStreamLinesTraits__2" kindref="compound">StreamLinesTraits_2</ref>&gt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
