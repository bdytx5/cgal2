<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classEdgeProfile" kind="class" language="C++" prot="public">
    <compoundname>EdgeProfile</compoundname>
    <includes local="no">Concepts/EdgeProfile.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classEdgeProfile_1a0e4fbc31bba41052363f166323e6f32c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type EdgeProfile::TriangleMesh</definition>
        <argsstring></argsstring>
        <name>TriangleMesh</name>
        <briefdescription>
<para>The type of the surface mesh to simplify. </para>        </briefdescription>
        <detaileddescription>
<para>Must be a model of the <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> concepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="23" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classEdgeProfile_1ac1ccf60effd05136c6007f0c4d26a853" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type EdgeProfile::VertexPointMap</definition>
        <argsstring></argsstring>
        <name>VertexPointMap</name>
        <briefdescription>
<para>The type of a property map that maps vertices on points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="28" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" prot="public" static="no" mutable="no">
        <type>boost::graph_traits&lt; <ref refid="classEdgeProfile_1a0e4fbc31bba41052363f166323e6f32c" kindref="member">TriangleMesh</ref> &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor EdgeProfile::vertex_descriptor</definition>
        <argsstring></argsstring>
        <name>vertex_descriptor</name>
        <briefdescription>
<para>A Bgl vertex descriptor representing a vertex of the surface mesh. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="33" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" prot="public" static="no" mutable="no">
        <type>boost::graph_traits&lt; <ref refid="classEdgeProfile_1a0e4fbc31bba41052363f166323e6f32c" kindref="member">TriangleMesh</ref> &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt;TriangleMesh&gt;::halfedge_descriptor EdgeProfile::halfedge_descriptor</definition>
        <argsstring></argsstring>
        <name>halfedge_descriptor</name>
        <briefdescription>
<para>A Bgl halfedge descriptor representing a haledge of the surface mesh. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="38" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEdgeProfile_1a2a25fea0f4988dd09b78ba432078e59b" prot="public" static="no" mutable="no">
        <type>boost::property_traits&lt; <ref refid="classEdgeProfile_1ac1ccf60effd05136c6007f0c4d26a853" kindref="member">VertexPointMap</ref> &gt;::value_type</type>
        <definition>boost::property_traits&lt;VertexPointMap&gt;::value_type EdgeProfile::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>The point type for the surface mesh vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Must be a model of <computeroutput>Point_3</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="43" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEdgeProfile_1a0177903803a5a2c6ceba94d0caca808a" prot="public" static="no" mutable="no">
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; <ref refid="classEdgeProfile_1a2a25fea0f4988dd09b78ba432078e59b" kindref="member">Point</ref> &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;Point&gt;::Kernel::FT EdgeProfile::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>The coordinate type of points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="48" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classEdgeProfile_1aa78d2ce2e46129e12a2a5e79e159fe7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" kindref="member">vertex_descriptor</ref></type>
        <definition>vertex_descriptor EdgeProfile::v0</definition>
        <argsstring>() const</argsstring>
        <name>v0</name>
        <briefdescription>
<para>One of vertices of the edge to be collapsed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a9e2bbe7f1980a198fbc63b1890946cbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" kindref="member">vertex_descriptor</ref></type>
        <definition>vertex_descriptor EdgeProfile::v1</definition>
        <argsstring>() const</argsstring>
        <name>v1</name>
        <briefdescription>
<para>The other vertex of the edge to be collapsed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a5177f90d8d239aec9e593a521add6d0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::v0_v1</definition>
        <argsstring>() const</argsstring>
        <name>v0_v1</name>
        <briefdescription>
<para>One of the directed edges corresponding to the halfedge being collapsed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1aebc5c03140c0451600c9b34d7bb39f95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::v1_v0</definition>
        <argsstring>() const</argsstring>
        <name>v1_v0</name>
        <briefdescription>
<para>The other directed edge corresponding to the halfedge being collapsed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a99c5d63999aec1620a1639bda0a495c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a2a25fea0f4988dd09b78ba432078e59b" kindref="member">Point</ref> const  &amp;</type>
        <definition>Point const&amp; EdgeProfile::p0</definition>
        <argsstring>() const</argsstring>
        <name>p0</name>
        <briefdescription>
<para>The point of vertex <computeroutput>v0</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a3fd3076b2099441e91e8eaf8a35b0e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a2a25fea0f4988dd09b78ba432078e59b" kindref="member">Point</ref> const  &amp;</type>
        <definition>Point const&amp; EdgeProfile::p1</definition>
        <argsstring>() const</argsstring>
        <name>p1</name>
        <briefdescription>
<para>The point of vertex <computeroutput>v1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a3dcebeba4f38f378d268464daf93f4d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" kindref="member">vertex_descriptor</ref></type>
        <definition>vertex_descriptor EdgeProfile::vL</definition>
        <argsstring>() const</argsstring>
        <name>vL</name>
        <briefdescription>
<para>If <computeroutput>v0v1</computeroutput> belongs to a finite face (is not a border edge) the third vertex of that triangular face, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a90f66ccf39fa84211b6f0e47ab680844" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::v1_vL</definition>
        <argsstring>() const</argsstring>
        <name>v1_vL</name>
        <briefdescription>
<para>If <computeroutput>v0v1</computeroutput> belongs to a finite face (is not a border edge) the directed edge from <computeroutput>v1</computeroutput> to <computeroutput>vL</computeroutput>, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a0d78519ba015c8908981e88c69c69f72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::vL_v0</definition>
        <argsstring>() const</argsstring>
        <name>vL_v0</name>
        <briefdescription>
<para>If <computeroutput>v0v1</computeroutput> belongs to a finite face (is not a border edge) the directed edge from <computeroutput>vL</computeroutput> to <computeroutput>v0</computeroutput>, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a2f1af7cac48efdbb4b7ca554507bd831" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" kindref="member">vertex_descriptor</ref></type>
        <definition>vertex_descriptor EdgeProfile::vR</definition>
        <argsstring>() const</argsstring>
        <name>vR</name>
        <briefdescription>
<para>If <computeroutput>v1v0</computeroutput> belongs to a finite face (is not a border edge) the third vertex of that triangular face, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a1b616ff60ce45de7456b17cae7bef89b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::v0_vR</definition>
        <argsstring>() const</argsstring>
        <name>v0_vR</name>
        <briefdescription>
<para>If <computeroutput>v1v0</computeroutput> belongs to a finite face (is not a border edge) the directed edge from <computeroutput>v0</computeroutput> to <computeroutput>vR</computeroutput>, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1af759f90d03bcb431cbe81f9b86b9fee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor EdgeProfile::vR_v1</definition>
        <argsstring>() const</argsstring>
        <name>vR_v1</name>
        <briefdescription>
<para>If <computeroutput>v1v0</computeroutput> belongs to a finite face (is not a border edge) the directed edge from <computeroutput>vR</computeroutput> to <computeroutput>v1</computeroutput>, a <emphasis>null descriptor</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a3fccaaa1a8df21b0f812f12717c805df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" kindref="member">vertex_descriptor</ref> &gt;</type>
        <definition>std::vector&lt;vertex_descriptor&gt; EdgeProfile::link</definition>
        <argsstring>() const</argsstring>
        <name>link</name>
        <briefdescription>
<para>The unique sequence of the vertices around <computeroutput>v0v1</computeroutput> in topological order (<emphasis>ccw</emphasis> or <emphasis>cw</emphasis> depending on the relative ordering of <computeroutput>v0</computeroutput> and <computeroutput>v1</computeroutput> in the profile). </para>        </briefdescription>
        <detaileddescription>
<para>The sequence may have duplicates, but when this happens the edge is not collapsible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1aa3ffebd28ffecc341280e9fb8b34f7db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" kindref="member">halfedge_descriptor</ref> &gt;</type>
        <definition>std::vector&lt;halfedge_descriptor&gt; EdgeProfile::border_edges</definition>
        <argsstring>() const</argsstring>
        <name>border_edges</name>
        <briefdescription>
<para>The unique collection of the border directed edges incident upon <computeroutput>v0</computeroutput> and <computeroutput>v1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a52a391f292a7667dd4f1e1390bff7b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EdgeProfile::left_face_exists</definition>
        <argsstring>() const</argsstring>
        <name>left_face_exists</name>
        <briefdescription>
<para>Indicates if <computeroutput>v0v1</computeroutput> belongs to a finite face of the surface mesh (i.e, <computeroutput>v0v1</computeroutput> is not a border edge). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a68585e4ca493b69d446de669553349c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EdgeProfile::right_face_exists</definition>
        <argsstring>() const</argsstring>
        <name>right_face_exists</name>
        <briefdescription>
<para>Indicates if <computeroutput>v0v1</computeroutput> belongs to a finite face of the surface mesh (i.e, <computeroutput>v1v0</computeroutput> is not a border edge). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a34d6305eb4c4e7b32938980c8d718acb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classEdgeProfile_1a0e4fbc31bba41052363f166323e6f32c" kindref="member">TriangleMesh</ref> &amp;</type>
        <definition>const TriangleMesh&amp; EdgeProfile::surface_mesh</definition>
        <argsstring>() const</argsstring>
        <name>surface_mesh</name>
        <briefdescription>
<para>Returns the surface mesh the edge belongs to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEdgeProfile_1a2f1e83f7c5e1dc0554cb8cb8c81b10ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEdgeProfile_1ac1ccf60effd05136c6007f0c4d26a853" kindref="member">VertexPointMap</ref></type>
        <definition>VertexPointMap EdgeProfile::vertex_point_map</definition>
        <argsstring>() const</argsstring>
        <name>vertex_point_map</name>
        <briefdescription>
<para>Returns the vertex point property map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/EdgeProfile.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classEdgeProfile" kindref="compound">EdgeProfile</ref></computeroutput> describes the requirements for a data structure that caches the local topology and geometry in the surroundings of a halfedge. </para>    </briefdescription>
    <detaileddescription>
<para> This profile is used by the stop, cost and placement policies.</para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile" kindref="compound">CGAL::Surface_mesh_simplification::Edge_profile</ref>&lt;TriangleMesh&gt;</computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <collaborationgraph>
      <node id="30">
        <label>CGAL::Kernel_traits&lt; class &gt;</label>
        <link refid="structCGAL_1_1Kernel__traits" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag"/>
      </node>
      <node id="28">
        <label>EdgeProfile</label>
        <link refid="classEdgeProfile"/>
        <childnode refid="29" relation="usage">
          <edgelabel>FT</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>CGAL::Kernel_traits&lt; Point &gt;</label>
        <link refid="structCGAL_1_1Kernel__traits" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag"/>
        <childnode refid="30" relation="template-instance">
          <edgelabel>&lt; Point &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Concepts/EdgeProfile.h" line="14" column="1" bodyfile="Concepts/EdgeProfile.h" bodystart="14" bodyend="157"/>
    <listofallmembers>
      <member refid="classEdgeProfile_1aa3ffebd28ffecc341280e9fb8b34f7db" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>border_edges</name></member>
      <member refid="classEdgeProfile_1a0177903803a5a2c6ceba94d0caca808a" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>FT</name></member>
      <member refid="classEdgeProfile_1a6b65a36bc2c8dd96a21f9666a4f30f0b" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>halfedge_descriptor</name></member>
      <member refid="classEdgeProfile_1a52a391f292a7667dd4f1e1390bff7b05" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>left_face_exists</name></member>
      <member refid="classEdgeProfile_1a3fccaaa1a8df21b0f812f12717c805df" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>link</name></member>
      <member refid="classEdgeProfile_1a99c5d63999aec1620a1639bda0a495c6" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>p0</name></member>
      <member refid="classEdgeProfile_1a3fd3076b2099441e91e8eaf8a35b0e4e" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>p1</name></member>
      <member refid="classEdgeProfile_1a2a25fea0f4988dd09b78ba432078e59b" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>Point</name></member>
      <member refid="classEdgeProfile_1a68585e4ca493b69d446de669553349c2" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>right_face_exists</name></member>
      <member refid="classEdgeProfile_1a34d6305eb4c4e7b32938980c8d718acb" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>surface_mesh</name></member>
      <member refid="classEdgeProfile_1a0e4fbc31bba41052363f166323e6f32c" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>TriangleMesh</name></member>
      <member refid="classEdgeProfile_1aa78d2ce2e46129e12a2a5e79e159fe7d" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v0</name></member>
      <member refid="classEdgeProfile_1a5177f90d8d239aec9e593a521add6d0c" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v0_v1</name></member>
      <member refid="classEdgeProfile_1a1b616ff60ce45de7456b17cae7bef89b" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v0_vR</name></member>
      <member refid="classEdgeProfile_1a9e2bbe7f1980a198fbc63b1890946cbc" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v1</name></member>
      <member refid="classEdgeProfile_1aebc5c03140c0451600c9b34d7bb39f95" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v1_v0</name></member>
      <member refid="classEdgeProfile_1a90f66ccf39fa84211b6f0e47ab680844" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>v1_vL</name></member>
      <member refid="classEdgeProfile_1a3fee481d937c642db96cea4926a581ec" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vertex_descriptor</name></member>
      <member refid="classEdgeProfile_1a2f1e83f7c5e1dc0554cb8cb8c81b10ba" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vertex_point_map</name></member>
      <member refid="classEdgeProfile_1ac1ccf60effd05136c6007f0c4d26a853" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>VertexPointMap</name></member>
      <member refid="classEdgeProfile_1a3dcebeba4f38f378d268464daf93f4d5" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vL</name></member>
      <member refid="classEdgeProfile_1a0d78519ba015c8908981e88c69c69f72" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vL_v0</name></member>
      <member refid="classEdgeProfile_1a2f1af7cac48efdbb4b7ca554507bd831" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vR</name></member>
      <member refid="classEdgeProfile_1af759f90d03bcb431cbe81f9b86b9fee3" prot="public" virt="non-virtual"><scope>EdgeProfile</scope><name>vR_v1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
