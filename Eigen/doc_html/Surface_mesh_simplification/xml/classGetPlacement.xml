<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classGetPlacement" kind="class" language="C++" prot="public">
    <compoundname>GetPlacement</compoundname>
    <includes local="no">Concepts/GetPlacement.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classGetPlacement_1aa69c3af64d7be637e6cb611a50e489ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Profile</type>
          </param>
        </templateparamlist>
        <type>boost::optional&lt; Point &gt;</type>
        <definition>boost::optional&lt;Point&gt; GetPlacement::operator()</definition>
        <argsstring>(Profile const &amp;edge_profile) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Profile const &amp;</type>
          <declname>edge_profile</declname>
        </param>
        <briefdescription>
<para>Computes and returns the placement, that is, the position of the vertex which replaces the collapsing edge (represented by its profile). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Profile</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classEdgeProfile" kindref="compound">EdgeProfile</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GetPlacement.h" line="37" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGetPlacement" kindref="compound">GetPlacement</ref></computeroutput> describes the requirements for the <emphasis>policy function object</emphasis> which gets the <emphasis>collapse placement</emphasis> of an edge, that is, the new position of the vertex that remains after a halfedge-collapse operation. </para>    </briefdescription>
    <detaileddescription>
<para> The placement returned is a <computeroutput>boost::optional</computeroutput> value (i.e., it can be absent). An absent result indicates that the remaining vertex must be kept in place, not moved to a new position.</para><para><xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Midpoint__placement" kindref="compound">CGAL::Surface_mesh_simplification::Midpoint_placement</ref>&lt;TriangleMesh&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__placement" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_placement</ref>&lt;TriangleMesh&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__placement" kindref="compound">CGAL::Surface_mesh_simplification::Bounded_normal_change_placement</ref>&lt;Placement&gt;</computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/GetPlacement.h" line="23" column="1" bodyfile="Concepts/GetPlacement.h" bodystart="23" bodyend="41"/>
    <listofallmembers>
      <member refid="classGetPlacement_1aa69c3af64d7be637e6cb611a50e489ef" prot="public" virt="non-virtual"><scope>GetPlacement</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
