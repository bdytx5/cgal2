<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Circular__arc__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Circular_arc_3</compoundname>
    <includes local="no">CGAL/Circular_arc_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a8db384a2e9f8344f661bf54df50d2d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_3&lt; SphericalKernel &gt;::Circular_arc_3</definition>
        <argsstring>(const Circle_3&lt; SphericalKernel &gt; &amp;c)</argsstring>
        <name>Circular_arc_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs an arc from a full circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a6e11d86940587a6c448b40744d34bde1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_3&lt; SphericalKernel &gt;::Circular_arc_3</definition>
        <argsstring>(const Circle_3&lt; SphericalKernel &gt; &amp;c, const Circular_arc_point_3 &amp;pt)</argsstring>
        <name>Circular_arc_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Constructs an arc from a full circle, using pt as source and target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a307c17569c6d8ea5a6e00fd74105b70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_3&lt; SphericalKernel &gt;::Circular_arc_3</definition>
        <argsstring>(const Circle_3&lt; SphericalKernel &gt; &amp;c, const Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>Circular_arc_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>The circular arc constructed from a circle, a source, and a target, is defined as the set of points of the circle that lie between the source <computeroutput>p1</computeroutput> and the target <computeroutput>p2</computeroutput>, when traversing the circle counterclockwise seen from the side of the plane of the circle pointed by its <emphasis>positive</emphasis> normal vectors. </para>        </briefdescription>
        <detaileddescription>
<para>In this definition, we say that a normal vector <formula id="0">$ (a,b,c)$</formula> is <emphasis>positive</emphasis> if <formula id="1">$ (a,b,c)&gt;(0,0,0)$</formula> (i.e. <formula id="2">$ (a&gt;0) || (a==0) \&amp;\&amp; (b&gt;0) || (a==0)\&amp;\&amp;(b==0)\&amp;\&amp;(c&gt;0)$</formula>).</para><para>Constructs the circular arc supported by <computeroutput>c</computeroutput>, whose source and target are <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>, respectively. <simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> lie on <computeroutput>c</computeroutput> and are different. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a914e6447d08d2c739df4034536347a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_3&lt; SphericalKernel &gt;::Circular_arc_3</definition>
        <argsstring>(const Point_3&lt; SphericalKernel &gt; &amp;p, const Point_3&lt; SphericalKernel &gt; &amp;q, const Point_3&lt; SphericalKernel &gt; &amp;r)</argsstring>
        <name>Circular_arc_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Constructs an arc that is supported by the circle of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref>&lt;<ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref>&gt;</computeroutput> passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The source and target are respectively <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>, when traversing the supporting circle in the counterclockwise direction seen from the side of the plane containing the circle pointed by its <emphasis>positive</emphasis> normal vectors. Note that, depending on the orientation of the point triple <computeroutput>(p,q,r)</computeroutput>, <computeroutput>q</computeroutput> may not lie on the arc. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="70" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a6d3701966908b022291c960d04e69f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt;</type>
        <definition>Circle_3&lt;SphericalKernel&gt; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::supporting_circle</definition>
        <argsstring>()</argsstring>
        <name>supporting_circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a622456451fdd0722a136f1412990206b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; const  &amp;</type>
        <definition>Point_3&lt;SphericalKernel&gt; const&amp; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::center</definition>
        <argsstring>() const</argsstring>
        <name>center</name>
        <briefdescription>
<para>returns the center of the supporting circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a7690c48756f9a9705803053bab2a745d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SphericalKernel::FT const  &amp;</type>
        <definition>SphericalKernel::FT const&amp; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::squared_radius</definition>
        <argsstring>() const</argsstring>
        <name>squared_radius</name>
        <briefdescription>
<para>returns the squared radius of the supporting circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1ad0182595b39662e1dc93d6182e330e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt;</type>
        <definition>Plane_3&lt;SphericalKernel&gt; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::supporting_plane</definition>
        <argsstring>()</argsstring>
        <name>supporting_plane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a77c10c4ebc24d97bbd2b89474f6d1601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Sphere_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt;</type>
        <definition>Sphere_3&lt;SphericalKernel&gt; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::diametral_sphere</definition>
        <argsstring>()</argsstring>
        <name>diametral_sphere</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>When the methods <computeroutput>source</computeroutput> and <computeroutput>target</computeroutput> return the same point, then the arc is in fact a full circle.</para><para>When the arc was constructed from its (full) underlying circle, then source and target both return the smallest <formula id="3">$ x$</formula>-extremal point of the circle if the circle is not contained in a plane <formula id="4">$ x=A$</formula>, and the smallest <formula id="5">$ y$</formula>-extremal point otherwise. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a7941e913d4c49af772bd3941603b4597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt;</type>
        <definition>Circular_arc_point_3&lt;SphericalKernel&gt; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::source</definition>
        <argsstring>()</argsstring>
        <name>source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a84d1403d44050c6f54387e3481f75213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt;</type>
        <definition>Circular_arc_point_3&lt;SphericalKernel&gt; CGAL::Circular_arc_3&lt; SphericalKernel &gt;::target</definition>
        <argsstring>()</argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a977aed23f7f12e22547ba1cd2e4d05fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Circular_arc_3&lt; SphericalKernel &gt;::operator==</definition>
        <argsstring>(const Circular_arc_3&lt; SphericalKernel &gt; &amp;a1, const Circular_arc_3&lt; SphericalKernel &gt; &amp;a2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
<para>Test for equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two arcs are equal, iff their non-oriented supporting planes are equal, and the centers and squared radii of their respective supporting circles are equal, and their sources and targets are equal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a81149eebf543b8344709817de77c1df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Circular_arc_3&lt; SphericalKernel &gt;::operator!=</definition>
        <argsstring>(const Circular_arc_3&lt; SphericalKernel &gt; &amp;a1, const Circular_arc_3&lt; SphericalKernel &gt; &amp;a2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref>&lt; <ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref> &gt; &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
<para>Test for nonequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a7f5f446057c97f75c25adda4c78d9d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Circular_arc_3 &amp;ca)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref> &amp;</type>
          <declname>ca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__3_1a686dc2de2272c6d6f8c1c5e8e8e12d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Circular_arc_3 &amp;ca)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__3" kindref="compound">Circular_arc_3</ref> &amp;</type>
          <declname>ca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_3.h" line="155" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classSphericalKernel_1_1CircularArc__3" kindref="compound">SphericalKernel::CircularArc_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><bold>I/O</bold><linebreak/>
</para><para>The input/output format of a circular arc consists of the supporting circle represented as a <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Circle_3</ref></computeroutput> object followed by the source and target points of the arc represented as two <computeroutput><ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">Circular_arc_point_3</ref></computeroutput> objects. The defined arc is the unique arc constructed from such three objects.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circular__arc__point__3" kindref="compound">CGAL::Circular_arc_point_3</ref>&lt;<ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Line__arc__3" kindref="compound">CGAL::Line_arc_3</ref>&lt;<ref refid="classSphericalKernel" kindref="compound">SphericalKernel</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Circular_arc_3.h" line="21" column="1" bodyfile="CGAL/Circular_arc_3.h" bodystart="21" bodyend="143"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Circular__arc__3_1a622456451fdd0722a136f1412990206b" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>center</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a8db384a2e9f8344f661bf54df50d2d31" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>Circular_arc_3</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a6e11d86940587a6c448b40744d34bde1" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>Circular_arc_3</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a307c17569c6d8ea5a6e00fd74105b70a" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>Circular_arc_3</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a914e6447d08d2c739df4034536347a75" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>Circular_arc_3</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a77c10c4ebc24d97bbd2b89474f6d1601" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>diametral_sphere</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a81149eebf543b8344709817de77c1df0" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a686dc2de2272c6d6f8c1c5e8e8e12d58" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a977aed23f7f12e22547ba1cd2e4d05fa" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a7f5f446057c97f75c25adda4c78d9d01" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a7941e913d4c49af772bd3941603b4597" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>source</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a7690c48756f9a9705803053bab2a745d" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>squared_radius</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a6d3701966908b022291c960d04e69f9d" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>supporting_circle</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1ad0182595b39662e1dc93d6182e330e38" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>supporting_plane</name></member>
      <member refid="classCGAL_1_1Circular__arc__3_1a84d1403d44050c6f54387e3481f75213" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_3</scope><name>target</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
