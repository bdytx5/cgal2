<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSphericalKernel_1_1DoIntersect__3" kind="class" language="C++" prot="public">
    <compoundname>SphericalKernel::DoIntersect_3</compoundname>
    <includes local="no">Concepts/SphericalKernel--DoIntersect_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>An object of this type must provide: </para></description>
      <memberdef kind="function" id="classSphericalKernel_1_1DoIntersect__3_1a08cadf5688b66c6a789512bcff6e82c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SphericalKernel::DoIntersect_3::operator()</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
<para>determines if two geometric objects of type Type1 and Type2 intersect or not. </para>        </briefdescription>
        <detaileddescription>
<para>for all pairs <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput>, where the types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> can be either, any of the following:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classSphericalKernel_1acdf7d211e33f0ee3bb1428e42f436d41" kindref="member">SphericalKernel::Plane_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classSphericalKernel_1aa5cbf1ab7e7c427ed94c70d1d2bb2f37" kindref="member">SphericalKernel::Line_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classSphericalKernel_1a84d79e2e5bb450bda5b18f6179670eb1" kindref="member">SphericalKernel::Line_arc_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classSphericalKernel_1a3f85ade4961cce89e18bc53016d8f5d8" kindref="member">SphericalKernel::Sphere_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classSphericalKernel_1a811ee875b06a749f73e0a25b37045ecc" kindref="member">SphericalKernel::Circle_3</ref></computeroutput> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--DoIntersect_3.h" line="33" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Testing whether two curves or surfaces intersect. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000018"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1DoIntersect__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::DoIntersect_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="group__do__intersect__grp" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag"><computeroutput>CGAL::do_intersect()</computeroutput> </ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/SphericalKernel--DoIntersect_3.h" line="14" column="1" bodyfile="Concepts/SphericalKernel--DoIntersect_3.h" bodystart="14" bodyend="38"/>
    <listofallmembers>
      <member refid="classSphericalKernel_1_1DoIntersect__3_1a08cadf5688b66c6a789512bcff6e82c9" prot="public" virt="non-virtual"><scope>SphericalKernel::DoIntersect_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
