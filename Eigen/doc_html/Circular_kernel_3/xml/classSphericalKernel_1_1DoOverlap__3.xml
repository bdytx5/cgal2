<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSphericalKernel_1_1DoOverlap__3" kind="class" language="C++" prot="public">
    <compoundname>SphericalKernel::DoOverlap_3</compoundname>
    <includes local="no">Concepts/SphericalKernel--DoOverlap_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>An object of this type must provide: </para></description>
      <memberdef kind="function" id="classSphericalKernel_1_1DoOverlap__3_1aa3090b8fee731caf4327b94fac6b8d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SphericalKernel::DoOverlap_3::operator()</definition>
        <argsstring>(const SphericalKernel::Line_arc_3 &amp;l0, const SphericalKernel::Line_arc_3 &amp;l1, const bool known_equal_supporting_line=false)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classSphericalKernel_1a84d79e2e5bb450bda5b18f6179670eb1" kindref="member">SphericalKernel::Line_arc_3</ref> &amp;</type>
          <declname>l0</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a84d79e2e5bb450bda5b18f6179670eb1" kindref="member">SphericalKernel::Line_arc_3</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>known_equal_supporting_line</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>For two line arcs. </para>        </briefdescription>
        <detaileddescription>
<para>The computation may be faster when the boolean is set to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--DoOverlap_3.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSphericalKernel_1_1DoOverlap__3_1aa3ca8d104fb50bb0650d9ee2afa637ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SphericalKernel::DoOverlap_3::operator()</definition>
        <argsstring>(const SphericalKernel::Circular_arc_3 &amp;a0, const SphericalKernel::Circular_arc_3 &amp;a1, const bool known_equal_supporting_circle=false)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classSphericalKernel_1a68d09f507cc3a2b79d7e81935fc2836e" kindref="member">SphericalKernel::Circular_arc_3</ref> &amp;</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a68d09f507cc3a2b79d7e81935fc2836e" kindref="member">SphericalKernel::Circular_arc_3</ref> &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>known_equal_supporting_circle</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>For two circular arcs. </para>        </briefdescription>
        <detaileddescription>
<para>The computation may be faster when the boolean is set to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--DoOverlap_3.h" line="25" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> </para>    </detaileddescription>
    <location file="Concepts/SphericalKernel--DoOverlap_3.h" line="7" column="1" bodyfile="Concepts/SphericalKernel--DoOverlap_3.h" bodystart="7" bodyend="32"/>
    <listofallmembers>
      <member refid="classSphericalKernel_1_1DoOverlap__3_1aa3090b8fee731caf4327b94fac6b8d7c" prot="public" virt="non-virtual"><scope>SphericalKernel::DoOverlap_3</scope><name>operator()</name></member>
      <member refid="classSphericalKernel_1_1DoOverlap__3_1aa3ca8d104fb50bb0650d9ee2afa637ca" prot="public" virt="non-virtual"><scope>SphericalKernel::DoOverlap_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
