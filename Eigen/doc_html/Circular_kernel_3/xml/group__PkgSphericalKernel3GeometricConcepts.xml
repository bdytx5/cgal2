<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgSphericalKernel3GeometricConcepts" kind="group">
    <compoundname>PkgSphericalKernel3GeometricConcepts</compoundname>
    <title>Geometric Concepts</title>
    <innerclass refid="classSphericalKernel_1_1BoundedSide__3" prot="public">SphericalKernel::BoundedSide_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CircularArc__3" prot="public">SphericalKernel::CircularArc_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CircularArcPoint__3" prot="public">SphericalKernel::CircularArcPoint_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareTheta__3" prot="public">SphericalKernel::CompareTheta_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareThetaZ__3" prot="public">SphericalKernel::CompareThetaZ_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareX__3" prot="public">SphericalKernel::CompareX_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareXY__3" prot="public">SphericalKernel::CompareXY_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareXYZ__3" prot="public">SphericalKernel::CompareXYZ_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareY__3" prot="public">SphericalKernel::CompareY_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareZ__3" prot="public">SphericalKernel::CompareZ_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareZAtTheta__3" prot="public">SphericalKernel::CompareZAtTheta_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1CompareZToRight__3" prot="public">SphericalKernel::CompareZToRight_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ComputeApproximateAngle__3" prot="public">SphericalKernel::ComputeApproximateAngle_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ComputeApproximateSquaredLength__3" prot="public">SphericalKernel::ComputeApproximateSquaredLength_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ComputeCircularX__3" prot="public">SphericalKernel::ComputeCircularX_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ComputeCircularY__3" prot="public">SphericalKernel::ComputeCircularY_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ComputeCircularZ__3" prot="public">SphericalKernel::ComputeCircularZ_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructBbox__3" prot="public">SphericalKernel::ConstructBbox_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircle__3" prot="public">SphericalKernel::ConstructCircle_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularArc__3" prot="public">SphericalKernel::ConstructCircularArc_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularArcPoint__3" prot="public">SphericalKernel::ConstructCircularArcPoint_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularMaxVertex__3" prot="public">SphericalKernel::ConstructCircularMaxVertex_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularMinVertex__3" prot="public">SphericalKernel::ConstructCircularMinVertex_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularSourceVertex__3" prot="public">SphericalKernel::ConstructCircularSourceVertex_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructCircularTargetVertex__3" prot="public">SphericalKernel::ConstructCircularTargetVertex_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructLine__3" prot="public">SphericalKernel::ConstructLine_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructLineArc__3" prot="public">SphericalKernel::ConstructLineArc_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructPlane__3" prot="public">SphericalKernel::ConstructPlane_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1ConstructSphere__3" prot="public">SphericalKernel::ConstructSphere_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1DoIntersect__3" prot="public">SphericalKernel::DoIntersect_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1DoOverlap__3" prot="public">SphericalKernel::DoOverlap_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1Equal__3" prot="public">SphericalKernel::Equal_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1GetEquation" prot="public">SphericalKernel::GetEquation</innerclass>
    <innerclass refid="classSphericalKernel_1_1HasOn__3" prot="public">SphericalKernel::HasOn_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1HasOnBoundedSide__3" prot="public">SphericalKernel::HasOnBoundedSide_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1HasOnUnboundedSide__3" prot="public">SphericalKernel::HasOnUnboundedSide_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1Intersect__3" prot="public">SphericalKernel::Intersect_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1IsThetaMonotone__3" prot="public">SphericalKernel::IsThetaMonotone_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1LineArc__3" prot="public">SphericalKernel::LineArc_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1MakeThetaMonotone__3" prot="public">SphericalKernel::MakeThetaMonotone_3</innerclass>
    <innerclass refid="classSphericalKernel_1_1Split__3" prot="public">SphericalKernel::Split_3</innerclass>
    <innerclass refid="classSphericalKernel" prot="public">SphericalKernel</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
