<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSphericalKernel_1_1ConstructCircularArc__3" kind="class" language="C++" prot="public">
    <compoundname>SphericalKernel::ConstructCircularArc_3</compoundname>
    <includes local="no">Concepts/SphericalKernel--ConstructCircularArc_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classSphericalKernel_1_1ConstructCircularArc__3_1ad3c2d4a4ba524ab22da6d38183c803bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSphericalKernel_1a68d09f507cc3a2b79d7e81935fc2836e" kindref="member">SphericalKernel::Circular_arc_3</ref></type>
        <definition>SphericalKernel::Circular_arc_3 SphericalKernel::ConstructCircularArc_3::operator()</definition>
        <argsstring>(const SphericalKernel::Circle_3 &amp;c)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classSphericalKernel_1a811ee875b06a749f73e0a25b37045ecc" kindref="member">SphericalKernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs an arc from a full circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--ConstructCircularArc_3.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSphericalKernel_1_1ConstructCircularArc__3_1ac845c6666b35523d015916add0df83fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSphericalKernel_1a68d09f507cc3a2b79d7e81935fc2836e" kindref="member">SphericalKernel::Circular_arc_3</ref></type>
        <definition>SphericalKernel::Circular_arc_3 SphericalKernel::ConstructCircularArc_3::operator()</definition>
        <argsstring>(const SphericalKernel::Circle_3 &amp;c, const SphericalKernel::Circular_arc_point_3 &amp;p, const SphericalKernel::Circular_arc_point_3 &amp;q)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classSphericalKernel_1a811ee875b06a749f73e0a25b37045ecc" kindref="member">SphericalKernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a19193afee19909bcd2fa7c2796badc2f" kindref="member">SphericalKernel::Circular_arc_point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a19193afee19909bcd2fa7c2796badc2f" kindref="member">SphericalKernel::Circular_arc_point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Constructs the circular arc supported by <computeroutput>c</computeroutput>, whose source and target are <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>, respectively. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> lie on <computeroutput>c</computeroutput> and they are different. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--ConstructCircularArc_3.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSphericalKernel_1_1ConstructCircularArc__3_1ad6a17e791baf543dd0672f789277ffcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSphericalKernel_1a68d09f507cc3a2b79d7e81935fc2836e" kindref="member">SphericalKernel::Circular_arc_3</ref></type>
        <definition>SphericalKernel::Circular_arc_3 SphericalKernel::ConstructCircularArc_3::operator()</definition>
        <argsstring>(const SphericalKernel::Point_3 &amp;p, const SphericalKernel::Point_3 &amp;q, const SphericalKernel::Point_3 &amp;r)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classSphericalKernel_1a7d31a0aaf6dc9062216cfc181f1e8322" kindref="member">SphericalKernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a7d31a0aaf6dc9062216cfc181f1e8322" kindref="member">SphericalKernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classSphericalKernel_1a7d31a0aaf6dc9062216cfc181f1e8322" kindref="member">SphericalKernel::Point_3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Constructs an arc that is supported by the circle of type <computeroutput><ref refid="classSphericalKernel_1a811ee875b06a749f73e0a25b37045ecc" kindref="member">SphericalKernel::Circle_3</ref></computeroutput> passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The source and target are respectively <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>, when traversing the supporting circle in the counterclockwise direction seen from the side of the plane containing the circle pointed by its <emphasis>positive</emphasis> normal vectors. the circle. Note that, depending on the orientation of the point triple <computeroutput>(p,q,r)</computeroutput>, <computeroutput>q</computeroutput> may not lie on the arc. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SphericalKernel--ConstructCircularArc_3.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The circular arc constructed from a circle, a source, and a target, is defined as the set of points of the circle that lie between the source <computeroutput>p1</computeroutput> and the target <computeroutput>p2</computeroutput>, when traversing the circle counterclockwise seen from the side of the plane of the circle pointed by its <emphasis>positive</emphasis> normal vectors. </para>    </briefdescription>
    <detaileddescription>
<para> In this definition, we say that a normal vector <formula id="0">$ (a,b,c)$</formula> is <emphasis>positive</emphasis> if <formula id="1">$ (a,b,c)&gt;(0,0,0)$</formula> (i.e. <formula id="2">$ (a&gt;0) || (a==0) \&amp;\&amp; (b&gt;0) || (a==0)\&amp;\&amp;(b==0)\&amp;\&amp;(c&gt;0)$</formula>). </para>    </detaileddescription>
    <location file="Concepts/SphericalKernel--ConstructCircularArc_3.h" line="17" column="1" bodyfile="Concepts/SphericalKernel--ConstructCircularArc_3.h" bodystart="17" bodyend="60"/>
    <listofallmembers>
      <member refid="classSphericalKernel_1_1ConstructCircularArc__3_1ad3c2d4a4ba524ab22da6d38183c803bf" prot="public" virt="non-virtual"><scope>SphericalKernel::ConstructCircularArc_3</scope><name>operator()</name></member>
      <member refid="classSphericalKernel_1_1ConstructCircularArc__3_1ac845c6666b35523d015916add0df83fc" prot="public" virt="non-virtual"><scope>SphericalKernel::ConstructCircularArc_3</scope><name>operator()</name></member>
      <member refid="classSphericalKernel_1_1ConstructCircularArc__3_1ad6a17e791baf543dd0672f789277ffcd" prot="public" virt="non-virtual"><scope>SphericalKernel::ConstructCircularArc_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
