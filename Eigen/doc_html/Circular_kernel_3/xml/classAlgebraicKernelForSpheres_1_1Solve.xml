<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classAlgebraicKernelForSpheres_1_1Solve" kind="class" language="C++" prot="public">
    <compoundname>AlgebraicKernelForSpheres::Solve</compoundname>
    <includes local="no">Concepts/AlgebraicKernelForSpheres--Solve.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classAlgebraicKernelForSpheres_1_1Solve_1af47cd82939efc26fe0fbaac6255d2d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator AlgebraicKernelForSpheres::Solve::operator()</definition>
        <argsstring>(const Type1 &amp;p1, const Type2 &amp;p2, const Type3 &amp;p3, OutputIterator res)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Type1 &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Type3 &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Copies in the output iterator the common roots of <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput>, and <computeroutput>p3</computeroutput>, with their multiplicity, as objects of type <computeroutput>std::pair&lt; <ref refid="classAlgebraicKernelForSpheres_1a35f7b066e4efb31f264083ab00415fe7" kindref="member">AlgebraicKernelForSpheres::Root_for_spheres_2_3</ref>, int&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Here, <computeroutput>Type1</computeroutput>, <computeroutput>Type2</computeroutput>, and <computeroutput>Type3</computeroutput> can all be either <computeroutput><ref refid="classAlgebraicKernelForSpheres_1_1Polynomial__1__3" kindref="compound">AlgebraicKernelForSpheres::Polynomial_1_3</ref></computeroutput> or <computeroutput><ref refid="classAlgebraicKernelForSpheres_1a069ffcbf7bc917de2d5da002daad0f92" kindref="member">AlgebraicKernelForSpheres::Polynomial_for_spheres_2_3</ref></computeroutput>.</para><para><simplesect kind="pre"><para>The set of solutions of the system is 0-dimensional. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlgebraicKernelForSpheres--Solve.h" line="28" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> </para>    </detaileddescription>
    <location file="Concepts/AlgebraicKernelForSpheres--Solve.h" line="8" column="1" bodyfile="Concepts/AlgebraicKernelForSpheres--Solve.h" bodystart="8" bodyend="35"/>
    <listofallmembers>
      <member refid="classAlgebraicKernelForSpheres_1_1Solve_1af47cd82939efc26fe0fbaac6255d2d20" prot="public" virt="non-virtual"><scope>AlgebraicKernelForSpheres::Solve</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
