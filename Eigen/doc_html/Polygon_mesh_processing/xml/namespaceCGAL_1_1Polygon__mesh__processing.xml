<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceCGAL_1_1Polygon__mesh__processing" kind="namespace" language="C++">
    <compoundname>CGAL::Polygon_mesh_processing</compoundname>
    <innerclass refid="classCGAL_1_1Polygon__mesh__processing_1_1GetGeomTraits_3_01NamedParameters_00_01NP_01_4" prot="public">CGAL::Polygon_mesh_processing::GetGeomTraits&lt; NamedParameters, NP &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Polygon__mesh__processing_1_1Less__vertex__point" prot="public">CGAL::Polygon_mesh_processing::Less_vertex_point</innerclass>
    <innernamespace refid="namespaceCGAL_1_1Polygon__mesh__processing_1_1Corefinement">CGAL::Polygon_mesh_processing::Corefinement</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Polygon__mesh__processing_1_1debug">CGAL::Polygon_mesh_processing::debug</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Polygon__mesh__processing_1_1extrude__impl">CGAL::Polygon_mesh_processing::extrude_impl</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Polygon__mesh__processing_1_1parameters">CGAL::Polygon_mesh_processing::parameters</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PMP__orientation__grp_1gad71360b56f0d5340bf3006febd49286c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::is_outward_oriented</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>is_outward_oriented</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>tests whether a closed polygon mesh has a positive orientation. </para>        </briefdescription>
        <detaileddescription>
<para>A closed polygon mesh is considered to have a positive orientation if the normal vectors to all its faces point outside the domain bounded by the polygon mesh. The normal vector to each face is chosen pointing on the side of the face where its sequence of vertices is seen counterclockwise. <simplesect kind="pre"><para><computeroutput>CGAL::is_closed(pmesh)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para>If <computeroutput>pmesh</computeroutput> contains several connected components, they are oriented consistently. In other words, the answer to this predicate would be the same for each isolated connected component.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the closed polygon mesh to be tested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__orientation__grp_1ga21119757bf5835496ae1c9a6d4f5fa0a" kindref="member">CGAL::Polygon_mesh_processing::reverse_face_orientations()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="175" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="175" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="orientation_8h_1a5a00dd17ca9f4f68532d51d6ab535712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::reverse_orientation</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor first, PolygonMesh &amp;pmesh)</argsstring>
        <name>reverse_orientation</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>first</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="230" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="230" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__orientation__grp_1gad8a3439883e3e76651f96d15ba58b2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::reverse_face_orientations</definition>
        <argsstring>(PolygonMesh &amp;pmesh)</argsstring>
        <name>reverse_face_orientations</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>reverses for each face the order of the vertices along the face boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="263" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="263" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="orientation_8h_1a9c45c3222be85ba52f17617a68070865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::reverse_face_orientations_of_mesh_with_polylines</definition>
        <argsstring>(PolygonMesh &amp;pmesh)</argsstring>
        <name>reverse_face_orientations_of_mesh_with_polylines</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="289" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="289" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__orientation__grp_1ga21119757bf5835496ae1c9a6d4f5fa0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::reverse_face_orientations</definition>
        <argsstring>(const FaceRange &amp;face_range, PolygonMesh &amp;pmesh)</argsstring>
        <name>reverse_face_orientations</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>reverses for each face in <computeroutput>face_range</computeroutput> the order of the vertices along the face boundary. </para>        </briefdescription>
        <detaileddescription>
<para>The function does not perform any control and if the orientation change of the faces makes the polygon mesh invalid, the behavior is undefined.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of face descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="325" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="325" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__orientation__grp_1gafe035adcc4ff061b4438cc9dae591d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::orient</definition>
        <argsstring>(TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>orient</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>makes each connected component of a closed triangulated surface mesh inward or outward oriented. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> . If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>a closed triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_outward_orientation" kindref="member">outward_orientation</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> (default) indicates that each connected component will be outward oriented, (inward oriented if <computeroutput>false</computeroutput>).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="471" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="471" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="orientation_8h_1a0fd5d085286004765aa2f31c5932b90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::orient</definition>
        <argsstring>(TriangleMesh &amp;tm)</argsstring>
        <name>orient</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="541" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="541" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__orientation__grp_1gafdbc256d06536f6aca2558bc1a0156e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::orient_to_bound_a_volume</definition>
        <argsstring>(TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>orient_to_bound_a_volume</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>orients the connected components of <computeroutput>tm</computeroutput> to make it bound a volume. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="index_1coref_def_subsec" kindref="member">Definitions</ref> for a precise definition.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>a closed triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_outward_orientation" kindref="member">outward_orientation</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> (default) the outer connected components will be outward oriented (inward oriented if set to <computeroutput>false</computeroutput>). If the outer connected components are inward oriented, it means that the infinity will be considered as part of the volume bounded by <computeroutput>tm</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member">CGAL::Polygon_mesh_processing::does_bound_a_volume()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="579" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="579" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="orientation_8h_1a5403d10a09e30a45bf8d318e7c58a18c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::orient_to_bound_a_volume</definition>
        <argsstring>(TriangleMesh &amp;tm)</argsstring>
        <name>orient_to_bound_a_volume</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orientation.h" line="653" column="1" bodyfile="CGAL/Polygon_mesh_processing/orientation.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__repairing__grp_1ga8b9d12d817b5cc76f5a42d74eac75bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolygonRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::is_polygon_soup_a_polygon_mesh</definition>
        <argsstring>(const PolygonRange &amp;polygons)</argsstring>
        <name>is_polygon_soup_a_polygon_mesh</name>
        <param>
          <type>const PolygonRange &amp;</type>
          <declname>polygons</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the soup of polygons defines a valid polygon mesh that can be handled by <computeroutput><ref refid="group__PMP__repairing__grp_1gac8fe80db9800265922ce469c36d97baa" kindref="member">CGAL::Polygon_mesh_processing::polygon_soup_to_polygon_mesh()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It checks that each edge has at most two incident faces and such an edge is visited in opposite direction along the two face boundaries, no polygon has twice the same vertex, and the polygon soup describes a manifold surface. This function does not require a range of points as an argument since the check is purely topological. To each vertex of the mesh is associated an index that is used in the description of the boundaries of the polygons provided in <computeroutput>polygons</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value_type is a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value_type is <computeroutput>std::size_t</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygons</parametername>
</parameternamelist>
<parameterdescription>
<para>each element in the range describes a polygon using the indices of the vertices.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__orientation__grp_1gaadc5bac3072b11d2313e40043c729d0a" kindref="member">orient_polygon_soup()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/polygon_soup_to_polygon_mesh.h" line="145" column="1" bodyfile="CGAL/Polygon_mesh_processing/polygon_soup_to_polygon_mesh.h" bodystart="145" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__repairing__grp_1gac8fe80db9800265922ce469c36d97baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolygonMesh</type>
          </param>
          <param>
            <type>class Point</type>
          </param>
          <param>
            <type>class Polygon</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::polygon_soup_to_polygon_mesh</definition>
        <argsstring>(const std::vector&lt; Point &gt; &amp;points, const std::vector&lt; Polygon &gt; &amp;polygons, PolygonMesh &amp;out)</argsstring>
        <name>polygon_soup_to_polygon_mesh</name>
        <param>
          <type>const std::vector&lt; Point &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const std::vector&lt; Polygon &gt; &amp;</type>
          <declname>polygons</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>builds a polygon mesh from a soup of polygons. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>the input polygon soup describes a consistently oriented polygon mesh.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> with an internal point property map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>a point type that has an operator <computeroutput>[]</computeroutput> to access coordinates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput>std::vector&lt;std::size_t&gt;</computeroutput> containing the indices of the points of the face</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>points of the soup of polygons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygons</parametername>
</parameternamelist>
<parameterdescription>
<para>each element in the vector describes a polygon using the index of the points in <computeroutput>points</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be built</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>CGAL::Polygon_mesh_processing::is_polygon_soup_a_polygon_mesh(polygons)</computeroutput></para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__orientation__grp_1gaadc5bac3072b11d2313e40043c729d0a" kindref="member">CGAL::Polygon_mesh_processing::orient_polygon_soup()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__repairing__grp_1ga8b9d12d817b5cc76f5a42d74eac75bf3" kindref="member">CGAL::Polygon_mesh_processing::is_polygon_soup_a_polygon_mesh()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/polygon_soup_to_polygon_mesh.h" line="214" column="1" bodyfile="CGAL/Polygon_mesh_processing/polygon_soup_to_polygon_mesh.h" bodystart="214" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__intersection__grp_1ga0afb9e365a2f16f0591255b8df468885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::self_intersections</definition>
        <argsstring>(const TriangleMesh &amp;tmesh, OutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>self_intersections</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>detects and records self-intersections of a triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref> <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding objects of type <computeroutput>std::pair&lt;boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor, boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor&gt;</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to be checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator to be filled with all pairs of non-adjacent faces that intersect. In case <computeroutput>tmesh</computeroutput> contains some degenerate faces, for each degenerate face <computeroutput>f</computeroutput> a pair <computeroutput>(f,f)</computeroutput> will be put in <computeroutput>out</computeroutput> before any other self intersection between non-degenerate faces. These are the only pairs where degenerate faces will be reported. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>out</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/self_intersections.h" line="271" column="1" bodyfile="CGAL/Polygon_mesh_processing/self_intersections.h" bodystart="271" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__intersection__grp_1ga8a27d056519cc5d2b1a7726bdc5ef0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::self_intersections</definition>
        <argsstring>(const FaceRange &amp;face_range, const TriangleMesh &amp;tmesh, OutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>self_intersections</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Same as above but the self-intersections reported are only limited to the faces in <computeroutput>face_range</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding objects of type <computeroutput>std::pair&lt;boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor, boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor&gt;</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of faces to check for self-intersection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to be checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator to be filled with all pairs of non-adjacent faces that intersect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/self_intersections.h" line="326" column="1" bodyfile="CGAL/Polygon_mesh_processing/self_intersections.h" bodystart="326" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::does_self_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>does_self_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>tests if a triangulated surface mesh self-intersects. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref> <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to be tested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>true if <computeroutput>tmesh</computeroutput> self-intersects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/self_intersections.h" line="415" column="1" bodyfile="CGAL/Polygon_mesh_processing/self_intersections.h" bodystart="415" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__intersection__grp_1ga31aa7a8c410dba29297afa55fb93a0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::does_self_intersect</definition>
        <argsstring>(const FaceRange &amp;face_range, const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>does_self_intersect</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>tests if a set of faces of a triangulated surface mesh self-intersects. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref> <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>face_descriptor</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the set of faces to test for self-intersection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to be tested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput>SelfIntersectionTraits</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>true if the faces in <computeroutput>face_range</computeroutput> self-intersect </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/self_intersections.h" line="458" column="1" bodyfile="CGAL/Polygon_mesh_processing/self_intersections.h" bodystart="458" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1ga028a80dc84395650f67714fa7618ec53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VertexRange</type>
          </param>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::random_perturbation</definition>
        <argsstring>(VertexRange vertices, TriangleMesh &amp;tmesh, const double &amp;perturbation_max_size, const NamedParameters &amp;np)</argsstring>
        <name>random_perturbation</name>
        <param>
          <type>VertexRange</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>perturbation_max_size</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>randomly perturbs the locations of vertices of a triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para>By default, the vertices are re-projected onto the input surface after perturbation. Note that no geometric checks are done after the perturbation (face orientation might become incorrect and self-intersections might be introduced).</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VertexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>, holding vertices of type <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput>. Its iterator type is <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of vertices to be perturbed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>perturbation_max_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximal length of moves that can be applied to vertices of <computeroutput>tmesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tmesh</computeroutput>. Instance of a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_is_constrained_map" kindref="member">vertex_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each vertex of <computeroutput>tmesh</computeroutput>. A constrained vertex cannot be modified at all during perturbation  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_project" kindref="member">do_project</ref></para></entry><entry thead="no"><para>a boolean that sets whether vertices are reprojected on the input surface after their coordinates random perturbation  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_random_seed" kindref="member">random_seed</ref></para></entry><entry thead="no"><para>a non-negative integer value to seed the random number generator, and make the perturbation deterministic  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/random_perturbation.h" line="148" column="1" bodyfile="CGAL/Polygon_mesh_processing/random_perturbation.h" bodystart="148" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gac53b0a32bc4ca2bb220ec47bb241d7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::random_perturbation</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const double &amp;perturbation_max_size, const NamedParameters &amp;np)</argsstring>
        <name>random_perturbation</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>perturbation_max_size</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>same as above, but all non-border vertices of <computeroutput>tmesh</computeroutput> are perturbed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/random_perturbation.h" line="208" column="1" bodyfile="CGAL/Polygon_mesh_processing/random_perturbation.h" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="random__perturbation_8h_1af9dfbe3a49050ddc32cf47c70821e1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VertexRange</type>
          </param>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::random_perturbation</definition>
        <argsstring>(VertexRange vertices, TriangleMesh &amp;tmesh, const double &amp;perturbation_max_size)</argsstring>
        <name>random_perturbation</name>
        <param>
          <type>VertexRange</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>perturbation_max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/random_perturbation.h" line="216" column="1" bodyfile="CGAL/Polygon_mesh_processing/random_perturbation.h" bodystart="216" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="random__perturbation_8h_1a77528ce4ea29338eabdbe665a1cf25f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::random_perturbation</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const double &amp;perturbation_max_size)</argsstring>
        <name>random_perturbation</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>perturbation_max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/random_perturbation.h" line="225" column="1" bodyfile="CGAL/Polygon_mesh_processing/random_perturbation.h" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::does_bound_a_volume</definition>
        <argsstring>(const TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>does_bound_a_volume</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>indicates if <computeroutput>tm</computeroutput> bounds a volume. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="index_1coref_def_subsec" kindref="member">Definitions</ref> for details.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>a closed triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>CGAL::is_closed(tm)</computeroutput></para></simplesect>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__orientation__grp_1gafdbc256d06536f6aca2558bc1a0156e2" kindref="member">CGAL::Polygon_mesh_processing::orient_to_bound_a_volume()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="182" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="182" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga3e7f0215600d9280d9ac90565504228c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut0</type>
          </param>
          <param>
            <type>class NamedParametersOut1</type>
          </param>
          <param>
            <type>class NamedParametersOut2</type>
          </param>
          <param>
            <type>class NamedParametersOut3</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; bool, 4 &gt;</type>
        <definition>cpp11::array&lt;bool,4&gt; CGAL::Polygon_mesh_processing::corefine_and_compute_boolean_operations</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const cpp11::tuple&lt; NamedParametersOut0, NamedParametersOut1, NamedParametersOut2, NamedParametersOut3 &gt; &amp;nps_out)</argsstring>
        <name>corefine_and_compute_boolean_operations</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::tuple</ref>&lt; NamedParametersOut0, NamedParametersOut1, NamedParametersOut2, NamedParametersOut3 &gt; &amp;</type>
          <declname>nps_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and for each triangle mesh <computeroutput>tm_out</computeroutput> passed as an optional in <computeroutput>output</computeroutput> different from <computeroutput>boost::none</computeroutput>, the triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the result of a particular Boolean operation between the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be put in the corresponding triangle mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The positions of the meshes in the array <computeroutput>output</computeroutput> are specific to the Boolean operation to compute and <computeroutput>Corefinement::Boolean_operation_type</computeroutput> encodes and describes the ordering. Constructing the default array means that no Boolean operation will be done. Overwriting a default value will trigger the corresponding operation. In such a case, the address to a valid surface mesh must be provided. The optional named parameters for all output meshes are provided as a <computeroutput>tuple</computeroutput> and follow the same order as the array <computeroutput>output</computeroutput>. A call to <computeroutput><ref refid="group__PMP__corefinement__grp_1ga3e7f0215600d9280d9ac90565504228c" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput> with optional named parameters passed for output meshes should be done using <computeroutput>make_tuple()</computeroutput> as the types of named parameters are unspecified.</para><para>If <computeroutput>tm1</computeroutput> and/or <computeroutput>tm2</computeroutput> are part of the output surface meshes, they will be updated to contain the output (in-place operation), in any other case, the corresponding result will be inserted into the mesh without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut0</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the union of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the intersection of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the difference of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut3</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the difference of the volumes bounded by <computeroutput>tm2</computeroutput> and <computeroutput>tm1</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of output surface meshes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nps_out</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple of optional sequences of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> each among the ones listed below (<computeroutput>tm_out</computeroutput> being used to refer to the output surface mesh in <computeroutput>output</computeroutput> corresponding to a given named parameter sequence)</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>an array filled as follows: for each operation computed, the position in the array will contain <computeroutput>true</computeroutput> iff the output surface mesh is manifold, and it is put in the surface mesh at the same position as in <computeroutput>output</computeroutput>. Note that if an output surface mesh also was an input mesh but the output operation was generating a non-manifold mesh, the surface mesh will only be corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="352" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="352" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1afba3548ad37fbad9c284b421e80cde45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; bool, 4 &gt;</type>
        <definition>cpp11::array&lt;bool,4&gt; CGAL::Polygon_mesh_processing::corefine_and_compute_boolean_operations</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;output)</argsstring>
        <name>corefine_and_compute_boolean_operations</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="528" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="528" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1afcc008e729a9d565a4795257ad4fecac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; bool, 4 &gt;</type>
        <definition>cpp11::array&lt;bool,4&gt; CGAL::Polygon_mesh_processing::corefine_and_compute_boolean_operations</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;output, const NamedParameters1 &amp;np1)</argsstring>
        <name>corefine_and_compute_boolean_operations</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="542" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="542" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a3e0494cd306c737944bfdca509cb31b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; bool, 4 &gt;</type>
        <definition>cpp11::array&lt;bool,4&gt; CGAL::Polygon_mesh_processing::corefine_and_compute_boolean_operations</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine_and_compute_boolean_operations</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::array</ref>&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="557" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="557" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1gad7e1741a7ce41a5846cf86494982ca8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_union</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_union</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the union of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="645" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="645" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga240e5df984c7d44741a7031e38203dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_intersection</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_intersection</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the intersection of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="677" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="677" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1gac5a853c33c4b0a9da9403c9b191caa44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_difference</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_difference</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the volume bounded by <computeroutput>tm1</computeroutput> minus the volume bounded by <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="709" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="709" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga6447dee822aaf92016f34512ce0b3456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>For each input triangulated surface mesh, if a constrained edge is provided, intersection edges will be marked as constrained. If an edge that was marked as constrained is split, its sub-edges will be marked as constrained as well.</para><para><simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="773" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="773" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1ac87cc07e708757d06a4c660d3adb2e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_union</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine_and_compute_union</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1009" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1009" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a798c08c32c99f0f9d1420666f9cacbef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_union</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1)</argsstring>
        <name>corefine_and_compute_union</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1023" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1023" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a9f9dffec4f6d8d5c700efe784a10b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_union</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out)</argsstring>
        <name>corefine_and_compute_union</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1035" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1035" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a89f060f0118f2903a4ecc6e269ffef93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_intersection</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine_and_compute_intersection</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1049" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1049" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a9f148f3ddd01fee726fe019ed784f252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_intersection</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1)</argsstring>
        <name>corefine_and_compute_intersection</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1063" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1063" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1ab03809aa747a67bc1f294f0483a014d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_intersection</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out)</argsstring>
        <name>corefine_and_compute_intersection</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1075" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1075" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a0de78681282cdadfcc83f731c979fded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_difference</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine_and_compute_difference</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1089" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1089" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a71c84cd90c48e74210ce5b3f679df9f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_difference</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1)</argsstring>
        <name>corefine_and_compute_difference</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1103" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1103" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a01a541aa75d1e19d953ed84f874e3410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_difference</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out)</argsstring>
        <name>corefine_and_compute_difference</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1115" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1115" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a1feb1c65bc66f8aefed7d9ee80501c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1127" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1127" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a59822cc2b5cd01ff13990ed15bdea35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1137" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1137" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a095a1ffcd0e26b9bcae530e19cb9312f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const bool throw_on_self_intersection)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throw_on_self_intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1149" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1149" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a5819430eba856c23bc949b25bb900ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const bool throw_on_self_intersection)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throw_on_self_intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1160" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1160" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="corefinement_8h_1a4e0ddf4751559817cad490baaf26e148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const bool throw_on_self_intersection)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throw_on_self_intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="1173" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="1173" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a7356f5b49ecc5b21b1720e7324f161e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexPointMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::sample_triangles</definition>
        <argsstring>(const FaceRange &amp;triangles, const TriangleMesh &amp;tm, VertexPointMap vpm, double distance, OutputIterator out, bool sample_faces, bool sample_edges, bool add_vertices)</argsstring>
        <name>sample_triangles</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>triangles</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexPointMap</type>
          <declname>vpm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sample_faces</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sample_edges</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>add_vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="171" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="171" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__distance__grp_1ga7874c0f16badf7b7939039cf979ad16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::sample_triangle_mesh</definition>
        <argsstring>(const TriangleMesh &amp;tm, OutputIterator out, NamedParameters np)</argsstring>
        <name>sample_triangle_mesh</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>generates points taken on <computeroutput>tm</computeroutput> and outputs them to <computeroutput>out</computeroutput>, the sampling method is selected using named parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding objects of the same point type as the value type of the internal vertex point map of <computeroutput>tm</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh that will be sampled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator to be filled with sampled points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="15" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available for <computeroutput>TriangleMesh</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a model of <computeroutput><ref refid="classPMPDistanceTraits" kindref="compound">PMPDistanceTraits</ref></computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_random_uniform_sampling" kindref="member">use_random_uniform_sampling</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed (the default), points are generated in a random and uniform way on the surface of <computeroutput>tm</computeroutput>, and/or on edges of <computeroutput>tm</computeroutput>. For faces, the number of sample points is the value passed to the named parameter <computeroutput>number_of_points_on_faces()</computeroutput>. If not set, the value passed to the named parameter <computeroutput>number_of_points_per_area_unit()</computeroutput> is multiplied by the area of <computeroutput>tm</computeroutput> to get the number of sample points. If none of these parameters is set, the number of points sampled is <computeroutput>num_vertices(tm)</computeroutput>. For edges, the number of the number of sample points is the value passed to the named parameter <computeroutput>number_of_points_on_edges()</computeroutput>. If not set, the value passed to the named parameter <computeroutput>number_of_points_per_distance_unit()</computeroutput> is multiplied by the sum of the length of edges of <computeroutput>tm</computeroutput> to get the number of sample points. If none of these parameters is set, the number of points sampled is <computeroutput>num_vertices(tm)</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_grid_sampling" kindref="member">use_grid_sampling</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed, points are generated on a grid in each triangle, with a minimum of one point per triangle. The distance between two consecutive points in the grid is that of the length of the smallest non-null edge of <computeroutput>tm</computeroutput> or the value passed to the named parameter <computeroutput>grid_spacing()</computeroutput>. Edges are also split using the same distance, if requested.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_monte_carlo_sampling" kindref="member">use_monte_carlo_sampling</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed, points are generated randomly in each triangle and/or on each edge. For faces, the number of points per triangle is the value passed to the named parameter <computeroutput>number_of_points_per_face()</computeroutput>. If not set, the value passed to the named parameter <computeroutput>number_of_points_per_area_unit()</computeroutput> is used to pick a number of points per face proportional to the triangle area with a minimum of one point per face. If none of these parameters is set, 2 divided by the square of the length of the smallest non-null edge of <computeroutput>tm</computeroutput> is used as if it was passed to <computeroutput>number_of_points_per_area_unit()</computeroutput>. For edges, the number of points per edge is the value passed to the named parameter <computeroutput>number_of_points_per_edge()</computeroutput>. If not set, the value passed to the named parameter <computeroutput>number_of_points_per_distance_unit()</computeroutput> is used to pick a number of points per edge proportional to the length of the edge with a minimum of one point per face. If none of these parameters is set, 1 divided by the length of the smallest non-null edge of <computeroutput>tm</computeroutput> is used as if it was passed to <computeroutput>number_of_points_per_distance_unit()</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_sample_vertices" kindref="member">sample_vertices</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed (default value), vertices of <computeroutput>tm</computeroutput> are put into <computeroutput>out</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_sample_edges" kindref="member">sample_edges</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed (default value), edges of <computeroutput>tm</computeroutput> are sampled. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_sample_faces" kindref="member">sample_faces</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> is passed (default value), faces of <computeroutput>tm</computeroutput> are sampled. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_grid_spacing" kindref="member">grid_spacing</ref></para></entry><entry thead="no"><para>a double value used as the grid spacing for the grid sampling method.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_on_edges" kindref="member">number_of_points_on_edges</ref></para></entry><entry thead="no"><para>an unsigned integral value used for the random sampling method as the number of points to pick exclusively on edges.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_on_faces" kindref="member">number_of_points_on_faces</ref></para></entry><entry thead="no"><para>an unsigned integral value used for the random sampling method as the number of points to pick on the surface.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_per_distance_unit" kindref="member">number_of_points_per_distance_unit</ref></para></entry><entry thead="no"><para>a double value used for the random sampling and the Monte Carlo sampling methods to repectively determine the total number of points on edges and the number of points per edge.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_per_edge" kindref="member">number_of_points_per_edge</ref></para></entry><entry thead="no"><para>an unsigned integral value used by the Monte-Carlo sampling method as the number of points per edge to pick.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_per_face" kindref="member">number_of_points_per_face</ref></para></entry><entry thead="no"><para>an unsigned integral value used by the Monte-Carlo sampling method as the number of points per face to pick.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_points_per_area_unit" kindref="member">number_of_points_per_area_unit</ref></para></entry><entry thead="no"><para>a double value used for the random sampling and the Monte Carlo sampling methods to repectively determine the total number of points inside faces and the number of points per face.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="329" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="329" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a878d85f3d6b23de11a13183a180fbf22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::sample_triangle_mesh</definition>
        <argsstring>(const TriangleMesh &amp;tm, OutputIterator out)</argsstring>
        <name>sample_triangle_mesh</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="527" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="527" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1ad0173581826589d9acd4da90c137b0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class PointRange</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexPointMap</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_Hausdorff_distance</definition>
        <argsstring>(const PointRange &amp;original_sample_points, const TriangleMesh &amp;tm, VertexPointMap vpm)</argsstring>
        <name>approximate_Hausdorff_distance</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>original_sample_points</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexPointMap</type>
          <declname>vpm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="538" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="538" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a2090295e2044dc81623f5fabb7f83a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
          <param>
            <type>class VertexPointMap</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, NamedParameters np, VertexPointMap vpm_2)</argsstring>
        <name>approximate_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <param>
          <type>VertexPointMap</type>
          <declname>vpm_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="570" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="570" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__distance__grp_1ga2b28867dc150931b2f12d17b77d15266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>approximate_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>computes the approximate Hausdorff distance from <computeroutput>tm1</computeroutput> to <computeroutput>tm2</computeroutput> by returning the distance of the farthest point from <computeroutput>tm2</computeroutput> amongst a sampling of <computeroutput>tm1</computeroutput> generated with the function <computeroutput><ref refid="group__PMP__distance__grp_1ga7874c0f16badf7b7939039cf979ad16d" kindref="member">sample_triangle_mesh()</ref></computeroutput> with <computeroutput>tm1</computeroutput> and <computeroutput>np1</computeroutput> as parameter. </para>        </briefdescription>
        <detaileddescription>
<para>A parallel version is provided and requires the executable to be linked against the <ulink url="http://www.threadingbuildingblocks.org">Intel TBB library</ulink>. To control the number of threads used, the user may use the <computeroutput>tbb::task_scheduler_init</computeroutput> class. See the <ulink url="http://www.threadingbuildingblocks.org/documentation">TBB documentation</ulink> for more details.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Concurrency_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel algorithm. Possible values are <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> and <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>tm1</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>tm2</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh that will be sampled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh to compute the distance to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>tm1</computeroutput> passed to <computeroutput><ref refid="group__PMP__distance__grp_1ga7874c0f16badf7b7939039cf979ad16d" kindref="member">sample_triangle_mesh()</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>tm2</computeroutput> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm2</computeroutput> If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> and in all places where <computeroutput>vertex_point_map</computeroutput> is used.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
The function <computeroutput><ref refid="polygon__mesh__processing_8h_1aee6e37c8d14cbf0847daa8a6bfeb69e6" kindref="member">CGAL::parameters::all_default()</ref></computeroutput> can be used to indicate to use the default values for <computeroutput>np1</computeroutput> and specify custom values for <computeroutput>np2</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="625" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="625" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__distance__grp_1gaa5c83a2d9e8c1251e1ca3f2cdd59785c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_symmetric_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>approximate_symmetric_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>computes the approximate symmetric Hausdorff distance between <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It returns the maximum of <computeroutput>approximate_Hausdorff_distance(tm1, tm2, np1, np2)</computeroutput> and <computeroutput>approximate_Hausdorff_distance(tm2, tm1, np2, np1)</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="648" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="648" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__distance__grp_1ga44609a1b94f1ede1c87b2cfdc441d966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PointRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::max_distance_to_triangle_mesh</definition>
        <argsstring>(const PointRange &amp;points, const TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>max_distance_to_triangle_mesh</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns the distance to <computeroutput>tm</computeroutput> of the point from <computeroutput>points</computeroutput> that is the furthest from <computeroutput>tm</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of points of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh to compute the distance to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available for the vertices of <computeroutput>tm</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPDistanceTraits" kindref="compound">PMPDistanceTraits</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="683" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="683" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__distance__grp_1ga349ddbf7a4a44e820794dbe4680d0026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PointRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_max_distance_to_point_set</definition>
        <argsstring>(const TriangleMesh &amp;tm, const PointRange &amp;points, const double precision, const NamedParameters &amp;np)</argsstring>
        <name>approximate_max_distance_to_point_set</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns an approximation of the distance between <computeroutput>points</computeroutput> and the point lying on <computeroutput>tm</computeroutput> that is the farthest from <computeroutput>points</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangle mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>for each triangle of <computeroutput>tm</computeroutput>, the distance of its farthest point from <computeroutput>points</computeroutput> is bounded. A triangle is subdivided into sub-triangles so that the difference of its distance bounds is smaller than <computeroutput>precision</computeroutput>. <computeroutput>precision</computeroutput> must be strictly positive to avoid infinite loops. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available for the vertices of <computeroutput>tm</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPDistanceTraits" kindref="compound">PMPDistanceTraits</ref></computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="719" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="719" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1af936bdc9c3ad116b2f5082adc27253d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PointRange</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::max_distance_to_triangle_mesh</definition>
        <argsstring>(const PointRange &amp;points, const TriangleMesh &amp;tm)</argsstring>
        <name>max_distance_to_triangle_mesh</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="753" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="753" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1aca3e0d1c60fb609295cf3b4995a969e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PointRange</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_max_distance_to_point_set</definition>
        <argsstring>(const TriangleMesh &amp;tm, const PointRange &amp;points, const double precision)</argsstring>
        <name>approximate_max_distance_to_point_set</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="764" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="764" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1abbd74f9ac7b704719958579b39fdeddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters &amp;np)</argsstring>
        <name>approximate_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="775" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="775" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a5d33289427985050526dc4af7314a1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2)</argsstring>
        <name>approximate_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="785" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="785" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a3841e127bb8eced43cbb877e47572001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_symmetric_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters &amp;np)</argsstring>
        <name>approximate_symmetric_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="796" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="796" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="distance_8h_1a0bcfb993889a1d10159267c20aab5d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Concurrency_tag</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::Polygon_mesh_processing::approximate_symmetric_Hausdorff_distance</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2)</argsstring>
        <name>approximate_symmetric_Hausdorff_distance</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/distance.h" line="806" column="1" bodyfile="CGAL/Polygon_mesh_processing/distance.h" bodystart="806" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga0ce79f6c567ba2a4266c0ec636acc8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename CGAL_PMP_NP_TEMPLATE_PARAMETERS</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::bbox</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, const CGAL_PMP_NP_CLASS &amp;np)</argsstring>
        <name>bbox</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const CGAL_PMP_NP_CLASS &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes a bounding box of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, providing the functor <computeroutput>Construct_bbox_3</computeroutput> and the function <computeroutput>Construct_bbox_3 construct_bbox_3_object()</computeroutput>. <computeroutput>Construct_bbox_3</computeroutput> must provide <computeroutput>BBox_3 operator()(Point_3)</computeroutput> where <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput> is the value type of the vertex point map.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>a bounding box of <computeroutput>pmesh</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="66" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="66" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga0129863dcd7c851cf3587652e28c6eed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::vertex_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor vd, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>vertex_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes a bounding box of a vertex of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>a descriptor of a vertex in <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, providing the functor <computeroutput>Construct_bbox_3</computeroutput> and the function <computeroutput>Construct_bbox_3 construct_bbox_3_object()</computeroutput>. <computeroutput>Construct_bbox_3</computeroutput> must provide <computeroutput>BBox_3 operator()(Point_3)</computeroutput> where <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput> is the value type of the vertex point map.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>a bounding box of <computeroutput>pmesh</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="116" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="116" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga57266ab008442edbfa30ade3e1e6088e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::edge_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor ed, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>edge_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes a bounding box of an edge of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ed</parametername>
</parameternamelist>
<parameterdescription>
<para>a descriptor of an edge in <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, providing the functor <computeroutput>Construct_bbox_3</computeroutput> and the function <computeroutput>Construct_bbox_3 construct_bbox_3_object()</computeroutput>. <computeroutput>Construct_bbox_3</computeroutput> must provide <computeroutput>BBox_3 operator()(Point_3)</computeroutput> where <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput> is the value type of the vertex point map.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>a bounding box of <computeroutput>pmesh</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="159" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="159" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga478dd7562282bc4cf94dfad779385f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::face_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor fd, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>face_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes a bounding box of a face of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>a descriptor of a face in <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, providing the functor <computeroutput>Construct_bbox_3</computeroutput> and the function <computeroutput>Construct_bbox_3 construct_bbox_3_object()</computeroutput>. <computeroutput>Construct_bbox_3</computeroutput> must provide <computeroutput>BBox_3 operator()(Point_3)</computeroutput> where <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput> is the value type of the vertex point map.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>a bounding box of <computeroutput>pmesh</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="203" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="203" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="bbox_8h_1afe359bd2dbd97989680bc91b772a6022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::vertex_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor vd, const PolygonMesh &amp;pmesh)</argsstring>
        <name>vertex_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="229" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="bbox_8h_1a0bc39d8f872c3491c06fd66b5c660973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::edge_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor ed, const PolygonMesh &amp;pmesh)</argsstring>
        <name>edge_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="236" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="bbox_8h_1a645ef3ed3e8759e53e4e6c642c4698f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::face_bbox</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor fd, const PolygonMesh &amp;pmesh)</argsstring>
        <name>face_bbox</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="243" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="243" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="bbox_8h_1a70c069daadb7a33724be62aaaac0d155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Polygon_mesh_processing::bbox</definition>
        <argsstring>(const PolygonMesh &amp;pmesh)</argsstring>
        <name>bbox</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="251" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="251" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga09a4fe88fd2a7487679346301624e18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename CGAL_PMP_NP_TEMPLATE_PARAMETERS</type>
          </param>
        </templateparamlist>
        <type>CGAL_DEPRECATED <ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL_DEPRECATED CGAL::Bbox_3 CGAL::Polygon_mesh_processing::bbox_3</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, const CGAL_PMP_NP_CLASS &amp;np)</argsstring>
        <name>bbox_3</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const CGAL_PMP_NP_CLASS &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 4.10, <computeroutput><ref refid="group__PkgPolygonMeshProcessing_1ga0ce79f6c567ba2a4266c0ec636acc8b9" kindref="member">CGAL::Polygon_mesh_processing::bbox()</ref></computeroutput> should be used instead.</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="264" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="bbox_8h_1a529654af9b20b0853e1f1fa38720e2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>CGAL_DEPRECATED <ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL_DEPRECATED CGAL::Bbox_3 CGAL::Polygon_mesh_processing::bbox_3</definition>
        <argsstring>(const PolygonMesh &amp;pmesh)</argsstring>
        <name>bbox_3</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/bbox.h" line="271" column="1" bodyfile="CGAL/Polygon_mesh_processing/bbox.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gad0449d8e1021fc46507074cd6db65ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename VertexOutputIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; FaceOutputIterator, VertexOutputIterator &gt;</type>
        <definition>std::pair&lt;FaceOutputIterator, VertexOutputIterator&gt; CGAL::Polygon_mesh_processing::refine</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const FaceRange &amp;faces, FaceOutputIterator faces_out, VertexOutputIterator vertices_out, const NamedParameters &amp;np)</argsstring>
        <name>refine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>faces_out</declname>
        </param>
        <param>
          <type>VertexOutputIterator</type>
          <declname>vertices_out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>refines a region of a triangle mesh </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of face descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput> for patch faces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> for patch vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle mesh with patches to be refined </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faces</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of faces defining the patches to refine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faces_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator into which descriptors of new faces are recorded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertices_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator into which descriptors of new vertices are recorded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tmesh</computeroutput> Instance of a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_density_control_factor" kindref="member">density_control_factor</ref></para></entry><entry thead="no"><para>factor to control density of the output mesh, where larger values lead to denser refinements. The density of vertices of <computeroutput>faces_out</computeroutput> is this factor times higher than the vertices of <computeroutput>faces.</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>pair of <computeroutput>faces_out</computeroutput> and <computeroutput>vertices_out</computeroutput></para></simplesect>
<simplesect kind="pre"><para><computeroutput>is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/refine.h" line="80" column="1" bodyfile="CGAL/Polygon_mesh_processing/refine.h" bodystart="80" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga30082762ba2d947cba304e2884d96a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::clip</definition>
        <argsstring>(TriangleMesh &amp;tm, TriangleMesh &amp;clipper, const NamedParameters1 &amp;np_tm, const NamedParameters2 &amp;np_c)</argsstring>
        <name>clip</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>clipper</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np_tm</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np_c</declname>
        </param>
        <briefdescription>
<para>clips <computeroutput>tm</computeroutput> by keeping the part that is inside the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>clipper</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm</computeroutput> is closed, the clipped part can be closed too if the named parameter <computeroutput>clip_volume</computeroutput> is set to <computeroutput>true</computeroutput>. See subsection <ref refid="index_1coref_clip" kindref="member">Clipping</ref> for more details. <simplesect kind="attention"><para>With the current implementation, <computeroutput>clipper</computeroutput> will be modified (refined with the intersection with <computeroutput>tm</computeroutput>).</para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(clipper)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(clipper)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clipper</parametername>
</parameternamelist>
<parameterdescription>
<para>triangulated surface mesh used to clip <computeroutput>tm</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_tm</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_c</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput> (<computeroutput>clipper</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput> (<computeroutput>clipper</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> will be set after the refining <computeroutput>tm</computeroutput> with the intersection with <computeroutput>plane</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, the set of triangles closed to the intersection of <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> will be checked for self-intersections and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_clip_volume" kindref="member">clip_volume</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> and <computeroutput>tm</computeroutput> is closed, the clipping will be done on the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>tm</computeroutput> rather than on its surface (i.e. <computeroutput>tm</computeroutput> will be kept closed).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_compact_clipper" kindref="member">use_compact_clipper</ref></para></entry><entry thead="no"><para>if <computeroutput>false</computeroutput> and <computeroutput>clip_volume</computeroutput> is <computeroutput>false</computeroutput> and <computeroutput>tm</computeroutput> is open, the parts of <computeroutput>tm</computeroutput> coplanar with <computeroutput>clipper</computeroutput> will not be part of the output.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold. If <computeroutput>false</computeroutput> is returned <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> are only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/clip.h" line="443" column="1" bodyfile="CGAL/Polygon_mesh_processing/clip.h" bodystart="443" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga5bf228a516a46f6d1c80937067a17f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::clip</definition>
        <argsstring>(TriangleMesh &amp;tm, const Plane_3 &amp;plane, const NamedParameters &amp;np)</argsstring>
        <name>clip</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>clips <computeroutput>tm</computeroutput> by keeping the part that is on the negative side of <computeroutput>plane</computeroutput> (side opposite to its normal vector). </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm</computeroutput> is closed, the clipped part can be closed too if the named parameter <computeroutput>clip_volume</computeroutput> is set to <computeroutput>true</computeroutput>. See subsection <ref refid="index_1coref_clip" kindref="member">Clipping</ref> for more details.</para><para><simplesect kind="note"><para>In the current implementation it is not possible to set the vertex point map and the default will be used. </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized. An internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plane</parametername>
</parameternamelist>
<parameterdescription>
<para>plane whose negative side defines the half-space to intersect <computeroutput>tm</computeroutput> with. <computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref></computeroutput> is the plane type for the same CGAL kernel as the point of the vertex point map of <computeroutput>tm</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, the set of triangles closed to the intersection of <computeroutput>tm</computeroutput> and <computeroutput>plane</computeroutput> will be checked for self-intersections and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_clip_volume" kindref="member">clip_volume</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> and <computeroutput>tm</computeroutput> is closed, the clipping will be done on the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>tm</computeroutput> rather than on its surface (i.e. <computeroutput>tm</computeroutput> will be kept closed).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_compact_clipper" kindref="member">use_compact_clipper</ref></para></entry><entry thead="no"><para>if <computeroutput>false</computeroutput> and <computeroutput>clip_volume</computeroutput> is <computeroutput>false</computeroutput> and <computeroutput>tm</computeroutput> is open, the parts of <computeroutput>tm</computeroutput> coplanar with <computeroutput>plane</computeroutput> will not be part of the output. </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold. If <computeroutput>false</computeroutput> is returned <computeroutput>tm</computeroutput> is only refined by the intersection with <computeroutput>plane</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/clip.h" line="520" column="1" bodyfile="CGAL/Polygon_mesh_processing/clip.h" bodystart="520" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gaa091c8368920920eed87784107d68ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename VertexRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::fair</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const VertexRange &amp;vertices, const NamedParameters &amp;np)</argsstring>
        <name>fair</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const VertexRange &amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>fairs a region on a triangle mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The points of the selected vertices are relocated to yield an as-smooth-as-possible surface patch, based on solving a linear bi-Laplacian system with boundary constraints, described in <ref refid="citelist_1CITEREF_Botsch2008OnLinearVariational" kindref="member">[3]</ref>. The optional parameter <computeroutput>fairing_continuity</computeroutput> gives the ability to control the tangential continuity C<superscript> n</superscript> of the output mesh.</para><para>The region described by <computeroutput>vertices</computeroutput> might contain multiple disconnected components. Note that the mesh connectivity is not altered in any way, only vertex locations get updated.</para><para>Fairing might fail if fixed vertices, which are used as boundary conditions, do not suffice to solve constructed linear system.</para><para>Note that if the vertex range to which fairing is applied contains all the vertices of the triangle mesh, fairing does not fail, but the mesh gets shrinked to <computeroutput>CGAL::ORIGIN</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of vertex descriptors of <computeroutput>TriangleMesh</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh with patches to be faired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertices of the patches to be faired (the positions of only those vertices will be changed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_fairing_continuity" kindref="member">fairing_continuity</ref></para></entry><entry thead="no"><para>tangential continuity of the output surface patch. The larger <computeroutput>fairing_continuity</computeroutput> gets, the more fixed vertices are required  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_sparse_linear_solver" kindref="member">sparse_linear_solver</ref></para></entry><entry thead="no"><para>an instance of the sparse linear solver used for fairing  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if fairing is successful, otherwise no vertices are relocated</para></simplesect>
<simplesect kind="pre"><para><computeroutput>is_triangle_mesh(tmesh)</computeroutput></para></simplesect>
<simplesect kind="warning"><para>This function involves linear algebra, that is computed using a non-exact floating-point arithmetic.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/fair.h" line="115" column="1" bodyfile="CGAL/Polygon_mesh_processing/fair.h" bodystart="115" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="fair_8h_1a1206b5730665a70d0de5caa6b87b122b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename VertexRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::fair</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const VertexRange &amp;vertices)</argsstring>
        <name>fair</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const VertexRange &amp;</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/fair.h" line="164" column="1" bodyfile="CGAL/Polygon_mesh_processing/fair.h" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1ga6a0a99788b1f8014d38fd9ef8fe7d746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Transformation</type>
          </param>
          <param>
            <type>class PolygonMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::transform</definition>
        <argsstring>(const Transformation &amp;transformation, PolygonMesh &amp;mesh, const NamedParameters &amp;np)</argsstring>
        <name>transform</name>
        <param>
          <type>const Transformation &amp;</type>
          <declname>transformation</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>applies a transformation to every vertex of a <computeroutput>PolygonMesh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Transformation</parametername>
</parameternamelist>
<parameterdescription>
<para>a functor that has an <computeroutput>operator()(Point_3)</computeroutput>, with <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_3</ref></computeroutput> the <computeroutput>value_type</computeroutput> of <computeroutput>vertex_point_map</computeroutput> (see below). Such a functor can be <computeroutput><ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Aff_transformation_3</ref></computeroutput> for example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classVertexListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">VertexListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transformation</parametername>
</parameternamelist>
<parameterdescription>
<para>the transformation functor to apply to the points of <computeroutput>mesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput>PolygonMesh</computeroutput> to transform. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>mesh</computeroutput>, among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para><variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>mesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/transform.h" line="52" column="1" bodyfile="CGAL/Polygon_mesh_processing/transform.h" bodystart="52" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__detect__features__grp_1ga1e5e8ae3b4b8fc06270a50a48d92036d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FT</type>
          </param>
          <param>
            <type>typename EdgeIsFeatureMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::detect_sharp_edges</definition>
        <argsstring>(PolygonMesh &amp;pmesh, FT angle_in_deg, EdgeIsFeatureMap edge_is_feature_map, const NamedParameters &amp;np)</argsstring>
        <name>detect_sharp_edges</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>angle_in_deg</declname>
        </param>
        <param>
          <type>EdgeIsFeatureMap</type>
          <declname>edge_is_feature_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>detects and marks the edges that are considered to be sharp with respect to the given angle bound. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>angle_in_deg</computeroutput> gives the maximum angle (in degrees) between the two normal vectors of adjacent triangles. For an edge of the input polygon mesh, if the angle between the two normal vectors of its incident facets is bigger than the given bound, then the edge is marked as being a feature edge.</para><para>Also computes the number of sharp edges incident to each vertex, if <computeroutput>vertex_feature_degree_map</computeroutput> is provided.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FT</parametername>
</parameternamelist>
<parameterdescription>
<para>a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or from the geometric traits class deduced from the point property map of <computeroutput>PolygonMesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EdgeIsFeatureMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. It must be default constructible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_in_deg</parametername>
</parameternamelist>
<parameterdescription>
<para>the dihedral angle bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_is_feature_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map that will contain the sharp-or-not status of each edge of <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_feature_degree_map" kindref="member">vertex_feature_degree_map</ref></para></entry><entry thead="no"><para>a property map that will contain the number of adjacent feature edges for each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/detect_features.h" line="276" column="1" bodyfile="CGAL/Polygon_mesh_processing/detect_features.h" bodystart="276" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__detect__features__grp_1gaf42fe09f2b613c78bba5dd8d8a71b58f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename PatchIdMap</type>
          </param>
          <param>
            <type>typename VertexIncidentPatchesMap</type>
          </param>
          <param>
            <type>typename EdgeIsFeatureMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::detect_vertex_incident_patches</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const PatchIdMap patch_id_map, VertexIncidentPatchesMap vertex_incident_patches_map, const EdgeIsFeatureMap edge_is_feature_map)</argsstring>
        <name>detect_vertex_incident_patches</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const PatchIdMap</type>
          <declname>patch_id_map</declname>
        </param>
        <param>
          <type>VertexIncidentPatchesMap</type>
          <declname>vertex_incident_patches_map</declname>
        </param>
        <param>
          <type>const EdgeIsFeatureMap</type>
          <declname>edge_is_feature_map</declname>
        </param>
        <briefdescription>
<para>collects the surface patches of the faces incident to each vertex of the input polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PatchIdMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>ReadPropertyMap</computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and the desired patch id, model of <computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexIncidentPatchesMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of mutable <computeroutput><ref refid="classLvaluePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LvaluePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type. Its value type must be a container of <computeroutput>boost::property_traits&lt;PatchIdMap&gt;::value_type</computeroutput> and have a function <computeroutput>insert()</computeroutput>. A <computeroutput>std::set</computeroutput> or a <computeroutput>boost::unordered_set</computeroutput> are recommended, as a patch index may be inserted several times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EdgeIsFeatureMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>ReadPropertyMap</computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>patch_id_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map containing the surface patch ids for the faces of <computeroutput>pmesh</computeroutput>. It must be already filled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_incident_patches_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map that will contain the patch ids of all the faces incident to each vertex of <computeroutput>pmesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_is_feature_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a filled property map that will contain the sharp-or-not status of each edge of <computeroutput>pmesh</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__detect__features__grp_1ga1daa8515d6867e977c470a53dfb93838" kindref="member">CGAL::Polygon_mesh_processing::sharp_edges_segmentation()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/detect_features.h" line="320" column="1" bodyfile="CGAL/Polygon_mesh_processing/detect_features.h" bodystart="320" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__detect__features__grp_1ga1daa8515d6867e977c470a53dfb93838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FT</type>
          </param>
          <param>
            <type>typename EdgeIsFeatureMap</type>
          </param>
          <param>
            <type>typename PatchIdMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; PolygonMesh &gt;::faces_size_type</type>
        <definition>boost::graph_traits&lt;PolygonMesh&gt;::faces_size_type CGAL::Polygon_mesh_processing::sharp_edges_segmentation</definition>
        <argsstring>(PolygonMesh &amp;pmesh, FT angle_in_deg, EdgeIsFeatureMap edge_is_feature_map, PatchIdMap patch_id_map, const NamedParameters &amp;np)</argsstring>
        <name>sharp_edges_segmentation</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>angle_in_deg</declname>
        </param>
        <param>
          <type>EdgeIsFeatureMap</type>
          <declname>edge_is_feature_map</declname>
        </param>
        <param>
          <type>PatchIdMap</type>
          <declname>patch_id_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>This function calls successively <computeroutput><ref refid="group__PMP__detect__features__grp_1ga1e5e8ae3b4b8fc06270a50a48d92036d" kindref="member">CGAL::Polygon_mesh_processing::detect_sharp_edges()</ref></computeroutput>, <computeroutput><ref refid="group__keep__connected__components__grp_1gabe2052b2281e1e628e68d8fea94be2d9" kindref="member">CGAL::Polygon_mesh_processing::connected_components()</ref></computeroutput> and <computeroutput><ref refid="group__PMP__detect__features__grp_1gaf42fe09f2b613c78bba5dd8d8a71b58f" kindref="member">CGAL::Polygon_mesh_processing::detect_vertex_incident_patches()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para>It detects and marks the sharp edges of <computeroutput>pmesh</computeroutput> according to <computeroutput>angle_in_deg</computeroutput>. The sharp edges define a segmentation of <computeroutput>pmesh</computeroutput>, that is done by computing a surface patch id for each face.</para><para>A property map for <computeroutput>CGAL::face_index_t</computeroutput> must be either available as an internal property map to <computeroutput>pmesh</computeroutput> or provided as one of the Named Parameters.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FT</parametername>
</parameternamelist>
<parameterdescription>
<para>a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or from the geometric traits class deduced from the point property map of <computeroutput>PolygonMesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EdgeIsFeatureMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PatchIdMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and the desired patch id, model of <computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_in_deg</parametername>
</parameternamelist>
<parameterdescription>
<para>the dihedral angle bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_is_feature_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map that will contain the sharp-or-not status of each edge of <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>patch_id_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map that will contain the surface patch ids for the faces of <computeroutput>pmesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_feature_degree_map" kindref="member">vertex_feature_degree_map</ref></para></entry><entry thead="no"><para>a property map that will contain the number of adjacent feature edges for each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_first_index" kindref="member">first_index</ref></para></entry><entry thead="no"><para>a <computeroutput>std::size_t</computeroutput> containing the index of the first surface patch of <computeroutput>pmesh</computeroutput>. The patches will be numbered on [first_index; first_index + num_patches], where num_patches is the number of surface patches  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_incident_patches_map" kindref="member">vertex_incident_patches_map</ref></para></entry><entry thead="no"><para>a property map that will contain the patch ids of all the faces incident to each vertex of <computeroutput>pmesh</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
<simplesect kind="return"><para>the number of surface patches.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__detect__features__grp_1ga1e5e8ae3b4b8fc06270a50a48d92036d" kindref="member">CGAL::Polygon_mesh_processing::detect_sharp_edges()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__keep__connected__components__grp_1gabe2052b2281e1e628e68d8fea94be2d9" kindref="member">CGAL::Polygon_mesh_processing::connected_components()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PMP__detect__features__grp_1gaf42fe09f2b613c78bba5dd8d8a71b58f" kindref="member">CGAL::Polygon_mesh_processing::detect_vertex_incident_patches()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/detect_features.h" line="425" column="1" bodyfile="CGAL/Polygon_mesh_processing/detect_features.h" bodystart="425" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="detect__features_8h_1a8c3254eacdbdc489a5431045ea2f3a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename EdgeIsFeatureMap</type>
          </param>
          <param>
            <type>typename FT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::detect_sharp_edges</definition>
        <argsstring>(PolygonMesh &amp;p, FT angle_in_deg, EdgeIsFeatureMap edge_is_feature_map)</argsstring>
        <name>detect_sharp_edges</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>angle_in_deg</declname>
        </param>
        <param>
          <type>EdgeIsFeatureMap</type>
          <declname>edge_is_feature_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/detect_features.h" line="448" column="1" bodyfile="CGAL/Polygon_mesh_processing/detect_features.h" bodystart="448" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="detect__features_8h_1a30f2dbfee1561ecc4eeb054da207e760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FT</type>
          </param>
          <param>
            <type>typename EdgeIsFeatureMap</type>
          </param>
          <param>
            <type>typename PatchIdMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; PolygonMesh &gt;::faces_size_type</type>
        <definition>boost::graph_traits&lt;PolygonMesh&gt;::faces_size_type CGAL::Polygon_mesh_processing::sharp_edges_segmentation</definition>
        <argsstring>(PolygonMesh &amp;p, FT angle_in_deg, EdgeIsFeatureMap edge_is_feature_map, PatchIdMap patch_id_map)</argsstring>
        <name>sharp_edges_segmentation</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>angle_in_deg</declname>
        </param>
        <param>
          <type>EdgeIsFeatureMap</type>
          <declname>edge_is_feature_map</declname>
        </param>
        <param>
          <type>PatchIdMap</type>
          <declname>patch_id_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/detect_features.h" line="459" column="1" bodyfile="CGAL/Polygon_mesh_processing/detect_features.h" bodystart="459" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1gad2546bc14c00bac66d87161a4044f871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FaceOutputIterator</type>
        <definition>FaceOutputIterator CGAL::Polygon_mesh_processing::connected_component</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor seed_face, const PolygonMesh &amp;pmesh, FaceOutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>connected_component</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>seed_face</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>discovers all the faces in the same connected component as <computeroutput>seed_face</computeroutput> and records them in <computeroutput>out</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>seed_face</computeroutput> will also be added in <computeroutput>out</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts faces of type <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed_face</parametername>
</parameternamelist>
<parameterdescription>
<para>a face of <computeroutput>pmesh</computeroutput> from which exploration starts to detect the connected component that contains it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator that collects faces from the same connected component as <computeroutput>seed_face</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the output iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="131" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="131" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a03ae8b1b7974f18b9231387249c80ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::connected_component</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor seed_face, const PolygonMesh &amp;pmesh, OutputIterator out)</argsstring>
        <name>connected_component</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>seed_face</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="174" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1gabe2052b2281e1e628e68d8fea94be2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>boost::property_traits&lt; FaceComponentMap &gt;::value_type</type>
        <definition>boost::property_traits&lt;FaceComponentMap&gt;::value_type CGAL::Polygon_mesh_processing::connected_components</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, FaceComponentMap fcm, const NamedParameters &amp;np)</argsstring>
        <name>connected_components</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FaceComponentMap</type>
          <declname>fcm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes for each face the index of the corresponding connected component. </para>        </briefdescription>
        <detaileddescription>
<para>A property map for <computeroutput>CGAL::face_index_t</computeroutput> must be either available as an internal property map to <computeroutput>pmesh</computeroutput> or provided as one of the <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceComponentMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::faces_size_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fcm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map with indices of components associated to faces in <computeroutput>pmesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the number of connected components. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="212" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="212" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1ad32484ef535e53909077357aa549d8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_traits&lt; FaceComponentMap &gt;::value_type</type>
        <definition>boost::property_traits&lt;FaceComponentMap&gt;::value_type CGAL::Polygon_mesh_processing::connected_components</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, FaceComponentMap fcm)</argsstring>
        <name>connected_components</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FaceComponentMap</type>
          <declname>fcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="248" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="248" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1ga7dd1414e9366fed26c1f12c12c376b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename ComponentRange</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::keep_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const ComponentRange &amp;components_to_keep, const FaceComponentMap &amp;fcm, const NamedParameters &amp;np)</argsstring>
        <name>keep_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const ComponentRange &amp;</type>
          <declname>components_to_keep</declname>
        </param>
        <param>
          <type>const FaceComponentMap &amp;</type>
          <declname>fcm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>keeps the connected components designated by theirs ids in <computeroutput>components_to_keep</computeroutput>, and removes the other connected components as well as all isolated vertices. </para>        </briefdescription>
        <detaileddescription>
<para>The connected component id of a face is given by <computeroutput>fcm</computeroutput>.</para><para><simplesect kind="note"><para>If the removal of the connected components makes <computeroutput>pmesh</computeroutput> a non-manifold surface, then the behavior of this function is undefined.</para></simplesect>
Property maps for <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property map to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ComponentRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of ids convertible to <computeroutput>std::size</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceComponentMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::faces_size_type</computeroutput> as value type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>components_to_keep</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of ids of connected components to keep </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fcm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map with indices of components associated to faces in <computeroutput>pmesh</computeroutput>. After calling this function, the values of <computeroutput>fcm</computeroutput> are undefined. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="261" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="595" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1ga68c6c29dfc6a26a6a2f8befe6944f19d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_mesh_processing::keep_largest_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, std::size_t nb_components_to_keep, const NamedParameters &amp;np)</argsstring>
        <name>keep_largest_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nb_components_to_keep</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>removes the small connected components and all isolated vertices. </para>        </briefdescription>
        <detaileddescription>
<para>Keep <computeroutput>nb_components_to_keep</computeroutput> largest connected components.</para><para>Property maps for <computeroutput>CGAL::face_index_t</computeroutput> and <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property maps to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_components_to_keep</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of components to be kept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the number of connected components removed (ignoring isolated vertices). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="292" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="292" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a205eec21baf6afe09636a151a13e7fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_mesh_processing::keep_largest_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, std::size_t nb_components_to_keep)</argsstring>
        <name>keep_largest_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nb_components_to_keep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="342" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="342" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1ga6de4710f16947ea7817a0365c2fb72f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_mesh_processing::keep_large_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, std::size_t threshold_components_to_keep, const NamedParameters &amp;np)</argsstring>
        <name>keep_large_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>threshold_components_to_keep</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>removes connected components with less than a given number of faces. </para>        </briefdescription>
        <detaileddescription>
<para>Property maps for <computeroutput>CGAL::face_index_t</computeroutput> and <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property maps to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold_components_to_keep</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of faces a component must have so that it is kept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the number of connected components removed (ignoring isolated vertices). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="375" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="375" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a38b26b9ef0c77bc8c32e94e561719404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_mesh_processing::keep_large_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, std::size_t threshold_components_to_keep)</argsstring>
        <name>keep_large_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>threshold_components_to_keep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="416" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="416" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a1f1d4b89c98a88f7b9cbb1646eb5183c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename ComponentRange</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::keep_or_remove_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const ComponentRange &amp;components_to_keep, const FaceComponentMap &amp;fcm, bool keep, const NamedParameters &amp;np)</argsstring>
        <name>keep_or_remove_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const ComponentRange &amp;</type>
          <declname>components_to_keep</declname>
        </param>
        <param>
          <type>const FaceComponentMap &amp;</type>
          <declname>fcm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keep</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="429" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="429" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1ga17cb532198888791f2ceb00666f4c1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename ComponentRange</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::remove_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const ComponentRange &amp;components_to_remove, const FaceComponentMap &amp;fcm, const NamedParameters &amp;np)</argsstring>
        <name>remove_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const ComponentRange &amp;</type>
          <declname>components_to_remove</declname>
        </param>
        <param>
          <type>const FaceComponentMap &amp;</type>
          <declname>fcm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Removes in <computeroutput>pmesh</computeroutput> the connected components designated by theirs ids in <computeroutput>components_to_remove</computeroutput> as well as all isolated vertices. </para>        </briefdescription>
        <detaileddescription>
<para>The connected component id of a face is given by <computeroutput>fcm</computeroutput>.</para><para><simplesect kind="note"><para>If the removal of the connected components makes <computeroutput>pmesh</computeroutput> a non-manifold surface, then the behavior of this function is undefined.</para></simplesect>
Property maps for <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property map to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ComponentRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of ids convertible to <computeroutput>std::size</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceComponentMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::faces_size_type</computeroutput> as value type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>components_to_remove</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of ids of connected components to remove </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fcm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map with indices of components associated to faces in <computeroutput>pmesh</computeroutput>. After calling this function, the values of <computeroutput>fcm</computeroutput> are undefined. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="639" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="639" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1ga4b7d6fb132789998695d855f326a0fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::remove_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const FaceRange &amp;components_to_remove, const NamedParameters &amp;np)</argsstring>
        <name>remove_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>components_to_remove</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>keeps the connected components not designated by the faces in <computeroutput>components_to_remove</computeroutput>, and removes the other connected components and all isolated vertices. </para>        </briefdescription>
        <detaileddescription>
<para>Property maps for <computeroutput>CGAL::face_index_t</computeroutput> and <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property maps to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><simplesect kind="note"><para>If the removal of the connected components makes <computeroutput>pmesh</computeroutput> a non-manifold surface, then the behavior of this function is undefined.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> indicating the connected components to be removed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>components_to_remove</parametername>
</parameternamelist>
<parameterdescription>
<para>a face range, including one face or more on each component to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="679" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="679" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="group__keep__connected__components__grp_1gab238ffa71187b8fdcdeef48e71ee4b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::keep_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const FaceRange &amp;components_to_keep, const NamedParameters &amp;np)</argsstring>
        <name>keep_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>components_to_keep</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>keeps the connected components designated by the faces in <computeroutput>components_to_keep</computeroutput>, and removes the other connected components and all isolated vertices. </para>        </briefdescription>
        <detaileddescription>
<para>Property maps for <computeroutput>CGAL::face_index_t</computeroutput> and <computeroutput>CGAL::vertex_index_t</computeroutput> must be either available as internal property maps to <computeroutput>pmesh</computeroutput> or provided as <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref>.</para><para><simplesect kind="note"><para>If the removal of the connected components makes <computeroutput>pmesh</computeroutput> a non-manifold surface, then the behavior of this function is undefined.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> indicating the connected components to be kept.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>components_to_keep</parametername>
</parameternamelist>
<parameterdescription>
<para>a face range, including one face or more on each component to be kept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each vertex of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="737" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="737" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a8603797222aef5a6cdb0c4326276f86f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::remove_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const FaceRange &amp;components_to_remove)</argsstring>
        <name>remove_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>components_to_remove</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="767" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="767" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a3c7867fcef75f2ceae981aa915d4a9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename ComponentRange</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::keep_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const ComponentRange &amp;components_to_keep, const FaceComponentMap &amp;fcm)</argsstring>
        <name>keep_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const ComponentRange &amp;</type>
          <declname>components_to_keep</declname>
        </param>
        <param>
          <type>const FaceComponentMap &amp;</type>
          <declname>fcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="777" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="777" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1a501c6609b7da5e5c93128faa7b8d609c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename ComponentRange</type>
          </param>
          <param>
            <type>typename FaceComponentMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::remove_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const ComponentRange &amp;components_to_remove, const FaceComponentMap &amp;fcm)</argsstring>
        <name>remove_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const ComponentRange &amp;</type>
          <declname>components_to_remove</declname>
        </param>
        <param>
          <type>const FaceComponentMap &amp;</type>
          <declname>fcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="788" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="788" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="connected__components_8h_1ac1bdbe2a1c96fcc8b70f1476412e6e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::keep_connected_components</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const FaceRange &amp;components_to_keep)</argsstring>
        <name>keep_connected_components</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>components_to_keep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/connected_components.h" line="797" column="1" bodyfile="CGAL/Polygon_mesh_processing/connected_components.h" bodystart="797" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1ga102e1ba5d709c5e53e013160792e4d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputMesh</type>
          </param>
          <param>
            <type>class OutputMesh</type>
          </param>
          <param>
            <type>class BottomFunctor</type>
          </param>
          <param>
            <type>class TopFunctor</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::extrude_mesh</definition>
        <argsstring>(const InputMesh &amp;input, OutputMesh &amp;output, const BottomFunctor &amp;bot, const TopFunctor &amp;top, const NamedParameters1 &amp;np_in, const NamedParameters2 &amp;np_out)</argsstring>
        <name>extrude_mesh</name>
        <param>
          <type>const InputMesh &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputMesh &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const BottomFunctor &amp;</type>
          <declname>bot</declname>
        </param>
        <param>
          <type>const TopFunctor &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np_in</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para>performs a generalized extrusion of <computeroutput>input</computeroutput> and puts it in <computeroutput>output</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This function extrudes the open surface mesh <computeroutput>input</computeroutput> and puts the result in <computeroutput>output</computeroutput>. The mesh generated is a closed surface mesh with a bottom and top part, both having the same graph combinatorics as <computeroutput>input</computeroutput> (except that the orientation of the faces of the bottom part is reversed). The bottom and the top parts are connected by a triangle strip between boundary cycles. The coordinates of the points associated to the vertices of the bottom and top part are first initialized to the same value as the corresponding vertices of <computeroutput>input</computeroutput>. Then for each vertex, a call to <computeroutput>bot</computeroutput> and <computeroutput>top</computeroutput> is done for the vertices of the bottom part and the top part, respectively. <simplesect kind="attention"><para><computeroutput>output</computeroutput> may be self intersecting. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>InputMesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>OutputMesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BottomFunctor</parametername>
</parameternamelist>
<parameterdescription>
<para>a functor providing <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()`(boost::graph_traits&lt;InputMesh&gt;::vertex_descriptor<sp/>input_v,boost::graph_traits&lt;OutputMesh&gt;::vertex_descriptor<sp/>output_v)</highlight></codeline>
</programlisting> where <computeroutput>output_v</computeroutput> is the copy of <computeroutput>input_v</computeroutput> from <computeroutput>input</computeroutput> into the bottom part of <computeroutput>output</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TopFunctor</parametername>
</parameternamelist>
<parameterdescription>
<para>a functor providing a similar <computeroutput>operator()</computeroutput> as <computeroutput>BottomFunctor</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>an open surface mesh to extrude. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>a surface mesh that will contain the result of the extrusion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bot</parametername>
</parameternamelist>
<parameterdescription>
<para>functor that will transform all points copied from <computeroutput>input</computeroutput> in order to shape the bottom part of the extrusion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>functor that will transform all points copied from <computeroutput>input</computeroutput> in order to shape the top part of the extrusion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_in</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map that contains the points associated to the vertices of <computeroutput>input</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available for the vertices of <computeroutput>input</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><itemizedlist>
<listitem><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map that will contain the points associated to the vertices of <computeroutput>output</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available for the vertices of <computeroutput>output</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/extrude.h" line="162" column="1" bodyfile="CGAL/Polygon_mesh_processing/extrude.h" bodystart="162" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1ga6cf0f4aaf1f304d129d76b9d20a4e909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputMesh</type>
          </param>
          <param>
            <type>class OutputMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::extrude_mesh</definition>
        <argsstring>(const InputMesh &amp;input, OutputMesh &amp;output, Vector_3 v, const NamedParameters1 &amp;np_in, const NamedParameters2 &amp;np_out)</argsstring>
        <name>extrude_mesh</name>
        <param>
          <type>const InputMesh &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputMesh &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Vector_3</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np_in</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para>fills <computeroutput>output</computeroutput> with a closed mesh bounding the volume swept by <computeroutput>input</computeroutput> when translating its vertices by <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The mesh is oriented so that the faces corresponding to <computeroutput>input</computeroutput> in <computeroutput>output</computeroutput> have the same orientation. <simplesect kind="attention"><para><computeroutput>output</computeroutput> may be self intersecting. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Vector_3</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>vector type from the same CGAL kernel as the point of the vertex point map used for <computeroutput>OutputMesh</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>InputMesh</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for <computeroutput>OutputMesh</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>an open surface mesh to extrude. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>a surface mesh that will contain the result of the extrusion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector defining the direction of the extrusion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_in</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map that contains the points associated to the vertices of <computeroutput>input</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available for the vertices of <computeroutput>input</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><itemizedlist>
<listitem><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map that will contain the points associated to the vertices of <computeroutput>output</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available for the vertices of <computeroutput>output</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/extrude.h" line="261" column="1" bodyfile="CGAL/Polygon_mesh_processing/extrude.h" bodystart="261" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="extrude_8h_1afdf990c6fdea46f8f090f70ea1df65ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputMesh</type>
          </param>
          <param>
            <type>class OutputMesh</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::extrude_mesh</definition>
        <argsstring>(const InputMesh &amp;input, OutputMesh &amp;output, Vector dir)</argsstring>
        <name>extrude_mesh</name>
        <param>
          <type>const InputMesh &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputMesh &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>Vector</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/extrude.h" line="286" column="1" bodyfile="CGAL/Polygon_mesh_processing/extrude.h" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="extrude_8h_1a48b1a7673561ac35a7edada3f56ec3c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputMesh</type>
          </param>
          <param>
            <type>class OutputMesh</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename CGAL_PMP_NP_TEMPLATE_PARAMETERS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::extrude_mesh</definition>
        <argsstring>(const InputMesh &amp;input, OutputMesh &amp;output, Vector dir, const CGAL_PMP_NP_CLASS &amp;np)</argsstring>
        <name>extrude_mesh</name>
        <param>
          <type>const InputMesh &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputMesh &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>Vector</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const CGAL_PMP_NP_CLASS &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/extrude.h" line="299" column="1" bodyfile="CGAL/Polygon_mesh_processing/extrude.h" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="extrude_8h_1af193aa64d4c6f9a955f68747f35a503f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputMesh</type>
          </param>
          <param>
            <type>class OutputMesh</type>
          </param>
          <param>
            <type>class BottomFunctor</type>
          </param>
          <param>
            <type>class TopFunctor</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::extrude_mesh</definition>
        <argsstring>(const InputMesh &amp;input, OutputMesh &amp;output, const BottomFunctor &amp;bot, const TopFunctor &amp;top)</argsstring>
        <name>extrude_mesh</name>
        <param>
          <type>const InputMesh &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputMesh &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const BottomFunctor &amp;</type>
          <declname>bot</declname>
        </param>
        <param>
          <type>const TopFunctor &amp;</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/extrude.h" line="313" column="1" bodyfile="CGAL/Polygon_mesh_processing/extrude.h" bodystart="313" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonMeshProcessing_1gaf5f5eb322811f24573aa9158e6df8070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename HalfedgeOutputIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>HalfedgeOutputIterator</type>
        <definition>HalfedgeOutputIterator CGAL::Polygon_mesh_processing::border_halfedges</definition>
        <argsstring>(const FaceRange &amp;faces, const PolygonMesh &amp;pmesh, HalfedgeOutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>border_halfedges</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>HalfedgeOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>collects the border halfedges of a surface patch defined as a face range. </para>        </briefdescription>
        <detaileddescription>
<para>For each returned halfedge <computeroutput>h</computeroutput>, <computeroutput>opposite(h, pmesh)</computeroutput> belongs to a face of the patch, but <computeroutput>face(h, pmesh)</computeroutput> does not belong to the patch.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput>. If <computeroutput>PolygonMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput> and no <computeroutput>face_index_map</computeroutput> is given as a named parameter, then the internal one must be initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HalfedgeOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor</computeroutput> for patch border </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to which <computeroutput>faces</computeroutput> belong </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faces</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of faces defining the patch whose border halfedges are collected </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator that collects the border halfedges of the patch, seen from outside. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>out</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/border.h" line="184" column="1" bodyfile="CGAL/Polygon_mesh_processing/border.h" bodystart="184" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="border_8h_1a909d265f8074fadc8c85b3c42cc4f7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename HalfedgeOutputIterator</type>
          </param>
        </templateparamlist>
        <type>HalfedgeOutputIterator</type>
        <definition>HalfedgeOutputIterator CGAL::Polygon_mesh_processing::border_halfedges</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, HalfedgeOutputIterator out)</argsstring>
        <name>border_halfedges</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>HalfedgeOutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/border.h" line="211" column="1" bodyfile="CGAL/Polygon_mesh_processing/border.h" bodystart="211" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="border_8h_1a6c93394ecd6b5425990f26ab85868521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename HalfedgeOutputIterator</type>
          </param>
        </templateparamlist>
        <type>HalfedgeOutputIterator</type>
        <definition>HalfedgeOutputIterator CGAL::Polygon_mesh_processing::border_halfedges</definition>
        <argsstring>(const FaceRange &amp;faces, const PolygonMesh &amp;pmesh, HalfedgeOutputIterator out)</argsstring>
        <name>border_halfedges</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>HalfedgeOutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/border.h" line="225" column="1" bodyfile="CGAL/Polygon_mesh_processing/border.h" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="border_8h_1a2013d2ff18c28ff73c5da65bdf588c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int CGAL::Polygon_mesh_processing::number_of_borders</definition>
        <argsstring>(const PolygonMesh &amp;pmesh)</argsstring>
        <name>number_of_borders</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/border.h" line="241" column="1" bodyfile="CGAL/Polygon_mesh_processing/border.h" bodystart="241" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__repairing__grp_1ga91c02ef57e638faf2622eae93e7a25e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_mesh_processing::remove_isolated_vertices</definition>
        <argsstring>(PolygonMesh &amp;pmesh)</argsstring>
        <name>remove_isolated_vertices</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>removes the isolated vertices from any polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>A vertex is considered isolated if it is not incident to any simplex of higher dimension.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be repaired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of removed isolated vertices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/repair.h" line="1364" column="1" bodyfile="CGAL/Polygon_mesh_processing/repair.h" bodystart="1364" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga2cb4019111658999234b3e377e3eabcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolylineRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const PolylineRange &amp;polylines1, const PolylineRange &amp;polylines2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines1</declname>
        </param>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any segment of any polyline of <computeroutput>polylines1</computeroutput> intersects any segment of any polyline of <computeroutput>polylines2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolylineRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type must be from a 3D point from a CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polylines1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polylines2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1095" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1095" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga202575b5d28a41b7246e60e1be95a1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Polyline</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const Polyline &amp;polyline1, const Polyline &amp;polyline2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline1</declname>
        </param>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any segment of <computeroutput>polyline1</computeroutput> intersects any segment of <computeroutput>polyline2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type must be from a 3D point type from CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polyline1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first polyline to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second polyline to check for intersections. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1137" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1137" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga2ee87a0a4368a21654ee2817b93c85e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm1</computeroutput> intersects any face of <computeroutput>tm2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>do_overlap_test_of_bounded_sides</computeroutput> is set to <computeroutput>true</computeroutput>, the overlap of bounded sides are tested as well. In that case, the meshes must be closed. This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm1)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm2)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>!do_overlap_test_of_bounded_sides || CGAL::is_closed(tm1)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>!do_overlap_test_of_bounded_sides || CGAL::is_closed(tm2)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm1</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm2</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm1</computeroutput>, among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm2</computeroutput>, among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (tm2<computeroutput>). \attention The two property maps must have the same</computeroutput>value_type`. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_overlap_test_of_bounded_sides" kindref="member">do_overlap_test_of_bounded_sides</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> tests also the overlap of the bounded sides of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. If <computeroutput>false</computeroutput> (default), only the intersection of surface triangles are tested.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1203" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1203" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a8ce25af4a8ee26658603a640e4c4b3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const typename boost::disable_if&lt; typename boost::has_range_const_iterator&lt; TriangleMesh &gt;::type &gt;::type *=0)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const typename boost::disable_if&lt; typename boost::has_range_const_iterator&lt; TriangleMesh &gt;::type &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1246" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1246" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1gad4355ff17a9101116ebd4e568d84ff07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PolylineRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const PolylineRange &amp;polylines, const NamedParameters &amp;np)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm</computeroutput> and any segment of any polyline of <computeroutput>polylines</computeroutput> intersects, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>. <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolylineRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type of the range must be the same as the value type of the vertex point map. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polylines</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1284" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1284" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga9bea2a4c7f1f32870c16cef0a73ddc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class Polyline</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const Polyline &amp;polyline, const NamedParameters &amp;np)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm</computeroutput> and any segment of <computeroutput>polyline</computeroutput> intersects, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>. <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type of the range must be the same as the value type of the vertex point map. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>the polyline to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tn</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1340" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1340" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a4a6522acf16f9704aef8eab948c0bba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PolylineRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const PolylineRange &amp;polylines, const typename boost::enable_if&lt; typename boost::has_range_iterator&lt; typename boost::mpl::eval_if&lt; boost::has_range_iterator&lt; PolylineRange &gt;, boost::range_value&lt; PolylineRange &gt;, boost::false_type &gt;::type &gt;::type &gt;::type *=0)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines</declname>
        </param>
        <param>
          <type>const typename boost::enable_if&lt; typename boost::has_range_iterator&lt; typename boost::mpl::eval_if&lt; boost::has_range_iterator&lt; PolylineRange &gt;, boost::range_value&lt; PolylineRange &gt;, boost::false_type &gt;::type &gt;::type &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1371" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1371" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a895f07e909230e5c67079dcda3f5403c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class Polyline</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const Polyline &amp;polyline, const typename boost::disable_if&lt; typename boost::has_range_const_iterator&lt; TriangleMesh &gt;::type &gt;::type *=0, const typename boost::disable_if&lt; typename boost::has_range_iterator&lt; typename boost::mpl::eval_if&lt; boost::has_range_iterator&lt; Polyline &gt;, boost::range_value&lt; Polyline &gt;, boost::false_type &gt;::type &gt;::type &gt;::type *=0)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline</declname>
        </param>
        <param>
          <type>const typename boost::disable_if&lt; typename boost::has_range_const_iterator&lt; TriangleMesh &gt;::type &gt;::type *</type>
          <defval>0</defval>
        </param>
        <param>
          <type>const typename boost::disable_if&lt; typename boost::has_range_iterator&lt; typename boost::mpl::eval_if&lt; boost::has_range_iterator&lt; Polyline &gt;, boost::range_value&lt; Polyline &gt;, boost::false_type &gt;::type &gt;::type &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1391" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1391" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga1ff63ec6e762d45ea5775bf7b49f9270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMeshRange</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
          <param>
            <type>class NamedParametersRange</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::intersecting_meshes</definition>
        <argsstring>(const TriangleMeshRange &amp;range, OutputIterator out, NamedParameters np, NamedParametersRange nps)</argsstring>
        <name>intersecting_meshes</name>
        <param>
          <type>const TriangleMeshRange &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <param>
          <type>NamedParametersRange</type>
          <declname>nps</declname>
        </param>
        <briefdescription>
<para>detects and reports all the pairs of meshes intersecting in a range of triangulated surface meshes. </para>        </briefdescription>
        <detaileddescription>
<para>A pair of meshes intersecting is put in the output iterator <computeroutput>out</computeroutput> as a <computeroutput>std::pair&lt;std::size_t, std::size_t&gt;</computeroutput>, each index refering to the index of the triangle mesh in the input range. If <computeroutput>do_overlap_test_of_bounded_sides</computeroutput> is <computeroutput>true</computeroutput>, the overlap of bounded sides are tested as well. In that case, the meshes must be closed. This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMeshRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of triangulated surface meshes model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator in which <computeroutput>std::pair&lt;std::size_t, std::size_t&gt;</computeroutput> can be put. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for the algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of named parameters for the meshes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of triangulated surface meshes to be checked for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator used to collect pairs of intersecting meshes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence named parameters among the one listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>. The default value for <computeroutput>geom_traits</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt;Point&gt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>, where <computeroutput>Point</computeroutput> is the value type of the vertex point map of the meshes.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_overlap_test_of_bounded_sides" kindref="member">do_overlap_test_of_bounded_sides</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> reports also overlap of bounded sides of meshes. If <computeroutput>false</computeroutput> (default), only the intersection of surface triangles are tested.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nps</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional range of <computeroutput>vertex_point_map</computeroutput> named parameters containing the <computeroutput>VertexPointMap</computeroutput> of each mesh in <computeroutput>range</computeroutput>, in the same order. If this parameter is omitted, then an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available for every mesh in the range. All the vertex point maps must be of the same type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of a mesh. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in the triangle mesh type used in the range  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1568" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1568" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a69b5c20e15b5435d49831868e8ae164f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMeshRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::intersecting_meshes</definition>
        <argsstring>(const TriangleMeshRange &amp;range, OutputIterator out, NamedParameters np)</argsstring>
        <name>intersecting_meshes</name>
        <param>
          <type>const TriangleMeshRange &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1608" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1608" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a84c80099b41215a5779f94fa00636aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMeshRange</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::intersecting_meshes</definition>
        <argsstring>(const TriangleMeshRange &amp;range, OutputIterator out)</argsstring>
        <name>intersecting_meshes</name>
        <param>
          <type>const TriangleMeshRange &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1618" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1618" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga09e9c6524834aebd2b2dcd5c0031d1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>computes the intersection of triangles of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The output is a set of polylines with all vertices but endpoints being of degree 2.</para><para><simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator in which <computeroutput>std::vector</computeroutput> of points can be put. The point type is the one from the vertex property map</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline_output</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator of polylines. Each polyline will be given as a vector of points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>a property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). The two property map types must be the same.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1664" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1664" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a594bdd1e5c89c9df8afcb706952d2483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1751" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1751" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a1431714d39a1c2621e317edcf491983d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output, const NamedParameters1 &amp;np)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1764" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1764" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1a15a8a67718332201ca607f06f5473138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const bool throw_on_self_intersection)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throw_on_self_intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1779" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1779" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="intersection_8h_1aa80bd7eaea5f6c66e3cd552313a8ba98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output, const bool throw_on_self_intersection)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>throw_on_self_intersection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1793" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1793" bodyend="1801"/>
      </memberdef>
      <memberdef kind="function" id="group__hole__filling__grp_1ga4aacaa46c800a53ca0a0e5fd518a7b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, OutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates a hole in a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The hole must not contain any non-manifold vertex, nor self-intersections. The patch generated does not introduce non-manifold edges nor degenerate triangles. If a hole cannot be triangulated, <computeroutput>pmesh</computeroutput> is not modified and nothing is recorded in <computeroutput>out</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> for patch faces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>polygon mesh containing the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border_halfedge</parametername>
</parameternamelist>
<parameterdescription>
<para>a border halfedge incident to the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator over patch faces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_delaunay_triangulation" kindref="member">use_delaunay_triangulation</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, use the Delaunay triangulation facet search space  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>out</computeroutput></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="86" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="86" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1a0970aff3aa04795416c105a940ece965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, OutputIterator out)</argsstring>
        <name>triangulate_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="114" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1aab3b27cedac90091916e22b95aedf0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PM</type>
          </param>
          <param>
            <type>typename VertexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::test_in_edges</definition>
        <argsstring>(const PM &amp;pmesh, const VertexRange &amp;patch)</argsstring>
        <name>test_in_edges</name>
        <param>
          <type>const PM &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const VertexRange &amp;</type>
          <declname>patch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="123" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="123" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__hole__filling__grp_1gaaa1bfaf9a57dea8b6c71168a18f9b6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename VertexOutputIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; FaceOutputIterator, VertexOutputIterator &gt;</type>
        <definition>std::pair&lt;FaceOutputIterator, VertexOutputIterator&gt; CGAL::Polygon_mesh_processing::triangulate_and_refine_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, FaceOutputIterator face_out, VertexOutputIterator vertex_out, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_and_refine_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>face_out</declname>
        </param>
        <param>
          <type>VertexOutputIterator</type>
          <declname>vertex_out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates and refines a hole in a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>must be model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FacetOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> for patch faces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> for patch vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>polygon mesh which has the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border_halfedge</parametername>
</parameternamelist>
<parameterdescription>
<para>a border halfedge incident to the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>face_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator over patch faces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator over patch vertices without including the boundary </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_density_control_factor" kindref="member">density_control_factor</ref></para></entry><entry thead="no"><para>factor to control density of the ouput mesh, where larger values cause denser refinements, as in <computeroutput><ref refid="group__PMP__meshing__grp_1gad0449d8e1021fc46507074cd6db65ef4" kindref="member">refine()</ref></computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_delaunay_triangulation" kindref="member">use_delaunay_triangulation</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, use the Delaunay triangulation facet search space  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>pair of <computeroutput>face_out</computeroutput> and <computeroutput>vertex_out</computeroutput></para></simplesect>
<simplesect kind="see"><para><ref refid="group__hole__filling__grp_1ga4aacaa46c800a53ca0a0e5fd518a7b20" kindref="member">CGAL::Polygon_mesh_processing::triangulate_hole()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__meshing__grp_1gad0449d8e1021fc46507074cd6db65ef4" kindref="member">CGAL::Polygon_mesh_processing::refine()</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="176" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="176" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1ab53eb12ef73c4753ea3b5d6a0c90f4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename VertexOutputIterator</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; FaceOutputIterator, VertexOutputIterator &gt;</type>
        <definition>std::pair&lt;FaceOutputIterator, VertexOutputIterator&gt; CGAL::Polygon_mesh_processing::triangulate_and_refine_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, FaceOutputIterator face_out, VertexOutputIterator vertex_out)</argsstring>
        <name>triangulate_and_refine_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>face_out</declname>
        </param>
        <param>
          <type>VertexOutputIterator</type>
          <declname>vertex_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="195" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__hole__filling__grp_1ga87655fb8d54a8d85e7eec7a21e5c0058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename VertexOutputIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::tuple</ref>&lt; bool, FaceOutputIterator, VertexOutputIterator &gt;</type>
        <definition>CGAL::cpp11::tuple&lt;bool, FaceOutputIterator, VertexOutputIterator&gt; CGAL::Polygon_mesh_processing::triangulate_refine_and_fair_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, FaceOutputIterator face_out, VertexOutputIterator vertex_out, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_refine_and_fair_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>face_out</declname>
        </param>
        <param>
          <type>VertexOutputIterator</type>
          <declname>vertex_out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates, refines and fairs a hole in a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> for patch faces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> holding <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> for patch vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>polygon mesh which has the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border_halfedge</parametername>
</parameternamelist>
<parameterdescription>
<para>a border halfedge incident to the hole </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>face_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator over patch faces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator over patch vertices without including the boundary </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available in <computeroutput>PolygonMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_delaunay_triangulation" kindref="member">use_delaunay_triangulation</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, use the Delaunay triangulation facet search space  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_density_control_factor" kindref="member">density_control_factor</ref></para></entry><entry thead="no"><para>factor to control density of the ouput mesh, where larger values cause denser refinements, as in <computeroutput><ref refid="group__PMP__meshing__grp_1gad0449d8e1021fc46507074cd6db65ef4" kindref="member">refine()</ref></computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_fairing_continuity" kindref="member">fairing_continuity</ref></para></entry><entry thead="no"><para>tangential continuity of the output surface patch  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_sparse_linear_solver" kindref="member">sparse_linear_solver</ref></para></entry><entry thead="no"><para>an instance of the sparse linear solver used for fairing  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>tuple of<itemizedlist>
<listitem><para><computeroutput>bool</computeroutput>: <computeroutput>true</computeroutput> if fairing is successful</para></listitem><listitem><para><computeroutput>face_out</computeroutput></para></listitem><listitem><para><computeroutput>vertex_out</computeroutput></para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="group__hole__filling__grp_1ga4aacaa46c800a53ca0a0e5fd518a7b20" kindref="member">CGAL::Polygon_mesh_processing::triangulate_hole()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__meshing__grp_1gad0449d8e1021fc46507074cd6db65ef4" kindref="member">CGAL::Polygon_mesh_processing::refine()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__meshing__grp_1gaa091c8368920920eed87784107d68ecf" kindref="member">CGAL::Polygon_mesh_processing::fair()</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="250" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="250" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1add7224125e27d85f2ff9176dd88323cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceOutputIterator</type>
          </param>
          <param>
            <type>typename VertexOutputIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::tuple</ref>&lt; bool, FaceOutputIterator, VertexOutputIterator &gt;</type>
        <definition>CGAL::cpp11::tuple&lt;bool, FaceOutputIterator, VertexOutputIterator&gt; CGAL::Polygon_mesh_processing::triangulate_refine_and_fair_hole</definition>
        <argsstring>(PolygonMesh &amp;pmesh, typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor border_halfedge, FaceOutputIterator face_out, VertexOutputIterator vertex_out)</argsstring>
        <name>triangulate_refine_and_fair_hole</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>border_halfedge</declname>
        </param>
        <param>
          <type>FaceOutputIterator</type>
          <declname>face_out</declname>
        </param>
        <param>
          <type>VertexOutputIterator</type>
          <declname>vertex_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="277" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="277" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="group__hole__filling__grp_1ga8508fd49a2482ec7dcb3e1799234696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange1</type>
          </param>
          <param>
            <type>typename PointRange2</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole_polyline</definition>
        <argsstring>(const PointRange1 &amp;points, const PointRange2 &amp;third_points, OutputIterator out, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_hole_polyline</name>
        <param>
          <type>const PointRange1 &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const PointRange2 &amp;</type>
          <declname>third_points</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>creates triangles to fill the hole defined by points in the range <computeroutput>points</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Triangles are recorded into <computeroutput>out</computeroutput> using the indices of the input points in the range <computeroutput>points</computeroutput>. Note that no degenerate triangles will be produced. If no triangulation can be found, then nothing is recorded in <computeroutput>out</computeroutput>.</para><para>If faces incident to the polyline outside the hole are known, it is recommended to use this function. The point range <computeroutput>third_points</computeroutput> indicates for each pair of consecutive points in the range <computeroutput>points</computeroutput>, the third point of the face this segment is incident to. It influences the choice of the best triangulation while avoiding overfolding.</para><para>Note that the ranges <computeroutput>points</computeroutput> and <computeroutput>third_points</computeroutput> may or may not contain duplicated first point at the end of sequence.</para><para><simplesect kind="pre"><para><computeroutput>third_points.size() == points.size()</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of points, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput>, to collect patch faces. A specialization for <computeroutput><ref refid="structCGAL_1_1value__type__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::value_type_traits</ref>&lt;<ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref>&gt;</computeroutput> must be available, and the corresponding value type <computeroutput>type</computeroutput> must have a constructor <computeroutput>type(int p0, int p1, int p2)</computeroutput> available. The indices correspond to the ones of input points in <computeroutput>points</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of input points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>third_points</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of third points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator over output patch triangles, described by indices of points in <computeroutput>points</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_delaunay_triangulation" kindref="member">use_delaunay_triangulation</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, use the Delaunay triangulation facet search space  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="331" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="331" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1abea06a16b6a8a27e15bc461e506a85a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange1</type>
          </param>
          <param>
            <type>typename PointRange2</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole_polyline</definition>
        <argsstring>(const PointRange1 &amp;points, const PointRange2 &amp;third_points, OutputIterator out)</argsstring>
        <name>triangulate_hole_polyline</name>
        <param>
          <type>const PointRange1 &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const PointRange2 &amp;</type>
          <declname>third_points</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="374" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="374" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__hole__filling__grp_1gae92ca5b4cfbed061a9cd98388453fc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>typename CGAL_PMP_NP_TEMPLATE_PARAMETERS</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole_polyline</definition>
        <argsstring>(const PointRange &amp;points, OutputIterator out, const CGAL_PMP_NP_CLASS &amp;np)</argsstring>
        <name>triangulate_hole_polyline</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const CGAL_PMP_NP_CLASS &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>same as above but the range of third points is omitted. </para>        </briefdescription>
        <detaileddescription>
<para>They are not taken into account in the cost computation that leads the hole filling. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="391" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="391" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__hole_8h_1a25a8276a6696d2bd59aed82ece8494e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::triangulate_hole_polyline</definition>
        <argsstring>(const PointRange &amp;points, OutputIterator out)</argsstring>
        <name>triangulate_hole_polyline</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_hole.h" line="404" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_hole.h" bodystart="404" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gad3d03890515ae8103bd32a30a3486412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::isotropic_remeshing</definition>
        <argsstring>(const FaceRange &amp;faces, const double &amp;target_edge_length, PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>isotropic_remeshing</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>target_edge_length</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>remeshes a triangulated region of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>This operation sequentially performs edge splits, edge collapses, edge flips, tangential relaxation and projection to the initial surface to generate a smooth mesh with a prescribed edge length.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>. The descriptor types <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> and <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor</computeroutput> must be models of <computeroutput><ref refid="classHashable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Hashable</ref></computeroutput>. If <computeroutput>PolygonMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, and no <computeroutput>face_index_map</computeroutput> is given as a named parameter, then the internal one must be initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh with triangulated surface patches to be remeshed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faces</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of triangular faces defining one or several surface patches to be remeshed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_edge_length</parametername>
</parameternamelist>
<parameterdescription>
<para>the edge length that is targeted in the remeshed patch. If <computeroutput>0</computeroutput> is passed then only the edge-flip, tangential relaxation, and projection steps will be done. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>if constraints protection is activated, the constrained edges must not be longer than 4/3*<computeroutput>target_edge_length</computeroutput></para></simplesect>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="13" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>. Exact constructions kernels are not supported by this function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. Instance of a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_iterations" kindref="member">number_of_iterations</ref></para></entry><entry thead="no"><para>the number of iterations for the sequence of atomic operations performed (listed in the above description)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>. A constrained edge can be split or collapsed, but not flipped, nor its endpoints moved by smoothing. Sub-edges generated by splitting are set to be constrained. Note that patch boundary edges (i.e. incident to only one face in the range) are always considered as constrained edges.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_is_constrained_map" kindref="member">vertex_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each vertex of <computeroutput>pmesh</computeroutput>. A constrained vertex cannot be modified at all during remeshing  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_protect_constraints" kindref="member">protect_constraints</ref></para></entry><entry thead="no"><para>If <computeroutput>true</computeroutput>, the edges set as constrained in <computeroutput>edge_is_constrained_map</computeroutput> (or by default the boundary edges) are not split nor collapsed during remeshing. Note that around constrained edges that have their length higher than twice <computeroutput>target_edge_length</computeroutput>, remeshing will fail to provide good quality results. It can even fail to terminate because of cascading vertex insertions.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_collapse_constraints" kindref="member">collapse_constraints</ref></para></entry><entry thead="no"><para>If <computeroutput>true</computeroutput>, the edges set as constrained in <computeroutput>edge_is_constrained_map</computeroutput> (or by default the boundary edges) are collapsed during remeshing. This value is ignored if <computeroutput>protect_constraints</computeroutput> is true;  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_patch_map" kindref="member">face_patch_map</ref></para></entry><entry thead="no"><para>a property map with the patch id&apos;s associated to the faces of <computeroutput>faces</computeroutput>. Instance of a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput>. It gets updated during the remeshing process while new faces are created.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_number_of_relaxation_steps" kindref="member">number_of_relaxation_steps</ref></para></entry><entry thead="no"><para>the number of iterations of tangential relaxation that are performed at each iteration of the remeshing process  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_relax_constraints" kindref="member">relax_constraints</ref></para></entry><entry thead="no"><para>If <computeroutput>true</computeroutput>, the end vertices of the edges set as constrained in <computeroutput>edge_is_constrained_map</computeroutput> and boundary edges move along the constrained polylines they belong to.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_project" kindref="member">do_project</ref></para></entry><entry thead="no"><para>a boolean that sets whether vertices should be reprojected on the input surface after creation or displacement.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_projection_functor" kindref="member">projection_functor</ref></para></entry><entry thead="no"><para>A function object used to project input vertices (moved by the smoothing) and created vertices. It must have <computeroutput>Point_3 operator()(vertex_descriptor)</computeroutput>, <computeroutput>Point_3</computeroutput> being the value type of the vertex point map. If not provided, vertices are projected on the input surface mesh.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__meshing__grp_1gaafd017f4424c3942bfdcc93874c8f596" kindref="member">split_long_edges()</ref></computeroutput></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/remesh.h" line="140" column="1" bodyfile="CGAL/Polygon_mesh_processing/remesh.h" bodystart="140" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="remesh_8h_1a3af4a6c39966c2aaa2704e8eca508d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::isotropic_remeshing</definition>
        <argsstring>(const FaceRange &amp;faces, const double &amp;target_edge_length, PolygonMesh &amp;pmesh)</argsstring>
        <name>isotropic_remeshing</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>target_edge_length</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/remesh.h" line="279" column="1" bodyfile="CGAL/Polygon_mesh_processing/remesh.h" bodystart="279" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gaafd017f4424c3942bfdcc93874c8f596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename EdgeRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::split_long_edges</definition>
        <argsstring>(const EdgeRange &amp;edges, const double &amp;max_length, PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>split_long_edges</name>
        <param>
          <type>const EdgeRange &amp;</type>
          <declname>edges</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>splits the edges listed in <computeroutput>edges</computeroutput> into sub-edges that are not longer than the given threshold <computeroutput>max_length</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Note this function is useful to split constrained edges before calling <computeroutput><ref refid="group__PMP__meshing__grp_1gad3d03890515ae8103bd32a30a3486412" kindref="member">isotropic_remeshing()</ref></computeroutput> with protection of constraints activated (to match the constrained edge length required by the remeshing algorithm to be guaranteed to terminate)</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> that has an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EdgeRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edges</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of edges to be split if they are longer than given threshold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_length</parametername>
</parameternamelist>
<parameterdescription>
<para>the edge length above which an edge from <computeroutput>edges</computeroutput> is split into to sub-edges </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> described below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. Instance of a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>pmesh</computeroutput>. A constrained edge can be split, and the sub-edges are set to be constrained.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__meshing__grp_1gad3d03890515ae8103bd32a30a3486412" kindref="member">isotropic_remeshing()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/remesh.h" line="331" column="1" bodyfile="CGAL/Polygon_mesh_processing/remesh.h" bodystart="331" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="remesh_8h_1ac9d956ba233e5cb487a6f208d048f840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename EdgeRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::split_long_edges</definition>
        <argsstring>(const EdgeRange &amp;edges, const double &amp;max_length, PolygonMesh &amp;pmesh)</argsstring>
        <name>split_long_edges</name>
        <param>
          <type>const EdgeRange &amp;</type>
          <declname>edges</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/remesh.h" line="375" column="1" bodyfile="CGAL/Polygon_mesh_processing/remesh.h" bodystart="375" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="compute__normal_8h_1a295050ded896a9adb62c65aa10c93b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename PM</type>
          </param>
          <param>
            <type>typename VertexPointMap</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename GT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::sum_normals</definition>
        <argsstring>(const PM &amp;pmesh, typename boost::graph_traits&lt; PM &gt;::face_descriptor f, VertexPointMap vpmap, Vector &amp;sum, const GT &amp;traits)</argsstring>
        <name>sum_normals</name>
        <param>
          <type>const PM &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; PM &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>VertexPointMap</type>
          <declname>vpmap</declname>
        </param>
        <param>
          <type>Vector &amp;</type>
          <declname>sum</declname>
        </param>
        <param>
          <type>const GT &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="74" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="74" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__normal__grp_1gaa76c6d307b9d3e48cafacd7b77b2c043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Vector_3</ref></type>
        <definition>Vector_3 CGAL::Polygon_mesh_processing::compute_face_normal</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor f, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>compute_face_normal</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the outward unit vector normal to face <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the face on which the normal is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh containing <computeroutput>f</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the computed normal. The return type is a 3D vector type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or from the geometric traits class deduced from the point property map of <computeroutput>pmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="131" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="131" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__normal__grp_1ga129c8fb278c5f12158253cc488fdf6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename FaceNormalMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::compute_face_normals</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, FaceNormalMap fnm, const NamedParameters &amp;np)</argsstring>
        <name>compute_face_normals</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>FaceNormalMap</type>
          <declname>fnm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the outward unit vector normal for all faces of the polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceNormalMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput><ref refid="classKernel_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Vector_3</ref></computeroutput> as value type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fnm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map in which the normals are written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="183" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__normal__grp_1ga240ed0a1f5efbea472f998fada07e112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Vector_3</ref></type>
        <definition>Vector_3 CGAL::Polygon_mesh_processing::compute_vertex_normal</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor v, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>compute_vertex_normal</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the unit normal at vertex <computeroutput>v</computeroutput> as the average of the normals of incident faces. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex at which the normal is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh containing <computeroutput>v</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the computed normal. The return type is a 3D vector type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>pmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="227" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="227" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__normal__grp_1gad46aaf003999b2939f3f9e4f6fa58d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename VertexNormalMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::compute_vertex_normals</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, VertexNormalMap vnm, const NamedParameters &amp;np)</argsstring>
        <name>compute_vertex_normals</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>VertexNormalMap</type>
          <declname>vnm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the outward unit vector normal for all vertices of the polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexNormalMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and the return type of <computeroutput><ref refid="group__PMP__normal__grp_1ga240ed0a1f5efbea472f998fada07e112" kindref="member">compute_vertex_normal()</ref></computeroutput> as value type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vnm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map in which the normals are written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="301" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="301" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__normal__grp_1ga14a7730a996879ba6e7589dfeaccff82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename VertexNormalMap</type>
          </param>
          <param>
            <type>typename FaceNormalMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::compute_normals</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, VertexNormalMap vnm, FaceNormalMap fnm, const NamedParameters &amp;np)</argsstring>
        <name>compute_normals</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>VertexNormalMap</type>
          <declname>vnm</declname>
        </param>
        <param>
          <type>FaceNormalMap</type>
          <declname>fnm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the outward unit vector normal for all vertices and faces of the polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexNormalMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput><ref refid="classKernel_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Vector_3</ref></computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceNormalMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput><ref refid="classKernel_1_1Vector__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Vector_3</ref></computeroutput> as value type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vnm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map in which the vertex normals are written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fnm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map in which the face normals are written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/compute_normal.h" line="348" column="1" bodyfile="CGAL/Polygon_mesh_processing/compute_normal.h" bodystart="348" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1ga70d65044f8c7309c24ade88fa280124a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_face</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor f, PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_face</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates a single face of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgTriangulation2Summary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">2D Triangulation</ref> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>face to be triangulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to which the face to be triangulated belongs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the face has been triangulated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="422" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="422" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__faces_8h_1ac78f387c3fdcfb730938439971a35c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_face</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor f, PolygonMesh &amp;pmesh)</argsstring>
        <name>triangulate_face</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="444" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="444" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1gacaaff4d520500c530d9c3d5ebe2a0760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_faces</definition>
        <argsstring>(FaceRange face_range, PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_faces</name>
        <param>
          <type>FaceRange</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates given faces of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgTriangulation2Summary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">2D Triangulation</ref></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of faces to be triangulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be triangulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if all the faces have been triangulated. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__meshing__grp_1ga70d65044f8c7309c24ade88fa280124a" kindref="member">triangulate_face()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="475" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="475" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__faces_8h_1a3cad56bf8943854b1e5330cde2ce0b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_faces</definition>
        <argsstring>(FaceRange face_range, PolygonMesh &amp;pmesh)</argsstring>
        <name>triangulate_faces</name>
        <param>
          <type>FaceRange</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="497" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__meshing__grp_1ga1e9c8778755b2d1741f47736ba6e4b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_faces</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>triangulate_faces</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>triangulates all faces of a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgTriangulation2Summary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">2D Triangulation</ref> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be triangulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>a geometric traits class instance  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if all the faces have been triangulated. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__meshing__grp_1ga70d65044f8c7309c24ade88fa280124a" kindref="member">triangulate_face()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="522" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="522" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="triangulate__faces_8h_1a5dc7bd5d14a2066e0b993327d039cced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::triangulate_faces</definition>
        <argsstring>(PolygonMesh &amp;pmesh)</argsstring>
        <name>triangulate_faces</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/triangulate_faces.h" line="529" column="1" bodyfile="CGAL/Polygon_mesh_processing/triangulate_faces.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1gae1674775d9fecada7f25710f425cff3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::edge_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor h, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>edge_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the length of an edge of a given polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The edge is given by one of its halfedges, or the edge itself.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>one halfedge of the edge to compute the length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to which <computeroutput>h</computeroutput> belongs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the length of <computeroutput>h</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>pmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput>FT</computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__measure__grp_1ga8e778962db8e41dc145d70c5c4790e41" kindref="member">face_border_length()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="98" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="98" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a633674524c1e138634a562eaca5bafac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; PolygonMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;PolygonMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::edge_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor h, const PolygonMesh &amp;pmesh)</argsstring>
        <name>edge_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="116" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a4c9154e903b60f4181f7a259414265ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>GetGeomTraits&lt; PolygonMesh, NamedParameters &gt;::type::FT</type>
        <definition>GetGeomTraits&lt;PolygonMesh, NamedParameters&gt;::type::FT CGAL::Polygon_mesh_processing::edge_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor e, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>edge_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="126" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="126" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1aaf2b6c3aee93beed53552170bb19c08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; PolygonMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;PolygonMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::edge_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor e, const PolygonMesh &amp;pmesh)</argsstring>
        <name>edge_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="136" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga8e778962db8e41dc145d70c5c4790e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::face_border_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor h, const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>face_border_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the length of the border polyline that contains a given halfedge. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>a halfedge of the border polyline of which the length is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to which <computeroutput>h</computeroutput> belongs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the length of the sequence of border edges of <computeroutput>face(h, pmesh)</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>pmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__measure__grp_1gae1674775d9fecada7f25710f425cff3a" kindref="member">edge_length()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="180" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="180" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a455750b8861bdb1078db92842b905bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; PolygonMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;PolygonMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::face_border_length</definition>
        <argsstring>(typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor h, const PolygonMesh &amp;pmesh)</argsstring>
        <name>face_border_length</name>
        <param>
          <type>typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="198" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga766d9244b959bc25e419edb8b7c24842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; halfedge_descriptor, FT &gt;</type>
        <definition>std::pair&lt;halfedge_descriptor, FT&gt; CGAL::Polygon_mesh_processing::longest_border</definition>
        <argsstring>(const PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>longest_border</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>finds the longest border of a given triangulated surface and returns a halfedge that is part of this border and the length of this border. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>a pair composed of two members:<itemizedlist>
<listitem><para><computeroutput>first</computeroutput>: a halfedge on the longest border. The return type <computeroutput>halfedge_descriptor</computeroutput> is a halfedge descriptor. It is deduced from the graph traits corresponding to the type <computeroutput>PolygonMesh</computeroutput>.</para></listitem><listitem><para><computeroutput>second</computeroutput>: the length of the longest border The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>pmesh</computeroutput> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="243" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="243" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1aab1c71fa90609e563ae20be7d04578e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; PolygonMesh &gt;::halfedge_descriptor, typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; PolygonMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref> &gt;</type>
        <definition>std::pair&lt;typename boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor, typename CGAL::Kernel_traits&lt;typename property_map_value&lt;PolygonMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT&gt; CGAL::Polygon_mesh_processing::longest_border</definition>
        <argsstring>(const PolygonMesh &amp;pmesh)</argsstring>
        <name>longest_border</name>
        <param>
          <type>const PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="275" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="275" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga6a1d7a825c09490b1e6613295343482b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::face_area</definition>
        <argsstring>(typename boost::graph_traits&lt; TriangleMesh &gt;::face_descriptor f, const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>face_area</name>
        <param>
          <type>typename boost::graph_traits&lt; TriangleMesh &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the area of a face of a given triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the face of which the area is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to which <computeroutput>f</computeroutput> belongs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="pre"><para><computeroutput>f != boost::graph_traits&lt;TriangleMesh&gt;::null_face()</computeroutput></para></simplesect>
<simplesect kind="return"><para>the area of <computeroutput>f</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>tmesh</computeroutput>.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__area__grp_1gad5b975e731751609655f88d287f7385a" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">area()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="317" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="317" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a0f90a507ce65c7e35fd44b71fc1faeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; TriangleMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;TriangleMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::face_area</definition>
        <argsstring>(typename boost::graph_traits&lt; TriangleMesh &gt;::face_descriptor f, const TriangleMesh &amp;tmesh)</argsstring>
        <name>face_area</name>
        <param>
          <type>typename boost::graph_traits&lt; TriangleMesh &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="345" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="345" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga5f88e84a8dc21da40b194b8c05ed3b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::area</definition>
        <argsstring>(FaceRange face_range, const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>area</name>
        <param>
          <type>FaceRange</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the area of a range of faces of a given triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>range of <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of faces of which the area is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to which the faces of <computeroutput>face_range</computeroutput> belong </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>sum of face areas of <computeroutput>faces</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>tmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__measure__grp_1ga6a1d7a825c09490b1e6613295343482b" kindref="member">face_area()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="394" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="394" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a81e500af8890e067a25a43ff9e8527bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>GetGeomTraits&lt; TriangleMesh &gt;::type::FT</type>
        <definition>GetGeomTraits&lt;TriangleMesh&gt;::type::FT CGAL::Polygon_mesh_processing::area</definition>
        <argsstring>(FaceRange face_range, const TriangleMesh &amp;tmesh)</argsstring>
        <name>area</name>
        <param>
          <type>FaceRange</type>
          <declname>face_range</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="410" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="410" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga7e6384810b305b9df283bbf94fd9fd20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::area</definition>
        <argsstring>(const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>area</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the surface area of a triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the surface area of <computeroutput>tmesh</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>tmesh</computeroutput>.</para></simplesect>
<simplesect kind="warning"><para>This function involves a square root computation. If <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></computeroutput> does not have a <computeroutput><ref refid="group__PkgAlgebraicFoundations_1gab922269072ee9ee99ba8c541418b2e11" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">sqrt()</ref></computeroutput> operation, the square root computation will be done approximately.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__measure__grp_1ga6a1d7a825c09490b1e6613295343482b" kindref="member">face_area()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="452" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a7692e16cf56ffc6738b2a1b0bcb40fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; TriangleMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;TriangleMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::area</definition>
        <argsstring>(const TriangleMesh &amp;tmesh)</argsstring>
        <name>area</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="460" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="460" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="group__measure__grp_1ga85cebf8fbc7cb8930fd16aeee2878c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>FT</type>
        <definition>FT CGAL::Polygon_mesh_processing::volume</definition>
        <argsstring>(const TriangleMesh &amp;tmesh, const NamedParameters &amp;np)</argsstring>
        <name>volume</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>computes the volume of the domain bounded by a closed triangulated surface mesh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the closed triangulated surface mesh bounding the volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>tmesh</computeroutput> is closed</para></simplesect>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>the volume bounded by <computeroutput>tmesh</computeroutput>. The return type <computeroutput>FT</computeroutput> is a number type. It is either deduced from the <computeroutput>geom_traits</computeroutput> <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> if provided, or the geometric traits class deduced from the point property map of <computeroutput>tmesh</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="499" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="499" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="measure_8h_1a8dd888c26a7b211027cc8aa90c5c10b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; typename property_map_value&lt; TriangleMesh, <ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref> &gt;::type &gt;::<ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::FT</ref></type>
        <definition>CGAL::Kernel_traits&lt;typename property_map_value&lt;TriangleMesh, CGAL::vertex_point_t&gt;::type&gt;::Kernel::FT CGAL::Polygon_mesh_processing::volume</definition>
        <argsstring>(const TriangleMesh &amp;tmesh)</argsstring>
        <name>volume</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/measure.h" line="533" column="1" bodyfile="CGAL/Polygon_mesh_processing/measure.h" bodystart="533" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__repairing__grp_1gabdf5abc4d0f51055bf12afb00a128abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename HalfedgePairsRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::stitch_borders</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const HalfedgePairsRange &amp;hedge_pairs_to_stitch)</argsstring>
        <name>stitch_borders</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const HalfedgePairsRange &amp;</type>
          <declname>hedge_pairs_to_stitch</declname>
        </param>
        <briefdescription>
<para>Stitches together border halfedges in a polygon mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The halfedges to be stitched are provided in <computeroutput>hedge_pairs_to_stitch</computeroutput>. For each pair <computeroutput>p</computeroutput> in this vector, <computeroutput>p.second</computeroutput> and its opposite will be removed from <computeroutput>pmesh</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HalfedgePairsRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>std::pair&lt;boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor, boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor&gt;</computeroutput>, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be modified by stitching </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hedge_pairs_to_stitch</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>std::pair</computeroutput> of halfedges to be stitched together </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/stitch_borders.h" line="589" column="1" bodyfile="CGAL/Polygon_mesh_processing/stitch_borders.h" bodystart="589" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__repairing__grp_1ga15f047f56af2fee3e491120db4dc69a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::stitch_borders</definition>
        <argsstring>(PolygonMesh &amp;pmesh, const NamedParameters &amp;np)</argsstring>
        <name>stitch_borders</name>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Same as the other overload but the pairs of halfedges to be stitched are automatically found amongst all border halfedges. </para>        </briefdescription>
        <detaileddescription>
<para>Two border halfedges <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are set to be stitched if the points associated to the source and target vertices of <computeroutput>h1</computeroutput> are the same as those of the target and source vertices of <computeroutput>h2</computeroutput> respectively.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon mesh to be modified by stitching </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>pmesh</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>PolygonMesh</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_apply_per_connected_component" kindref="member">apply_per_connected_component</ref></para></entry><entry thead="no"><para>specifies if the borders should only be stitched inside their own connected component. In that case, a property map for <computeroutput>CGAL::face_index_t</computeroutput> should be either available as an internal property map to <computeroutput>pmesh</computeroutput> or provided as the <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameter</ref> <computeroutput>face_index_map</computeroutput>. If this is not the case, a default map will be created on the fly. <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref> value is <computeroutput>false</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>pmesh</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/stitch_borders.h" line="625" column="1" bodyfile="CGAL/Polygon_mesh_processing/stitch_borders.h" bodystart="625" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__orientation__grp_1gaadc5bac3072b11d2313e40043c729d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PointRange</type>
          </param>
          <param>
            <type>class PolygonRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::orient_polygon_soup</definition>
        <argsstring>(PointRange &amp;points, PolygonRange &amp;polygons)</argsstring>
        <name>orient_polygon_soup</name>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>polygons</declname>
        </param>
        <briefdescription>
<para>tries to consistently orient a soup of polygons in 3D space. </para>        </briefdescription>
        <detaileddescription>
<para>When it is not possible to produce a combinatorial manifold surface, some points are duplicated. Because a polygon soup does not have any connectivity (each point has as many occurrences as the number of polygons it belongs to), duplicating one point (or a pair of points) amounts to duplicate the polygon to which it belongs.</para><para>These points are either an endpoint of an edge incident to more than two polygons, an endpoint of an edge between two polygons with incompatible orientations (during the re-orientation process), or more generally a point <emphasis>p</emphasis> at which the intersection of an infinitesimally small ball centered at <emphasis>p</emphasis> with the polygons incident to it is not a topological disk.</para><para>The algorithm is described in <ref refid="citelist_1CITEREF_gueziec2001cutting" kindref="member">[1]</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose value type is the point type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value_type is a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value_type is <computeroutput>std::size_t</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>points of the soup of polygons. Some points might be pushed back to resolve non-manifold or non-orientability issues. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygons</parametername>
</parameternamelist>
<parameterdescription>
<para>each element in the vector describes a polygon using the index of the points in <computeroutput>points</computeroutput>. If needed the order of the indices of a polygon might be reversed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the orientation operation succeded. </para></simplesect>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if some points were duplicated, thus producing a self-intersecting polyhedron. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/orient_polygon_soup.h" line="480" column="1" bodyfile="CGAL/Polygon_mesh_processing/orient_polygon_soup.h" bodystart="480" bodyend="490"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Polygon_mesh_processing/orientation.h" line="44" column="1"/>
  </compounddef>
</doxygen>
