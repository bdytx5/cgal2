<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PMP__corefinement__grp" kind="group">
    <compoundname>PMP_corefinement_grp</compoundname>
    <title>Corefinement and Boolean Operations</title>
    <innerclass refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Default__visitor" prot="public">CGAL::Polygon_mesh_processing::Corefinement::Default_visitor</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__PMP__corefinement__grp_1ga3be2ae4b7de3a1d9288f7febfc27eb9a" prot="public" static="no">
        <name>Boolean_operation_type</name>
        <enumvalue id="group__PMP__corefinement__grp_1gga3be2ae4b7de3a1d9288f7febfc27eb9aa62e548063f4a686dd3cb4278cd9c9958" prot="public">
          <name>UNION</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PMP__corefinement__grp_1gga3be2ae4b7de3a1d9288f7febfc27eb9aa5bcf044ef1b847878d33e41ae379ba89" prot="public">
          <name>INTERSECTION</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PMP__corefinement__grp_1gga3be2ae4b7de3a1d9288f7febfc27eb9aaefc28e1c82c6c3a0e3a38406bc2b622a" prot="public">
          <name>TM1_MINUS_TM2</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PMP__corefinement__grp_1gga3be2ae4b7de3a1d9288f7febfc27eb9aac51d67b91c3423dee9f623f15ca767ac" prot="public">
          <name>TM2_MINUS_TM1</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PMP__corefinement__grp_1gga3be2ae4b7de3a1d9288f7febfc27eb9aae4e7f6c7463d6491533fed25b9b88f60" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Integer identifiers to refer to a particular Boolean operation in the function <computeroutput><ref refid="group__PMP__corefinement__grp_1ga3e7f0215600d9280d9ac90565504228c" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="150" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="150" bodyend="151"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::does_bound_a_volume</definition>
        <argsstring>(const TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>does_bound_a_volume</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>indicates if <computeroutput>tm</computeroutput> bounds a volume. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="index_1coref_def_subsec" kindref="member">Definitions</ref> for details.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>a closed triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>CGAL::is_closed(tm)</computeroutput></para></simplesect>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PMP__orientation__grp_1gafdbc256d06536f6aca2558bc1a0156e2" kindref="member">CGAL::Polygon_mesh_processing::orient_to_bound_a_volume()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="182" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="182" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga3e7f0215600d9280d9ac90565504228c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut0</type>
          </param>
          <param>
            <type>class NamedParametersOut1</type>
          </param>
          <param>
            <type>class NamedParametersOut2</type>
          </param>
          <param>
            <type>class NamedParametersOut3</type>
          </param>
        </templateparamlist>
        <type>cpp11::array&lt; bool, 4 &gt;</type>
        <definition>cpp11::array&lt;bool,4&gt; CGAL::Polygon_mesh_processing::corefine_and_compute_boolean_operations</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const cpp11::tuple&lt; NamedParametersOut0, NamedParametersOut1, NamedParametersOut2, NamedParametersOut3 &gt; &amp;nps_out)</argsstring>
        <name>corefine_and_compute_boolean_operations</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const cpp11::array&lt; boost::optional&lt; TriangleMesh *&gt;, 4 &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const cpp11::tuple&lt; NamedParametersOut0, NamedParametersOut1, NamedParametersOut2, NamedParametersOut3 &gt; &amp;</type>
          <declname>nps_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and for each triangle mesh <computeroutput>tm_out</computeroutput> passed as an optional in <computeroutput>output</computeroutput> different from <computeroutput>boost::none</computeroutput>, the triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the result of a particular Boolean operation between the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be put in the corresponding triangle mesh. </para>        </briefdescription>
        <detaileddescription>
<para>The positions of the meshes in the array <computeroutput>output</computeroutput> are specific to the Boolean operation to compute and <computeroutput>Corefinement::Boolean_operation_type</computeroutput> encodes and describes the ordering. Constructing the default array means that no Boolean operation will be done. Overwriting a default value will trigger the corresponding operation. In such a case, the address to a valid surface mesh must be provided. The optional named parameters for all output meshes are provided as a <computeroutput>tuple</computeroutput> and follow the same order as the array <computeroutput>output</computeroutput>. A call to <computeroutput><ref refid="group__PMP__corefinement__grp_1ga3e7f0215600d9280d9ac90565504228c" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput> with optional named parameters passed for output meshes should be done using <computeroutput>make_tuple()</computeroutput> as the types of named parameters are unspecified.</para><para>If <computeroutput>tm1</computeroutput> and/or <computeroutput>tm2</computeroutput> are part of the output surface meshes, they will be updated to contain the output (in-place operation), in any other case, the corresponding result will be inserted into the mesh without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut0</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the union of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the intersection of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the difference of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut3</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> for computing the difference of the volumes bounded by <computeroutput>tm2</computeroutput> and <computeroutput>tm1</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of output surface meshes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> should be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nps_out</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple of optional sequences of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> each among the ones listed below (<computeroutput>tm_out</computeroutput> being used to refer to the output surface mesh in <computeroutput>output</computeroutput> corresponding to a given named parameter sequence)</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para>an array filled as follows: for each operation computed, the position in the array will contain <computeroutput>true</computeroutput> iff the output surface mesh is manifold, and it is put in the surface mesh at the same position as in <computeroutput>output</computeroutput>. Note that if an output surface mesh also was an input mesh but the output operation was generating a non-manifold mesh, the surface mesh will only be corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="352" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="352" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1gad7e1741a7ce41a5846cf86494982ca8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_union</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_union</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the union of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="645" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="645" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga240e5df984c7d44741a7031e38203dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_intersection</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_intersection</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the intersection of the volumes bounded by <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="677" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="677" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1gac5a853c33c4b0a9da9403c9b191caa44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
          <param>
            <type>class NamedParametersOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::corefine_and_compute_difference</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, TriangleMesh &amp;tm_out, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2, const NamedParametersOut &amp;np_out)</argsstring>
        <name>corefine_and_compute_difference</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm_out</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <param>
          <type>const NamedParametersOut &amp;</type>
          <declname>np_out</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> and puts in <computeroutput>tm_out</computeroutput> a triangulated surface mesh <ref refid="index_1coref_def_subsec" kindref="member">bounding </ref> the volume bounded by <computeroutput>tm1</computeroutput> minus the volume bounded by <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm_out</computeroutput> is one of the input surface meshes, it will be updated to contain the output (in-place operation), otherwise the result will be inserted into <computeroutput>tm_out</computeroutput> without clearing it first. <simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersOut</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm_out</parametername>
</parameternamelist>
<parameterdescription>
<para>output surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be set after the corefinement is done.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np_out</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm_out</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm_out</computeroutput>. An edge of <computeroutput>tm_out</computeroutput> is constrained if it is on the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>, or if the edge corresponds to a constrained edge in <computeroutput>tm1</computeroutput> or <computeroutput>tm2</computeroutput>.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold and is put into <computeroutput>tm_out</computeroutput>. If <computeroutput>false</computeroutput> is returned and if <computeroutput>tm_out</computeroutput> is one of the input surface meshes, then <computeroutput>tm_out</computeroutput> is only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="709" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="709" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga6447dee822aaf92016f34512ce0b3456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::corefine</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>corefine</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para><ref refid="index_1coref_def_subsec" kindref="member">corefines </ref> <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>For each input triangulated surface mesh, if a constrained edge is provided, intersection edges will be marked as constrained. If an edge that was marked as constrained is split, its sub-edges will be marked as constrained as well.</para><para><simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_edge_is_constrained_map" kindref="member">edge_is_constrained_map</ref></para></entry><entry thead="no"><para>a property map containing the constrained-or-not status of each edge of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces (<computeroutput>np1</computeroutput> only)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="773" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="773" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga30082762ba2d947cba304e2884d96a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::clip</definition>
        <argsstring>(TriangleMesh &amp;tm, TriangleMesh &amp;clipper, const NamedParameters1 &amp;np_tm, const NamedParameters2 &amp;np_c)</argsstring>
        <name>clip</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>clipper</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np_tm</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np_c</declname>
        </param>
        <briefdescription>
<para>clips <computeroutput>tm</computeroutput> by keeping the part that is inside the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>clipper</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm</computeroutput> is closed, the clipped part can be closed too if the named parameter <computeroutput>clip_volume</computeroutput> is set to <computeroutput>true</computeroutput>. See subsection <ref refid="index_1coref_clip" kindref="member">Clipping</ref> for more details. <simplesect kind="attention"><para>With the current implementation, <computeroutput>clipper</computeroutput> will be modified (refined with the intersection with <computeroutput>tm</computeroutput>).</para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(clipper)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__corefinement__grp_1ga808a0177bf30833d2c1e390e533fec7f" kindref="member"><computeroutput>CGAL::Polygon_mesh_processing::does_bound_a_volume(clipper)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clipper</parametername>
</parameternamelist>
<parameterdescription>
<para>triangulated surface mesh used to clip <computeroutput>tm</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_tm</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np_c</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput> (<computeroutput>clipper</computeroutput>). If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing the index of each face of <computeroutput>tm</computeroutput> (<computeroutput>clipper</computeroutput>). Note that if the property map is writable, the indices of the faces of <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> will be set after the refining <computeroutput>tm</computeroutput> with the intersection with <computeroutput>plane</computeroutput>.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, the set of triangles closed to the intersection of <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> will be checked for self-intersections and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_clip_volume" kindref="member">clip_volume</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> and <computeroutput>tm</computeroutput> is closed, the clipping will be done on the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>tm</computeroutput> rather than on its surface (i.e. <computeroutput>tm</computeroutput> will be kept closed).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_compact_clipper" kindref="member">use_compact_clipper</ref></para></entry><entry thead="no"><para>if <computeroutput>false</computeroutput> and <computeroutput>clip_volume</computeroutput> is <computeroutput>false</computeroutput> and <computeroutput>tm</computeroutput> is open, the parts of <computeroutput>tm</computeroutput> coplanar with <computeroutput>clipper</computeroutput> will not be part of the output.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold. If <computeroutput>false</computeroutput> is returned <computeroutput>tm</computeroutput> and <computeroutput>clipper</computeroutput> are only corefined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/clip.h" line="443" column="1" bodyfile="CGAL/Polygon_mesh_processing/clip.h" bodystart="443" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga5bf228a516a46f6d1c80937067a17f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::clip</definition>
        <argsstring>(TriangleMesh &amp;tm, const Plane_3 &amp;plane, const NamedParameters &amp;np)</argsstring>
        <name>clip</name>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const Plane_3 &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>clips <computeroutput>tm</computeroutput> by keeping the part that is on the negative side of <computeroutput>plane</computeroutput> (side opposite to its normal vector). </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tm</computeroutput> is closed, the clipped part can be closed too if the named parameter <computeroutput>clip_volume</computeroutput> is set to <computeroutput>true</computeroutput>. See subsection <ref refid="index_1coref_clip" kindref="member">Clipping</ref> for more details.</para><para><simplesect kind="note"><para>In the current implementation it is not possible to set the vertex point map and the default will be used. </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. If <computeroutput>TriangleMesh</computeroutput> has an internal property map for <computeroutput>CGAL::face_index_t</computeroutput>, as a named parameter, then it must be initialized. An internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plane</parametername>
</parameternamelist>
<parameterdescription>
<para>plane whose negative side defines the half-space to intersect <computeroutput>tm</computeroutput> with. <computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref></computeroutput> is the plane type for the same CGAL kernel as the point of the vertex point map of <computeroutput>tm</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_visitor" kindref="member">visitor</ref></para></entry><entry thead="no"><para>a class model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that is used to track the creation of new faces.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, the set of triangles closed to the intersection of <computeroutput>tm</computeroutput> and <computeroutput>plane</computeroutput> will be checked for self-intersections and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_clip_volume" kindref="member">clip_volume</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput> and <computeroutput>tm</computeroutput> is closed, the clipping will be done on the volume <ref refid="index_1coref_def_subsec" kindref="member">bounded </ref> by <computeroutput>tm</computeroutput> rather than on its surface (i.e. <computeroutput>tm</computeroutput> will be kept closed).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_use_compact_clipper" kindref="member">use_compact_clipper</ref></para></entry><entry thead="no"><para>if <computeroutput>false</computeroutput> and <computeroutput>clip_volume</computeroutput> is <computeroutput>false</computeroutput> and <computeroutput>tm</computeroutput> is open, the parts of <computeroutput>tm</computeroutput> coplanar with <computeroutput>plane</computeroutput> will not be part of the output. </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the output surface mesh is manifold. If <computeroutput>false</computeroutput> is returned <computeroutput>tm</computeroutput> is only refined by the intersection with <computeroutput>plane</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/clip.h" line="520" column="1" bodyfile="CGAL/Polygon_mesh_processing/clip.h" bodystart="520" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__corefinement__grp_1ga09e9c6524834aebd2b2dcd5c0031d1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::surface_intersection</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, OutputIterator polyline_output, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>surface_intersection</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>polyline_output</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>computes the intersection of triangles of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The output is a set of polylines with all vertices but endpoints being of degree 2.</para><para><simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm1)</computeroutput> </ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="group__PMP__intersection__grp_1ga0beba25d03a16010b20e2c9b6771cd12" kindref="member"><computeroutput>!CGAL::Polygon_mesh_processing::does_self_intersect(tm2)</computeroutput> </ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> and <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator in which <computeroutput>std::vector</computeroutput> of points can be put. The point type is the one from the vertex property map</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second input triangulated surface mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline_output</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator of polylines. Each polyline will be given as a vector of points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>a property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (<computeroutput>tm2</computeroutput>). The two property map types must be the same.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_throw_on_self_intersection" kindref="member">throw_on_self_intersection</ref></para></entry><entry thead="no"><para>if <computeroutput>true</computeroutput>, for each input triangle mesh, the set of triangles close to the intersection of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput> will be checked for self-intersection and <computeroutput>CGAL::Polygon_mesh_processing::Corefinement::Self_intersection_exception</computeroutput> will be thrown if at least one is found (<computeroutput>np1</computeroutput> only).  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1664" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1664" bodyend="1692"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to corefine triangulated surface meshes and compute triangulated surface meshes of the union, difference and intersection of the bounded volumes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
