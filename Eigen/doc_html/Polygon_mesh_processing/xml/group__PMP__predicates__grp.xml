<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PMP__predicates__grp" kind="group">
    <compoundname>PMP_predicates_grp</compoundname>
    <title>Intersection Detection Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga2cb4019111658999234b3e377e3eabcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolylineRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const PolylineRange &amp;polylines1, const PolylineRange &amp;polylines2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines1</declname>
        </param>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any segment of any polyline of <computeroutput>polylines1</computeroutput> intersects any segment of any polyline of <computeroutput>polylines2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolylineRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type must be from a 3D point from a CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polylines1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polylines2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1095" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1095" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga202575b5d28a41b7246e60e1be95a1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Polyline</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const Polyline &amp;polyline1, const Polyline &amp;polyline2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline1</declname>
        </param>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any segment of <computeroutput>polyline1</computeroutput> intersects any segment of <computeroutput>polyline2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type must be from a 3D point type from CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polyline1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first polyline to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second polyline to check for intersections. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1137" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1137" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga2ee87a0a4368a21654ee2817b93c85e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class NamedParameters1</type>
          </param>
          <param>
            <type>class NamedParameters2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm1, const TriangleMesh &amp;tm2, const NamedParameters1 &amp;np1, const NamedParameters2 &amp;np2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm1</computeroutput> intersects any face of <computeroutput>tm2</computeroutput>, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>do_overlap_test_of_bounded_sides</computeroutput> is set to <computeroutput>true</computeroutput>, the overlap of bounded sides are tested as well. In that case, the meshes must be closed. This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm1)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm2)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>!do_overlap_test_of_bounded_sides || CGAL::is_closed(tm1)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>!do_overlap_test_of_bounded_sides || CGAL::is_closed(tm2)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm1</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm2</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm1</computeroutput>, among the ones listed below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for <computeroutput>tm2</computeroutput>, among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm1</computeroutput> (tm2<computeroutput>). \attention The two property maps must have the same</computeroutput>value_type`. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_overlap_test_of_bounded_sides" kindref="member">do_overlap_test_of_bounded_sides</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> tests also the overlap of the bounded sides of <computeroutput>tm1</computeroutput> and <computeroutput>tm2</computeroutput>. If <computeroutput>false</computeroutput> (default), only the intersection of surface triangles are tested.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1203" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1203" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1gad4355ff17a9101116ebd4e568d84ff07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class PolylineRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const PolylineRange &amp;polylines, const NamedParameters &amp;np)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const PolylineRange &amp;</type>
          <declname>polylines</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm</computeroutput> and any segment of any polyline of <computeroutput>polylines</computeroutput> intersects, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>. <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolylineRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type of the range must be the same as the value type of the vertex point map. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polylines</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of polylines to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tm</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1284" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1284" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga9bea2a4c7f1f32870c16cef0a73ddc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class Polyline</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Polygon_mesh_processing::do_intersect</definition>
        <argsstring>(const TriangleMesh &amp;tm, const Polyline &amp;polyline, const NamedParameters &amp;np)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const Polyline &amp;</type>
          <declname>polyline</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if any face of <computeroutput>tm</computeroutput> and any segment of <computeroutput>polyline</computeroutput> intersects, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>. <simplesect kind="pre"><para><computeroutput>CGAL::is_triangle_mesh(tm)</computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of points. The point type of the range must be the same as the value type of the vertex point map. A polyline is defined as a sequence of points, each pair of contiguous points defines a segment of the polyline. If the first and last points of the polyline are identical, the polyline is closed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulated surface mesh to check for intersections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polyline</parametername>
</parameternamelist>
<parameterdescription>
<para>the polyline to check for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of <computeroutput>tn</computeroutput>. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1340" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1340" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="group__PMP__predicates__grp_1ga1ff63ec6e762d45ea5775bf7b49f9270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMeshRange</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
          <param>
            <type>class NamedParametersRange</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Polygon_mesh_processing::intersecting_meshes</definition>
        <argsstring>(const TriangleMeshRange &amp;range, OutputIterator out, NamedParameters np, NamedParametersRange nps)</argsstring>
        <name>intersecting_meshes</name>
        <param>
          <type>const TriangleMeshRange &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <param>
          <type>NamedParametersRange</type>
          <declname>nps</declname>
        </param>
        <briefdescription>
<para>detects and reports all the pairs of meshes intersecting in a range of triangulated surface meshes. </para>        </briefdescription>
        <detaileddescription>
<para>A pair of meshes intersecting is put in the output iterator <computeroutput>out</computeroutput> as a <computeroutput>std::pair&lt;std::size_t, std::size_t&gt;</computeroutput>, each index refering to the index of the triangle mesh in the input range. If <computeroutput>do_overlap_test_of_bounded_sides</computeroutput> is <computeroutput>true</computeroutput>, the overlap of bounded sides are tested as well. In that case, the meshes must be closed. This function depends on the package <ref refid="packages_1PkgBoxIntersectionDSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intersecting Sequences of dD Iso-oriented Boxes</ref>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMeshRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of triangulated surface meshes model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator in which <computeroutput>std::pair&lt;std::size_t, std::size_t&gt;</computeroutput> can be put. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__pmp__namedparameters" kindref="compound">Named Parameters for Polygon Mesh Processing</ref> for the algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParametersRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of named parameters for the meshes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of triangulated surface meshes to be checked for intersections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator used to collect pairs of intersecting meshes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence named parameters among the one listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_geom_traits" kindref="member">geom_traits</ref></para></entry><entry thead="no"><para>an instance of a geometric traits class, model of <computeroutput><ref refid="classPMPSelfIntersectionTraits" kindref="compound">PMPSelfIntersectionTraits</ref></computeroutput>. The default value for <computeroutput>geom_traits</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt;Point&gt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>, where <computeroutput>Point</computeroutput> is the value type of the vertex point map of the meshes.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_do_overlap_test_of_bounded_sides" kindref="member">do_overlap_test_of_bounded_sides</ref></para></entry><entry thead="no"><para>if set to <computeroutput>true</computeroutput> reports also overlap of bounded sides of meshes. If <computeroutput>false</computeroutput> (default), only the intersection of surface triangles are tested.  </para></entry></row>
</table>
</para></listitem>
</variablelist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nps</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional range of <computeroutput>vertex_point_map</computeroutput> named parameters containing the <computeroutput>VertexPointMap</computeroutput> of each mesh in <computeroutput>range</computeroutput>, in the same order. If this parameter is omitted, then an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available for every mesh in the range. All the vertex point maps must be of the same type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="group__pmp__namedparameters_1PMP_vertex_point_map" kindref="member">vertex_point_map</ref></para></entry><entry thead="no"><para>the property map with the points associated to the vertices of a mesh. If this parameter is omitted, an internal property map for <computeroutput>CGAL::vertex_point_t</computeroutput> must be available in the triangle mesh type used in the range  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/intersection.h" line="1568" column="1" bodyfile="CGAL/Polygon_mesh_processing/intersection.h" bodystart="1568" bodyend="1605"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to detect intersections. </para>    </briefdescription>
    <detaileddescription>
<para>Note that those functions will be exact as long as the underlying do-intersect predicates used are exact. In practice, it means that the 3D point type used must come from a CGAL kernel with exact predicates. </para>    </detaileddescription>
  </compounddef>
</doxygen>
