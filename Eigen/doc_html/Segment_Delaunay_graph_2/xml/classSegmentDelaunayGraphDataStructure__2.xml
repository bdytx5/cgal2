<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSegmentDelaunayGraphDataStructure__2" kind="class" language="C++" prot="public">
    <compoundname>SegmentDelaunayGraphDataStructure_2</compoundname>
    <includes local="no">Concepts/SegmentDelaunayGraphDataStructure_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Modification</header>
      <memberdef kind="function" id="classSegmentDelaunayGraphDataStructure__2_1a820d668235024490b1206d539a0a0b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle SegmentDelaunayGraphDataStructure_2::join_vertices</definition>
        <argsstring>(Face_handle f, int i)</argsstring>
        <name>join_vertices</name>
        <param>
          <type>Face_handle</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Joins the vertices that are endpoints of the edge <computeroutput>(f,i)</computeroutput> and returns a vertex handle to common vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SegmentDelaunayGraphDataStructure_2.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSegmentDelaunayGraphDataStructure__2_1a15a4b68515faad9bcde097f47f121c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::tuples::tuple&lt; Vertex_handle, Vertex_handle, Face_handle, Face_handle &gt;</type>
        <definition>boost::tuples::tuple&lt;Vertex_handle, Vertex_handle, Face_handle, Face_handle&gt; SegmentDelaunayGraphDataStructure_2::split_vertex</definition>
        <argsstring>(Vertex_handle v, Face_handle f1, Face_handle f2)</argsstring>
        <name>split_vertex</name>
        <param>
          <type>Vertex_handle</type>
          <declname>v</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
<para>Splits the vertex <computeroutput>v</computeroutput> into two vertices <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The common faces <computeroutput>f</computeroutput> and <computeroutput>g</computeroutput> of <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput> are created after (in the counter-clockwise sense) the faces <computeroutput>f1</computeroutput> and <computeroutput>f2</computeroutput>. The 4-tuple <computeroutput>(v1,v2,f,g)</computeroutput> is returned (see <ref refid="classSegmentDelaunayGraphDataStructure__2_1fig__figsdgdssplitjoin" kindref="member">fig__figsdgdssplitjoin</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SegmentDelaunayGraphDataStructure_2.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classSegmentDelaunayGraphDataStructure__2" kindref="compound">SegmentDelaunayGraphDataStructure_2</ref></computeroutput> refines the concept <computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Apollonius_graph_2.tag">ApolloniusGraphDataStructure_2</ref></computeroutput>. In addition it provides two methods for the merging of two vertices joined by an edge of the data structure, and the splitting of a vertex into two. The method that merges two vertices, called <computeroutput><ref refid="classSegmentDelaunayGraphDataStructure__2_1a820d668235024490b1206d539a0a0b47" kindref="member">join_vertices()</ref></computeroutput> identifies the two vertices and deletes their common two faces. The method that splits a vertex, called <computeroutput><ref refid="classSegmentDelaunayGraphDataStructure__2_1a15a4b68515faad9bcde097f47f121c74" kindref="member">split_vertex()</ref></computeroutput> introduces a new vertex that shares an edge and two faces with the old vertex (see figure below). Notice that the <computeroutput><ref refid="classSegmentDelaunayGraphDataStructure__2_1a820d668235024490b1206d539a0a0b47" kindref="member">join_vertices()</ref></computeroutput> and <computeroutput><ref refid="classSegmentDelaunayGraphDataStructure__2_1a15a4b68515faad9bcde097f47f121c74" kindref="member">split_vertex()</ref></computeroutput> operations are complementary, in the sense that one reverses the action of the other. </para>    </briefdescription>
    <detaileddescription>
<para> <anchor id="classSegmentDelaunayGraphDataStructure__2_1figsdgdssplitjoin"/></para><para><anchor id="classSegmentDelaunayGraphDataStructure__2_1fig__figsdgdssplitjoin"/><image type="html" name="sdg-join_split.png"></image>
 <image type="latex" name="sdg-join_split.png" width="15cm"></image>
  <ref refid="classSegmentDelaunayGraphDataStructure__2_1fig__figsdgdssplitjoin" kindref="member">fig__figsdgdssplitjoin</ref> The join and split operations. Left to right: The vertex <computeroutput>v</computeroutput> is split into <formula id="11">$ v_1$</formula> and <formula id="12">$ v_2$</formula>. The faces <formula id="13">$ f$</formula> and <formula id="14">$ g$</formula> are inserted after <formula id="15">$ f_1$</formula> and <formula id="16">$ f_2$</formula>, respectively, in the counter-clockwise sense. The vertices <formula id="11">$ v_1$</formula>, <formula id="12">$ v_2$</formula> and the faces <formula id="13">$ f$</formula> and <formula id="14">$ g$</formula> are returned as a <computeroutput>boost::tuple</computeroutput> in that order. Right to left: The edge <computeroutput>(f,i)</computeroutput> is collapsed, and thus the vertices <formula id="11">$ v_1$</formula> and <formula id="12">$ v_2$</formula> are joined. The vertex <computeroutput>v</computeroutput> is returned.  <linebreak/>
</para><para>We only describe the additional requirements with respect to the <computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Apollonius_graph_2.tag">ApolloniusGraphDataStructure_2</ref></computeroutput> concept.</para><para><xrefsect id="refines_1_refines000001"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Apollonius_graph_2.tag">ApolloniusGraphDataStructure_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/TDS_2.tag">CGAL::Triangulation_data_structure_2</ref>&lt;Vb,Fb&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/TDS_2.tag">TriangulationDataStructure_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Apollonius_graph_2.tag">ApolloniusGraphDataStructure_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSegmentDelaunayGraphVertexBase__2" kindref="compound">SegmentDelaunayGraphVertexBase_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">TriangulationFaceBase_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/SegmentDelaunayGraphDataStructure_2.h" line="45" column="1" bodyfile="Concepts/SegmentDelaunayGraphDataStructure_2.h" bodystart="45" bodyend="72"/>
    <listofallmembers>
      <member refid="classSegmentDelaunayGraphDataStructure__2_1a820d668235024490b1206d539a0a0b47" prot="public" virt="non-virtual"><scope>SegmentDelaunayGraphDataStructure_2</scope><name>join_vertices</name></member>
      <member refid="classSegmentDelaunayGraphDataStructure__2_1a15a4b68515faad9bcde097f47f121c74" prot="public" virt="non-virtual"><scope>SegmentDelaunayGraphDataStructure_2</scope><name>split_vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
