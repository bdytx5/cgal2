<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgSurfaceMesher3FunctionsMakeMesh" kind="group">
    <compoundname>PkgSurfaceMesher3FunctionsMakeMesh</compoundname>
    <title>Mesh Generation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SurfaceMeshC2T3</type>
          </param>
          <param>
            <type>class Surface</type>
          </param>
          <param>
            <type>class FacetsCriteria</type>
          </param>
          <param>
            <type>class Tag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_surface_mesh</definition>
        <argsstring>(SurfaceMeshC2T3 &amp;c2t3, Surface surface, FacetsCriteria criteria, Tag tag, int initial_number_of_points=20)</argsstring>
        <name>make_surface_mesh</name>
        <param>
          <type>SurfaceMeshC2T3 &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>Surface</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>FacetsCriteria</type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>Tag</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_number_of_points</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>In the first overloaded version of of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput>, the surface type is given as template parameter (<computeroutput>Surface</computeroutput>) and the <computeroutput>surface</computeroutput> to be meshed is passed as parameter to the mesh generator. </para>        </briefdescription>
        <detaileddescription>
<para>In that case the surface mesh generator traits type is automatically generated form the surface type by an auxiliary class called the <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref></computeroutput>.</para><para>The first overloaded version can be used whenever the surface type either provides a nested type <computeroutput>Surface::Surface_mesher_traits_3</computeroutput> that is a model of <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound">SurfaceMeshTraits_3</ref></computeroutput> or is a surface type for which a specialization of the traits generator <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref>&lt;Surface&gt;</computeroutput> is provided. Currently, the library provides partial specializations of <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref>&lt;Surface&gt;</computeroutput> for implicit surfaces (<computeroutput><ref refid="classCGAL_1_1Implicit__surface__3" kindref="compound">Implicit_surface_3</ref>&lt;Traits, Function&gt;</computeroutput>) and gray level images (<computeroutput><ref refid="classCGAL_1_1Gray__level__image__3" kindref="compound">Gray_level_image_3</ref>&lt;FT, Point&gt;</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/make_surface_mesh.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga6ebf84d47dd47772c1bee10efeeaa163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SurfaceMeshC2T3</type>
          </param>
          <param>
            <type>class SurfaceMeshTraits</type>
          </param>
          <param>
            <type>class FacetsCriteria</type>
          </param>
          <param>
            <type>class Tag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_surface_mesh</definition>
        <argsstring>(SurfaceMeshC2T3 &amp;c2t3, SurfaceMeshTraits::Surface_3 surface, SurfaceMeshTraits traits, FacetsCriteria criteria, Tag tag, int initial_number_of_points=20)</argsstring>
        <name>make_surface_mesh</name>
        <param>
          <type>SurfaceMeshC2T3 &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>SurfaceMeshTraits::Surface_3</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>SurfaceMeshTraits</type>
          <declname>traits</declname>
        </param>
        <param>
          <type>FacetsCriteria</type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>Tag</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_number_of_points</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>In the second overloaded version of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput>, the surface mesh generator traits type is provided by the template parameter <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound">SurfaceMeshTraits_3</ref></computeroutput> and the surface type is obtained from this traits type. </para>        </briefdescription>
        <detaileddescription>
<para>Both the surface and the traits are passed to the mesh generator as arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/make_surface_mesh.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput> is a surface mesh generator, that is a function to build a two dimensional mesh approximating a surface. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SurfaceMeshC2T3</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput>, a data structure able to represent a two dimensional complex embedded in a three dimensional triangulation. The argument <computeroutput>c2t3</computeroutput> of type <computeroutput>SurfaceMeshC2T3</computeroutput>, passed by reference to the surface mesh generator, is used to maintain the current approximating mesh and it stores the final mesh at the end of the procedure. The type <computeroutput>SurfaceMeshC2T3</computeroutput> is in particular required to provide a type <computeroutput>SurfaceMeshC2T3::Triangulation_3</computeroutput> for the three dimensional triangulation embedding the surface mesh. The vertex and cell base classes of the triangulation <computeroutput>SurfaceMeshC2T3::Triangulation_3</computeroutput> are required to be models of the concepts <computeroutput><ref refid="classSurfaceMeshVertexBase__3" kindref="compound">SurfaceMeshVertexBase_3</ref></computeroutput> and <computeroutput><ref refid="classSurfaceMeshCellBase__3" kindref="compound">SurfaceMeshCellBase_3</ref></computeroutput> respectively.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Surface</parametername>
</parameternamelist>
<parameterdescription>
<para>stands for the surface type. This type has to be a model of the concept <computeroutput><ref refid="classSurface__3" kindref="compound">Surface_3</ref></computeroutput>. <linebreak/>
 The knowledge on the surface, required by the surface mesh generator is encapsulated in a traits class. Actually, the mesh generator accesses the surface to be meshed through this traits class only. The traits class is required to be a model of the concept <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound">SurfaceMeshTraits_3</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FacetsCriteria</parametername>
</parameternamelist>
<parameterdescription>
<para>has to be a model of the concept <computeroutput><ref refid="classSurfaceMeshFacetsCriteria__3" kindref="compound">SurfaceMeshFacetsCriteria_3</ref></computeroutput>. The argument of type <computeroutput>FacetsCriteria</computeroutput> passed to the surface mesh generator specifies the size and shape requirements on the output surface mesh.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Tag</parametername>
</parameternamelist>
<parameterdescription>
<para>is a tag whose type affects the behavior of the meshing algorithm. The function <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput> has specialized versions for the following tag types: <linebreak/>
<itemizedlist>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Manifold__tag" kindref="compound">Manifold_tag</ref></computeroutput>: the output mesh is guaranteed to be a manifold surface without boundary.</para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Manifold__with__boundary__tag" kindref="compound">Manifold_with_boundary_tag</ref></computeroutput>: the output mesh is guaranteed to be manifold but may have boundaries.</para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Non__manifold__tag" kindref="compound">Non_manifold_tag</ref></computeroutput>: the algorithm relies on the given criteria and guarantees nothing else.</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
The Delaunay refinement process is started with an initial set of points which is the union of two sets: the set of vertices in the initial triangulation pointed to by the <computeroutput>c2t3</computeroutput> argument and a set of points provided by the traits class. The optional parameter <computeroutput>initial_number_of_points</computeroutput> allows to monitor the number of points in this second set. (This parameter is passed to the <computeroutput>operator()</computeroutput> of the constructor object <computeroutput>Construct_initial_points</computeroutput> in the traits class.) The meshing algorithm requires that the initial set of points includes at least one point on each connected components of the surface to be meshed.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSurfaceMeshCellBase__3" kindref="compound">SurfaceMeshCellBase_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSurfaceMeshVertexBase__3" kindref="compound">SurfaceMeshVertexBase_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSurface__3" kindref="compound">Surface_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSurfaceMeshFacetsCriteria__3" kindref="compound">SurfaceMeshFacetsCriteria_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__default__triangulation__3" kindref="compound">Surface_mesh_default_triangulation_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
