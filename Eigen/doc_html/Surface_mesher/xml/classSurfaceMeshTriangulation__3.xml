<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSurfaceMeshTriangulation__3" kind="class" language="C++" prot="public">
    <compoundname>SurfaceMeshTriangulation_3</compoundname>
    <includes local="no">Concepts/SurfaceMeshTriangulation_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para><emphasis>Vertices</emphasis> and <emphasis>cells</emphasis> of the triangulation are manipulated via handles, which support the two dereference operators and <computeroutput>operator-&gt;</computeroutput>.</para><para>The following iterators allow one to visit all finite vertices, edges and facets of the triangulation. </para></description>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>The point type. </para>        </briefdescription>
        <detaileddescription>
<para>It must be <ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref>, <ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref> and <ref refid="classAssignable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Assignable</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="44" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
<para><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref> to a data representing a <emphasis>vertex</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Vertex_handle</computeroutput> must be a model of <computeroutput><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref></computeroutput> and its <emphasis>value type</emphasis> must be model of <computeroutput>TriangulationDataStructure_3::Vertex</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="51" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Cell_handle</definition>
        <argsstring></argsstring>
        <name>Cell_handle</name>
        <briefdescription>
<para><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref> to a data representing a <emphasis>cell</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Cell_handle</computeroutput> must be a model of <computeroutput><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref></computeroutput> and its <emphasis>value type</emphasis> must be model of <computeroutput>TriangulationDataStructure_3::Cell</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="58" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a0bcb2899dd059633ae57c0190e3e9cf1" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Triple" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Triple</ref>&lt; <ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref>, int, int &gt;</type>
        <definition>typedef CGAL::Triple&lt;Cell_handle, int, int&gt; SurfaceMeshTriangulation_3::Edge</definition>
        <argsstring></argsstring>
        <name>Edge</name>
        <briefdescription>
<para>The edge type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="63" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1acd04a7c98fb4b4ff0fbbe443159d256f" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref>, int &gt;</type>
        <definition>typedef std::pair&lt;Cell_handle, int&gt; SurfaceMeshTriangulation_3::Facet</definition>
        <argsstring></argsstring>
        <name>Facet</name>
        <briefdescription>
<para>The facet type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="68" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a2fad8b9533036072661ee6d6865b5caa" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Finite_vertices_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_vertices_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over finite vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="73" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a2105fc98cd8a2c5039596a4863c99290" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Finite_edges_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_edges_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over finite edges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="78" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a0b4b613031663745ed5d3f23984de68b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Finite_facets_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_facets_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over finite facets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="83" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSurfaceMeshTriangulation__3_1a46ae2c9e5429ae6977ae08b1bb31c125" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type SurfaceMeshTriangulation_3::Geom_traits</definition>
        <argsstring></argsstring>
        <name>Geom_traits</name>
        <briefdescription>
<para>The geometric traits class. </para>        </briefdescription>
        <detaileddescription>
<para>Must be a model of <computeroutput><ref refid="classDelaunayTriangulationTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">DelaunayTriangulationTraits_3</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="89" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1afde6333734ed8c26bd8eddb6484f0f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SurfaceMeshTriangulation_3::SurfaceMeshTriangulation_3</definition>
        <argsstring>()</argsstring>
        <name>SurfaceMeshTriangulation_3</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a844ece49afa7b57e8b4605ad2ebc8634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SurfaceMeshTriangulation_3::SurfaceMeshTriangulation_3</definition>
        <argsstring>(SurfaceMeshTriangulation_3 tr)</argsstring>
        <name>SurfaceMeshTriangulation_3</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3" kindref="compound">SurfaceMeshTriangulation_3</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>All vertices and faces are duplicated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Assignment</header>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a7fc1651e5ededd785873dedab6a7d445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3" kindref="compound">SurfaceMeshTriangulation_3</ref> &amp;</type>
        <definition>SurfaceMeshTriangulation_3&amp; SurfaceMeshTriangulation_3::operator=</definition>
        <argsstring>(const SurfaceMeshTriangulation_3 &amp;tr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3" kindref="compound">SurfaceMeshTriangulation_3</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>The triangulation <computeroutput>tr</computeroutput> is duplicated, and modifying the copy after the duplication does not modify the original. </para>        </briefdescription>
        <detaileddescription>
<para>The previous triangulation held by <computeroutput>t</computeroutput> is deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a25476b8e093b1d7080f255a5defa659b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SurfaceMeshTriangulation_3::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Deletes all finite vertices and all cells of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="122" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a4aee03237fe1c0bc9719aabdecdda2b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SurfaceMeshTriangulation_3::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>Returns the dimension of the affine hull. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a46f97bd62b278f33fbbe3f3c18e472c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classDelaunayTriangulationTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">DelaunayTriangulationTraits_3</ref> &amp;</type>
        <definition>const DelaunayTriangulationTraits_3&amp; SurfaceMeshTriangulation_3::geom_traits</definition>
        <argsstring>() const</argsstring>
        <name>geom_traits</name>
        <briefdescription>
<para>Returns a const reference to a model of <computeroutput><ref refid="classDelaunayTriangulationTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">DelaunayTriangulationTraits_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Voronoi diagram</header>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a7f451bad0bd5ece5155d5fec3cdeca0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Object</type>
        <definition>Object SurfaceMeshTriangulation_3::dual</definition>
        <argsstring>(Facet f) const</argsstring>
        <name>dual</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1acd04a7c98fb4b4ff0fbbe443159d256f" kindref="member">Facet</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns the dual of facet <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>In dimension 3: either a segment, if the two cells incident to <computeroutput>f</computeroutput> are finite, or a ray, if one of them is infinite;</para><para>In dimension 2: a point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Queries</header>
      <description><para>A point <computeroutput>p</computeroutput> is said to be in conflict with a cell <computeroutput>c</computeroutput> in dimension 3 (resp. a facet <computeroutput>f</computeroutput> in dimension 2) iff <computeroutput>t.side_of_sphere(c, p)</computeroutput> (resp. <computeroutput>t.side_of_circle(f, p)</computeroutput>) returns <computeroutput>ON_BOUNDED_SIDE</computeroutput>.</para><para>The set of cells (resp. facets in dimension 2) which are in conflict with <computeroutput>p</computeroutput> is connected, and it forms a hole. </para></description>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1acf396579cbbcd621c2327974bd375c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OutputIteratorBoundaryFacets</type>
          </param>
          <param>
            <type>class OutputIteratorCells</type>
          </param>
          <param>
            <type>class OutputIteratorInternalFacets</type>
          </param>
        </templateparamlist>
        <type>Triple&lt; OutputIteratorBoundaryFacets, OutputIteratorCells, OutputIteratorInternalFacets &gt;</type>
        <definition>Triple&lt;OutputIteratorBoundaryFacets, OutputIteratorCells, OutputIteratorInternalFacets&gt; SurfaceMeshTriangulation_3::find_conflicts</definition>
        <argsstring>(Point p, Cell_handle c, OutputIteratorBoundaryFacets bfit, OutputIteratorCells cit, OutputIteratorInternalFacets ifit)</argsstring>
        <name>find_conflicts</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" kindref="member">Point</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>OutputIteratorBoundaryFacets</type>
          <declname>bfit</declname>
        </param>
        <param>
          <type>OutputIteratorCells</type>
          <declname>cit</declname>
        </param>
        <param>
          <type>OutputIteratorInternalFacets</type>
          <declname>ifit</declname>
        </param>
        <briefdescription>
<para>Computes the conflict hole induced by <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The starting cell (resp. facet) <computeroutput>c</computeroutput> must be in conflict.</para><para>Then this function returns respectively in the output iterators:</para><para><itemizedlist>
<listitem><para><computeroutput>cit</computeroutput>: the cells (resp. facets) in conflict.</para></listitem><listitem><para><computeroutput>bfit</computeroutput>: the facets (resp. edges) on the boundary, that is, the facets (resp. edges) <computeroutput>(t, i)</computeroutput> where the cell (resp. facet) <computeroutput>t</computeroutput> is in conflict, but <computeroutput>t-&gt;neighbor(i)</computeroutput> is not.</para></listitem><listitem><para><computeroutput>ifit</computeroutput>: the facets (resp. edges) inside the hole, that is, delimiting two cells (resp. facets) in conflict.</para></listitem></itemizedlist>
</para><para>Returns the <computeroutput>Triple</computeroutput> composed of the resulting output iterators. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="189" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>The following iterators allow the user to visit facets, edges and vertices of the triangulation. </para></description>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a542997d64e7942c2230ea81445c3b317" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a2fad8b9533036072661ee6d6865b5caa" kindref="member">Finite_vertices_iterator</ref></type>
        <definition>Finite_vertices_iterator SurfaceMeshTriangulation_3::finite_vertices_begin</definition>
        <argsstring>() const</argsstring>
        <name>finite_vertices_begin</name>
        <briefdescription>
<para>Starts at an arbitrary finite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a309ac9b97b991b1fd55e738b8803206e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a2fad8b9533036072661ee6d6865b5caa" kindref="member">Finite_vertices_iterator</ref></type>
        <definition>Finite_vertices_iterator SurfaceMeshTriangulation_3::finite_vertices_end</definition>
        <argsstring>() const</argsstring>
        <name>finite_vertices_end</name>
        <briefdescription>
<para>Past-the-end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1adc910139a707e91802e7762b93538c34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a2105fc98cd8a2c5039596a4863c99290" kindref="member">Finite_edges_iterator</ref></type>
        <definition>Finite_edges_iterator SurfaceMeshTriangulation_3::finite_edges_begin</definition>
        <argsstring>() const</argsstring>
        <name>finite_edges_begin</name>
        <briefdescription>
<para>Starts at an arbitrary finite edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1ab1cae72be2651845e0461a599a962955" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a2105fc98cd8a2c5039596a4863c99290" kindref="member">Finite_edges_iterator</ref></type>
        <definition>Finite_edges_iterator SurfaceMeshTriangulation_3::finite_edges_end</definition>
        <argsstring>() const</argsstring>
        <name>finite_edges_end</name>
        <briefdescription>
<para>Past-the-end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1acc027f0ca73c5f60ca772cdd63d462e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a0b4b613031663745ed5d3f23984de68b" kindref="member">Finite_facets_iterator</ref></type>
        <definition>Finite_facets_iterator SurfaceMeshTriangulation_3::finite_facets_begin</definition>
        <argsstring>() const</argsstring>
        <name>finite_facets_begin</name>
        <briefdescription>
<para>Starts at an arbitrary finite facet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a3d7350a34cd164653c6fa83ccc30a245" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a0b4b613031663745ed5d3f23984de68b" kindref="member">Finite_facets_iterator</ref></type>
        <definition>Finite_facets_iterator SurfaceMeshTriangulation_3::finite_facets_end</definition>
        <argsstring>() const</argsstring>
        <name>finite_facets_end</name>
        <briefdescription>
<para>Past-the-end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a1a72cc14f3646bfe0f4e1969b4c47609" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator SurfaceMeshTriangulation_3::incident_cells</definition>
        <argsstring>(Vertex_handle v, OutputIterator cells) const</argsstring>
        <name>incident_cells</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>cells</declname>
        </param>
        <briefdescription>
<para>Copies the <computeroutput>Cell_handle</computeroutput>s of all cells incident to <computeroutput>v</computeroutput> to the output iterator <computeroutput>cells</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>t.dimension() &lt; 3</computeroutput>, then do nothing. Returns the resulting output iterator. <simplesect kind="pre"><para><computeroutput>v != <ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle()</ref></computeroutput>, <computeroutput>t.is_vertex(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a1a72cc14f3646bfe0f4e1969b4c47609" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator SurfaceMeshTriangulation_3::incident_cells</definition>
        <argsstring>(Vertex_handle v, OutputIterator cells) const</argsstring>
        <name>incident_cells</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>cells</declname>
        </param>
        <briefdescription>
<para>Copies the <computeroutput>Cell_handle</computeroutput>s of all cells incident to <computeroutput>v</computeroutput> to the output iterator <computeroutput>cells</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>t.dimension() &lt; 3</computeroutput>, then do nothing. Returns the resulting output iterator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1ae6a42f537146065c30b173aa77cb85e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SurfaceMeshTriangulation_3::is_vertex</definition>
        <argsstring>(const Point &amp;p, Vertex_handle &amp;v) const</argsstring>
        <name>is_vertex</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Tests whether <computeroutput>p</computeroutput> is a vertex of <computeroutput>t</computeroutput> by locating <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>p</computeroutput> is found, the associated vertex <computeroutput>v</computeroutput> is given. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1abc574a53528ae6399b82d0bd5276aea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SurfaceMeshTriangulation_3::is_edge</definition>
        <argsstring>(Vertex_handle u, Vertex_handle v, Cell_handle &amp;c, int &amp;i, int &amp;j) const</argsstring>
        <name>is_edge</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Tests whether <computeroutput>(u,v)</computeroutput> is an edge of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If the edge is found, it gives a cell <computeroutput>c</computeroutput> having this edge and the indices <computeroutput>i</computeroutput> and <computeroutput>j</computeroutput> of the vertices <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> in <computeroutput>c</computeroutput>, in this order. <simplesect kind="pre"><para><computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> are vertices of <computeroutput>t</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1ab3e7f380cdb1c2fcab4160a7b9c1f3b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SurfaceMeshTriangulation_3::is_infinite</definition>
        <argsstring>(const Vertex_handle v) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput>, iff vertex <computeroutput>v</computeroutput> is the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a566af02dcf435f6e6b1d5d604ff70537" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SurfaceMeshTriangulation_3::is_infinite</definition>
        <argsstring>(const Cell_handle c) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput>, iff <computeroutput>c</computeroutput> is incident to the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t.dimension() == 3</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1ae8aaa14bdc921ebc2aae77644a14786b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1acd04a7c98fb4b4ff0fbbe443159d256f" kindref="member">Facet</ref></type>
        <definition>Facet SurfaceMeshTriangulation_3::mirror_facet</definition>
        <argsstring>(Facet f) const</argsstring>
        <name>mirror_facet</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1acd04a7c98fb4b4ff0fbbe443159d256f" kindref="member">Facet</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns the same facet seen from the other adjacent cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a37f6db1bb9b42c1d7c2cf1adf2b34163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SurfaceMeshTriangulation_3::vertex_triple_index</definition>
        <argsstring>(const int i, const int j)</argsstring>
        <name>vertex_triple_index</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Return the indexes of the <computeroutput>j</computeroutput>th vertex of the facet of a cell opposite to vertex <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="286" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Point location</header>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a3d124f629727d442e9373b4c66f61939" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
        <definition>Cell_handle SurfaceMeshTriangulation_3::locate</definition>
        <argsstring>(const Point &amp;query, Cell_handle start=Cell_handle()) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
          <declname>start</declname>
          <defval><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref>()</defval>
        </param>
        <briefdescription>
<para>If the point <computeroutput>query</computeroutput> lies inside the convex hull of the points, the cell that contains the query in its interior is returned. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>query</computeroutput> lies on a facet, an edge or on a vertex, one of the cells having <computeroutput>query</computeroutput> on its boundary is returned.</para><para>If the point <computeroutput>query</computeroutput> lies outside the convex hull of the points, an infinite cell with vertices <formula id="11">$ \{ p, q, r, \infty\}$</formula> is returned such that the tetrahedron <formula id="12">$ ( p, q, r, query )$</formula> is positively oriented (the rest of the triangulation lies on the other side of facet <formula id="13">$ ( p, q, r )$</formula>).</para><para>Note that locate works even in degenerate dimensions: in dimension 2 (resp. 1, 0) the <computeroutput>Cell_handle</computeroutput> returned is the one that represents the facet (resp. edge, vertex) containing the query point.</para><para>The optional argument <computeroutput>start</computeroutput> is used as a starting place for the search. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1af0138b98fcfeb35f8ac111ee854a930a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
        <definition>Cell_handle SurfaceMeshTriangulation_3::locate</definition>
        <argsstring>(const Point &amp;query, Locate_type &amp;lt, int &amp;li, int &amp;lj, Cell_handle start=Cell_handle()) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>Locate_type &amp;</type>
          <declname>lt</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>li</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>lj</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
          <declname>start</declname>
          <defval><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref>()</defval>
        </param>
        <briefdescription>
<para>If <computeroutput>query</computeroutput> lies inside the affine hull of the points, the <computeroutput>k</computeroutput>-face (finite or infinite) that contains <computeroutput>query</computeroutput> in its interior is returned, by means of the cell returned together with <computeroutput>lt</computeroutput>, which is set to the locate type of the query (<computeroutput>VERTEX, EDGE, FACET, CELL</computeroutput>, or <computeroutput>OUTSIDE_CONVEX_HULL</computeroutput> if the cell is infinite and <computeroutput>query</computeroutput> lies strictly in it) and two indices <computeroutput>li</computeroutput> and <computeroutput>lj</computeroutput> that specify the <computeroutput>k</computeroutput>-face of the cell containing <computeroutput>query</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If the <computeroutput>k</computeroutput>-face is a cell, <computeroutput>li</computeroutput> and <computeroutput>lj</computeroutput> have no meaning; if it is a facet (resp. vertex), <computeroutput>li</computeroutput> gives the index of the facet (resp. vertex) and <computeroutput>lj</computeroutput> has no meaning; if it is and edge, <computeroutput>li</computeroutput> and <computeroutput>lj</computeroutput> give the indices of its vertices.</para><para>If the point <computeroutput>query</computeroutput> lies outside the affine hull of the points, which can happen in case of degenerate dimensions, <computeroutput>lt</computeroutput> is set to <computeroutput>OUTSIDE_AFFINE_HULL</computeroutput>, and the cell returned has no meaning. As a particular case, if there is no finite vertex yet in the triangulation, <computeroutput>lt</computeroutput> is set to <computeroutput>OUTSIDE_AFFINE_HULL</computeroutput> and <computeroutput>locate</computeroutput> returns the default constructed handle.</para><para>The optional argument <computeroutput>start</computeroutput> is used as a starting place for the search. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshTriangulation__3_1a88d765d63d13de7971cf0ac29907ca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CellIt</type>
          </param>
        </templateparamlist>
        <type><ref refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle SurfaceMeshTriangulation_3::insert_in_hole</definition>
        <argsstring>(Point p, CellIt cell_begin, CellIt cell_end, Cell_handle begin, int i)</argsstring>
        <name>insert_in_hole</name>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" kindref="member">Point</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>CellIt</type>
          <declname>cell_begin</declname>
        </param>
        <param>
          <type>CellIt</type>
          <declname>cell_end</declname>
        </param>
        <param>
          <type><ref refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" kindref="member">Cell_handle</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Creates a new vertex by starring a hole. </para>        </briefdescription>
        <detaileddescription>
<para>It takes an iterator range <computeroutput>[cell_begin, cell_end)</computeroutput> of <computeroutput>Cell_handle</computeroutput>s which specifies a hole: a set of connected cells (resp. facets in dimension 2) which is star-shaped wrt <computeroutput>p</computeroutput>. (<computeroutput>begin</computeroutput>, <computeroutput>i</computeroutput>) is a facet (resp. an edge) on the boundary of the hole, that is, <computeroutput>begin</computeroutput> belongs to the set of cells (resp. facets) previously described, and <computeroutput>begin-&gt;neighbor(i)</computeroutput> does not. Then this function deletes all the cells (resp. facets) describing the hole, creates a new vertex <computeroutput>v</computeroutput>, and for each facet (resp. edge) on the boundary of the hole, creates a new cell (resp. facet) with <computeroutput>v</computeroutput> as vertex. Then <computeroutput>v-&gt;set_point(p)</computeroutput> is called and <computeroutput>v</computeroutput> is returned.</para><para><simplesect kind="pre"><para><computeroutput>t.dimension() &gt;= 2</computeroutput>, the set of cells (resp. facets in dimension 2) is connected, its boundary is connected, and <computeroutput>p</computeroutput> lies inside the hole, which is star-shaped wrt <computeroutput>p</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshTriangulation_3.h" line="359" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classSurfaceMeshTriangulation__3" kindref="compound">SurfaceMeshTriangulation_3</ref></computeroutput> describes the triangulation type used by the surface mesher <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">CGAL::make_surface_mesh()</ref></computeroutput> to represent the three dimensional triangulation embedding the surface mesh. Thus, this concept describes the requirements for the triangulation type <computeroutput>SurfaceMeshC2T3::Triangulation</computeroutput> nested in the model of <computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput> plugged as the template parameter <computeroutput>SurfaceMeshC2T3</computeroutput> of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">CGAL::make_surface_mesh()</ref></computeroutput>. It also describes the requirements for the triangulation type plugged in the class <computeroutput><ref refid="classCGAL_1_1Surface__mesh__complex__2__in__triangulation__3" kindref="compound">CGAL::Surface_mesh_complex_2_in_triangulation_3</ref>&lt;Tr&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000008"><xreftitle>Has Models</xreftitle><xrefdescription><para>Any 3D Delaunay triangulation class of CGAL </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Triangulation_3</ref>&lt;<ref refid="classTriangulationTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">TriangulationTraits_3</ref>,TriangulationDataStructure_3&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Delaunay__triangulation__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Delaunay_triangulation_3</ref>&lt;<ref refid="classDelaunayTriangulationTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">DelaunayTriangulationTraits_3</ref>,TriangulationDataStructure_3&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__complex__2__in__triangulation__3" kindref="compound">CGAL::Surface_mesh_complex_2_in_triangulation_3</ref>&lt;Tr&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">CGAL::make_surface_mesh()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/SurfaceMeshTriangulation_3.h" line="30" column="1" bodyfile="Concepts/SurfaceMeshTriangulation_3.h" bodystart="30" bodyend="364"/>
    <listofallmembers>
      <member refid="classSurfaceMeshTriangulation__3_1a242c3bc1f6e08db025e831d74aa8549e" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Cell_handle</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a25476b8e093b1d7080f255a5defa659b" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>clear</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a4aee03237fe1c0bc9719aabdecdda2b4" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>dimension</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a7f451bad0bd5ece5155d5fec3cdeca0e" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>dual</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a0bcb2899dd059633ae57c0190e3e9cf1" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Edge</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1acd04a7c98fb4b4ff0fbbe443159d256f" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Facet</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1acf396579cbbcd621c2327974bd375c64" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>find_conflicts</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1adc910139a707e91802e7762b93538c34" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_edges_begin</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1ab1cae72be2651845e0461a599a962955" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_edges_end</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a2105fc98cd8a2c5039596a4863c99290" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Finite_edges_iterator</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1acc027f0ca73c5f60ca772cdd63d462e2" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_facets_begin</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a3d7350a34cd164653c6fa83ccc30a245" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_facets_end</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a0b4b613031663745ed5d3f23984de68b" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Finite_facets_iterator</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a542997d64e7942c2230ea81445c3b317" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_vertices_begin</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a309ac9b97b991b1fd55e738b8803206e" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>finite_vertices_end</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a2fad8b9533036072661ee6d6865b5caa" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Finite_vertices_iterator</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a46ae2c9e5429ae6977ae08b1bb31c125" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Geom_traits</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a46f97bd62b278f33fbbe3f3c18e472c0" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>geom_traits</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a1a72cc14f3646bfe0f4e1969b4c47609" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>incident_cells</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a1a72cc14f3646bfe0f4e1969b4c47609" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>incident_cells</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a88d765d63d13de7971cf0ac29907ca09" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>insert_in_hole</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1abc574a53528ae6399b82d0bd5276aea3" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>is_edge</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1ab3e7f380cdb1c2fcab4160a7b9c1f3b7" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>is_infinite</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a566af02dcf435f6e6b1d5d604ff70537" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>is_infinite</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1ae6a42f537146065c30b173aa77cb85e4" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>is_vertex</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a3d124f629727d442e9373b4c66f61939" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>locate</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1af0138b98fcfeb35f8ac111ee854a930a" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>locate</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1ae8aaa14bdc921ebc2aae77644a14786b" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>mirror_facet</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a7fc1651e5ededd785873dedab6a7d445" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>operator=</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1af916756128dcc85d8a6635e823d082df" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Point</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1afde6333734ed8c26bd8eddb6484f0f1c" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>SurfaceMeshTriangulation_3</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a844ece49afa7b57e8b4605ad2ebc8634" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>SurfaceMeshTriangulation_3</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a549b9651b5c787ad3e64dd191a5bb24a" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>Vertex_handle</name></member>
      <member refid="classSurfaceMeshTriangulation__3_1a37f6db1bb9b42c1d7c2cf1adf2b34163" prot="public" virt="non-virtual"><scope>SurfaceMeshTriangulation_3</scope><name>vertex_triple_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
