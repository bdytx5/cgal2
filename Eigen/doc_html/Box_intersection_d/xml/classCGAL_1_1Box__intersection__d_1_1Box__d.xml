<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Box__intersection__d_1_1Box__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Box_intersection_d::Box_d</compoundname>
    <includes local="no">CGAL/Box_intersection_d/Box_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
      </param>
      <param>
        <type>typename int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
      <param>
        <type>typename IdPolicy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <briefdescription>
<para>number type to represent the box boundaries. </para>        </briefdescription>
        <detaileddescription>
<para>Allowed are the built-in types <computeroutput>int</computeroutput>, <computeroutput>unsigned int</computeroutput>, <computeroutput>float</computeroutput>, and <computeroutput>double</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="66" column="1" bodyfile="CGAL/Box_intersection_d/Box_d.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a0a2ff8ef6c0d2d3ea948f96e2ab1bf4b" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
<para>type for the box <computeroutput>id</computeroutput>-number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="71" column="1" bodyfile="CGAL/Box_intersection_d/Box_d.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a055072fd85b7e7bc705fdfbc2162befe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::Box_d</definition>
        <argsstring>()</argsstring>
        <name>Box_d</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>No particular initialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1ace3b8807fa9ffd5d3706b424fc28e53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::Box_d</definition>
        <argsstring>(bool complete)</argsstring>
        <name>Box_d</name>
        <param>
          <type>bool</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>Constructor initialized to the complete or the empty space. </para>        </briefdescription>
        <detaileddescription>
<para>If empty, all interval starting(end) points will be set to positive(negative) infinity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a2c8fdb4ea8688d79387dc433769ac1ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::Box_d</definition>
        <argsstring>(NT lo[D], NT hi[D])</argsstring>
        <name>Box_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
          <declname>lo</declname>
          <array>[D]</array>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
          <declname>hi</declname>
          <array>[D]</array>
        </param>
        <briefdescription>
<para>initializes the box intervals to [<computeroutput>lo[i]</computeroutput>,<computeroutput>hi[i]</computeroutput>], <formula id="17">$ 0 \leq i &lt; D$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>lo[i]</computeroutput> <formula id="18">$ &lt;$</formula> <computeroutput>hi[i]</computeroutput> for <formula id="17">$ 0 \leq i &lt; D$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1ac40a5b81801b81fbe9d4924b4be907f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::Box_d</definition>
        <argsstring>(const Bbox_2 &amp;bbox)</argsstring>
        <name>Box_d</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
<para>constructs from <computeroutput>bbox</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Requirements: <formula id="19">$ D=2$</formula> and <computeroutput>NT</computeroutput> <formula id="20">$ \equiv$</formula><computeroutput>double</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a24b7a6ace2f73ebccc99fec1bc2161df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::Box_d</definition>
        <argsstring>(const Bbox_3 &amp;bbox)</argsstring>
        <name>Box_d</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_3</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
<para>constructs from <computeroutput>bbox</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Requirements: <formula id="21">$ D=3$</formula> and <computeroutput>NT</computeroutput> <formula id="20">$ \equiv$</formula><computeroutput>double</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1ae18fbdfb0e1dfee2c106720da7d199a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::init</definition>
        <argsstring>(bool complete=false)</argsstring>
        <name>init</name>
        <param>
          <type>bool</type>
          <declname>complete</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>initializes to the complete or the empty space. </para>        </briefdescription>
        <detaileddescription>
<para>If empty, all interval starting(end) points will be set to positive(negative) infinity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a9e4fa736dd0e83972bddedfd8ca678f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::extend</definition>
        <argsstring>(NT point[D])</argsstring>
        <name>extend</name>
        <param>
          <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
          <declname>point</declname>
          <array>[D]</array>
        </param>
        <briefdescription>
<para>extend <computeroutput>box</computeroutput> to contain the old <computeroutput>box</computeroutput> and <computeroutput>point</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1aaf90f02deea5e5d37e5cbea938993e10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns <formula id="16">$ D$</formula>, the dimension of the box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a7dc0227db8cb88d136d278253160a70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>returns a unique box id, see the <computeroutput>IdPolicy</computeroutput> template parameter above for the different choices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>&lt;tt&gt;IdPolicy&lt;/tt&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="22">$ \neq$</formula><computeroutput>ID_NONE</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a06781897a18764129061c222ff90bddf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
        <definition>NT CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::min_coord</definition>
        <argsstring>(int d) const</argsstring>
        <name>min_coord</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns the lower boundary in dimension <computeroutput>d</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="23">$ 0 \leq$</formula><computeroutput>d</computeroutput> <formula id="24">$ &lt; D$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a69d02669e7c13169c82e3e0ef3e2e103" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
        <definition>NT CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::max_coord</definition>
        <argsstring>(int d) const</argsstring>
        <name>max_coord</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns the upper boundary in dimension <computeroutput>d</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="23">$ 0 \leq$</formula><computeroutput>d</computeroutput> <formula id="24">$ &lt; D$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1a4c78a1641066644cebc5301b0da91291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref> &amp;</type>
        <definition>const Bbox_2&amp; CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns the bounding box Requirements: <formula id="19">$ D=2$</formula> and <computeroutput>NT</computeroutput> <formula id="20">$ \equiv$</formula><computeroutput>double</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1ad67c9be494370f68192b153717044404" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_3</ref> &amp;</type>
        <definition>const Bbox_3&amp; CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns the bounding box Requirements: <formula id="21">$ D=3$</formula> and <computeroutput>NT</computeroutput> <formula id="20">$ \equiv$</formula><computeroutput>double</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1af83ac9493e5253d7a9ea266e476832a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::extend</definition>
        <argsstring>(NT p[N])</argsstring>
        <name>extend</name>
        <param>
          <type><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref></type>
          <declname>p</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>extends <computeroutput>box</computeroutput> to the smallest box that additionally contains the point represented by coordinates in <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Box__intersection__d_1_1Box__d_1aaaf2421edc188aa29bc2b3807c83507a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Box_intersection_d::Box_d&lt; NT, D, IdPolicy &gt;::extend</definition>
        <argsstring>(std::pair&lt; NT, NT &gt; p[N])</argsstring>
        <name>extend</name>
        <param>
          <type>std::pair&lt; <ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref>, <ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref> &gt;</type>
          <declname>p</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>extends <computeroutput>box</computeroutput> to the smallest box that additionally contains the point represented by coordinate intervals in <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Box_intersection_d/Box_d.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d" kindref="compound">Box_d</ref></computeroutput> is a generic iso-oriented bounding box in dimension <formula id="16">$ D$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>It provides in each dimension an interval with lower and upper endpoints represented with the number type <computeroutput>NT</computeroutput>. This class is designed to work smoothly with the algorithms for intersecting sequences of iso-oriented boxes. For degeneracy handling, the boxes need to provide a unique <computeroutput>id</computeroutput>-number. The policy parameter <computeroutput>IdPolicy</computeroutput> offers several choices. The template parameters have to comply with the following requirements:</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NT</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number type for the box boundaries. It must meet the requierements of the concepts <computeroutput><ref refid="classAssignable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Assignable</ref></computeroutput> and <computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para>is an integer and the dimension of the box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IdPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies how the <computeroutput>id</computeroutput>-number will be provided and can be one of the following types, where <computeroutput>ID_EXPLICIT</computeroutput> is the default for this parameter: <itemizedlist>
<listitem>
<para><computeroutput>ID_NONE</computeroutput>: no <computeroutput>id</computeroutput>-number is provided. This can be useful if <computeroutput><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d" kindref="compound">Box_d</ref></computeroutput> is used as a base class for a different implementation of <computeroutput>id</computeroutput>-numbers than the ones provided here. </para></listitem>
<listitem>
<para><computeroutput>ID_EXPLICIT</computeroutput>: the <computeroutput>id</computeroutput>-number is stored explicitly in the box and automatically created and assigned at construction time of the box. Note that copying a box (copy-constructor and assignment) does not create a new <computeroutput>id</computeroutput>-number but keeps the old one, which is the behavior needed by the <computeroutput><ref refid="group__PkgBoxIntersectionD__box__self__intersection__d_1ga3eed2bdb2a9e49a3fac1bca900087ec7" kindref="member">box_self_intersection_d()</ref></computeroutput> algorithm. This is therefore the safe default implementation. </para></listitem>
<listitem>
<para><computeroutput>ID_FROM_BOX_ADDRESS</computeroutput>: casts the address of the box into a <computeroutput>std::ptrdiff_t</computeroutput> to create the <computeroutput>id</computeroutput>-number. This works fine if the intersection algorithms work effectively with pointers to boxes, but not in the case where the algorithms work with box values, because the algorithms modify the order of the boxes, and the <computeroutput><ref refid="group__PkgBoxIntersectionD__box__self__intersection__d_1ga3eed2bdb2a9e49a3fac1bca900087ec7" kindref="member">box_self_intersection_d()</ref></computeroutput> algorithm creates copies of the boxes that would not have identical <computeroutput>id</computeroutput>-numbers. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000001"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classBoxIntersectionBox__d" kindref="compound">BoxIntersectionBox_d</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="group__PkgBoxIntersectionD__box__intersection__d" kindref="compound"><computeroutput>CGAL::box_intersection_d()</computeroutput> </ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PkgBoxIntersectionD__box__self__intersection__d" kindref="compound"><computeroutput>CGAL::box_self_intersection_d()</computeroutput> </ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PkgBoxIntersectionD__box__intersection__all__pairs__d" kindref="compound"><computeroutput>CGAL::box_intersection_all_pairs_d()</computeroutput> </ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__PkgBoxIntersectionD__box__self__intersection__all__pairs__d" kindref="compound"><computeroutput>CGAL::box_self_intersection_all_pairs_d()</computeroutput> </ref> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Box__intersection__d_1_1Box__with__handle__d" kindref="compound">CGAL::Box_intersection_d::Box_with_handle_d</ref>&lt;<ref refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" kindref="member">NT</ref>, int D, <ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref>, IdPolicy&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Box__intersection__d_1_1Box__traits__d" kindref="compound">CGAL::Box_intersection_d::Box_traits_d</ref>&lt;BoxHandle&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classBoxIntersectionTraits__d" kindref="compound">BoxIntersectionTraits_d</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Box_intersection_d/Box_d.h" line="55" column="1" bodyfile="CGAL/Box_intersection_d/Box_d.h" bodystart="55" bodyend="183"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a4c78a1641066644cebc5301b0da91291" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1ad67c9be494370f68192b153717044404" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a055072fd85b7e7bc705fdfbc2162befe" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>Box_d</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1ace3b8807fa9ffd5d3706b424fc28e53d" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>Box_d</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a2c8fdb4ea8688d79387dc433769ac1ba" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>Box_d</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1ac40a5b81801b81fbe9d4924b4be907f3" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>Box_d</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a24b7a6ace2f73ebccc99fec1bc2161df" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>Box_d</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1aaf90f02deea5e5d37e5cbea938993e10" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a9e4fa736dd0e83972bddedfd8ca678f7" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>extend</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1af83ac9493e5253d7a9ea266e476832a3" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>extend</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1aaaf2421edc188aa29bc2b3807c83507a" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>extend</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a7dc0227db8cb88d136d278253160a70e" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>id</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a0a2ff8ef6c0d2d3ea948f96e2ab1bf4b" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>ID</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1ae18fbdfb0e1dfee2c106720da7d199a3" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>init</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a69d02669e7c13169c82e3e0ef3e2e103" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>max_coord</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1a06781897a18764129061c222ff90bddf" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>min_coord</name></member>
      <member refid="classCGAL_1_1Box__intersection__d_1_1Box__d_1adea60734cf5b1e72d235858dedc752a2" prot="public" virt="non-virtual"><scope>CGAL::Box_intersection_d::Box_d</scope><name>NT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
