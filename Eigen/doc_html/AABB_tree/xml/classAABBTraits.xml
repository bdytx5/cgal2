<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classAABBTraits" kind="class" language="C++" prot="public">
    <compoundname>AABBTraits</compoundname>
    <includes local="no">Concepts/AABBTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="enum" id="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1" prot="public" static="no">
        <name>Axis</name>
        <enumvalue id="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1a386e54013a252bdaf3f94ecbd955113a" prot="public">
          <name>CGAL_X_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1a9a0a04672b7cdfb607eedc8f9783b325" prot="public">
          <name>CGAL_Y_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1aee8a0cbc4655d5faa5113006907abb50" prot="public">
          <name>CGAL_Z_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>enum required for axis selection </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="47" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a1ee53f64a2ab05d4389003d4f36539e4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Value type of the <computeroutput>Squared_distance</computeroutput> functor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="26" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a4f4e3df6dadeac3164d15f28af48db14" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
<para>Type of a 3D point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="31" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a18812bafada570757269e313ab06ff51" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Primitive</definition>
        <argsstring></argsstring>
        <name>Primitive</name>
        <briefdescription>
<para>Type of primitive. </para>        </briefdescription>
        <detaileddescription>
<para>Must be a model of the concepts <computeroutput><ref refid="classAABBPrimitive" kindref="compound">AABBPrimitive</ref></computeroutput> or <computeroutput><ref refid="classAABBPrimitiveWithSharedData" kindref="compound">AABBPrimitiveWithSharedData</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="37" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a71832e63c8ab85c356fa6b3fc792ed3e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Bounding_box</definition>
        <argsstring></argsstring>
        <name>Bounding_box</name>
        <briefdescription>
<para>Bounding box type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="42" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a967ceb27204fc7491fe6bd018791b2f7" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classAABBTraits_1a4f4e3df6dadeac3164d15f28af48db14" kindref="member">Point_3</ref>, Primitive::Id &gt;</type>
        <definition>typedef std::pair&lt;Point_3, Primitive::Id&gt; AABBTraits::Point_and_primitive_id</definition>
        <argsstring></argsstring>
        <name>Point_and_primitive_id</name>
        <briefdescription>
<para>3D Point and Primitive Id type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="56" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1afeb8685b51df66ec98d9bf72e04007bf" prot="public" static="no">
        <type>std::pair&lt; Object, Primitive::Id &gt;</type>
        <definition>typedef std::pair&lt;Object, Primitive::Id&gt; AABBTraits::Object_and_primitive_id</definition>
        <argsstring></argsstring>
        <name>Object_and_primitive_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This requirement is deprecated and is no longer needed.</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="62" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1af5b2ef75e7fca67d9ab37b0d4984000b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using AABBTraits::Intersection_and_primitive_id =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Intersection_and_primitive_id</name>
        <briefdescription>
<para>A nested class template providing as a pair the intersection result of a <computeroutput>Query</computeroutput> object and a <computeroutput>Primitive::Datum</computeroutput>, together with the <computeroutput>Primitive::Id</computeroutput> of the primitive intersected. </para>        </briefdescription>
        <detaileddescription>
<para>The type of the pair is <computeroutput>Intersection_and_primitive_id&lt;Query&gt;::Type</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="72" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Splitting</header>
      <description><para>During the construction of the AABB tree, the primitives are sorted according to some comparison functions related to the <formula id="0">$x$</formula>, <formula id="1">$ y$</formula> or <formula id="2">$ z$</formula> coordinate axis: </para></description>
      <memberdef kind="typedef" id="classAABBTraits_1a37da0dfd86a08b22fce9f7788fb175a8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Split_primitives_along_x_axis</definition>
        <argsstring></argsstring>
        <name>Split_primitives_along_x_axis</name>
        <briefdescription>
<para>A functor object to split a range of primitives into two sub-ranges along the X-axis. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>void operator()(InputIterator first, InputIterator beyond);</computeroutput> Iterator type <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must be a model of <ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref> and have <computeroutput>Primitive</computeroutput> as value type. The operator is used for determining the primitives assigned to the two children nodes of a given node, assuming that the goal is to split the X-dimension of the bounding box of the node. The primitives assigned to this node are passed as argument to the operator. It should modify the iterator range in such a way that its first half and its second half correspond to the two children nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="86" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a8ea1d49e004c39f9ea749164da2d26f9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Split_primitives_along_y_axis</definition>
        <argsstring></argsstring>
        <name>Split_primitives_along_y_axis</name>
        <briefdescription>
<para>A functor object to split a range of primitives into two sub-ranges along the Y-axis. </para>        </briefdescription>
        <detaileddescription>
<para>See <computeroutput>Split_primitives_along_x_axis</computeroutput> for the detailed description. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="91" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1acdb2c9986eb42490859516f908e92c56" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Split_primitives_along_z_axis</definition>
        <argsstring></argsstring>
        <name>Split_primitives_along_z_axis</name>
        <briefdescription>
<para>A functor object to split a range of primitives into two sub-ranges along the Z-axis. </para>        </briefdescription>
        <detaileddescription>
<para>See <computeroutput>Split_primitives_along_x_axis</computeroutput> for the detailed description. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="96" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1af6e7982428973913f86030055e171e49" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Compute_bbox</definition>
        <argsstring></argsstring>
        <name>Compute_bbox</name>
        <briefdescription>
<para>A functor object to compute the bounding box of a set of primitives. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>Bounding_box operator()(Input_iterator begin, Input_iterator beyond);</computeroutput> Iterator type <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must have <computeroutput>Primitive</computeroutput> as value type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="102" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Intersections</header>
      <description><para>The following predicates are required for each type <computeroutput>Query</computeroutput> for which the class <computeroutput><ref refid="classCGAL_1_1AABB__tree" kindref="compound">CGAL::AABB_tree</ref>&lt;<ref refid="classAABBTraits" kindref="compound">AABBTraits</ref>&gt;</computeroutput> may receive an intersection detection or computation query. </para></description>
      <memberdef kind="typedef" id="classAABBTraits_1acd432e5763cef7e50b44f75f8b24c06d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Do_intersect</definition>
        <argsstring></argsstring>
        <name>Do_intersect</name>
        <briefdescription>
<para>A functor object to compute intersection predicates between the query and the nodes of the tree. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operators:<itemizedlist>
<listitem><para><computeroutput>bool operator()(const Query &amp; q, const Bounding_box &amp; box);</computeroutput> which returns <computeroutput>true</computeroutput> iff the query intersects the bounding box</para></listitem><listitem><para><computeroutput>bool operator()(const Query &amp; q, const Primitive &amp; primitive);</computeroutput> which returns <computeroutput>true</computeroutput> iff the query intersects the primitive </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="126" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a70e323d8c5dd12580bdf06433373b21c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Intersect</definition>
        <argsstring></argsstring>
        <name>Intersect</name>
        <briefdescription>
<para>A functor object to compute the intersection of a query and a primitive. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>boost::optional&lt;Intersection_and_primitive_id&lt;Query&gt;::Type &gt; operator()(const Query &amp; q, const Primitive&amp; primitive);</computeroutput> which returns the intersection as a pair composed of an object and a primitive id, iff the query intersects the primitive.</para><para><bold>Note on Backward Compatibility</bold><linebreak/>
 Before the release 4.3 of CGAL, the return type of this function used to be <computeroutput>boost::optional&lt;Object_and_primitive_id&gt;</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="135" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Distance Queries</header>
      <description><para>The following predicates are required for each type <computeroutput>Query</computeroutput> for which the class <computeroutput><ref refid="classCGAL_1_1AABB__tree" kindref="compound">CGAL::AABB_tree</ref>&lt;<ref refid="classAABBTraits" kindref="compound">AABBTraits</ref>&gt;</computeroutput> may receive a distance query. </para></description>
      <memberdef kind="typedef" id="classAABBTraits_1aa600068262ed08a8e233ffc3e6ab3b0b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Compare_distance</definition>
        <argsstring></argsstring>
        <name>Compare_distance</name>
        <briefdescription>
<para>A functor object to compute distance comparisons between the query and the nodes of the tree. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operators:<itemizedlist>
<listitem><para><computeroutput>bool operator()(const Query &amp; query, const Bounding_box&amp; box, const Point &amp; closest);</computeroutput> which returns <computeroutput>true</computeroutput> iff the bounding box is closer to <computeroutput>query</computeroutput> than <computeroutput>closest</computeroutput> is</para></listitem><listitem><para><computeroutput>bool operator()(const Query &amp; query, const Primitive &amp; primitive, const Point &amp; closest);</computeroutput> which returns <computeroutput>true</computeroutput> iff <computeroutput>primitive</computeroutput> is closer to the <computeroutput>query</computeroutput> than <computeroutput>closest</computeroutput> is </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="148" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a3fadc69b5c266b650dfcb0a953d2727d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Closest_point</definition>
        <argsstring></argsstring>
        <name>Closest_point</name>
        <briefdescription>
<para>A functor object to compute closest point from the query on a primitive. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>Point_3 operator()(const Query&amp; query, const Primitive&amp; primitive, const Point_3 &amp; closest);</computeroutput> which returns the closest point to <computeroutput>query</computeroutput>, among <computeroutput>closest</computeroutput> and all points of the primitive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="154" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a4dfd5585e5b11a057f1223f024cf3e1c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Squared_distance</definition>
        <argsstring></argsstring>
        <name>Squared_distance</name>
        <briefdescription>
<para>A functor object to compute the squared distance between two points. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>FT operator()(const Point&amp; query, const Point_3 &amp; p);</computeroutput> which returns the squared distance between <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="160" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAABBTraits_1a5dcb3ac721bca9b0e6e75fc44627bc20" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AABBTraits::Equal_3</definition>
        <argsstring></argsstring>
        <name>Equal_3</name>
        <briefdescription>
<para>A functor object to compare two points. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>bool operator()(const Point_3&amp; p, const Point_3&amp; q);}</computeroutput> which returns <computeroutput>true</computeroutput> if <computeroutput>p</computeroutput> is equal to <computeroutput>q</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="166" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classAABBTraits_1a193fc6a76c67e8d4684da4c43372e079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a37da0dfd86a08b22fce9f7788fb175a8" kindref="member">Split_primitives_along_x_axis</ref></type>
        <definition>Split_primitives_along_x_axis AABBTraits::split_primitives_along_x_axis_object</definition>
        <argsstring>()</argsstring>
        <name>split_primitives_along_x_axis_object</name>
        <briefdescription>
<para>Returns the primitive splitting functor for the X axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a6d7921a73d386a11b3dd12921f350cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a8ea1d49e004c39f9ea749164da2d26f9" kindref="member">Split_primitives_along_y_axis</ref></type>
        <definition>Split_primitives_along_y_axis AABBTraits::split_primitives_along_y_axis_object</definition>
        <argsstring>()</argsstring>
        <name>split_primitives_along_y_axis_object</name>
        <briefdescription>
<para>Returns the primitive splitting functor for the Y axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1ac785e4dfb70639b486b55f4c57b8e544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1acdb2c9986eb42490859516f908e92c56" kindref="member">Split_primitives_along_z_axis</ref></type>
        <definition>Split_primitives_along_z_axis AABBTraits::split_primitives_along_z_axis_object</definition>
        <argsstring>()</argsstring>
        <name>split_primitives_along_z_axis_object</name>
        <briefdescription>
<para>Returns the primitive splitting functor for the Z axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a0bfdfb7ed86eb8500c9bbf88d3530eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1af6e7982428973913f86030055e171e49" kindref="member">Compute_bbox</ref></type>
        <definition>Compute_bbox AABBTraits::compute_bbox_object</definition>
        <argsstring>()</argsstring>
        <name>compute_bbox_object</name>
        <briefdescription>
<para>Returns the bounding box constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a598af78d67828151e80354c6dcd727e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1acd432e5763cef7e50b44f75f8b24c06d" kindref="member">Do_intersect</ref></type>
        <definition>Do_intersect AABBTraits::do_intersect_object</definition>
        <argsstring>()</argsstring>
        <name>do_intersect_object</name>
        <briefdescription>
<para>Returns the intersection detection functor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a13678d608c359e134d1f7dd2be7d072f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a70e323d8c5dd12580bdf06433373b21c" kindref="member">Intersect</ref></type>
        <definition>Intersect AABBTraits::intersect_object</definition>
        <argsstring>()</argsstring>
        <name>intersect_object</name>
        <briefdescription>
<para>Returns the intersection constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a6afb566b44dd75a7d59bf77fd99b31aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1aa600068262ed08a8e233ffc3e6ab3b0b" kindref="member">Compare_distance</ref></type>
        <definition>Compare_distance AABBTraits::compare_distance_object</definition>
        <argsstring>()</argsstring>
        <name>compare_distance_object</name>
        <briefdescription>
<para>Returns the distance comparison functor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1a0f4c70ab9415b68cd08986893892561c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a3fadc69b5c266b650dfcb0a953d2727d" kindref="member">Closest_point</ref></type>
        <definition>Closest_point AABBTraits::closest_point_object</definition>
        <argsstring>()</argsstring>
        <name>closest_point_object</name>
        <briefdescription>
<para>Returns the closest point constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1aafb3e8fb18b87a6c580d70aad79018e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a4dfd5585e5b11a057f1223f024cf3e1c" kindref="member">Squared_distance</ref></type>
        <definition>Squared_distance AABBTraits::squared_distance_object</definition>
        <argsstring>()</argsstring>
        <name>squared_distance_object</name>
        <briefdescription>
<para>Returns the squared distance functor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAABBTraits_1aef43118929bc7273d52ec9f38cd7d1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAABBTraits_1a5dcb3ac721bca9b0e6e75fc44627bc20" kindref="member">Equal_3</ref></type>
        <definition>Equal_3 AABBTraits::equal_3_object</definition>
        <argsstring>()</argsstring>
        <name>equal_3_object</name>
        <briefdescription>
<para>Returns the equal functor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Primitive with Shared Data</header>
      <description><para>In addition, if <computeroutput>Primitive</computeroutput> is a model of the concept <computeroutput><ref refid="classAABBPrimitiveWithSharedData" kindref="compound">AABBPrimitiveWithSharedData</ref></computeroutput>, the following functions are part of the concept: </para></description>
      <memberdef kind="function" id="classAABBTraits_1a6dba5130cc78298fb7039f479f657fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void AABBTraits::set_shared_data</definition>
        <argsstring>(T ... t)</argsstring>
        <name>set_shared_data</name>
        <param>
          <type>T ...</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>the signature of that function must be the same as the static function <computeroutput>Primitive::construct_shared_data</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The type <computeroutput>Primitive</computeroutput> expects that the data constructed by a call to <computeroutput>Primitive::construct_shared_data(t...)</computeroutput> is the one given back when accessing the reference point and the datum of a primitive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AABBTraits.h" line="235" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classAABBTraits" kindref="compound">AABBTraits</ref></computeroutput> provides the geometric primitive types and methods for the class <computeroutput><ref refid="classCGAL_1_1AABB__tree" kindref="compound">CGAL::AABB_tree</ref>&lt;<ref refid="classAABBTraits" kindref="compound">AABBTraits</ref>&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000006"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1AABB__traits" kindref="compound">CGAL::AABB_traits</ref>&lt;<ref refid="classAABBGeomTraits" kindref="compound">AABBGeomTraits</ref>,<ref refid="classAABBPrimitive" kindref="compound">AABBPrimitive</ref>&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="refines_1_refines000003"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classSearchGeomTraits__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">SearchGeomTraits_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1AABB__traits" kindref="compound">CGAL::AABB_traits</ref>&lt;<ref refid="classAABBGeomTraits" kindref="compound">AABBGeomTraits</ref>,<ref refid="classAABBPrimitive" kindref="compound">AABBPrimitive</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1AABB__tree" kindref="compound">CGAL::AABB_tree</ref>&lt;<ref refid="classAABBTraits" kindref="compound">AABBTraits</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classAABBPrimitive" kindref="compound">AABBPrimitive</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/AABBTraits.h" line="17" column="1" bodyfile="Concepts/AABBTraits.h" bodystart="17" bodyend="247"/>
    <listofallmembers>
      <member refid="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Axis</name></member>
      <member refid="classAABBTraits_1a71832e63c8ab85c356fa6b3fc792ed3e" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Bounding_box</name></member>
      <member refid="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1a386e54013a252bdaf3f94ecbd955113a" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>CGAL_X_AXIS</name></member>
      <member refid="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1a9a0a04672b7cdfb607eedc8f9783b325" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>CGAL_Y_AXIS</name></member>
      <member refid="classAABBTraits_1a3216a0d673544fd85b08443e3b3685a1aee8a0cbc4655d5faa5113006907abb50" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>CGAL_Z_AXIS</name></member>
      <member refid="classAABBTraits_1a3fadc69b5c266b650dfcb0a953d2727d" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Closest_point</name></member>
      <member refid="classAABBTraits_1a0f4c70ab9415b68cd08986893892561c" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>closest_point_object</name></member>
      <member refid="classAABBTraits_1aa600068262ed08a8e233ffc3e6ab3b0b" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Compare_distance</name></member>
      <member refid="classAABBTraits_1a6afb566b44dd75a7d59bf77fd99b31aa" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>compare_distance_object</name></member>
      <member refid="classAABBTraits_1af6e7982428973913f86030055e171e49" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Compute_bbox</name></member>
      <member refid="classAABBTraits_1a0bfdfb7ed86eb8500c9bbf88d3530eba" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>compute_bbox_object</name></member>
      <member refid="classAABBTraits_1acd432e5763cef7e50b44f75f8b24c06d" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Do_intersect</name></member>
      <member refid="classAABBTraits_1a598af78d67828151e80354c6dcd727e2" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>do_intersect_object</name></member>
      <member refid="classAABBTraits_1a5dcb3ac721bca9b0e6e75fc44627bc20" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Equal_3</name></member>
      <member refid="classAABBTraits_1aef43118929bc7273d52ec9f38cd7d1f0" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>equal_3_object</name></member>
      <member refid="classAABBTraits_1a1ee53f64a2ab05d4389003d4f36539e4" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>FT</name></member>
      <member refid="classAABBTraits_1a70e323d8c5dd12580bdf06433373b21c" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Intersect</name></member>
      <member refid="classAABBTraits_1a13678d608c359e134d1f7dd2be7d072f" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>intersect_object</name></member>
      <member refid="classAABBTraits_1af5b2ef75e7fca67d9ab37b0d4984000b" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Intersection_and_primitive_id</name></member>
      <member refid="classAABBTraits_1afeb8685b51df66ec98d9bf72e04007bf" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Object_and_primitive_id</name></member>
      <member refid="classAABBTraits_1a4f4e3df6dadeac3164d15f28af48db14" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Point_3</name></member>
      <member refid="classAABBTraits_1a967ceb27204fc7491fe6bd018791b2f7" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Point_and_primitive_id</name></member>
      <member refid="classAABBTraits_1a18812bafada570757269e313ab06ff51" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Primitive</name></member>
      <member refid="classAABBTraits_1a6dba5130cc78298fb7039f479f657fe4" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>set_shared_data</name></member>
      <member refid="classAABBTraits_1a37da0dfd86a08b22fce9f7788fb175a8" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Split_primitives_along_x_axis</name></member>
      <member refid="classAABBTraits_1a193fc6a76c67e8d4684da4c43372e079" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>split_primitives_along_x_axis_object</name></member>
      <member refid="classAABBTraits_1a8ea1d49e004c39f9ea749164da2d26f9" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Split_primitives_along_y_axis</name></member>
      <member refid="classAABBTraits_1a6d7921a73d386a11b3dd12921f350cbb" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>split_primitives_along_y_axis_object</name></member>
      <member refid="classAABBTraits_1acdb2c9986eb42490859516f908e92c56" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Split_primitives_along_z_axis</name></member>
      <member refid="classAABBTraits_1ac785e4dfb70639b486b55f4c57b8e544" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>split_primitives_along_z_axis_object</name></member>
      <member refid="classAABBTraits_1a4dfd5585e5b11a057f1223f024cf3e1c" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>Squared_distance</name></member>
      <member refid="classAABBTraits_1aafb3e8fb18b87a6c580d70aad79018e2" prot="public" virt="non-virtual"><scope>AABBTraits</scope><name>squared_distance_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
