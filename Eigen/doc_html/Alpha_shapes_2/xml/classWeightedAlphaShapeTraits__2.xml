<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classWeightedAlphaShapeTraits__2" kind="class" language="C++" prot="public">
    <compoundname>WeightedAlphaShapeTraits_2</compoundname>
    <includes local="no">Concepts/WeightedAlphaShapeTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classWeightedAlphaShapeTraits__2_1a62f235d26cb6cb8f2b915e9c7ac570c4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WeightedAlphaShapeTraits_2::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>A coordinate type. </para>        </briefdescription>
        <detaileddescription>
<para>The type must provide a copy constructor, assignment, comparison operators, negation, multiplication, division and allow the declaration and initialization with a small integer constant (cf. requirements for number types). An obvious choice would be coordinate type of the point class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WeightedAlphaShapeTraits_2.h" line="37" column="1" bodyfile="Concepts/WeightedAlphaShapeTraits_2.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a default constructor is required.</para><para>Note that further constructors can be provided. </para></description>
      <memberdef kind="function" id="classWeightedAlphaShapeTraits__2_1a1e5e3b275cbd4cfeef5cef937cf94506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WeightedAlphaShapeTraits_2::AlphaShapeTraits_2</definition>
        <argsstring>()</argsstring>
        <name>AlphaShapeTraits_2</name>
        <briefdescription>
<para>A default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WeightedAlphaShapeTraits_2.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructions by function objects</header>
      <memberdef kind="function" id="classWeightedAlphaShapeTraits__2_1abb811c3b53e7a68f79d37627d0ce2c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Compute_squared_radius_smallest_orthogonal_circle_2</type>
        <definition>Compute_squared_radius_smallest_orthogonal_circle_2 WeightedAlphaShapeTraits_2::compute_squared_radius_smallest_orthogonal_circle_2_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_radius_smallest_orthogonal_circle_2_object</name>
        <briefdescription>
<para>Returns an object, which has to be able to compute the squared radius of the orthogonal circle of the points <computeroutput>p0, p1, p2</computeroutput> or the squared radius of the smallest orthogonal circle of the points <computeroutput>p0, p1</computeroutput>, as <computeroutput>FT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WeightedAlphaShapeTraits_2.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicate by function object</header>
      <memberdef kind="function" id="classWeightedAlphaShapeTraits__2_1a6edb5aa31826cda5504926b9987d7656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Power_side_of_bounded_power_circle_2</type>
        <definition>Power_side_of_bounded_power_circle_2 WeightedAlphaShapeTraits_2::power_side_of_bounded_power_circle_2_object</definition>
        <argsstring>()</argsstring>
        <name>power_side_of_bounded_power_circle_2_object</name>
        <briefdescription>
<para>Returns an object, which has to be able to compute the relative position of the point <computeroutput>test</computeroutput> to the smallest orthogonal circle of the points <computeroutput>p0, p1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WeightedAlphaShapeTraits_2.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classWeightedAlphaShapeTraits__2" kindref="compound">WeightedAlphaShapeTraits_2</ref></computeroutput> describes the requirements for the geometric traits class of the underlying regular triangulation of a weighted alpha shape. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000004"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classRegularTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">RegularTriangulationTraits_2</ref></computeroutput></para></xrefdescription></xrefsect></para><para>In addition to the requirements described in the concept <computeroutput><ref refid="classRegularTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">RegularTriangulationTraits_2</ref></computeroutput>, the geometric traits class of a regular triangulation plugged in a basic alpha shapes provides the following.</para><para><xrefsect id="hasModels_1_hasModels000004"><xreftitle>Has Models</xreftitle><xrefdescription><para>All models of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>. </para><para>Projection traits such as <computeroutput><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Projection_traits_xy_3</ref>&lt;K&gt;</computeroutput>.</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Exact_predicates_inexact_constructions_kernel</ref></computeroutput> (recommended kernel) </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/WeightedAlphaShapeTraits_2.h" line="23" column="1" bodyfile="Concepts/WeightedAlphaShapeTraits_2.h" bodystart="23" bodyend="77"/>
    <listofallmembers>
      <member refid="classWeightedAlphaShapeTraits__2_1a1e5e3b275cbd4cfeef5cef937cf94506" prot="public" virt="non-virtual"><scope>WeightedAlphaShapeTraits_2</scope><name>AlphaShapeTraits_2</name></member>
      <member refid="classWeightedAlphaShapeTraits__2_1abb811c3b53e7a68f79d37627d0ce2c53" prot="public" virt="non-virtual"><scope>WeightedAlphaShapeTraits_2</scope><name>compute_squared_radius_smallest_orthogonal_circle_2_object</name></member>
      <member refid="classWeightedAlphaShapeTraits__2_1a62f235d26cb6cb8f2b915e9c7ac570c4" prot="public" virt="non-virtual"><scope>WeightedAlphaShapeTraits_2</scope><name>FT</name></member>
      <member refid="classWeightedAlphaShapeTraits__2_1a6edb5aa31826cda5504926b9987d7656" prot="public" virt="non-virtual"><scope>WeightedAlphaShapeTraits_2</scope><name>power_side_of_bounded_power_circle_2_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
