<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Tree__anchor" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Tree_anchor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Tree_base</basecompoundref>
    <includes local="no">CGAL/Tree_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classCGAL_1_1Tree__anchor_1a079b509cbff6b4c55297d4dcd4309f86" kindref="member">Data</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" kindref="member">Window</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Tree__anchor_1a079b509cbff6b4c55297d4dcd4309f86" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Tree_anchor&lt; Data, Window &gt;::Data</definition>
        <argsstring></argsstring>
        <name>Data</name>
        <briefdescription>
<para>container <computeroutput>Data</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="32" column="1" bodyfile="CGAL/Tree_base.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Tree_anchor&lt; Data, Window &gt;::Window</definition>
        <argsstring></argsstring>
        <name>Window</name>
        <briefdescription>
<para>container <computeroutput>Window</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="37" column="1" bodyfile="CGAL/Tree_base.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1a6819c159e98858865610fe5b7699bbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Tree__anchor" kindref="compound">Tree_anchor</ref>&lt; <ref refid="classCGAL_1_1Tree__anchor_1a079b509cbff6b4c55297d4dcd4309f86" kindref="member">Data</ref>, <ref refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" kindref="member">Window</ref> &gt;</type>
        <definition>Tree_anchor&lt;Data, Window&gt; CGAL::Tree_anchor&lt; Data, Window &gt;::a</definition>
        <argsstring>()</argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1a424445c61439c798468b70b117906f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Tree_anchor&lt; Data, Window &gt;::window_query</definition>
        <argsstring>(Window win, OutputIterator result)</argsstring>
        <name>window_query</name>
        <param>
          <type><ref refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" kindref="member">Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1aedceb60a4645d4e839d6e6ff35c58b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Tree_anchor&lt; Data, Window &gt;::enclosing_query</definition>
        <argsstring>(Window win, OutputIterator result)</argsstring>
        <name>enclosing_query</name>
        <param>
          <type><ref refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" kindref="member">Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1a370b3fd28f310e9a0d23a42786365066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tree_anchor&lt; Data, Window &gt;::is_valid</definition>
        <argsstring>()</argsstring>
        <name>is_valid</name>
        <briefdescription>
<para>returns true; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1a3b3bad65142baf0ebc835cdf438f4c80" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tree_anchor&lt; Data, Window &gt;::is_inside</definition>
        <argsstring>(Window win, Data object)</argsstring>
        <name>is_inside</name>
        <param>
          <type><ref refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" kindref="member">Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Tree__anchor_1a079b509cbff6b4c55297d4dcd4309f86" kindref="member">Data</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>returns true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tree__anchor_1a0cda1dcf460ebb0a4c90469a3bb4e883" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tree_anchor&lt; Data, Window &gt;::is_anchor</definition>
        <argsstring>()</argsstring>
        <name>is_anchor</name>
        <briefdescription>
<para>returns true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tree_base.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classCGAL_1_1Tree__anchor" kindref="compound">Tree_anchor</ref></computeroutput> is also derived from <computeroutput>Tree_base</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>Therefore, it provides the same methods as <computeroutput><ref refid="classCGAL_1_1Range__tree__d" kindref="compound">Range_tree_d</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Segment__tree__d" kindref="compound">Segment_tree_d</ref></computeroutput>, but does nothing; it can be used as a recursion anchor for those classes. Therefore, instantiate <computeroutput>Sublayer_type</computeroutput> of <computeroutput><ref refid="classCGAL_1_1Range__tree__d" kindref="compound">Range_tree_d</ref></computeroutput> (<computeroutput><ref refid="classCGAL_1_1Segment__tree__d" kindref="compound">Segment_tree_d</ref></computeroutput> respectively) with <computeroutput><ref refid="classCGAL_1_1Tree__anchor" kindref="compound">Tree_anchor</ref></computeroutput> and the container classes for the data items (<computeroutput>Data</computeroutput> and <computeroutput>Window</computeroutput>).</para><para><bold>Example</bold><linebreak/>
</para><para>The following figures show a number of rectangles and a 2-dimensional segment tree built on them.</para><para><image type="html" name="segment_ex2.png">Two dimensional interval data and the corresponding segment tree.</image>
<image type="latex" name="segment_ex2.png">Two dimensional interval data and the corresponding segment tree.</image>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="25">
        <label>Tree_base</label>
      </node>
      <node id="24">
        <label>CGAL::Tree_anchor&lt; Data, Window &gt;</label>
        <link refid="classCGAL_1_1Tree__anchor"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="27">
        <label>Tree_base</label>
      </node>
      <node id="26">
        <label>CGAL::Tree_anchor&lt; Data, Window &gt;</label>
        <link refid="classCGAL_1_1Tree__anchor"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Tree_base.h" line="23" column="1" bodyfile="CGAL/Tree_base.h" bodystart="23" bodyend="86"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Tree__anchor_1a6819c159e98858865610fe5b7699bbea" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>a</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a079b509cbff6b4c55297d4dcd4309f86" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>Data</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1aedceb60a4645d4e839d6e6ff35c58b53" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>enclosing_query</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a0cda1dcf460ebb0a4c90469a3bb4e883" prot="protected" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>is_anchor</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a3b3bad65142baf0ebc835cdf438f4c80" prot="protected" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>is_inside</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a370b3fd28f310e9a0d23a42786365066" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a6d5361153adf222274953e856869881e" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>Window</name></member>
      <member refid="classCGAL_1_1Tree__anchor_1a424445c61439c798468b70b117906f24" prot="public" virt="non-virtual"><scope>CGAL::Tree_anchor</scope><name>window_query</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
