<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRangeSegmentTreeTraits__k" kind="class" language="C++" prot="public">
    <compoundname>RangeSegmentTreeTraits_k</compoundname>
    <includes local="no">Concepts/RangeSegmentTreeTraits_k.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a2a2cf68881188f4dbbb647a19ea24468" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
<para>The k-dimensional key type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="88" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a6590577a34838b87a131997c06bf5ba2" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::Interval</definition>
        <argsstring></argsstring>
        <name>Interval</name>
        <briefdescription>
<para>The k-dimensional interval type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="93" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1ab73529de3b20a6f39c0758eb647b91fa" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::Key_i</definition>
        <argsstring></argsstring>
        <name>Key_i</name>
        <briefdescription>
<para>The type in dimension <formula id="10">$ i$</formula>, with <formula id="11">$ 1\leq i \leq k$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="99" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a476b0156566398287373269faa8d9730" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::key_i</definition>
        <argsstring></argsstring>
        <name>key_i</name>
        <briefdescription>
<para>function object providing an <computeroutput>operator()</computeroutput> that takes an argument of type <computeroutput>Key</computeroutput> and returns a component of type <computeroutput>Key_i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="106" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a8d2ecf257f2fcdffa3d495420601804b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::low_i</definition>
        <argsstring></argsstring>
        <name>low_i</name>
        <briefdescription>
<para>function object providing an <computeroutput>operator()</computeroutput> that takes an argument of type <computeroutput>Interval</computeroutput> and returns a component of type <computeroutput>Key_i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="113" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a461608c404d4acb5a098219ae21594fb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::high_i</definition>
        <argsstring></argsstring>
        <name>high_i</name>
        <briefdescription>
<para>function object providing an <computeroutput>operator()</computeroutput> that takes an argument of type <computeroutput>Interval</computeroutput> and returns a component of type <computeroutput>Key_i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="120" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRangeSegmentTreeTraits__k_1a6da610bdf9d6df788c058515b7bfe0d6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RangeSegmentTreeTraits_k::compare_i</definition>
        <argsstring></argsstring>
        <name>compare_i</name>
        <briefdescription>
<para>function object providing an <computeroutput>operator()</computeroutput> that takes two arguments argument <formula id="12">$ a$</formula>, <formula id="13">$ b$</formula> of type <computeroutput>Key_i</computeroutput> and returns true if <formula id="14">$ a&lt;b$</formula>, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RangeSegmentTreeTraits_k.h" line="127" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A tree traits class gives the range tree and segment tree class the necessary type information of the keys and intervals. Further more, they define function objects that allow to access the keys and intervals, and provide comparison functions that are needed for window queries. </para>    </briefdescription>
    <detaileddescription>
<para> <bold>Example</bold><linebreak/>
</para><para>The following piece of code gives an example of how a traits class might look like, if you have keys that are of the type <computeroutput>int</computeroutput> in the first and that are of the type <computeroutput>double</computeroutput> in the second dimension.</para><para><programlisting><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">Int_double_tree_traits_2{<sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;int,<sp/>double&gt;<sp/><ref refid="classRangeSegmentTreeTraits__k_1a2a2cf68881188f4dbbb647a19ea24468" kindref="member">Key</ref>;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Key_1;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Key_2;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;Key,Key&gt;<sp/><ref refid="classRangeSegmentTreeTraits__k_1a6590577a34838b87a131997c06bf5ba2" kindref="member">Interval</ref>;<sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Key_1{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_1<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>k)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k.first;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Key_2{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_2<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>k)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k.second;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Low_1{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_1<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interval&amp;<sp/>i)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i.first.first;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_High_1{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_1<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interval&amp;<sp/>i)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i.second.first;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Low_2{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_2<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interval&amp;<sp/>i)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i.first.second;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_High_2{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Key_2<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interval&amp;<sp/>i)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i.second.second;}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Compare_1{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(Key_1<sp/>k1,<sp/>Key_1<sp/>k2)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>less&lt;int&gt;()(k1,k2);}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_Compare_2{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(Key_2<sp/>k1,<sp/>Key_2<sp/>k2)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>less&lt;double&gt;()(k1,k2);}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Compare_1<sp/>compare_1;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Compare_2<sp/>compare_2;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Low_1<sp/>low_1;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_High_1<sp/>high_1;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Key_1<sp/>key_1;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Low_2<sp/>low_2;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_High_2<sp/>high_2;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>C_Key_2<sp/>key_2;<sp/></highlight></codeline>
<codeline><highlight class="normal">};<sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="Concepts/RangeSegmentTreeTraits_k.h" line="79" column="1" bodyfile="Concepts/RangeSegmentTreeTraits_k.h" bodystart="79" bodyend="131"/>
    <listofallmembers>
      <member refid="classRangeSegmentTreeTraits__k_1a6da610bdf9d6df788c058515b7bfe0d6" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>compare_i</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1a461608c404d4acb5a098219ae21594fb" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>high_i</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1a6590577a34838b87a131997c06bf5ba2" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>Interval</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1a2a2cf68881188f4dbbb647a19ea24468" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>Key</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1a476b0156566398287373269faa8d9730" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>key_i</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1ab73529de3b20a6f39c0758eb647b91fa" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>Key_i</name></member>
      <member refid="classRangeSegmentTreeTraits__k_1a8d2ecf257f2fcdffa3d495420601804b" prot="public" virt="non-virtual"><scope>RangeSegmentTreeTraits_k</scope><name>low_i</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
