<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classSurfaceMeshShortestPathVisitor" kind="class" language="C++" prot="public">
    <compoundname>SurfaceMeshShortestPathVisitor</compoundname>
    <includes local="no">Concepts/SurfaceMeshShortestPathVisitor.h</includes>
      <sectiondef kind="user-defined">
      <header>Methods</header>
      <memberdef kind="function" id="classSurfaceMeshShortestPathVisitor_1af157fd6446aa255d8a21d473ff0fd360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SurfaceMeshShortestPathVisitor::operator()</definition>
        <argsstring>(halfedge_descriptor edge, FT alpha)</argsstring>
        <name>operator()</name>
        <param>
          <type>halfedge_descriptor</type>
          <declname>edge</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Called when an edge was traversed in the shortest path sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>edge</parametername>
</parameternamelist>
<parameterdescription>
<para>halfedge of the surface mesh crossed by the shortest path. The halfedge is directed toward the face <emphasis>nearest</emphasis> to the target point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>value in the range [0.0,1.0] specifying where along <computeroutput>edge</computeroutput> the shortest path crossed.<itemizedlist>
<listitem><para>0.0 means it crossed at <computeroutput>source(edge)</computeroutput></para></listitem><listitem><para>1.0 means it crossed at <computeroutput>target(edge)</computeroutput></para></listitem><listitem><para>Any other value is linearly interpolated between the endpoints.</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that values of 0.0 and 1.0 are possible in some situations, and may not be reported as vertices. In particular, this will occur if the vertex crossed by the path is not a saddle vertex (less than <formula id="1">$2\pi$</formula> surface area). This is because from the perspective of the algorithm, this is indistinguishable from crossing anywhere else along the edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshShortestPathVisitor.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshShortestPathVisitor_1abe798c13f33e32f141afff05a1350079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SurfaceMeshShortestPathVisitor::operator()</definition>
        <argsstring>(vertex_descriptor vertex)</argsstring>
        <name>operator()</name>
        <param>
          <type>vertex_descriptor</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Called when a vertex is encountered in the shortest path sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertex</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex of the surface mesh encountered by the shortest path. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshShortestPathVisitor.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSurfaceMeshShortestPathVisitor_1abb8c1a97be97562ca1c0c5d6ece19064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SurfaceMeshShortestPathVisitor::operator()</definition>
        <argsstring>(face_descriptor face, Barycentric_coordinates location)</argsstring>
        <name>operator()</name>
        <param>
          <type>face_descriptor</type>
          <declname>face</declname>
        </param>
        <param>
          <type>Barycentric_coordinates</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Called when a face location is encountered in the shortest path sequence. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This will only be called as the first and/or last element in the path sequence, and only if the target/source point is an internal face location (i.e. not on an edge or at a vertex). </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face</parametername>
</parameternamelist>
<parameterdescription>
<para>a face of the surface mesh encountered at the start or the end of the shortest path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>the barycentric coordinates inside <computeroutput>face</computeroutput> of this point on the path. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/SurfaceMeshShortestPathVisitor.h" line="50" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classSurfaceMeshShortestPathVisitor" kindref="compound">SurfaceMeshShortestPathVisitor</ref></computeroutput> describes the requirements of the visitor type used to collect the edges and vertices traversed by a shortest path on the surface of a triangulated surface mesh. </para>    </briefdescription>
    <detaileddescription>
<para> The methods are called in the order of the shortest path sequence along the surface, starting with the target point and ending with the source point. </para>    </detaileddescription>
    <location file="Concepts/SurfaceMeshShortestPathVisitor.h" line="16" column="1" bodyfile="Concepts/SurfaceMeshShortestPathVisitor.h" bodystart="15" bodyend="51"/>
    <listofallmembers>
      <member refid="classSurfaceMeshShortestPathVisitor_1af157fd6446aa255d8a21d473ff0fd360" prot="public" virt="non-virtual"><scope>SurfaceMeshShortestPathVisitor</scope><name>operator()</name></member>
      <member refid="classSurfaceMeshShortestPathVisitor_1abe798c13f33e32f141afff05a1350079" prot="public" virt="non-virtual"><scope>SurfaceMeshShortestPathVisitor</scope><name>operator()</name></member>
      <member refid="classSurfaceMeshShortestPathVisitor_1abb8c1a97be97562ca1c0c5d6ece19064" prot="public" virt="non-virtual"><scope>SurfaceMeshShortestPathVisitor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
