<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Constant__property__map" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Constant_property_map</compoundname>
    <includes local="no">CGAL/property_map.h</includes>
    <templateparamlist>
      <param>
        <type>class KeyType</type>
      </param>
      <param>
        <type>class ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCGAL_1_1Constant__property__map_1ac18c1a94845be27bbfc09ce77e0fc60d" prot="public" static="no">
        <type>KeyType</type>
        <definition>typedef KeyType CGAL::Constant_property_map&lt; KeyType, ValueType &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="467" column="1" bodyfile="CGAL/property_map.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" prot="public" static="no">
        <type>ValueType</type>
        <definition>typedef ValueType CGAL::Constant_property_map&lt; KeyType, ValueType &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="468" column="1" bodyfile="CGAL/property_map.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Constant__property__map_1ad5a39dac17b9e1cf0e2ca837148cd364" prot="public" static="no">
        <type>boost::read_write_property_map_tag</type>
        <definition>typedef boost::read_write_property_map_tag CGAL::Constant_property_map&lt; KeyType, ValueType &gt;::category</definition>
        <argsstring></argsstring>
        <name>category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="469" column="1" bodyfile="CGAL/property_map.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structCGAL_1_1Constant__property__map_1ad58e5c5497647ebacb06f61b6b2065ea" prot="public" static="no" mutable="no">
        <type>const ValueType</type>
        <definition>const ValueType CGAL::Constant_property_map&lt; KeyType, ValueType &gt;::default_value</definition>
        <argsstring></argsstring>
        <name>default_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="465" column="1" bodyfile="CGAL/property_map.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Constant__property__map_1a78e50f41d32ad98747fb991a83fa72ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Constant_property_map&lt; KeyType, ValueType &gt;::Constant_property_map</definition>
        <argsstring>(const value_type &amp;default_value=value_type())</argsstring>
        <name>Constant_property_map</name>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" kindref="member">value_type</ref> &amp;</type>
          <declname>default_value</declname>
          <defval><ref refid="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" kindref="member">value_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="471" column="1" bodyfile="CGAL/property_map.h" bodystart="471" bodyend="471"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structCGAL_1_1Constant__property__map_1a36784375b5d555e28b6907a458ef6cf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" kindref="member">value_type</ref></type>
        <definition>value_type get</definition>
        <argsstring>(const Constant_property_map &amp;pm, const key_type &amp;)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map" kindref="compound">Constant_property_map</ref> &amp;</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map_1ac18c1a94845be27bbfc09ce77e0fc60d" kindref="member">key_type</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Free function that returns <computeroutput>pm.default_value</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="475" column="1" bodyfile="CGAL/property_map.h" bodystart="475" bodyend="475"/>
      </memberdef>
      <memberdef kind="friend" id="structCGAL_1_1Constant__property__map_1ada1c538622b8cb129e5508ce0be2bd23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void put</definition>
        <argsstring>(const Constant_property_map &amp;, const key_type &amp;, const value_type &amp;)</argsstring>
        <name>put</name>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map" kindref="compound">Constant_property_map</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map_1ac18c1a94845be27bbfc09ce77e0fc60d" kindref="member">key_type</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" kindref="member">value_type</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Free function that does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/property_map.h" line="479" column="1" bodyfile="CGAL/property_map.h" bodystart="479" bodyend="479"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Property map that returns a fixed value. </para>    </briefdescription>
    <detaileddescription>
<para>Note that this value is chosen when the map is constructed and cannot be changed afterwards. Specifically, the free function <computeroutput><ref refid="structCGAL_1_1Constant__property__map_1ada1c538622b8cb129e5508ce0be2bd23" kindref="member">put()</ref></computeroutput> does nothing.</para><para><xrefsect id="models_1_models000006"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/property_map.h" line="464" column="1" bodyfile="CGAL/property_map.h" bodystart="463" bodyend="480"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Constant__property__map_1ad5a39dac17b9e1cf0e2ca837148cd364" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>category</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1a78e50f41d32ad98747fb991a83fa72ce" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>Constant_property_map</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1ad58e5c5497647ebacb06f61b6b2065ea" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>default_value</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1a36784375b5d555e28b6907a458ef6cf6" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>get</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1ac18c1a94845be27bbfc09ce77e0fc60d" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>key_type</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1ada1c538622b8cb129e5508ce0be2bd23" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>put</name></member>
      <member refid="structCGAL_1_1Constant__property__map_1a4020201b5162039459e654f7cd842fd2" prot="public" virt="non-virtual"><scope>CGAL::Constant_property_map</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
