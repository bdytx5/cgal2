<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classWidthTraits__3" kind="class" language="C++" prot="public">
    <compoundname>WidthTraits_3</compoundname>
    <includes local="no">Concepts/WidthTraits_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para><emphasis>Notes:</emphasis> If you want to compute the width of a <emphasis>polyhedron</emphasis> then you have to make sure that the point type in the traits class and the point type in the polyhedron class are the same! The same holds for <computeroutput>Traits::Plane_3</computeroutput> and <computeroutput>Polyhedron::Plane_3</computeroutput>. </para></description>
      <memberdef kind="typedef" id="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WidthTraits_3::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
<para>The point type. </para>        </briefdescription>
        <detaileddescription>
<para>The (in)equality tests must be available. Access to the point coordinates is done via the <computeroutput>get_.()</computeroutput> functions. Constructing a point is done with the <computeroutput><ref refid="classWidthTraits__3_1a89fa7e48c0874c4d23deb5dbf576388d" kindref="member">make_point( )</ref></computeroutput> operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="34" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WidthTraits_3::Plane_3</definition>
        <argsstring></argsstring>
        <name>Plane_3</name>
        <briefdescription>
<para>The plane type. </para>        </briefdescription>
        <detaileddescription>
<para>Access to the coefficients of the plane is made via the <computeroutput>get_.()</computeroutput> functions. Constructing a plane is done with the <computeroutput><ref refid="classWidthTraits__3_1a8a5d53cee2be5649a58b9963ebd9a166" kindref="member">make_plane()</ref></computeroutput> operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="41" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classWidthTraits__3_1a23dfd7ea348290d60eefe57711ead22e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WidthTraits_3::Vector_3</definition>
        <argsstring></argsstring>
        <name>Vector_3</name>
        <briefdescription>
<para>The vector type. </para>        </briefdescription>
        <detaileddescription>
<para>There is no need to access the coefficients of a vector; only constructing is required and is done with the <computeroutput>make_vector</computeroutput> operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="48" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classWidthTraits__3_1a528b4b2b4282c8aa0930f19e8a622957" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WidthTraits_3::ChullTraits</definition>
        <argsstring></argsstring>
        <name>ChullTraits</name>
        <briefdescription>
<para>The traits class for using the convex hull algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>It must be a model of the concept ConvexHullTraits_3. This class is used only if the width is computed from a set of points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="56" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type WidthTraits_3::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
<para>Ring type numbers. </para>        </briefdescription>
        <detaileddescription>
<para>Internally all numbers are treated as ring type numbers, i.e., neither <formula id="50">$ /$</formula>-operator nor <formula id="51">$ \sqrt{.}$</formula> nor other inexact operations are used. But because the algorithm does not use any divisions, but multiplication instead, the numbers can get really big. Therefore it is recommended to use a ring type number, that provides values of arbitrary length. Furthermore it is assumed that the underlying number type of <computeroutput>Point_3</computeroutput>, <computeroutput>Plane_3</computeroutput> and <computeroutput>Vector_3</computeroutput> equals <computeroutput>RT</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="68" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a default constructor is required. </para></description>
      <memberdef kind="function" id="classWidthTraits__3_1a3a4d02ea98c8a75350a88cf04f9bf989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WidthTraits_3::WidthTraits_3</definition>
        <argsstring>()</argsstring>
        <name>WidthTraits_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1aa8575df1465a92e94741ee425bb0275f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_hx</definition>
        <argsstring>(const Point_3 &amp;p) const</argsstring>
        <name>get_hx</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the homogeneous <formula id="39">$ x$</formula>-coordinate of point <formula id="13">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1aaf25eeb22c1c201a3073ee74dddc6c4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_hy</definition>
        <argsstring>(const Point_3 &amp;p) const</argsstring>
        <name>get_hy</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the homogeneous <formula id="40">$ y$</formula>-coordinate of point <formula id="13">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a6b765930f245cf873a28bc3e7f48ad9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_hz</definition>
        <argsstring>(const Point_3 &amp;p) const</argsstring>
        <name>get_hz</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the homogeneous <formula id="41">$ z$</formula>-coordinate of point <formula id="13">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a1074a9848fea041e5719ff07fe3c9a4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_hw</definition>
        <argsstring>(const Point_3 &amp;p) const</argsstring>
        <name>get_hw</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the homogenizing coordinate of point <formula id="13">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a4011438eeb710774465de8baa2f6896e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WidthTraits_3::get_point_coordinates</definition>
        <argsstring>(const Point_3 &amp;p, RT &amp;px, RT &amp;py, RT &amp;pz, RT &amp;ph) const</argsstring>
        <name>get_point_coordinates</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>pz</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>ph</declname>
        </param>
        <briefdescription>
<para>returns all homogeneous coordinates of point <formula id="13">$ p$</formula> at once. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a9c3c77711293e340c034ad3813110ccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_a</definition>
        <argsstring>(const Plane_3 &amp;f) const</argsstring>
        <name>get_a</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the first coefficient of plane <formula id="42">$ f$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a97f915ac4493b83624be52c87c6cbd65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_b</definition>
        <argsstring>(const Plane_3 &amp;f) const</argsstring>
        <name>get_b</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the second coefficient of plane <formula id="42">$ f$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a139f09ee069fae04add32eb66a12a1c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_c</definition>
        <argsstring>(const Plane_3 &amp;f) const</argsstring>
        <name>get_c</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the third coefficient of plane <formula id="42">$ f$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1ab02c202293f1a2f7f60f5c739f7379a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref></type>
        <definition>RT WidthTraits_3::get_d</definition>
        <argsstring>(const Plane_3 &amp;f) const</argsstring>
        <name>get_d</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the fourth coefficient of plane <formula id="42">$ f$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1af4b6fc6fe4c11a86ceb12a453beac992" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WidthTraits_3::get_plane_coefficients</definition>
        <argsstring>(const Plane_3 &amp;f, RT &amp;a, RT &amp;b, RT &amp;c, RT &amp;d) const</argsstring>
        <name>get_plane_coefficients</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns all four plane coefficients of <formula id="42">$ f$</formula> at once. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classWidthTraits__3_1a89fa7e48c0874c4d23deb5dbf576388d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" kindref="member">Point_3</ref></type>
        <definition>Point_3 make_point</definition>
        <argsstring>(const RT &amp;hx, const RT &amp;hy, const RT &amp;hz, const RT &amp;hw) const</argsstring>
        <name>make_point</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>hy</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>hz</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>hw</declname>
        </param>
        <briefdescription>
<para>returns a point of type <computeroutput>Point_3</computeroutput> with homogeneous coordinates <formula id="43">$ hx$</formula>, <formula id="44">$ hy$</formula>, <formula id="45">$ hz$</formula> and <formula id="46">$ hw$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1a8a5d53cee2be5649a58b9963ebd9a166" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" kindref="member">Plane_3</ref></type>
        <definition>Plane_3 make_plane</definition>
        <argsstring>(const RT &amp;a, const RT &amp;b, const RT &amp;c, const RT &amp;d) const</argsstring>
        <name>make_plane</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns a plane of type <computeroutput>Plane_3</computeroutput> with coefficients <formula id="47">$ a$</formula>, <formula id="48">$ b$</formula>, <formula id="49">$ c$</formula> and <formula id="3">$ d$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classWidthTraits__3_1aed9bdbbfe994910f8323d1c575926fd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWidthTraits__3_1a23dfd7ea348290d60eefe57711ead22e" kindref="member">Vector_3</ref></type>
        <definition>Vector_3 make_vector</definition>
        <argsstring>(const RT &amp;a, const RT &amp;b, const RT &amp;c) const</argsstring>
        <name>make_vector</name>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" kindref="member">RT</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns a vector of type <computeroutput>Vector_3</computeroutput> with the four homogeneous coefficients <formula id="47">$ a$</formula>, <formula id="48">$ b$</formula>, <formula id="49">$ c$</formula> and 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/WidthTraits_3.h" line="168" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This concept defines the requirements for traits classes of <computeroutput>Width_3&lt;Traits&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <bold>Operations</bold><linebreak/>
</para><para>Whatever the coordinates of the points are, it is required for the width-algorithm to have access to the homogeneous representation of points.</para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><ref refid="classCGAL_1_1Width__default__traits__3" kindref="compound">CGAL::Width_default_traits_3</ref></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Width__3" kindref="compound">CGAL::Width_3</ref>&lt;Traits&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/WidthTraits_3.h" line="21" column="1" bodyfile="Concepts/WidthTraits_3.h" bodystart="21" bodyend="145"/>
    <listofallmembers>
      <member refid="classWidthTraits__3_1a528b4b2b4282c8aa0930f19e8a622957" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>ChullTraits</name></member>
      <member refid="classWidthTraits__3_1a9c3c77711293e340c034ad3813110ccc" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_a</name></member>
      <member refid="classWidthTraits__3_1a97f915ac4493b83624be52c87c6cbd65" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_b</name></member>
      <member refid="classWidthTraits__3_1a139f09ee069fae04add32eb66a12a1c7" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_c</name></member>
      <member refid="classWidthTraits__3_1ab02c202293f1a2f7f60f5c739f7379a4" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_d</name></member>
      <member refid="classWidthTraits__3_1a1074a9848fea041e5719ff07fe3c9a4b" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_hw</name></member>
      <member refid="classWidthTraits__3_1aa8575df1465a92e94741ee425bb0275f" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_hx</name></member>
      <member refid="classWidthTraits__3_1aaf25eeb22c1c201a3073ee74dddc6c4f" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_hy</name></member>
      <member refid="classWidthTraits__3_1a6b765930f245cf873a28bc3e7f48ad9e" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_hz</name></member>
      <member refid="classWidthTraits__3_1af4b6fc6fe4c11a86ceb12a453beac992" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_plane_coefficients</name></member>
      <member refid="classWidthTraits__3_1a4011438eeb710774465de8baa2f6896e" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>get_point_coordinates</name></member>
      <member refid="classWidthTraits__3_1a8a5d53cee2be5649a58b9963ebd9a166" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>make_plane</name></member>
      <member refid="classWidthTraits__3_1a89fa7e48c0874c4d23deb5dbf576388d" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>make_point</name></member>
      <member refid="classWidthTraits__3_1aed9bdbbfe994910f8323d1c575926fd5" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>make_vector</name></member>
      <member refid="classWidthTraits__3_1a3aea23ad009fe4e60fdea6a265e9dea3" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>Plane_3</name></member>
      <member refid="classWidthTraits__3_1a20bb4269a8ce5945eaa8b2324bdb7067" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>Point_3</name></member>
      <member refid="classWidthTraits__3_1adb6b9133a1dc61b123b4ec0c263ed8f3" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>RT</name></member>
      <member refid="classWidthTraits__3_1a23dfd7ea348290d60eefe57711ead22e" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>Vector_3</name></member>
      <member refid="classWidthTraits__3_1a3a4d02ea98c8a75350a88cf04f9bf989" prot="public" virt="non-virtual"><scope>WidthTraits_3</scope><name>WidthTraits_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
