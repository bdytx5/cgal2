<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPolynomialTraits__d_1_1Resultant" kind="class" language="C++" prot="public">
    <compoundname>PolynomialTraits_d::Resultant</compoundname>
    <includes local="no">Concepts/PolynomialTraits_d--Resultant.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Resultant_1a5910ca99654c331fe2fd343c94d705d7" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a216bb8cfbf2849fa9b3f6b7437b56d09" kindref="member">PolynomialTraits_d::Coefficient_type</ref></type>
        <definition>typedef PolynomialTraits_d::Coefficient_type PolynomialTraits_d::Resultant::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Resultant.h" line="68" column="1" bodyfile="Concepts/PolynomialTraits_d--Resultant.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Resultant_1a20d283ce8da557040d31db8eda1845ee" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        <definition>typedef PolynomialTraits_d::Polynomial_d PolynomialTraits_d::Resultant::first_argument_type</definition>
        <argsstring></argsstring>
        <name>first_argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Resultant.h" line="73" column="1" bodyfile="Concepts/PolynomialTraits_d--Resultant.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Resultant_1a4732bdc463f28146c38f6eb6bd1a0fcf" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        <definition>typedef PolynomialTraits_d::Polynomial_d PolynomialTraits_d::Resultant::second_argument_type</definition>
        <argsstring></argsstring>
        <name>second_argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Resultant.h" line="78" column="1" bodyfile="Concepts/PolynomialTraits_d--Resultant.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1Resultant_1a2ec2b27f9335e9fb5ce5f22bfb266426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolynomialTraits__d_1_1Resultant_1a5910ca99654c331fe2fd343c94d705d7" kindref="member">result_type</ref></type>
        <definition>result_type PolynomialTraits_d::Resultant::operator()</definition>
        <argsstring>(first_argument_type f, second_argument_type g)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classPolynomialTraits__d_1_1Resultant_1a20d283ce8da557040d31db8eda1845ee" kindref="member">first_argument_type</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classPolynomialTraits__d_1_1Resultant_1a4732bdc463f28146c38f6eb6bd1a0fcf" kindref="member">second_argument_type</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Computes the resultant of <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula>, with respect to the outermost variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Resultant.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> computes the <emphasis>resultant</emphasis> of two polynomials <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> of type <computeroutput><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></computeroutput> with respect to a certain variable. </para>    </briefdescription>
    <detaileddescription>
<para> Note that this functor operates on the polynomial in the univariate view, that is, the polynomial is considered as a univariate polynomial in one specific variable.</para><para>Let <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> be two univariate polynomials over some commutative ring <formula id="112">$ A$</formula>, where <formula id="113">\[ f = f_mx^m + \dots + f_0 \]</formula> and <formula id="114">\[ g = g_nx^n + \dots + g_0. \]</formula> The resultant of <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> is defined as the determinant of the <emphasis>Sylvester matrix</emphasis>:</para><para><image type="html" name="sylvester_matrix.png"></image>
 <image type="latex" name="sylvester_matrix.png"></image>
</para><para>Note that this is a <formula id="115">$ (n+m)\times(n+m)$</formula> matrix as there are <formula id="91">$ n$</formula> rows for <formula id="7">$ f$</formula> and <formula id="92">$ m$</formula> rows that are used for <formula id="53">$ g$</formula>. The blank spaces are supposed to be filled with zeros.</para><para></para><para>Let <formula id="116">$ L$</formula> be the algebraic closure of <formula id="112">$ A$</formula>, and write <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> as <formula id="117">\[ f := f_m \ccProd{i=1}{m}{(x-\alpha_i)},\ \alpha_i \in L \]</formula> and <formula id="118">\[ g := g_n \ccProd{j=1}{n}{(x-\beta_j)},\ \beta_i \in L, \]</formula> then the resultant of <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> is (up to leading coefficients) the product of all pairwise differences of the roots of <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula>, namely <formula id="119">\[ res(f,g) = f_m^n g_n^m \ccProd{i=1}{m}{\ccProd{j=1}{n}{(\alpha_i-\beta_j)}}. \]</formula> In particular, <formula id="120">$ res(f,g) \neq 0$</formula> iff <formula id="7">$ f$</formula> and <formula id="53">$ g$</formula> have a common factor with a positive degree in <formula id="121">$ X$</formula>. </para><para>There are various ways to compute the resultant. Naive options are the computation of the resultant as the determinant of the Sylvester Matrix or the Bezout Matrix as well as the so called subresultant algorithm, which is a variant of the Euclidean Algorithm. More sophisticated methods may use modular arithmetic and interpolation. For more information we refer to, e.g., <ref refid="citelist_1CITEREF_gg-mca-99" kindref="member">[2]</ref>.</para><para><xrefsect id="refines_1_refines000035"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classPolynomial__d" kindref="compound">Polynomial_d</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d" kindref="compound">PolynomialTraits_d</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1UnivariateContent" kindref="compound">PolynomialTraits_d::UnivariateContent</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1PolynomialSubresultants" kindref="compound">PolynomialTraits_d::PolynomialSubresultants</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1PrincipalSubresultants" kindref="compound">PolynomialTraits_d::PrincipalSubresultants</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PolynomialTraits_d--Resultant.h" line="59" column="1" bodyfile="Concepts/PolynomialTraits_d--Resultant.h" bodystart="59" bodyend="94"/>
    <listofallmembers>
      <member refid="classPolynomialTraits__d_1_1Resultant_1a20d283ce8da557040d31db8eda1845ee" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Resultant</scope><name>first_argument_type</name></member>
      <member refid="classPolynomialTraits__d_1_1Resultant_1a2ec2b27f9335e9fb5ce5f22bfb266426" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Resultant</scope><name>operator()</name></member>
      <member refid="classPolynomialTraits__d_1_1Resultant_1a5910ca99654c331fe2fd343c94d705d7" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Resultant</scope><name>result_type</name></member>
      <member refid="classPolynomialTraits__d_1_1Resultant_1a4732bdc463f28146c38f6eb6bd1a0fcf" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Resultant</scope><name>second_argument_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
