<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPolynomialTraits__d_1_1Move" kind="class" language="C++" prot="public">
    <compoundname>PolynomialTraits_d::Move</compoundname>
    <includes local="no">Concepts/PolynomialTraits_d--Move.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Move_1a227f2473e24f4b7645557e2e255e8cd2" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        <definition>typedef PolynomialTraits_d::Polynomial_d PolynomialTraits_d::Move::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Move.h" line="31" column="1" bodyfile="Concepts/PolynomialTraits_d--Move.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1Move_1abf1433290155549fdb03a4d90bcb1fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolynomialTraits__d_1_1Move_1a227f2473e24f4b7645557e2e255e8cd2" kindref="member">result_type</ref></type>
        <definition>result_type PolynomialTraits_d::Move::operator()</definition>
        <argsstring>(PolynomialTraits_d::Polynomial_d, int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>This function moves the variable at position <formula id="15">$ i$</formula> to its new position <formula id="69">$ j$</formula> and returns the new polynomial. </para>        </briefdescription>
        <detaileddescription>
<para>The relative order of the other variables is preserved. <simplesect kind="pre"><para><formula id="40">$ 0 \leq i &lt; d$</formula>. </para></simplesect>
<simplesect kind="pre"><para><formula id="71">$ 0 \leq j &lt; d$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Move.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> moves a variable at position <formula id="15">$ i$</formula> to a new position <formula id="69">$ j$</formula>. The relative order of the other variables is preserved, that is, the variables between <formula id="32">$ x_i$</formula> and <formula id="70">$ x_j$</formula> (including <formula id="70">$ x_j$</formula>) are moved by one position while <formula id="32">$ x_i$</formula> is moved to the former position of <formula id="70">$ x_j$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para> This function may be used to make a certain variable the outer most variable.</para><para><xrefsect id="refines_1_refines000024"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> </para><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classPolynomial__d" kindref="compound">Polynomial_d</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d" kindref="compound">PolynomialTraits_d</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PolynomialTraits_d--Move.h" line="22" column="1" bodyfile="Concepts/PolynomialTraits_d--Move.h" bodystart="22" bodyend="51"/>
    <listofallmembers>
      <member refid="classPolynomialTraits__d_1_1Move_1abf1433290155549fdb03a4d90bcb1fc5" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Move</scope><name>operator()</name></member>
      <member refid="classPolynomialTraits__d_1_1Move_1a227f2473e24f4b7645557e2e255e8cd2" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Move</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
