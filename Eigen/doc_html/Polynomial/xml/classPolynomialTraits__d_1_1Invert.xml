<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPolynomialTraits__d_1_1Invert" kind="class" language="C++" prot="public">
    <compoundname>PolynomialTraits_d::Invert</compoundname>
    <includes local="no">Concepts/PolynomialTraits_d--Invert.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Invert_1a0f64ce086e1afe39a32caf8240b63527" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        <definition>typedef PolynomialTraits_d::Polynomial_d PolynomialTraits_d::Invert::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Invert.h" line="34" column="1" bodyfile="Concepts/PolynomialTraits_d--Invert.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPolynomialTraits__d_1_1Invert_1a20c9a31d055e14e96351c7a8dab83ae9" prot="public" static="no">
        <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></type>
        <definition>typedef PolynomialTraits_d::Polynomial_d PolynomialTraits_d::Invert::argument_type</definition>
        <argsstring></argsstring>
        <name>argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Invert.h" line="39" column="1" bodyfile="Concepts/PolynomialTraits_d--Invert.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1Invert_1ad3c55563d388ca43d5973d8dded0650c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolynomialTraits__d_1_1Invert_1a0f64ce086e1afe39a32caf8240b63527" kindref="member">result_type</ref></type>
        <definition>result_type PolynomialTraits_d::Invert::operator()</definition>
        <argsstring>(argument_type p)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classPolynomialTraits__d_1_1Invert_1a20c9a31d055e14e96351c7a8dab83ae9" kindref="member">argument_type</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="59">$ x^{degree(p)}p(1/x)$</formula>, where x refers to the outermost variable <formula id="29">$ x_{d-1}$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Invert.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1Invert_1abeb0a92e1e400b635108ba08f1f48788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPolynomialTraits__d_1_1Invert_1a0f64ce086e1afe39a32caf8240b63527" kindref="member">result_type</ref></type>
        <definition>result_type PolynomialTraits_d::Invert::operator()</definition>
        <argsstring>(argument_type p, int i)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classPolynomialTraits__d_1_1Invert_1a20c9a31d055e14e96351c7a8dab83ae9" kindref="member">argument_type</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return <formula id="60">$ x^{degree(p,i)}p(1/x)$</formula>, where x refers to the variable <formula id="61">$ x_{i}$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="40">$ 0 \leq i &lt; d$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--Invert.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <computeroutput><ref refid="classAdaptableUnaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableUnaryFunction</ref></computeroutput> inverts one variable in a given <computeroutput><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></computeroutput>, that is, for a given polynomial <formula id="20">$ p$</formula> it computes <formula id="59">$ x^{degree(p)}p(1/x)$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para> Note that this functor operates on the polynomial in the univariate view, that is, the polynomial is considered as a univariate polynomial in one specific variable.</para><para>This functor is provided for efficiency reasons, since this operation just inverts the order of the coefficients with respect to the specified variable.</para><para><xrefsect id="refines_1_refines000017"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableUnaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableUnaryFunction</ref></computeroutput> </para><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classPolynomial__d" kindref="compound">Polynomial_d</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d" kindref="compound">PolynomialTraits_d</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PolynomialTraits_d--Invert.h" line="25" column="1" bodyfile="Concepts/PolynomialTraits_d--Invert.h" bodystart="25" bodyend="64"/>
    <listofallmembers>
      <member refid="classPolynomialTraits__d_1_1Invert_1a20c9a31d055e14e96351c7a8dab83ae9" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Invert</scope><name>argument_type</name></member>
      <member refid="classPolynomialTraits__d_1_1Invert_1ad3c55563d388ca43d5973d8dded0650c" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Invert</scope><name>operator()</name></member>
      <member refid="classPolynomialTraits__d_1_1Invert_1abeb0a92e1e400b635108ba08f1f48788" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Invert</scope><name>operator()</name></member>
      <member refid="classPolynomialTraits__d_1_1Invert_1a0f64ce086e1afe39a32caf8240b63527" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::Invert</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
