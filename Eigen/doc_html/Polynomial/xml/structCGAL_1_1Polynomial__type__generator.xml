<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Polynomial__type__generator" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Polynomial_type_generator</compoundname>
    <includes local="no">CGAL/Polynomial_type_generator.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>d</declname>
        <defname>d</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Polynomial__type__generator_1a10b03cbc95bdaedcb94e2240ad9f0e9d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Polynomial_type_generator&lt; T, d &gt;::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
<para>The generated type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polynomial_type_generator.h" line="25" column="1" bodyfile="CGAL/Polynomial_type_generator.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class template provides a convenient way to obtain the type representing a multivariate polynomial with <computeroutput>d</computeroutput> variables, where <computeroutput>T</computeroutput> is the innermost coefficient type. </para>    </briefdescription>
    <detaileddescription>
<para>In case <computeroutput>T</computeroutput> happens to be a <computeroutput><ref refid="classCGAL_1_1Polynomial" kindref="compound">CGAL::Polynomial</ref></computeroutput> the generator will add <computeroutput>d</computeroutput> variables to <computeroutput>T</computeroutput>.</para><para><computeroutput>T</computeroutput> must be a model of <computeroutput><ref refid="classIntegralDomainWithoutDivision" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">IntegralDomainWithoutDivision</ref></computeroutput>.</para><para><computeroutput>d</computeroutput> must be of type int.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polynomial" kindref="compound">CGAL::Polynomial</ref>&lt;Coeff&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Polynomial_type_generator.h" line="17" column="1" bodyfile="CGAL/Polynomial_type_generator.h" bodystart="17" bodyend="29"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Polynomial__type__generator_1a10b03cbc95bdaedcb94e2240ad9f0e9d" prot="public" virt="non-virtual"><scope>CGAL::Polynomial_type_generator</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
