<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Exponent__vector" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Exponent_vector</compoundname>
    <includes local="no">CGAL/Exponent_vector.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ac8614bb64edda25a7387756211de84a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>()</argsstring>
        <name>Exponent_vector</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1af07055dfe81a8bf84936ef9b2e338226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(const Exponent_vector &amp;ev_)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev_</declname>
        </param>
        <briefdescription>
<para>The copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a452d56d171010a7262afe471d4550302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(int e1)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type>int</type>
          <declname>e1</declname>
        </param>
        <briefdescription>
<para>Creates a vector containing the given element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a7e4da4e8fe7e6abfd5add08fa94deec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(int e1, int e2)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type>int</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
<para>Creates a vector containing the given elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ae0aa2b99373bec22027b6d5bcb907f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(int e1, int e2, int e3)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type>int</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e3</declname>
        </param>
        <briefdescription>
<para>Creates a vector containing the given elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a98c7225facb619136c9b899ad3d24279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(int e1, int e2, int e3, int e4)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type>int</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e4</declname>
        </param>
        <briefdescription>
<para>Creates a vector containing the given elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a18e7d13bac6525c8db2ea945dc3eb29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Exponent_vector::Exponent_vector</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>Exponent_vector</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Creates a vector with a copy of the given range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must allow the value type <computeroutput>int</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a4a62756f8a3f78c7f5b18b4babd9a99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator+</definition>
        <argsstring>(const Exponent_vector &amp;ev1)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1aacc2338f45f7a6b00127123d413b82ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator-</definition>
        <argsstring>(const Exponent_vector &amp;ev1)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a5f4f0c0b7bc17a5eaf0ad27b0a1853d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator+</definition>
        <argsstring>(const Exponent_vector &amp;ev1, const Exponent_vector &amp;ev2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>ev1.size() == ev2.size(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ae7faeeaa00a1233b3ed6c239018cb5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator-</definition>
        <argsstring>(const Exponent_vector &amp;ev1, const Exponent_vector &amp;ev2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>ev1.size() == ev2.size() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ad9c1a5c175dade1e481336ece091e025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator+=</definition>
        <argsstring>(const Exponent_vector &amp;ev2)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>fo</computeroutput>.size() == ev2.size() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ac3102869764083154090bacfb58be36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></type>
        <definition>Exponent_vector CGAL::Exponent_vector::operator-=</definition>
        <argsstring>(const Exponent_vector &amp;ev2)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>fo</computeroutput>.size() == ev2.size() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a0b4a9953cf17764ca566e7c923884e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Exponent_vector::operator==</definition>
        <argsstring>(const Exponent_vector &amp;ev1, const Exponent_vector &amp;ev2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1a50fe023a794cf7680cb6b7577d6adf90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Exponent_vector::operator!=</definition>
        <argsstring>(const Exponent_vector &amp;ev1, const Exponent_vector &amp;ev2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1ae42930d09a7d4543e0b8a5b6eb26cd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Exponent_vector::operator&lt;</definition>
        <argsstring>(const Exponent_vector &amp;ev1, const Exponent_vector &amp;ev2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev2</declname>
        </param>
        <briefdescription>
<para>Lexicographic compare, starting with the <emphasis>last</emphasis> variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="148" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Exponent__vector_1aa104dc4e461eab2c35d18f71fb4f76f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_valid</definition>
        <argsstring>(const Exponent_vector &amp;ev)</argsstring>
        <name>is_valid</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref> &amp;</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
<para>Returns true if all entries of exponent vector <computeroutput>ev</computeroutput> are not negative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Exponent_vector.h" line="159" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>For a given (multivariate) monomial the vector of its exponents is called the exponent vector. </para>    </briefdescription>
    <detaileddescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></computeroutput> is meant to represent such a vector.</para><para>A vector is considered as valid, in case it represents a valid monomial. that is, it should not contain negative exponents. We decided to use int as the value type, since negative exponents may appear in intermediate results. The set of exponent vectors with elementwise addition forms an <emphasis>Abelian Group</emphasis>.</para><para>Beside the constructors <computeroutput><ref refid="classCGAL_1_1Exponent__vector" kindref="compound">Exponent_vector</ref></computeroutput> has almost the same interface as an <computeroutput>std::vector&lt;int&gt;</computeroutput>. Moreover the comparison is changed such that the lexicographic order starts the comparison at the last entry. This reflects the fact that the last entry corresponds to the outermost variable of a multivariate polynomial.</para><para><xrefsect id="models_1_models000001"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> </para><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para><para><computeroutput><ref refid="classAssignable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Assignable</ref></computeroutput> </para><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para><para><computeroutput><ref refid="classEqualityComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">EqualityComparable</ref></computeroutput> </para><para><computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classPolynomial__d" kindref="compound">Polynomial_d</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d" kindref="compound">PolynomialTraits_d</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Exponent_vector.h" line="35" column="1" bodyfile="CGAL/Exponent_vector.h" bodystart="35" bodyend="153"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Exponent__vector_1ac8614bb64edda25a7387756211de84a3" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1af07055dfe81a8bf84936ef9b2e338226" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a452d56d171010a7262afe471d4550302" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a7e4da4e8fe7e6abfd5add08fa94deec6" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1ae0aa2b99373bec22027b6d5bcb907f46" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a98c7225facb619136c9b899ad3d24279" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a18e7d13bac6525c8db2ea945dc3eb29c" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>Exponent_vector</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1aa104dc4e461eab2c35d18f71fb4f76f8" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a50fe023a794cf7680cb6b7577d6adf90" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a4a62756f8a3f78c7f5b18b4babd9a99c" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a5f4f0c0b7bc17a5eaf0ad27b0a1853d0" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1ad9c1a5c175dade1e481336ece091e025" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1aacc2338f45f7a6b00127123d413b82ae" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1ae7faeeaa00a1233b3ed6c239018cb5b5" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1ac3102869764083154090bacfb58be36d" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator-=</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1ae42930d09a7d4543e0b8a5b6eb26cd65" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator&lt;</name></member>
      <member refid="classCGAL_1_1Exponent__vector_1a0b4a9953cf17764ca566e7c923884e40" prot="public" virt="non-virtual"><scope>CGAL::Exponent_vector</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
