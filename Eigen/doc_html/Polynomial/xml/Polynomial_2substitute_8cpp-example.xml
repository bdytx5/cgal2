<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Polynomial_2substitute_8cpp-example" kind="example">
    <compoundname>Polynomial/substitute.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial_traits_d.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial_type_generator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgIOstreams_1ga2f2176255429973ea7bf156804a53857" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Stream_support.tag">CGAL::set_pretty_mode</ref>(std::cout);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CGAL::Polynomial_type_generator&lt;int,2&gt;::Type</ref><sp/>Poly_2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Polynomial__traits__d" kindref="compound">CGAL::Polynomial_traits_d&lt;Poly_2&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PT_2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//construction<sp/>using<sp/>shift<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_2<sp/>x<sp/>=<sp/>PT_2::Shift()(Poly_2(1),1,0);<sp/></highlight><highlight class="comment">//<sp/>x^1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_2<sp/>y<sp/>=<sp/>PT_2::Shift()(Poly_2(1),1,1);<sp/></highlight><highlight class="comment">//<sp/>y^1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_2<sp/>F<sp/>=<sp/>2*x*y<sp/>+<sp/>3*CGAL::ipower(y,3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>bivariate<sp/>polynomial<sp/>F:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>F<sp/></highlight><highlight class="comment">//<sp/>=<sp/>3*y^3<sp/>+<sp/>(2*x)*y</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_2::Evaluate<sp/><ref refid="group__PkgPolynomialFunctions_1gafa3f901a791e00db48197828c4ccae78" kindref="member">evaluate</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_2::Evaluate_homogeneous<sp/>hevaluate;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluation<sp/>considers<sp/>a<sp/>polynomials<sp/>as<sp/>univariate:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;F(5):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gafa3f901a791e00db48197828c4ccae78" kindref="member">evaluate</ref>(F,5)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>10*x<sp/>+<sp/>375</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate_homogeneous<sp/>considers<sp/>F<sp/>as<sp/>a<sp/>homogeneous<sp/>polynomial<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>outermost<sp/>variable<sp/>only,<sp/>that<sp/>is,<sp/>F<sp/>is<sp/>interpreted<sp/>as<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>F(u,v)<sp/>=<sp/>2*x*u*v^2<sp/>+<sp/>3<sp/>*<sp/>u^3<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;F(5,7):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hevaluate(F,5,7)<sp/></highlight><highlight class="comment">//<sp/>=<sp/>490*x<sp/>+<sp/>375</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_2::Substitute<sp/><ref refid="group__PkgPolynomialFunctions_1gab56d5f9b520a1a95aeb7823335088653" kindref="member">substitute</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_2::Substitute_homogeneous<sp/>hsubstitute;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Substitute<sp/>considers<sp/>a<sp/>polynomials<sp/>as<sp/>multivariate,<sp/>that<sp/>is,<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>values<sp/>for<sp/>the<sp/>variables<sp/>are<sp/>given<sp/>by<sp/>an<sp/>iterator<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>value<sp/>type<sp/>only<sp/>has<sp/>to<sp/>be<sp/>interoperable<sp/>with<sp/>the<sp/>innermost<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Poly_2&gt;<sp/>replacements;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>replacements.push_back(x-1);<sp/></highlight><highlight class="comment">//<sp/>replace<sp/>x<sp/>by<sp/>x-1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>replacements.push_back(y);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>y<sp/>by<sp/>y,<sp/>i.e.,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>bivariate<sp/>polynomial<sp/>F:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>F<sp/></highlight><highlight class="comment">//<sp/>=<sp/>3*y^3<sp/>+<sp/>(2*x)*y</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;F(x-1,y):<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>=<sp/>3*y^3<sp/>+<sp/>(2*x<sp/>+<sp/>(-2))*y</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gab56d5f9b520a1a95aeb7823335088653" kindref="member">substitute</ref>(F,replacements.begin(),replacements.end())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Substitute_homogeneous<sp/>considers<sp/>F<sp/>as<sp/>a<sp/>homogeneous<sp/>polynomial<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>variable,<sp/>that<sp/>is,<sp/>F<sp/>is<sp/>interpreted<sp/>as<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>F(x,y,w)<sp/>=<sp/>2*x*y*w<sp/>+<sp/>3<sp/>*<sp/>y^3<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>replacements.push_back(y);<sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>z<sp/>by<sp/>y<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;F(x-1,y,y):<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>=<sp/>3*y^3<sp/>+<sp/>(2*x<sp/>+<sp/>(-2))*y^2</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>hsubstitute(F,replacements.begin(),replacements.end())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
