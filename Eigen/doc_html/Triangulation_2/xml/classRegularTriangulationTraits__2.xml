<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRegularTriangulationTraits__2" kind="class" language="C++" prot="public">
    <compoundname>RegularTriangulationTraits_2</compoundname>
    <includes local="no">Concepts/RegularTriangulationTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1ac120dcce4a28d91c6da782f717f30061" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Weighted_point_2</definition>
        <argsstring></argsstring>
        <name>Weighted_point_2</name>
        <briefdescription>
<para>The weighted point type. </para>        </briefdescription>
        <detaileddescription>
<para>It has to be a model of the concept <computeroutput><ref refid="classKernel_1_1WeightedPoint__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::WeightedPoint_2</ref></computeroutput>.</para><para><simplesect kind="note"><para>The unweighted point type <computeroutput>Point_2</computeroutput> is requested by the concept <computeroutput><ref refid="classTriangulationTraits__2" kindref="compound">TriangulationTraits_2</ref></computeroutput>, which this concept refines. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="38" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1ae2fbb032b56fa1911efe7576e28aff49" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Power_side_of_oriented_power_circle_2</definition>
        <argsstring></argsstring>
        <name>Power_side_of_oriented_power_circle_2</name>
        <briefdescription>
<para>A predicate object, model of <computeroutput>PowerSideOfOrientedPowerCircle_2</computeroutput>, that must provide operators for the power test applied to two, three, and four points. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide the operators:</para><para><itemizedlist>
<listitem><para><computeroutput>Oriented_side operator() ( Weighted_point_2 p, Weighted_point_2 q, Weighted_point_2 r, Weighted_point_2 s)</computeroutput> which is the power test for points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput> and <computeroutput>s</computeroutput>. <simplesect kind="pre"><para>the bare points corresponding to <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput> are not collinear.</para></simplesect>
</para></listitem><listitem><para><computeroutput>Oriented_side operator() ( Weighted_point_2 p, Weighted_point_2 q, Weighted_point_2 r)</computeroutput> which is the degenerate power test for collinear points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput>. <simplesect kind="pre"><para>the bare points corresponding to <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput> are collinear and <computeroutput>p != q</computeroutput>.</para></simplesect>
</para></listitem><listitem><para><computeroutput>Oriented_side operator() ( Weighted_point_2 p, Weighted_point_2 q)</computeroutput> which is the degenerate power test for weighted points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> whose corresponding bare-points are identical. <simplesect kind="pre"><para>the bare points corresponding to <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> are identical. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="62" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1a6a29b3189fbcb9bd8d62fb3fca2c2900" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Construct_point_2</definition>
        <argsstring></argsstring>
        <name>Construct_point_2</name>
        <briefdescription>
<para>A constructor type, model of <computeroutput><ref refid="classKernel_1_1ConstructPoint__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ConstructPoint_2</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>operator()</computeroutput> extracts the bare point from a weighted point.</para><para><computeroutput>Point_2 operator() ( Weighted_point_2 p);</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="71" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Optional Types</header>
      <description><para>The following type/predicate is required for a call to <computeroutput>nearest_power_vertex()</computeroutput>: </para></description>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1a841ed32814dc13205c9a1cf21320794e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Compare_power_distance_2</definition>
        <argsstring></argsstring>
        <name>Compare_power_distance_2</name>
        <briefdescription>
<para>A function object, model of <computeroutput><ref refid="classKernel_1_1ComparePowerDistance__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ComparePowerDistance_2</ref></computeroutput> for comparing two power distances. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide the operator:</para><para><computeroutput>Comparison_result operator()(Point_2 p, Weighted_point_2 q, Weighted_point_2 r)</computeroutput>, which compares the power distance between <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> to the power distance between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="89" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>The following types/predicates are required to compute duals: </para></description>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1a5afccd3a57efb781a7587fe56dafffd3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Construct_weighted_circumcenter_2</definition>
        <argsstring></argsstring>
        <name>Construct_weighted_circumcenter_2</name>
        <briefdescription>
<para>A function object, model of <computeroutput><ref refid="classKernel_1_1ConstructWeightedCircumcenter__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ConstructWeightedCircumcenter_2</ref></computeroutput>, that constructs the weighted circumcenter of three weighted points. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide the operator:</para><para><computeroutput>Point_2 operator() ( Weighted_point_2 p, Weighted_point_2 q, Weighted_point_2 r);</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="107" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__2_1a0573bdad2572098142a4821194a590df" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_2::Construct_radical_axis_2</definition>
        <argsstring></argsstring>
        <name>Construct_radical_axis_2</name>
        <briefdescription>
<para>A function object, model of <computeroutput><ref refid="classKernel_1_1ConstructRadicalAxis__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ConstructRadicalAxis_2</ref></computeroutput>, that constructs the radical axis of two weighted points. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide the operator:</para><para><computeroutput>Line_2 operator() ( Weighted_point_2 p, Weighted_point_2 q);</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="119" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1a4c6500358f93c71c6b417353b616639f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RegularTriangulationTraits_2::RegularTriangulationTraits_2</definition>
        <argsstring>()</argsstring>
        <name>RegularTriangulationTraits_2</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1a26e1c954730b13c304abdbc9dc7a84df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RegularTriangulationTraits_2::RegularTriangulationTraits_2</definition>
        <argsstring>(const RegularTriangulationTraits_2 &amp;)</argsstring>
        <name>RegularTriangulationTraits_2</name>
        <param>
          <type>const <ref refid="classRegularTriangulationTraits__2" kindref="compound">RegularTriangulationTraits_2</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1a7383338fe818419c0cf4308ffcce815c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2" kindref="compound">RegularTriangulationTraits_2</ref> &amp;</type>
        <definition>RegularTriangulationTraits_2&amp; RegularTriangulationTraits_2::operator=</definition>
        <argsstring>(const RegularTriangulationTraits_2 &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classRegularTriangulationTraits__2" kindref="compound">RegularTriangulationTraits_2</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to Predicate and Constructors Objects</header>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1aa9a0aaac820b9458bca097cf21fc071c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2_1ae2fbb032b56fa1911efe7576e28aff49" kindref="member">Power_side_of_oriented_power_circle_2</ref></type>
        <definition>Power_side_of_oriented_power_circle_2 RegularTriangulationTraits_2::power_side_of_oriented_power_circle_2_object</definition>
        <argsstring>()</argsstring>
        <name>power_side_of_oriented_power_circle_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1a04cca4a7b08a81dc3c798a6f85313be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2_1a841ed32814dc13205c9a1cf21320794e" kindref="member">Compare_power_distance_2</ref></type>
        <definition>Compare_power_distance_2 RegularTriangulationTraits_2::compare_power_distance_2_object</definition>
        <argsstring>()</argsstring>
        <name>compare_power_distance_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1afc8947601c5882fab0180e09e3f1ccc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2_1a6a29b3189fbcb9bd8d62fb3fca2c2900" kindref="member">Construct_point_2</ref></type>
        <definition>Construct_point_2 RegularTriangulationTraits_2::construct_point_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_point_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1acdbe707eed702610f273d5cb4baa87a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2_1a5afccd3a57efb781a7587fe56dafffd3" kindref="member">Construct_weighted_circumcenter_2</ref></type>
        <definition>Construct_weighted_circumcenter_2 RegularTriangulationTraits_2::construct_weighted_circumcenter_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_weighted_circumcenter_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__2_1a0c4f60e043c081e14a8a167a1a1dcd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__2_1a0573bdad2572098142a4821194a590df" kindref="member">Construct_radical_axis_2</ref></type>
        <definition>Construct_radical_axis_2 RegularTriangulationTraits_2::construct_radical_axis_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_radical_axis_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_2.h" line="173" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classRegularTriangulationTraits__2" kindref="compound">RegularTriangulationTraits_2</ref></computeroutput> describes the requirements for the traits class of regular triangulations. It refines the concept <computeroutput><ref refid="classTriangulationTraits__2" kindref="compound">TriangulationTraits_2</ref></computeroutput> requiring the type <computeroutput><ref refid="classCGAL_1_1Weighted__point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Weighted_point_2</ref></computeroutput> and the <emphasis>power test</emphasis> predicate on those weighted points. A weighted point is basically a point augmented with a scalar weight. It can be seen as a circle when the weight is interpreted as a square radius. The power test on weighted points is the fundamental test to build regular triangulations as the <computeroutput>side_of_oriented_circle</computeroutput> test is the fundamental test of Delaunay triangulations. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000006"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationTraits__2" kindref="compound">TriangulationTraits_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000006"><xreftitle>Has Models</xreftitle><xrefdescription><para>All models of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>.</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Regular__triangulation__2" kindref="compound">CGAL::Regular_triangulation_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/RegularTriangulationTraits_2.h" line="26" column="1" bodyfile="Concepts/RegularTriangulationTraits_2.h" bodystart="26" bodyend="177"/>
    <listofallmembers>
      <member refid="classRegularTriangulationTraits__2_1a841ed32814dc13205c9a1cf21320794e" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Compare_power_distance_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1a04cca4a7b08a81dc3c798a6f85313be5" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>compare_power_distance_2_object</name></member>
      <member refid="classRegularTriangulationTraits__2_1a6a29b3189fbcb9bd8d62fb3fca2c2900" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Construct_point_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1afc8947601c5882fab0180e09e3f1ccc6" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>construct_point_2_object</name></member>
      <member refid="classRegularTriangulationTraits__2_1a0573bdad2572098142a4821194a590df" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Construct_radical_axis_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1a0c4f60e043c081e14a8a167a1a1dcd45" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>construct_radical_axis_2_object</name></member>
      <member refid="classRegularTriangulationTraits__2_1a5afccd3a57efb781a7587fe56dafffd3" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Construct_weighted_circumcenter_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1acdbe707eed702610f273d5cb4baa87a0" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>construct_weighted_circumcenter_2_object</name></member>
      <member refid="classRegularTriangulationTraits__2_1a7383338fe818419c0cf4308ffcce815c" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>operator=</name></member>
      <member refid="classRegularTriangulationTraits__2_1ae2fbb032b56fa1911efe7576e28aff49" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Power_side_of_oriented_power_circle_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1aa9a0aaac820b9458bca097cf21fc071c" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>power_side_of_oriented_power_circle_2_object</name></member>
      <member refid="classRegularTriangulationTraits__2_1a4c6500358f93c71c6b417353b616639f" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>RegularTriangulationTraits_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1a26e1c954730b13c304abdbc9dc7a84df" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>RegularTriangulationTraits_2</name></member>
      <member refid="classRegularTriangulationTraits__2_1ac120dcce4a28d91c6da782f717f30061" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_2</scope><name>Weighted_point_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
