<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRegularTriangulationVertexBase__2" kind="class" language="C++" prot="public">
    <compoundname>RegularTriangulationVertexBase_2</compoundname>
    <includes local="no">Concepts/RegularTriangulationVertexBase_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classRegularTriangulationVertexBase__2_1ab6b075102b5ae142a7e35ef055f8d203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RegularTriangulationVertexBase_2::is_hidden</definition>
        <argsstring>()</argsstring>
        <name>is_hidden</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, iff the vertex is hidden. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationVertexBase_2.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationVertexBase__2_1a4216d4f06b299e0cb7437c82a0833d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RegularTriangulationVertexBase_2::set_hidden</definition>
        <argsstring>(bool b)</argsstring>
        <name>set_hidden</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Mark the vertex as hidden or as not hidden. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationVertexBase_2.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classRegularTriangulationVertexBase__2_1a599e2b750dc4756a42faf57a7832ffd9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationVertexBase_2::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>Must be the same as the point type <computeroutput><ref refid="classRegularTriangulationTraits__2_1ac120dcce4a28d91c6da782f717f30061" kindref="member">RegularTriangulationTraits_2::Weighted_point_2</ref></computeroutput> defined by the geometric traits class of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationVertexBase_2.h" line="52" column="1" bodyfile="Concepts/RegularTriangulationVertexBase_2.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The regular triangulation of a set of weighted points does not necessarily have one vertex for each of the input points. Some of the input weighted points have no cell in the dual power diagrams and therefore do not correspond to a vertex of the regular triangulation. Those weighted point are said to be <emphasis>hidden</emphasis> points. A point which is hidden at a given time may appear later as a vertex of the regular triangulation upon removal on some other weighted point. Therefore, hidden points have to be stored somewhere. The regular triangulation store those hidden points in special vertices called <emphasis>hidden</emphasis> vertices. </para>    </briefdescription>
    <detaileddescription>
<para> A hidden point can appear as vertex of the triangulation only when the two dimensional face where its point component is located (the face which hides it) is removed. Therefore we decided to store in each face of a regular triangulation the list of hidden vertices whose points are located in the face. Thus points hidden by a face are easily reinserted in the triangulation when the face is removed.</para><para>The base vertex of a regular triangulation has to be a model of the concept <computeroutput><ref refid="classRegularTriangulationVertexBase__2" kindref="compound">RegularTriangulationVertexBase_2</ref></computeroutput> . The concept <computeroutput><ref refid="classRegularTriangulationVertexBase__2" kindref="compound">RegularTriangulationVertexBase_2</ref></computeroutput> refines the concept <computeroutput><ref refid="classTriangulationVertexBase__2" kindref="compound">TriangulationVertexBase_2</ref></computeroutput>, just adding a Boolean to mark if the vertex is a vertex of the triangulation or a hidden vertex.</para><para><xrefsect id="refines_1_refines000007"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationVertexBase__2" kindref="compound">TriangulationVertexBase_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000007"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Regular__triangulation__vertex__base__2" kindref="compound">CGAL::Regular_triangulation_vertex_base_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationVertexBase__2" kindref="compound">TriangulationVertexBase_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Regular__triangulation__vertex__base__2" kindref="compound">CGAL::Regular_triangulation_vertex_base_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/RegularTriangulationVertexBase_2.h" line="45" column="1" bodyfile="Concepts/RegularTriangulationVertexBase_2.h" bodystart="45" bodyend="69"/>
    <listofallmembers>
      <member refid="classRegularTriangulationVertexBase__2_1ab6b075102b5ae142a7e35ef055f8d203" prot="public" virt="non-virtual"><scope>RegularTriangulationVertexBase_2</scope><name>is_hidden</name></member>
      <member refid="classRegularTriangulationVertexBase__2_1a599e2b750dc4756a42faf57a7832ffd9" prot="public" virt="non-virtual"><scope>RegularTriangulationVertexBase_2</scope><name>Point</name></member>
      <member refid="classRegularTriangulationVertexBase__2_1a4216d4f06b299e0cb7437c82a0833d34" prot="public" virt="non-virtual"><scope>RegularTriangulationVertexBase_2</scope><name>set_hidden</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
