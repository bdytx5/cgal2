<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Triangulation__cw__ccw__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation_cw_ccw_2</compoundname>
    <derivedcompoundref refid="classCGAL_1_1Triangulation__2" prot="public" virt="non-virtual">CGAL::Triangulation_2&lt; Traits, Tds &gt;</derivedcompoundref>
    <includes local="no">CGAL/Triangulation_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__cw__ccw__2_1a7069704014f0d62aa327453e5bcfb44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Triangulation_cw_ccw_2::Triangulation_cw_ccw_2</definition>
        <argsstring>()</argsstring>
        <name>Triangulation_cw_ccw_2</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_2.h" line="1199" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__cw__ccw__2_1af248465f1304095d3cd83cf14aa48898" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Triangulation_cw_ccw_2::ccw</definition>
        <argsstring>(const int i) const</argsstring>
        <name>ccw</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the index of the neighbor or vertex that is next to the neighbor or vertex with index <computeroutput>i</computeroutput> in counterclockwise order around a face. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_2.h" line="1211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__cw__ccw__2_1a71e0431519f8b26787dde770ebdceac7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Triangulation_cw_ccw_2::cw</definition>
        <argsstring>(const int i) const</argsstring>
        <name>cw</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the index of the neighbor or vertex that is next to the neighbor or vertex with index <computeroutput>i</computeroutput> in counterclockwise order around a face. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_2.h" line="1218" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation__cw__ccw__2" kindref="compound">Triangulation_cw_ccw_2</ref></computeroutput> offers two functions <computeroutput>int cw(int i)</computeroutput> and <computeroutput>int ccw(int i)</computeroutput> which, given the index of a vertex in a face, compute the index of the next vertex of the same face in clockwise or counterclockwise order. </para>    </briefdescription>
    <detaileddescription>
<para>This works also for neighbor indexes. Thus, for example the neighbor <computeroutput>neighbor(cw(i))</computeroutput> of a face <computeroutput>f</computeroutput> is the neighbor which is next to <computeroutput>neighbor(i)</computeroutput> turning clockwise around <computeroutput>f</computeroutput>. The face <computeroutput>neighbor(cw(i))</computeroutput> is also the first face encountered after <computeroutput>f</computeroutput> when turning clockwise around vertex <computeroutput>i</computeroutput> of <computeroutput>f</computeroutput>.</para><para>Many of the classes in the triangulation package inherit from <computeroutput><ref refid="classCGAL_1_1Triangulation__cw__ccw__2" kindref="compound">Triangulation_cw_ccw_2</ref></computeroutput>. This is for instance the case for <computeroutput><ref refid="classCGAL_1_1Triangulation__2_1a6c6a38b0ce694a47c2323834107fa758" kindref="member">CGAL::Triangulation_2::Face</ref></computeroutput>. Thus, for example the neighbor <computeroutput>neighbor(cw(i))</computeroutput> of a face <computeroutput>f</computeroutput> is the neighbor which is next to <computeroutput>neighbor(i)</computeroutput> turning clockwise around <computeroutput>f</computeroutput>. The face <computeroutput>neighbor(cw(i))</computeroutput> is also the first face encountered after <computeroutput>f</computeroutput> when turning clockwise around vertex <computeroutput>i</computeroutput> of <computeroutput>f</computeroutput>.</para><para><image type="html" name="neighbors.png">Vertices and neighbors.</image>
<image type="latex" name="neighbors.png">Vertices and neighbors.</image>
 <simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__2" kindref="compound">CGAL::Triangulation_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSFaceBase__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/TDS_2.tag">TriangulationDSFaceBase_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="66">
        <label>CGAL::Triangulation_2&lt; Traits, Tds &gt;</label>
        <link refid="classCGAL_1_1Triangulation__2"/>
        <childnode refid="65" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>CGAL::Constrained_triangulation_2&lt; Traits, Tds &gt;</label>
        <link refid="classCGAL_1_1Constrained__triangulation__2"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>CGAL::Regular_triangulation_2&lt; Traits, Tds &gt;</label>
        <link refid="classCGAL_1_1Regular__triangulation__2"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>CGAL::Delaunay_triangulation_2&lt; Traits, Tds &gt;</label>
        <link refid="classCGAL_1_1Delaunay__triangulation__2"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>CGAL::Triangulation_cw_ccw_2</label>
        <link refid="classCGAL_1_1Triangulation__cw__ccw__2"/>
      </node>
      <node id="68">
        <label>CGAL::Constrained_Delaunay_triangulation_2&lt; Traits, Tds, Itag &gt;</label>
        <link refid="classCGAL_1_1Constrained__Delaunay__triangulation__2"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CGAL/Triangulation_2.h" line="1190" column="1" bodyfile="CGAL/Triangulation_2.h" bodystart="1190" bodyend="1222"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangulation__cw__ccw__2_1af248465f1304095d3cd83cf14aa48898" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_cw_ccw_2</scope><name>ccw</name></member>
      <member refid="classCGAL_1_1Triangulation__cw__ccw__2_1a71e0431519f8b26787dde770ebdceac7" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_cw_ccw_2</scope><name>cw</name></member>
      <member refid="classCGAL_1_1Triangulation__cw__ccw__2_1a7069704014f0d62aa327453e5bcfb44d" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_cw_ccw_2</scope><name>Triangulation_cw_ccw_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
