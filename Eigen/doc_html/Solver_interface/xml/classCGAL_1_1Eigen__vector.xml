<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Eigen__vector" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Eigen_vector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Eigen::Matrix&lt; T, Eigen::Dynamic, 1 &gt;</basecompoundref>
    <includes local="no">CGAL/Eigen_vector.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__vector_1a1f207c6bf882670521d266fb35789149" prot="public" static="no">
        <type>T</type>
        <definition>typedef T CGAL::Eigen_vector&lt; T &gt;::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="53" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__vector_1a1cf1ac1270aa7d8abc36e8c1f12d281f" prot="public" static="no">
        <type>Eigen::Matrix&lt; T, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;T, Eigen::Dynamic, 1&gt; CGAL::Eigen_vector&lt; T &gt;::EigenType</definition>
        <argsstring></argsstring>
        <name>EigenType</name>
        <briefdescription>
<para>The internal vector type from <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="56" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a8bd9d97b22461b004eb71e59bff5872a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref>&lt; T &gt; &amp;</type>
        <definition>Eigen_vector&lt;T&gt;&amp; CGAL::Eigen_vector&lt; T &gt;::operator=</definition>
        <argsstring>(const Eigen_vector&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="61" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1abe16a4821ad9ca8cc07b1eb9d8eb719b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref>&lt; T &gt; &amp;</type>
        <definition>Eigen_vector&lt;T&gt;&amp; CGAL::Eigen_vector&lt; T &gt;::operator=</definition>
        <argsstring>(const EigenType &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector_1a1cf1ac1270aa7d8abc36e8c1f12d281f" kindref="member">EigenType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="66" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a0e2166b3ccd46cd32b1f0b9ab8928b07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T &gt;::Eigen_vector</definition>
        <argsstring>(std::size_t dimension)</argsstring>
        <name>Eigen_vector</name>
        <param>
          <type>std::size_t</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
<para>Create a vector initialized with zeros. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="72" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a74bc3a8db63b25bab23cc9ec676ec34f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T &gt;::Eigen_vector</definition>
        <argsstring>(const Eigen_vector &amp;toCopy)</argsstring>
        <name>Eigen_vector</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref> &amp;</type>
          <declname>toCopy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="79" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a33e7c6b180ac50bcf98a8b3a51f8c8c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T &gt;::~Eigen_vector</definition>
        <argsstring>()</argsstring>
        <name>~Eigen_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="81" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a1c363c20d1837c5a54e9c8ea9caa1ba2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Eigen_vector&lt; T &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>Return the vector&apos;s number of coefficients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="84" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a45d211eda505e694cc272caee5612182" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Eigen__vector_1a1cf1ac1270aa7d8abc36e8c1f12d281f" kindref="member">EigenType</ref> &amp;</type>
        <definition>const EigenType&amp; CGAL::Eigen_vector&lt; T &gt;::eigen_object</definition>
        <argsstring>() const</argsstring>
        <name>eigen_object</name>
        <briefdescription>
<para>Return the internal vector wrapped by this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="87" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1ae145c29648a7556640fc99b97cacba8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector_1a1cf1ac1270aa7d8abc36e8c1f12d281f" kindref="member">EigenType</ref> &amp;</type>
        <definition>EigenType&amp; CGAL::Eigen_vector&lt; T &gt;::eigen_object</definition>
        <argsstring>()</argsstring>
        <name>eigen_object</name>
        <briefdescription>
<para>Return the internal vector wrapped by this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="90" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a1030256a63400b750399aa075a48d627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_vector&lt; T &gt;::set</definition>
        <argsstring>(std::size_t i, NT value)</argsstring>
        <name>set</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__vector_1a1f207c6bf882670521d266fb35789149" kindref="member">NT</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write access to a vector coefficient: <computeroutput>a_i</computeroutput> &lt;- <computeroutput>value</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="93" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1aa0d9e75a73f501893a58f47bcc067eb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector_1a1f207c6bf882670521d266fb35789149" kindref="member">NT</ref> *</type>
        <definition>NT* CGAL::Eigen_vector&lt; T &gt;::vector</definition>
        <argsstring>()</argsstring>
        <name>vector</name>
        <briefdescription>
<para>Return a pointer to the data array of this vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="99" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref></computeroutput> is a wrapper around <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> vector type <ulink url="http://eigen.tuxfamily.org/dox/classEigen_1_1Matrix.html"></ulink>, which is a simple array of numbers. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classSvdTraits_1_1Vector" kindref="compound">SvdTraits::Vector</ref></computeroutput> </para><para><computeroutput><ref refid="classSparseLinearAlgebraTraits__d_1_1Vector" kindref="compound">SparseLinearAlgebraTraits_d::Vector</ref></computeroutput>.</para></xrefdescription></xrefsect></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">CGAL::Eigen_solver_traits</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="19">
        <label>CGAL::Eigen_vector&lt; T &gt;</label>
        <link refid="classCGAL_1_1Eigen__vector"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Eigen::Matrix&lt; T, Eigen::Dynamic, 1 &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21">
        <label>CGAL::Eigen_vector&lt; T &gt;</label>
        <link refid="classCGAL_1_1Eigen__vector"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>Eigen::Matrix&lt; T, Eigen::Dynamic, 1 &gt;</label>
      </node>
    </collaborationgraph>
    <location file="CGAL/Eigen_vector.h" line="48" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="46" bodyend="100"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Eigen__vector_1a1c363c20d1837c5a54e9c8ea9caa1ba2" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a45d211eda505e694cc272caee5612182" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>eigen_object</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1ae145c29648a7556640fc99b97cacba8b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>eigen_object</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a0e2166b3ccd46cd32b1f0b9ab8928b07" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>Eigen_vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a74bc3a8db63b25bab23cc9ec676ec34f" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>Eigen_vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a1cf1ac1270aa7d8abc36e8c1f12d281f" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>EigenType</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a1f207c6bf882670521d266fb35789149" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>NT</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a8bd9d97b22461b004eb71e59bff5872a" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1abe16a4821ad9ca8cc07b1eb9d8eb719b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a1030256a63400b750399aa075a48d627" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>set</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1aa0d9e75a73f501893a58f47bcc067eb8" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a33e7c6b180ac50bcf98a8b3a51f8c8c2" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>~Eigen_vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
