<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Eigen__solver__traits" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Eigen_solver_traits</compoundname>
    <includes local="no">CGAL/Eigen_solver_traits.h</includes>
    <templateparamlist>
      <param>
        <type>class EigenSolverT</type>
        <defval>Eigen::BiCGSTAB&lt;<ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">Eigen_sparse_matrix</ref>&lt;double&gt;::EigenType&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__solver__traits_1a285f003cd0b894658bf28bf54fa02876" prot="public" static="no">
        <type>EigenSolverT</type>
        <definition>typedef EigenSolverT CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::Solver</definition>
        <argsstring></argsstring>
        <name>Solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="118" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__solver__traits_1aab771bce9303d78604f4d91246694f76" prot="public" static="no">
        <type>Scalar</type>
        <definition>typedef Scalar CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="119" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">CGAL::Eigen_vector</ref>&lt; <ref refid="classCGAL_1_1Eigen__solver__traits_1aab771bce9303d78604f4d91246694f76" kindref="member">NT</ref> &gt;</type>
        <definition>typedef CGAL::Eigen_vector&lt;NT&gt; CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="120" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::Matrix</definition>
        <argsstring></argsstring>
        <name>Matrix</name>
        <briefdescription>
<para>If <computeroutput>T</computeroutput> is <computeroutput>Eigen::ConjugateGradient&lt;M&gt;</computeroutput> or <computeroutput>Eigen::SimplicialCholesky&lt;M&gt;</computeroutput>, <computeroutput>Matrix</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput>, and <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="125" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a5a1d9e653e9cbec35c8b40def56cfd2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EigenSolverT &amp;</type>
        <definition>EigenSolverT&amp; CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::solver</definition>
        <argsstring>()</argsstring>
        <name>solver</name>
        <briefdescription>
<para>Returns a reference to the internal <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> solver. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used for example to set specific parameters of the solver. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="141" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="141" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__solver__traits_1a84190764a9baa54406b7945c02ebec96" prot="private" static="no">
        <type>EigenSolverT::Scalar</type>
        <definition>typedef EigenSolverT::Scalar CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="111" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Eigen__solver__traits_1a45e0998ec6903d5368a4ddcbcaff4d60" prot="protected" static="no" mutable="no">
        <type>const Matrix::EigenType *</type>
        <definition>const Matrix::EigenType* CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::m_mat</definition>
        <argsstring></argsstring>
        <name>m_mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="223" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Eigen__solver__traits_1af85da76e07586f39e4d9e474fa94968d" prot="protected" static="no" mutable="no">
        <type>boost::shared_ptr&lt; EigenSolverT &gt;</type>
        <definition>boost::shared_ptr&lt;EigenSolverT&gt; CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::m_solver_sptr</definition>
        <argsstring></argsstring>
        <name>m_solver_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="224" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1addb131ecd843f7a34875eba7b5084566" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::Eigen_solver_traits</definition>
        <argsstring>()</argsstring>
        <name>Eigen_solver_traits</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="134" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a4c4555c432106f6c91a5dc1b5243ba60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::linear_solver</definition>
        <argsstring>(const Matrix &amp;A, const Vector &amp;B, Vector &amp;X, NT &amp;D)</argsstring>
        <name>linear_solver</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" kindref="member">Matrix</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aab771bce9303d78604f4d91246694f76" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>Solve the sparse linear system <formula id="13">$ A \times X = B $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Return <computeroutput>true</computeroutput> on success. The solution is then <formula id="14">$ (1/D) \times X $</formula>.</para><para><simplesect kind="pre"><para>A.row_dimension() == B.dimension(). </para></simplesect>
<simplesect kind="pre"><para>A.column_dimension() == X.dimension(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="150" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="150" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a8cfb87e76fb8bd8985c770b212723394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::factor</definition>
        <argsstring>(const Matrix &amp;A, NT &amp;D)</argsstring>
        <name>factor</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" kindref="member">Matrix</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aab771bce9303d78604f4d91246694f76" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>Factorize the sparse matrix <formula id="2">$ A $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>This factorization is used in <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits_1a4c4555c432106f6c91a5dc1b5243ba60" kindref="member">linear_solver()</ref></computeroutput> to solve the system for different right-hand side vectors. See <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits_1a4c4555c432106f6c91a5dc1b5243ba60" kindref="member">linear_solver()</ref></computeroutput> for the description of <formula id="15">$ D $</formula>. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the factorization is successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="169" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a7fcc09d5dc4ddf72a09894835dfad9e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::linear_solver</definition>
        <argsstring>(const Vector &amp;B, Vector &amp;X)</argsstring>
        <name>linear_solver</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
<para>Solve the sparse linear system <formula id="9">$ A \times X = B$</formula>, with <formula id="2">$ A $</formula> being the matrix provided in <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits_1a8cfb87e76fb8bd8985c770b212723394" kindref="member">factor()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the solver is successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="181" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a58ad3fc8fcc441e0c331d101bb7c37a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::normal_equation_factor</definition>
        <argsstring>(const Matrix &amp;A)</argsstring>
        <name>normal_equation_factor</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" kindref="member">Matrix</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Factorize the sparse matrix <formula id="16">$ A^t \times A$</formula>, where <formula id="17">$ A^t $</formula> is the transpose matrix of <formula id="2">$ A $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>This factorization is used in <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits_1a135da70b77a8a17ae47264474dc94b1d" kindref="member">normal_equation_solver()</ref></computeroutput> to solve the system for different right-hand side vectors. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the factorization is successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="193" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="193" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a135da70b77a8a17ae47264474dc94b1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::normal_equation_solver</definition>
        <argsstring>(const Vector &amp;B, Vector &amp;X)</argsstring>
        <name>normal_equation_solver</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
<para>Solve the sparse linear system <formula id="18">$ A^t \times A \times X = A^t \times B $</formula>, with <formula id="2">$ A $</formula> being the matrix provided in <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits_1a58ad3fc8fcc441e0c331d101bb7c37a1" kindref="member">normal_equation_factor()</ref></computeroutput>, and <formula id="17">$ A^t $</formula> its transpose matrix. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the solver is successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="205" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__solver__traits_1a9bbcd0e4f6bf80799b02fc4df39dc1ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Eigen_solver_traits&lt; EigenSolverT &gt;::normal_equation_solver</definition>
        <argsstring>(const Matrix &amp;A, const Vector &amp;B, Vector &amp;X)</argsstring>
        <name>normal_equation_solver</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" kindref="member">Matrix</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" kindref="member">Vector</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
<para>Equivalent to a call to <ref refid="classCGAL_1_1Eigen__solver__traits_1a58ad3fc8fcc441e0c331d101bb7c37a1" kindref="member"><computeroutput>normal_equation_factor(A)</computeroutput> </ref> followed by a call to <ref refid="classCGAL_1_1Eigen__solver__traits_1a135da70b77a8a17ae47264474dc94b1d" kindref="member"><computeroutput>normal_equation_solver(B, X)</computeroutput> </ref> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_solver_traits.h" line="215" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="215" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">Eigen_solver_traits</ref></computeroutput> provides an interface to the sparse solvers of <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> version 3.1 (or later) must be available on the system.</para><para><xrefsect id="models_1_models000010"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classSparseLinearAlgebraWithFactorTraits__d" kindref="compound">SparseLinearAlgebraWithFactorTraits_d</ref></computeroutput> and <computeroutput><ref refid="classNormalEquationSparseLinearAlgebraTraits__d" kindref="compound">NormalEquationSparseLinearAlgebraTraits_d</ref></computeroutput></para></xrefdescription></xrefsect></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>EigenSolverT</parametername>
</parameternamelist>
<parameterdescription>
<para>A sparse solver of <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref>. The default solver is the iterative bi-congugate gradient stabilized solver <computeroutput>Eigen::BiCGSTAB</computeroutput> for <computeroutput>double</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">CGAL::Eigen_vector</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ulink url="http://eigen.tuxfamily.org">http://eigen.tuxfamily.org</ulink></para></simplesect>
<heading level="2">Example </heading>
</para><para>The instantiation of this class assumes an <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> sparse solver is provided. Here are few examples:</para><para><programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" kindref="member">CGAL::Eigen_sparse_matrix&lt;double&gt;::EigenType</ref><sp/>EigenMatrix;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//iterative<sp/>general<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">CGAL::Eigen_solver_traits&lt; Eigen::BiCGSTAB&lt;EigenMatrix&gt;</ref><sp/>&gt;<sp/>Iterative_general_solver;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//iterative<sp/>symmetric<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">CGAL::Eigen_solver_traits&lt; Eigen::ConjugateGradient&lt;EigenMatrix&gt;</ref><sp/>&gt;<sp/>Iterative_symmetric_solver;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//direct<sp/>symmetric<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">CGAL::Eigen_solver_traits&lt; Eigen::SimplicialCholesky&lt;EigenMatrix&gt;</ref><sp/>&gt;<sp/>Direct_symmetric_solver;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="CGAL/Eigen_solver_traits.h" line="110" column="1" bodyfile="CGAL/Eigen_solver_traits.h" bodystart="109" bodyend="225"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Eigen__solver__traits_1addb131ecd843f7a34875eba7b5084566" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>Eigen_solver_traits</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a8cfb87e76fb8bd8985c770b212723394" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>factor</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a4c4555c432106f6c91a5dc1b5243ba60" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>linear_solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a7fcc09d5dc4ddf72a09894835dfad9e3" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>linear_solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a45e0998ec6903d5368a4ddcbcaff4d60" prot="protected" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>m_mat</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1af85da76e07586f39e4d9e474fa94968d" prot="protected" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>m_solver_sptr</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a58120f2edd7c2262b6179d83bfa139cb" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>Matrix</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a58ad3fc8fcc441e0c331d101bb7c37a1" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>normal_equation_factor</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a135da70b77a8a17ae47264474dc94b1d" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>normal_equation_solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a9bbcd0e4f6bf80799b02fc4df39dc1ff" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>normal_equation_solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1aab771bce9303d78604f4d91246694f76" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>NT</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a84190764a9baa54406b7945c02ebec96" prot="private" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>Scalar</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a285f003cd0b894658bf28bf54fa02876" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>Solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1a5a1d9e653e9cbec35c8b40def56cfd2e" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>solver</name></member>
      <member refid="classCGAL_1_1Eigen__solver__traits_1aa857cc5434a376c8cd6e5fd18b6edf26" prot="public" virt="non-virtual"><scope>CGAL::Eigen_solver_traits</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
