<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Eigen__matrix" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Eigen_matrix</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Eigen::Matrix&lt; FT, ::Eigen::Dynamic, ::Eigen::Dynamic &gt;</basecompoundref>
    <includes local="no">CGAL/Eigen_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>class FT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCGAL_1_1Eigen__matrix_1af1494348107287f9ca14c59ffb84cea5" prot="public" static="no">
        <type>::Eigen::Matrix&lt; FT, ::Eigen::Dynamic, ::Eigen::Dynamic &gt;</type>
        <definition>typedef ::Eigen::Matrix&lt;FT, ::Eigen::Dynamic, ::Eigen::Dynamic&gt; CGAL::Eigen_matrix&lt; FT &gt;::EigenType</definition>
        <argsstring></argsstring>
        <name>EigenType</name>
        <briefdescription>
<para>The internal matrix type from <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="322" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a9aed7b026b778c3acb861a044b94d820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_matrix&lt; FT &gt;::Eigen_matrix</definition>
        <argsstring>(std::size_t nr, std::size_t nc)</argsstring>
        <name>Eigen_matrix</name>
        <param>
          <type>std::size_t</type>
          <declname>nr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nc</declname>
        </param>
        <briefdescription>
<para>Construct a matrix with <computeroutput>nr</computeroutput> rows and <computeroutput>nc</computeroutput> columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="325" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a93a98621a8c6185d12eaf6a121194f44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Eigen_matrix&lt; FT &gt;::number_of_rows</definition>
        <argsstring>() const</argsstring>
        <name>number_of_rows</name>
        <briefdescription>
<para>Return the matrix number of rows. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="328" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a8461969c0f0c0beac9139d57d286cabb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Eigen_matrix&lt; FT &gt;::number_of_columns</definition>
        <argsstring>() const</argsstring>
        <name>number_of_columns</name>
        <briefdescription>
<para>Return the matrix number of columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="330" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1ad38b40f3b1efc412c9ecc65feff9aa8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::Eigen_matrix&lt; FT &gt;::operator()</definition>
        <argsstring>(std::size_t i, std::size_t j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Return the value of the matrix at position (i,j). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="333" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="333" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a182977701fca8b76e65b65db3b1a2eef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_matrix&lt; FT &gt;::set</definition>
        <argsstring>(std::size_t i, std::size_t j, FT value)</argsstring>
        <name>set</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write access to a matrix coefficient: <computeroutput>a_ij</computeroutput> &lt;- <computeroutput>val</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="336" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a39afe3c80fc7e3bc194475c5eccddcb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structCGAL_1_1Eigen__matrix_1af1494348107287f9ca14c59ffb84cea5" kindref="member">EigenType</ref> &amp;</type>
        <definition>const EigenType&amp; CGAL::Eigen_matrix&lt; FT &gt;::eigen_object</definition>
        <argsstring>() const</argsstring>
        <name>eigen_object</name>
        <briefdescription>
<para>Return the internal matrix, with type <computeroutput>EigenType</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="339" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="339" bodyend="339"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Eigen__matrix" kindref="compound">Eigen_matrix</ref></computeroutput> is a wrapper around <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> matrix type <ulink url="http://eigen.tuxfamily.org/dox/classEigen_1_1Matrix.html"><computeroutput>Eigen::Matrix</computeroutput></ulink>. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="models_1_models000005"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classSvdTraits_1_1Matrix" kindref="compound">SvdTraits::Matrix</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">CGAL::Eigen_vector</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Eigen::Matrix&lt; FT, ::Eigen::Dynamic, ::Eigen::Dynamic &gt;</label>
      </node>
      <node id="2">
        <label>CGAL::Eigen_matrix&lt; FT &gt;</label>
        <link refid="structCGAL_1_1Eigen__matrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Eigen::Matrix&lt; FT, ::Eigen::Dynamic, ::Eigen::Dynamic &gt;</label>
      </node>
      <node id="4">
        <label>CGAL::Eigen_matrix&lt; FT &gt;</label>
        <link refid="structCGAL_1_1Eigen__matrix"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Eigen_matrix.h" line="320" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="318" bodyend="340"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Eigen__matrix_1a9aed7b026b778c3acb861a044b94d820" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>Eigen_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a39afe3c80fc7e3bc194475c5eccddcb2" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>eigen_object</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1af1494348107287f9ca14c59ffb84cea5" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>EigenType</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a8461969c0f0c0beac9139d57d286cabb" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>number_of_columns</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a93a98621a8c6185d12eaf6a121194f44" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>number_of_rows</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1ad38b40f3b1efc412c9ecc65feff9aa8f" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>operator()</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a182977701fca8b76e65b65db3b1a2eef" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
