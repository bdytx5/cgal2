<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classDiagonalizeTraits" kind="class" language="C++" prot="public">
    <compoundname>DiagonalizeTraits</compoundname>
    <includes local="no">Concepts/DiagonalizeTraits.h</includes>
    <templateparamlist>
      <param>
        <type>typename FT</type>
      </param>
      <param>
        <type>unsigned int</type>
        <declname>dim</declname>
        <defname>dim</defname>
        <defval>3</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classDiagonalizeTraits_1a624780eb74e8d7bcc9b9fb33a935024c" prot="public" static="no">
        <type>cpp11::array&lt; FT, dim &gt;</type>
        <definition>typedef cpp11::array&lt;FT, dim&gt; DiagonalizeTraits&lt; FT, dim &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="27" column="1" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDiagonalizeTraits_1a2589ed93409bc6a435240931ad76201f" prot="public" static="no">
        <type>cpp11::array&lt; FT, dim *dim &gt;</type>
        <definition>typedef cpp11::array&lt;FT, dim*dim&gt; DiagonalizeTraits&lt; FT, dim &gt;::Matrix</definition>
        <argsstring></argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="28" column="1" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDiagonalizeTraits_1ac5e065c301f0639fcdf07dc448f7471d" prot="public" static="no">
        <type>cpp11::array&lt; FT,(dim *(dim+1)/2)&gt;</type>
        <definition>typedef cpp11::array&lt;FT, (dim * (dim+1) / 2)&gt; DiagonalizeTraits&lt; FT, dim &gt;::Covariance_matrix</definition>
        <argsstring></argsstring>
        <name>Covariance_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="29" column="1" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classDiagonalizeTraits_1a653a00366d1cdaa798a4fae6f10d7df6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::diagonalize_selfadjoint_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;eigenvalues)</argsstring>
        <name>diagonalize_selfadjoint_covariance_matrix</name>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1ac5e065c301f0639fcdf07dc448f7471d" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a624780eb74e8d7bcc9b9fb33a935024c" kindref="member">Vector</ref> &amp;</type>
          <declname>eigenvalues</declname>
        </param>
        <briefdescription>
<para>Fill <computeroutput>eigenvalues</computeroutput> with the eigenvalues of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Eigenvalues are sorted by increasing order. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDiagonalizeTraits_1a8a6c3e576830e6ea22583ebbf45a4bdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::diagonalize_selfadjoint_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;eigenvalues, Matrix &amp;eigenvectors)</argsstring>
        <name>diagonalize_selfadjoint_covariance_matrix</name>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1ac5e065c301f0639fcdf07dc448f7471d" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a624780eb74e8d7bcc9b9fb33a935024c" kindref="member">Vector</ref> &amp;</type>
          <declname>eigenvalues</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a2589ed93409bc6a435240931ad76201f" kindref="member">Matrix</ref> &amp;</type>
          <declname>eigenvectors</declname>
        </param>
        <briefdescription>
<para>Fill <computeroutput>eigenvalues</computeroutput> with the eigenvalues and <computeroutput>eigenvectors</computeroutput> with the eigenvectors of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Eigenvalues are sorted by increasing order. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDiagonalizeTraits_1a8955888dea6c20dbd98aaacea525e94e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::extract_largest_eigenvector_of_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;normal)</argsstring>
        <name>extract_largest_eigenvector_of_covariance_matrix</name>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1ac5e065c301f0639fcdf07dc448f7471d" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a624780eb74e8d7bcc9b9fb33a935024c" kindref="member">Vector</ref> &amp;</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
<para>Extract the eigenvector associated to the largest eigenvalue of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concept providing functions to extract eigenvectors and eigenvalues from covariance matrices represented by an array <computeroutput>a</computeroutput>, using symmetric diagonalization. For example, a matrix of dimension 3 is defined as follows: <center> <formula id="0">$ \begin{bmatrix} a[0] &amp; a[1] &amp; a[2] \\ a[1] &amp; a[3] &amp; a[4] \\ a[2] &amp; a[4] &amp; a[5] \\ \end{bmatrix}$</formula> </center> </para>    </briefdescription>
    <detaileddescription>
<para> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FT</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the matrices and vectors</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound">CGAL::Eigen_diagonalize_traits</ref></computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/DiagonalizeTraits.h" line="25" column="1" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="24" bodyend="50"/>
    <listofallmembers>
      <member refid="classDiagonalizeTraits_1ac5e065c301f0639fcdf07dc448f7471d" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a653a00366d1cdaa798a4fae6f10d7df6" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>diagonalize_selfadjoint_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a8a6c3e576830e6ea22583ebbf45a4bdc" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>diagonalize_selfadjoint_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a8955888dea6c20dbd98aaacea525e94e" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>extract_largest_eigenvector_of_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a2589ed93409bc6a435240931ad76201f" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Matrix</name></member>
      <member refid="classDiagonalizeTraits_1a624780eb74e8d7bcc9b9fb33a935024c" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
