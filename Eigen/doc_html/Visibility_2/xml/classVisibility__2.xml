<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classVisibility__2" kind="class" language="C++" prot="public">
    <compoundname>Visibility_2</compoundname>
    <includes local="no">Concepts/Visibility_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classVisibility__2_1ace113a8a570e2f4a733bf188ad299923" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type Visibility_2::Arrangement_2</definition>
        <argsstring></argsstring>
        <name>Arrangement_2</name>
        <briefdescription>
<para>The arrangement type of the input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="23" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVisibility__2_1a2f0bf02e6f7b11cb1ac416a65f2ba7ad" prot="public" static="no">
        <type>Arrangement_2::Point_2</type>
        <definition>typedef Arrangement_2::Point_2 Visibility_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>The 2D point type used for the queries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="28" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVisibility__2_1aba7522909cc6da4320ae5d00f36e4fcd" prot="public" static="no">
        <type>Arrangement_2::Face_const_handle</type>
        <definition>typedef Arrangement_2::Face_const_handle Visibility_2::Face_const_handle</definition>
        <argsstring></argsstring>
        <name>Face_const_handle</name>
        <briefdescription>
<para>The face handle type of the input arrangement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="33" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVisibility__2_1abb9825a4c479c327ee77b2a0505a16fb" prot="public" static="no">
        <type>Arrangement_2::Halfedge_const_handle</type>
        <definition>typedef Arrangement_2::Halfedge_const_handle Visibility_2::Halfedge_const_handle</definition>
        <argsstring></argsstring>
        <name>Halfedge_const_handle</name>
        <briefdescription>
<para>The halfedge handle type of the input arrangement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="38" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tags</header>
      <memberdef kind="typedef" id="classVisibility__2_1af784dab1b1f4f1837a818c16e0b9dec4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type Visibility_2::Regularization_category</definition>
        <argsstring></argsstring>
        <name>Regularization_category</name>
        <briefdescription>
<para>identifies whether the regularized visibility area is computed (either <computeroutput><ref refid="group__PkgStlExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></computeroutput> or <computeroutput><ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_false</ref></computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="47" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVisibility__2_1a34dadf26b6a017a67e46eb3561953b75" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type Visibility_2::Supports_general_polygon_category</definition>
        <argsstring></argsstring>
        <name>Supports_general_polygon_category</name>
        <briefdescription>
<para>identifies whether general polygons (with holes) are supported (either <computeroutput><ref refid="group__PkgStlExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></computeroutput> or <computeroutput><ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_false</ref></computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>A general polygon is represented by a face <formula id="8">$ f $</formula> with no isolated vertex and any edge of <formula id="8">$ f $</formula> separates <formula id="8">$ f $</formula> from another face. Note that this allows <formula id="8">$ f $</formula> to touch a vertex from several sides. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="55" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVisibility__2_1a37464d21ac94f4cf8a7473434e6a32f5" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type Visibility_2::Supports_simple_polygon_category</definition>
        <argsstring></argsstring>
        <name>Supports_simple_polygon_category</name>
        <briefdescription>
<para>identifies whether simple polygons are supported (either <computeroutput><ref refid="group__PkgStlExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></computeroutput> or <computeroutput><ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Tag_false</ref></computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>A simple polygon is represented by a face <formula id="8">$ f $</formula> with no holes, no isolated vertex and any edge of <formula id="8">$ f $</formula> separates <formula id="8">$ f $</formula> from another face. Note that this allows <formula id="8">$ f $</formula> to touch a vertex from several sides. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="64" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classVisibility__2_1a9bbdc7e63c4c9ceca6cc5f0d6e3c549a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Visibility_2::Visibility_2</definition>
        <argsstring>()</argsstring>
        <name>Visibility_2</name>
        <briefdescription>
<para>Default constructor creates an empty <computeroutput><ref refid="classVisibility__2" kindref="compound">Visibility_2</ref></computeroutput> object that is not attached to any arrangement yet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a16523d1bf333de396459eb6020e5f4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Visibility_2::Visibility_2</definition>
        <argsstring>(const Arrangement_2 &amp;arr)</argsstring>
        <name>Visibility_2</name>
        <param>
          <type>const <ref refid="classVisibility__2_1ace113a8a570e2f4a733bf188ad299923" kindref="member">Arrangement_2</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Constructs a <computeroutput><ref refid="classVisibility__2" kindref="compound">Visibility_2</ref></computeroutput> object that is attached to <computeroutput>arr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classVisibility__2_1a283cd08bbb587ac48fd161bce28bb090" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Visibility_2::is_attached</definition>
        <argsstring>() const</argsstring>
        <name>is_attached</name>
        <briefdescription>
<para>Returns whether an arrangement is attached to the visibility object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a88750dd4631192d1a08c2bbf71c306ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Visibility_2::attach</definition>
        <argsstring>(const Arrangement_2 &amp;arr)</argsstring>
        <name>attach</name>
        <param>
          <type>const <ref refid="classVisibility__2_1ace113a8a570e2f4a733bf188ad299923" kindref="member">Arrangement_2</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Attaches the given arrangement <computeroutput>arr</computeroutput> to the visibility object. </para>        </briefdescription>
        <detaileddescription>
<para>In case the object is already attached to another arrangement, the visibility object gets detached before being attached to <computeroutput>arr</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a4573c6087a55f3b696d692772d5868cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Visibility_2::detach</definition>
        <argsstring>()</argsstring>
        <name>detach</name>
        <briefdescription>
<para>Detaches the arrangement from the visibility object it is currently attached to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a362d6338ae90b5203242186830cfa9e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classVisibility__2_1ace113a8a570e2f4a733bf188ad299923" kindref="member">Arrangement_2</ref> &amp;</type>
        <definition>const Arrangement_2&amp; Visibility_2::arrangement_2</definition>
        <argsstring>() const</argsstring>
        <name>arrangement_2</name>
        <briefdescription>
<para>Access to the attached arrangement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a9c90c6b55b2053cef2071a31864afd08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VisibilityArrangement_2</type>
          </param>
        </templateparamlist>
        <type>Visibility_arrangement_2::Face_handle</type>
        <definition>Visibility_arrangement_2::Face_handle Visibility_2::compute_visibility</definition>
        <argsstring>(const Point_2 &amp;q, const Face_const_handle f, VisibilityArrangement_2 &amp;out_arr) const</argsstring>
        <name>compute_visibility</name>
        <param>
          <type>const <ref refid="classVisibility__2_1a2f0bf02e6f7b11cb1ac416a65f2ba7ad" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classVisibility__2_1aba7522909cc6da4320ae5d00f36e4fcd" kindref="member">Face_const_handle</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>VisibilityArrangement_2 &amp;</type>
          <declname>out_arr</declname>
        </param>
        <briefdescription>
<para>Computes the visibility region for the given query point <computeroutput>q</computeroutput> in the face <formula id="8">$ f $</formula> of the arrangement that is attached to the visibility object. </para>        </briefdescription>
        <detaileddescription>
<para>The visibility region of <computeroutput>q</computeroutput> is stored in <computeroutput>out_arr</computeroutput>, that is, all features but the unbounded face of <computeroutput>out_arr</computeroutput> represent the visibility region.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VisibilityArrangement_2</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type of the output arrangement representing the visibility polygon. It must be an instance of <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arrangement_2</ref></computeroutput>, where its <computeroutput><ref refid="classCGAL_1_1Arrangement__2_1ad7527ffb7c9b9455c839ce9e192605c8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arrangement_2::Traits_2</ref></computeroutput> must be mutual convertible to <computeroutput>VisibilityArrangement_2::Traits_2</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>is the query point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>is the face of the arrangement in which the visibility region is computed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the output arrangement </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>f</computeroutput> is a face of <computeroutput>this-&gt;<ref refid="classVisibility__2_1a362d6338ae90b5203242186830cfa9e5" kindref="member">arrangement_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>q</computeroutput> is in the interior of the given face <computeroutput>f</computeroutput> </para></simplesect>
<simplesect kind="return"><para>the face handle to the face in <computeroutput>out_arr</computeroutput> that represents interior of the visibility region </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classVisibility__2_1a24932e510d8f9cacdefcc6c9ca22dbe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VisibilityArrangement_2</type>
          </param>
        </templateparamlist>
        <type>Visibility_arrangement_2::Face_handle</type>
        <definition>Visibility_arrangement_2::Face_handle Visibility_2::compute_visibility</definition>
        <argsstring>(const Point_2 &amp;q, const Halfedge_const_handle e, Visibility_arrangement_2 &amp;out_arr) const</argsstring>
        <name>compute_visibility</name>
        <param>
          <type>const <ref refid="classVisibility__2_1a2f0bf02e6f7b11cb1ac416a65f2ba7ad" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classVisibility__2_1abb9825a4c479c327ee77b2a0505a16fb" kindref="member">Halfedge_const_handle</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type>Visibility_arrangement_2 &amp;</type>
          <declname>out_arr</declname>
        </param>
        <briefdescription>
<para>Computes the visibility region in <computeroutput>e-&gt;face()</computeroutput> for the given query point <computeroutput>q</computeroutput> which must be located on <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>q</computeroutput> is an interior point of <computeroutput>e</computeroutput>, the computed visibility region is restricted to the side indicated by the halfedge <computeroutput>e</computeroutput>. If <computeroutput>q</computeroutput> is an endpoint of <computeroutput>e</computeroutput>, the visibility region is restricted by <computeroutput>e</computeroutput> and <computeroutput>e-&gt;<ref refid="group__STLAlgos_1gad4dbc8daf3c0e2201f4972eb9eea404d" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">next()</ref></computeroutput>. The visibility region of <computeroutput>q</computeroutput> is stored in <computeroutput>out_arr</computeroutput>, that is, all features but the unbounded face of <computeroutput>out_arr</computeroutput> represent the visibility region.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VisibilityArrangement_2</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type of the output arrangement representing the visibility polygon. It must be an instance of <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arrangement_2</ref></computeroutput>, where its <computeroutput><ref refid="classCGAL_1_1Arrangement__2_1ad7527ffb7c9b9455c839ce9e192605c8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arrangement_2::Traits_2</ref></computeroutput> must be mutual convertible to <computeroutput>VisibilityArrangement_2::Traits_2</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>is the query point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>the halfedge on which <computeroutput>q</computeroutput> is located </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the output arrangement </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>e</computeroutput> is a halfedge of <computeroutput>this-&gt;<ref refid="classVisibility__2_1a362d6338ae90b5203242186830cfa9e5" kindref="member">arrangement_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>q</computeroutput> is on <computeroutput>e</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>q</computeroutput> equals to <computeroutput>e-&gt;target()-&gt;point()</computeroutput> if <computeroutput>q</computeroutput> is an endpoint of <computeroutput>e</computeroutput> </para></simplesect>
<simplesect kind="return"><para>a handle to the face in <computeroutput>out_arr</computeroutput> that represents the interior of the visibility region </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Visibility_2.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A model of the <computeroutput><ref refid="classVisibility__2" kindref="compound">Visibility_2</ref></computeroutput> concept can be attached to an <computeroutput>Arrangement_2</computeroutput> instance to answer visibility queries within the faces of this arrangement. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Simple__polygon__visibility__2" kindref="compound">CGAL::Simple_polygon_visibility_2</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Rotational__sweep__visibility__2" kindref="compound">CGAL::Rotational_sweep_visibility_2</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Triangular__expansion__visibility__2" kindref="compound">CGAL::Triangular_expansion_visibility_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/Visibility_2.h" line="14" column="1" bodyfile="Concepts/Visibility_2.h" bodystart="14" bodyend="157"/>
    <listofallmembers>
      <member refid="classVisibility__2_1ace113a8a570e2f4a733bf188ad299923" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Arrangement_2</name></member>
      <member refid="classVisibility__2_1a362d6338ae90b5203242186830cfa9e5" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>arrangement_2</name></member>
      <member refid="classVisibility__2_1a88750dd4631192d1a08c2bbf71c306ed" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>attach</name></member>
      <member refid="classVisibility__2_1a9c90c6b55b2053cef2071a31864afd08" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>compute_visibility</name></member>
      <member refid="classVisibility__2_1a24932e510d8f9cacdefcc6c9ca22dbe6" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>compute_visibility</name></member>
      <member refid="classVisibility__2_1a4573c6087a55f3b696d692772d5868cb" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>detach</name></member>
      <member refid="classVisibility__2_1aba7522909cc6da4320ae5d00f36e4fcd" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Face_const_handle</name></member>
      <member refid="classVisibility__2_1abb9825a4c479c327ee77b2a0505a16fb" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Halfedge_const_handle</name></member>
      <member refid="classVisibility__2_1a283cd08bbb587ac48fd161bce28bb090" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>is_attached</name></member>
      <member refid="classVisibility__2_1a2f0bf02e6f7b11cb1ac416a65f2ba7ad" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Point_2</name></member>
      <member refid="classVisibility__2_1af784dab1b1f4f1837a818c16e0b9dec4" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Regularization_category</name></member>
      <member refid="classVisibility__2_1a34dadf26b6a017a67e46eb3561953b75" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Supports_general_polygon_category</name></member>
      <member refid="classVisibility__2_1a37464d21ac94f4cf8a7473434e6a32f5" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Supports_simple_polygon_category</name></member>
      <member refid="classVisibility__2_1a9bbdc7e63c4c9ceca6cc5f0d6e3c549a" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Visibility_2</name></member>
      <member refid="classVisibility__2_1a16523d1bf333de396459eb6020e5f4e0" prot="public" virt="non-virtual"><scope>Visibility_2</scope><name>Visibility_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
