<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPTQMask__3" kind="class" language="C++" prot="public">
    <compoundname>PTQMask_3</compoundname>
    <includes local="no">Concepts/PTQMask_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPTQMask__3_1aae9bd5b834411714dc8c66849ed42903" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PTQMask_3::PolygonMesh</definition>
        <argsstring></argsstring>
        <name>PolygonMesh</name>
        <briefdescription>
<para>The polygon mesh must be triangulated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="26" column="1" bodyfile="Concepts/PTQMask_3.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPTQMask__3_1a3696da36b117868e086bdd27f87886a7" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PTQMask_3::VertexPointMap</definition>
        <argsstring></argsstring>
        <name>VertexPointMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="27" column="1" bodyfile="Concepts/PTQMask_3.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPTQMask__3_1a37a1018e3567373459a1f87b5684e3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PTQMask_3::PTQMask_3</definition>
        <argsstring>(PolygonMesh *pmesh)</argsstring>
        <name>PTQMask_3</name>
        <param>
          <type><ref refid="classPTQMask__3_1aae9bd5b834411714dc8c66849ed42903" kindref="member">PolygonMesh</ref> *</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The default vertex point property map is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPTQMask__3_1ada35e6522fd5c73e5377f479c2aeb525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PTQMask_3::PTQMask_3</definition>
        <argsstring>(PolygonMesh *pmesh, VertexPointMap vpmap)</argsstring>
        <name>PTQMask_3</name>
        <param>
          <type><ref refid="classPTQMask__3_1aae9bd5b834411714dc8c66849ed42903" kindref="member">PolygonMesh</ref> *</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">VertexPointMap</ref></type>
          <declname>vpmap</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPTQMask__3_1ac5a0719a0d644125cb7d55b14846d461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTQMask_3::edge_node</definition>
        <argsstring>(halfedge_descriptor hd, Point_3 &amp;pt)</argsstring>
        <name>edge_node</name>
        <param>
          <type>halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>computes the edge-point <computeroutput>pt</computeroutput> based on the neighborhood of the edge <computeroutput>hd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPTQMask__3_1a9e94a0a845746c4f6d01c7b32282b7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTQMask_3::vertex_node</definition>
        <argsstring>(vertex_descriptor vd, Point_3 &amp;pt)</argsstring>
        <name>vertex_node</name>
        <param>
          <type>vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>computes the vertex-point <computeroutput>pt</computeroutput> based on the neighborhood of the vertex <computeroutput>vd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPTQMask__3_1aa890dab28725e2ee4045a72a5004a55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTQMask_3::border_node</definition>
        <argsstring>(halfedge_descriptor hd, Point_3 &amp;ept, Point_3 &amp;vpt)</argsstring>
        <name>border_node</name>
        <param>
          <type>halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>ept</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>vpt</declname>
        </param>
        <briefdescription>
<para>computes the edge-point <computeroutput>ept</computeroutput> and the vertex-point <computeroutput>vpt</computeroutput> based on the neighborhood of the border edge of <computeroutput>hd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>hd</computeroutput> is not a border halfedge (its opposite is) and <computeroutput>vpt</computeroutput> corresponds to the target vertex of <computeroutput>hd</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PTQMask_3.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Required member functions for the <computeroutput><ref refid="classPTQMask__3" kindref="compound">PTQMask_3</ref></computeroutput> concept. This policy concept of geometric computations is used in <computeroutput><ref refid="group__PkgSurfaceSubdivisionMethods3Functions_1ga03f5ebc46849e95dc27eb012b4c9e837" kindref="member">CGAL::Subdivision_method_3::PTQ</ref>&lt;PolygonMesh, Mask, NamedParameters&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="LoopBorderMask.svg"></image>
</para><para><xrefsect id="refines_1_refines000003"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classSubdivisionMask__3" kindref="compound">SubdivisionMask_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Loop__mask__3" kindref="compound">CGAL::Loop_mask_3</ref>&lt;PolygonMesh, VertexPointMap&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="namespaceCGAL_1_1Subdivision__method__3" kindref="compound">CGAL::Subdivision_method_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PTQMask_3.h" line="17" column="1" bodyfile="Concepts/PTQMask_3.h" bodystart="17" bodyend="67"/>
    <listofallmembers>
      <member refid="classPTQMask__3_1aa890dab28725e2ee4045a72a5004a55a" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>border_node</name></member>
      <member refid="classPTQMask__3_1ac5a0719a0d644125cb7d55b14846d461" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>edge_node</name></member>
      <member refid="classPTQMask__3_1aae9bd5b834411714dc8c66849ed42903" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>PolygonMesh</name></member>
      <member refid="classPTQMask__3_1a37a1018e3567373459a1f87b5684e3e6" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>PTQMask_3</name></member>
      <member refid="classPTQMask__3_1ada35e6522fd5c73e5377f479c2aeb525" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>PTQMask_3</name></member>
      <member refid="classPTQMask__3_1a9e94a0a845746c4f6d01c7b32282b7c5" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>vertex_node</name></member>
      <member refid="classPTQMask__3_1a3696da36b117868e086bdd27f87886a7" prot="public" virt="non-virtual"><scope>PTQMask_3</scope><name>VertexPointMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
