<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPQQMask__3" kind="class" language="C++" prot="public">
    <compoundname>PQQMask_3</compoundname>
    <includes local="no">Concepts/PQQMask_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPQQMask__3_1ad35fae21c435c44ba62112e56ff49c67" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PQQMask_3::PolygonMesh</definition>
        <argsstring></argsstring>
        <name>PolygonMesh</name>
        <briefdescription>
<para>The polygon mesh must be triangulated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="29" column="1" bodyfile="Concepts/PQQMask_3.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPQQMask__3_1aeaea5a8736e48fa3a83bda306110920c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PQQMask_3::VertexPointMap</definition>
        <argsstring></argsstring>
        <name>VertexPointMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="30" column="1" bodyfile="Concepts/PQQMask_3.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPQQMask__3_1a2c14dc448921b3753dc011cf15c2c2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PQQMask_3::PQQMask_3</definition>
        <argsstring>(PolygonMesh *pmesh)</argsstring>
        <name>PQQMask_3</name>
        <param>
          <type><ref refid="classPQQMask__3_1ad35fae21c435c44ba62112e56ff49c67" kindref="member">PolygonMesh</ref> *</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The default vertex point property map is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPQQMask__3_1acf4d1bcd229adef551c2e4ee95dc02f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PQQMask_3::PQQMask_3</definition>
        <argsstring>(PolygonMesh *pmesh, VertexPointMap vpmap)</argsstring>
        <name>PQQMask_3</name>
        <param>
          <type><ref refid="classPQQMask__3_1ad35fae21c435c44ba62112e56ff49c67" kindref="member">PolygonMesh</ref> *</type>
          <declname>pmesh</declname>
        </param>
        <param>
          <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">VertexPointMap</ref></type>
          <declname>vpmap</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPQQMask__3_1a4b27dd0a5fd21410a4028c32027645cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PQQMask_3::face_node</definition>
        <argsstring>(face_descriptor fd, Point_3 &amp;pt)</argsstring>
        <name>face_node</name>
        <param>
          <type>face_descriptor</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>computes the face-point <computeroutput>pt</computeroutput> based on the neighborhood of the face <computeroutput>fd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPQQMask__3_1a197b5fc7a3a1b4332968d1f2e6edc804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PQQMask_3::edge_node</definition>
        <argsstring>(halfedge_descriptor hd, Point_3 &amp;pt)</argsstring>
        <name>edge_node</name>
        <param>
          <type>halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>computes the edge-point <computeroutput>pt</computeroutput> based on the neighborhood of the edge <computeroutput>hd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPQQMask__3_1a71fafaa3438a71949860d005fbf3b7a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PQQMask_3::vertex_node</definition>
        <argsstring>(vertex_descriptor vd, Point_3 &amp;pt)</argsstring>
        <name>vertex_node</name>
        <param>
          <type>vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>computes the vertex-point <computeroutput>pt</computeroutput> based on the neighborhood of the vertex <computeroutput>vd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPQQMask__3_1a978760e88bae07e21591fc95ab9cb5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PQQMask_3::border_node</definition>
        <argsstring>(halfedge_descriptor hd, Point_3 &amp;ept, Point_3 &amp;vpt)</argsstring>
        <name>border_node</name>
        <param>
          <type>halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>ept</declname>
        </param>
        <param>
          <type>Point_3 &amp;</type>
          <declname>vpt</declname>
        </param>
        <briefdescription>
<para>computes the edge-point <computeroutput>ept</computeroutput> and the vertex-point <computeroutput>vpt</computeroutput> based on the neighborhood of the border edge of <computeroutput>hd</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>hd</computeroutput> is not a border halfedge (its opposite is) and <computeroutput>vpt</computeroutput> corresponds to the target vertex of <computeroutput>hd</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PQQMask_3.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Required member functions for the <computeroutput><ref refid="classPQQMask__3" kindref="compound">PQQMask_3</ref></computeroutput> concept. This policy concept of geometric computations is used in <computeroutput><ref refid="group__PkgSurfaceSubdivisionMethods3Functions_1ga55aee95359d4cf956b62704cc9783fc1" kindref="member">CGAL::Subdivision_method_3::PQQ</ref>&lt;PolygonMesh, Mask, NamedParameters&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="CCBorderMask.svg"></image>
</para><para><xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classSubdivisionMask__3" kindref="compound">SubdivisionMask_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000002"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1CatmullClark__mask__3" kindref="compound">CGAL::CatmullClark_mask_3</ref>&lt;PolygonMesh, VertexPointMap&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="namespaceCGAL_1_1Subdivision__method__3" kindref="compound">CGAL::Subdivision_method_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PQQMask_3.h" line="20" column="1" bodyfile="Concepts/PQQMask_3.h" bodystart="20" bodyend="77"/>
    <listofallmembers>
      <member refid="classPQQMask__3_1a978760e88bae07e21591fc95ab9cb5d2" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>border_node</name></member>
      <member refid="classPQQMask__3_1a197b5fc7a3a1b4332968d1f2e6edc804" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>edge_node</name></member>
      <member refid="classPQQMask__3_1a4b27dd0a5fd21410a4028c32027645cf" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>face_node</name></member>
      <member refid="classPQQMask__3_1ad35fae21c435c44ba62112e56ff49c67" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>PolygonMesh</name></member>
      <member refid="classPQQMask__3_1a2c14dc448921b3753dc011cf15c2c2ba" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>PQQMask_3</name></member>
      <member refid="classPQQMask__3_1acf4d1bcd229adef551c2e4ee95dc02f4" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>PQQMask_3</name></member>
      <member refid="classPQQMask__3_1a71fafaa3438a71949860d005fbf3b7a5" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>vertex_node</name></member>
      <member refid="classPQQMask__3_1aeaea5a8736e48fa3a83bda306110920c" prot="public" virt="non-virtual"><scope>PQQMask_3</scope><name>VertexPointMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
