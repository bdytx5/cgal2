<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1HalfedgeDS__const__decorator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::HalfedgeDS_const_decorator</compoundname>
    <basecompoundref refid="classCGAL_1_1HalfedgeDS__items__decorator" prot="public" virt="non-virtual">CGAL::HalfedgeDS_items_decorator&lt; HDS &gt;</basecompoundref>
    <includes local="no">CGAL/HalfedgeDS_const_decorator.h</includes>
    <templateparamlist>
      <param>
        <type>typename HDS</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1HalfedgeDS__const__decorator_1ad5b6cdd3e8928c725e3c76b75503ca87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::HalfedgeDS_const_decorator&lt; HDS &gt;::HalfedgeDS_const_decorator</definition>
        <argsstring>(const HDS &amp;hds)</argsstring>
        <name>HalfedgeDS_const_decorator</name>
        <param>
          <type>const HDS &amp;</type>
          <declname>hds</declname>
        </param>
        <briefdescription>
<para>keeps internally a const reference to <computeroutput>hds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/HalfedgeDS_const_decorator.h" line="71" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validness Checks</header>
      <description><para>A halfedge data structure has no definition of validness of its own, but a useful set of tests is defined with the following levels:</para><para><variablelist>
<varlistentry><term><bold>Level 0</bold></term></varlistentry>
<listitem><para>The number of halfedges is even. All pointers except the vertex pointer and the face pointer for border halfedges are unequal to their respective default construction value. For all halfedges <computeroutput>h</computeroutput>: The opposite halfedge is different from <computeroutput>h</computeroutput> and the opposite of the opposite is equal to <computeroutput>h</computeroutput>. The next of the previous halfedge is equal to <computeroutput>h</computeroutput>. For all vertices <computeroutput>v</computeroutput>: the incident vertex of the incident halfedge of <computeroutput>v</computeroutput> is equal to <computeroutput>v</computeroutput>. The halfedges around <computeroutput>v</computeroutput> starting with the incident halfedge of <computeroutput>v</computeroutput> form a cycle. For all faces <computeroutput>f</computeroutput>: the incident face of the incident halfedge of <computeroutput>f</computeroutput> is equal to <computeroutput>f</computeroutput>. The halfedges around <computeroutput>f</computeroutput> starting with the incident halfedge of <computeroutput>f</computeroutput> form a cycle. Redundancies among internal variables are tested, e.g., that iterators enumerate as many items as the related size value indicates. </para></listitem>
<varlistentry><term><bold>Level 1</bold></term></varlistentry>
<listitem><para>All tests of level 0. For all halfedges <computeroutput>h</computeroutput>: The incident vertex of <computeroutput>h</computeroutput> exists and is equal to the incident vertex of the opposite of the next halfedge. The incident face (or hole) of <computeroutput>h</computeroutput> is equal to the incident face (or hole) of the next halfedge. </para></listitem>
<varlistentry><term><bold>Level 2</bold></term></varlistentry>
<listitem><para>All tests of level 1. The sum of all halfedges that can be reached through the vertices must be equal to the number of all halfedges, i.e., all halfedges incident to a vertex must form a single cycle. </para></listitem>
<varlistentry><term><bold>Level 3</bold></term></varlistentry>
<listitem><para>All tests of level 2. The sum of all halfedges that can be reached through the faces must be equal to the number of all halfedges, i.e., all halfedges surrounding a face must form a single cycle (no holes in faces). </para></listitem>
<varlistentry><term><bold>Level 4</bold></term></varlistentry>
<listitem><para>All tests of level 3 and <computeroutput><ref refid="classCGAL_1_1HalfedgeDS__const__decorator_1a2d34287e8e79a93a0c8aede41e24a33e" kindref="member">normalized_border_is_valid()</ref></computeroutput>. </para></listitem>
</variablelist>
</para></description>
      <memberdef kind="function" id="classCGAL_1_1HalfedgeDS__const__decorator_1a20c407cf3b51a5405de75d6ecac54bb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::HalfedgeDS_const_decorator&lt; HDS &gt;::is_valid</definition>
        <argsstring>(bool verbose=false, int level=0) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the halfedge data structure <computeroutput>hds</computeroutput> is valid with respect to the <computeroutput>level</computeroutput> value as defined above. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>verbose</computeroutput> is <computeroutput>true</computeroutput>, statistics are written to <computeroutput>cerr</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/HalfedgeDS_const_decorator.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1HalfedgeDS__const__decorator_1a2d34287e8e79a93a0c8aede41e24a33e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::HalfedgeDS_const_decorator&lt; HDS &gt;::normalized_border_is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>normalized_border_is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the border halfedges are in normalized representation, which is when enumerating all halfedges with the halfedge iterator the following holds: The non-border edges precede the border edges. </para>        </briefdescription>
        <detaileddescription>
<para>For border edges, the second halfedge is a border halfedge. (The first halfedge may or may not be a border halfedge.) The halfedge iterator <computeroutput><ref refid="classHalfedgeDS_1a0c0709ef625d586b973f0e9012cf8711" kindref="member">HalfedgeDS::border_halfedges_begin()</ref></computeroutput> denotes the first border edge. If <computeroutput>verbose</computeroutput> is <computeroutput>true</computeroutput>, statistics are written to <computeroutput>cerr</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/HalfedgeDS_const_decorator.h" line="131" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1HalfedgeDS__items__decorator" kindref="compound">CGAL::HalfedgeDS_items_decorator</ref>&lt;HDS&gt;</computeroutput> provides additional functions for vertices, halfedges, and faces of a halfedge data structure without knowing the containing halfedge data structure. </para>    </briefdescription>
    <detaileddescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1HalfedgeDS__decorator" kindref="compound">CGAL::HalfedgeDS_decorator</ref>&lt;HDS&gt;</computeroutput> stores a reference to the halfedge data structure and provides functions that modify the halfedge data structure, for example Euler-operators. The class <computeroutput><ref refid="classCGAL_1_1HalfedgeDS__const__decorator" kindref="compound">CGAL::HalfedgeDS_const_decorator</ref>&lt;HDS&gt;</computeroutput> stores a const reference to the halfedge data structure. It contains non-modifying functions, for example the test for validness of the data structure.</para><para>All these additional functions take care of the different capabilities a halfedge data structure may have or may not have. The functions evaluate the type tags of the halfedge data structure to decide on the actions. If a particular feature is not supported nothing is done. Note that for example the creation of new halfedges is mandatory for all halfedge data structures and will not appear here again.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>HDS</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classHalfedgeDS" kindref="compound">HalfedgeDS</ref></computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold><linebreak/>
</para><para>The following program fragment illustrates the implementation of a <computeroutput><ref refid="classCGAL_1_1HalfedgeDS__const__decorator_1a20c407cf3b51a5405de75d6ecac54bb8" kindref="member">is_valid()</ref></computeroutput> member function for a simplified polyhedron class. We assume here that the level three check is the appropriate default for polyhedral surfaces.</para><para><programlisting><codeline><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCGAL" kindref="compound">CGAL</ref><sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Polyhedron<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HalfedgeDS_default&lt;Traits&gt;<sp/>HDS;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>HDS<sp/>hds;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCGAL_1_1HalfedgeDS__const__decorator_1a20c407cf3b51a5405de75d6ecac54bb8" kindref="member">is_valid</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verb<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Verbose_ostream<sp/>verr(verb);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>verr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;begin<sp/>Polyhedron::is_valid(<sp/>verb=true,<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HalfedgeDS_const_decorator&lt;HDS&gt;<sp/>decorator(hds);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/>decorator.is_valid(<sp/>verb,<sp/>level<sp/>+<sp/>3);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>further<sp/>checks<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1HalfedgeDS__items__decorator" kindref="compound">CGAL::HalfedgeDS_items_decorator</ref>&lt;HDS&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1HalfedgeDS__decorator" kindref="compound">CGAL::HalfedgeDS_decorator</ref>&lt;HDS&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::HalfedgeDS_items_decorator&lt; HDS &gt;</label>
        <link refid="classCGAL_1_1HalfedgeDS__items__decorator"/>
      </node>
      <node id="0">
        <label>CGAL::HalfedgeDS_const_decorator&lt; HDS &gt;</label>
        <link refid="classCGAL_1_1HalfedgeDS__const__decorator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>CGAL::HalfedgeDS_items_decorator&lt; HDS &gt;</label>
        <link refid="classCGAL_1_1HalfedgeDS__items__decorator"/>
      </node>
      <node id="2">
        <label>CGAL::HalfedgeDS_const_decorator&lt; HDS &gt;</label>
        <link refid="classCGAL_1_1HalfedgeDS__const__decorator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/HalfedgeDS_const_decorator.h" line="62" column="1" bodyfile="CGAL/HalfedgeDS_const_decorator.h" bodystart="62" bodyend="135"/>
    <listofallmembers>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a6b2e4086dce97da162b0442b705219ed" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>close_tip</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a3df8fab54043f40e2c5aa001f3862523" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>close_tip</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a7e2484ac5d97b2506ecf981b5d8c0ef8" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>difference_type</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a3b3ffdfffc3c61a7b88b7efbaf740a61" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Face</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a2505b1cb009d5d0034458de8723ee8af" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Face_handle</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a46c7a0b8b0835023212c9245eab08a96" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Face_iterator</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a0a7ded78b72adb3cd3611e4ebdb6af4c" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>find_prev</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1af4c7c86c8d5d6631cd46a35358fff151" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>find_prev_around_vertex</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a4b28d2dca6278d77d5224e0337f65506" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>flip_edge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1ae0302910dc6bf3d2553ce62739326c6b" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>get_face</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a77e81cf0cdee3c4d690459ca1f7df84e" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>get_face_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a4c7eb053c8856216ff0a53077b4c831e" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>get_prev</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a4b518061b6472363a8220603d4d9e3b5" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>get_vertex</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a62abcaee8077e17541c805be3b31c81d" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>get_vertex_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1ad76498fd9532ab62fd12227949fc156b" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a03e1c1ec4d1a1f79ea6b8ca1a46ca8ed" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Halfedge_handle</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1af9830447eb711ee93de843e28742c425" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Halfedge_iterator</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a14b35bfdb0971ad0e92c3f2bdd19dee9" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>HalfedgeDS</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__const__decorator_1ad5b6cdd3e8928c725e3c76b75503ca87" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>HalfedgeDS_const_decorator</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a4319e796df952b9353da1cd9e871c338" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>HalfedgeDS_items_decorator</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a1c32dcbd9c2a5510a8550011f356ccc0" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>insert_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a249b6ef7b32dc2b89bb778c769491cb8" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>insert_tip</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__const__decorator_1a20c407cf3b51a5405de75d6ecac54bb8" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a797fc62f63e7e6a3023ba600a51ce766" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>iterator_category</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__const__decorator_1a2d34287e8e79a93a0c8aede41e24a33e" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>normalized_border_is_valid</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1aaff553ceaac196e8bc48f78f8703bdf0" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>remove_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a65d5e26834c099fb8f40eb2acdc9d490" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>remove_tip</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a9fd1e40d97140064377a41af44eff16a" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_face</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1af4192f0fc4ab8b35024b3edcf884dbac" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_face_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a5279715c8273086f8b834d6b1ce85ed4" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_face_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a0d904041cd7c4d2e56363fb263f2b842" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_face_in_face_loop</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a1953707915df52d05cce6b9e3c030ff8" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_prev</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a583ac40b281b656f2dd0ab32346b0a5c" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_vertex</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a98653ba2557dc75a31658f8dc7b394d3" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_vertex_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a99635e66eb9f9747afd1abaca5f899c4" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_vertex_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a7e41872942eb1259f48d45ce4e2625f0" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>set_vertex_in_vertex_loop</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1abea61f3922eef7937f2cf85c0798a155" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a599349aac1c275f10abeee11f6f4433d" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_face_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1ae9e58fab7ad971855be393fe9591b2a9" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_halfedge_face</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a327e44cad0b8a64c4ca7f0ba35de4b85" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_halfedge_prev</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a3a14d3bafbed1513363c6ff8dc747c9f" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_halfedge_vertex</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1af2170cca6910cf85c810b0832ae0683e" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_removal</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1abaf583a5196a7ae82e447cdecaac82ec" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Supports_vertex_halfedge</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a3ec81f282874640587586934787bb85a" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a0f965d009888ebcca4a7bffc0af645dd" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Vertex_handle</name></member>
      <member refid="classCGAL_1_1HalfedgeDS__items__decorator_1a745ebcc64c21d77ba3146d74e052484d" prot="public" virt="non-virtual"><scope>CGAL::HalfedgeDS_const_decorator</scope><name>Vertex_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
