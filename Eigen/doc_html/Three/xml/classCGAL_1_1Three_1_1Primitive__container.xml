<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Three_1_1Primitive__container" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>CGAL::Three::Primitive_container</compoundname>
    <derivedcompoundref refid="structCGAL_1_1Three_1_1Edge__container" prot="public" virt="non-virtual">CGAL::Three::Edge_container</derivedcompoundref>
    <derivedcompoundref refid="structCGAL_1_1Three_1_1Point__container" prot="public" virt="non-virtual">CGAL::Three::Point_container</derivedcompoundref>
    <derivedcompoundref refid="structCGAL_1_1Three_1_1Triangle__container" prot="public" virt="non-virtual">CGAL::Three::Triangle_container</derivedcompoundref>
    <includes local="no">CGAL/Three/Primitive_container.h</includes>
      <sectiondef kind="user-defined">
      <header>Setters for the shaders parameters.</header>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a0d9301b47e0c08a12e8661ac4f8b9997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setSelected</definition>
        <argsstring>(bool)</argsstring>
        <name>setSelected</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Setter for the &quot;selected&quot; uniform parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ac3d3bdc4dbd02cef7553873d64341de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setColor</definition>
        <argsstring>(QColor)</argsstring>
        <name>setColor</name>
        <param>
          <type>QColor</type>
        </param>
        <briefdescription>
<para>Setter for the &quot;color&quot; parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="148" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters for the shaders parameters.</header>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a764016cfacbebb99f8da6d39d3bc8029" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Three::Primitive_container::isSelected</definition>
        <argsstring>() const</argsstring>
        <name>isSelected</name>
        <briefdescription>
<para>getter for the &quot;selected&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a5a33ffaefe8a6fda05f777b1351340d3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor CGAL::Three::Primitive_container::getColor</definition>
        <argsstring>() const</argsstring>
        <name>getColor</name>
        <briefdescription>
<para>getter for the &quot;color&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="210" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classCGAL_1_1Three_1_1Primitive__container_1a6f7af4d8c4d97d9864f093f84ebe9903" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct D</definition>
        <argsstring></argsstring>
        <name>D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="214" column="1" bodyfile="CGAL/Three/Primitive_container.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Three_1_1Primitive__container_1a70bb6e07c24287288cf8a5fe9253dcfd" prot="private" static="no" mutable="yes">
        <type>D *</type>
        <definition>D* CGAL::Three::Primitive_container::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="215" column="1" bodyfile="CGAL/Three/Primitive_container.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a188cda7751dbb561c5cdaefad22ec3da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Three::Primitive_container::Primitive_container</definition>
        <argsstring>(int program, bool indexed)</argsstring>
        <name>Primitive_container</name>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexed</declname>
        </param>
        <briefdescription>
<para><ref refid="classCGAL_1_1Three_1_1Primitive__container" kindref="compound">Primitive_container</ref> ructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>program</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput>QOpenGLShaderProgram</computeroutput> used by the VAOs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexed</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput>true</computeroutput> if the data is indexed, <computeroutput>false</computeroutput> otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a81e79371ef38e131e004c32cc84c33a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CGAL::Three::Primitive_container::~Primitive_container</definition>
        <argsstring>()</argsstring>
        <name>~Primitive_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a1854417897bc92670fac1a8de3bd4b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::bindUniformValues</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer)</argsstring>
        <name>bindUniformValues</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>bindUniformValues sets the uniform variables for the concerned shaders. </para>        </briefdescription>
        <detaileddescription>
<para>Such variables are valid at every step of the pipeline. For example, the ModelViewProjection matrix, the uniform color or the is_selected state are uniform values. This function is called in the <computeroutput><ref refid="classCGAL_1_1Three_1_1Primitive__container_1a9fb69c70ce71f05f1f2b864830a92e62" kindref="member">draw()</ref></computeroutput>function. <simplesect kind="attention"><para><computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s data should be allocated for this function to be effective. </para></simplesect>
<simplesect kind="attention"><para>This should only be called once the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput>s and the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s are created, in a valid OpenGL context. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a9fb69c70ce71f05f1f2b864830a92e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void CGAL::Three::Primitive_container::draw</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer, bool is_color_uniform)=0</argsstring>
        <name>draw</name>
        <reimplementedby refid="structCGAL_1_1Three_1_1Point__container_1a2108fab61e2b6e7d4fc5aba363e68890">draw</reimplementedby>
        <reimplementedby refid="structCGAL_1_1Three_1_1Triangle__container_1ac463ed9a204d671d099688209541a528">draw</reimplementedby>
        <reimplementedby refid="structCGAL_1_1Three_1_1Edge__container_1a9e78b5a6e1aefe8576cd5f3e4753f8f0">draw</reimplementedby>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_color_uniform</declname>
        </param>
        <briefdescription>
<para>draw is the function that actually renders the data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_color_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>should be <computeroutput>true</computeroutput> if the item is unicolor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a698b3665a3539bb14a156d4ed5796c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CGAL::Three::Primitive_container::initializeBuffers</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer)</argsstring>
        <name>initializeBuffers</name>
        <reimplementedby refid="structCGAL_1_1Three_1_1Triangle__container_1ae774263ffc478d60239c1dba1047c480">initializeBuffers</reimplementedby>
        <reimplementedby refid="structCGAL_1_1Three_1_1Edge__container_1ac99b0111dfe7dd01e096287049db20f3">initializeBuffers</reimplementedby>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>initializeBuffers sends the data to the GPU memory. </para>        </briefdescription>
        <detaileddescription>
<para>It actually fills up the buffers with the data provided by <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo_1acdc679b5ec8f0f32f96e0318dad2eced" kindref="member">Vbo::allocate()</ref></computeroutput>; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ae9895202c87827719d68564037e57f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void CGAL::Three::Primitive_container::initGL</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer)=0</argsstring>
        <name>initGL</name>
        <reimplementedby refid="structCGAL_1_1Three_1_1Point__container_1ac82fafdba599c20092ee694ed6f14810">initGL</reimplementedby>
        <reimplementedby refid="structCGAL_1_1Three_1_1Triangle__container_1a2db9c8d984f6330ff4f17db59eabef22">initGL</reimplementedby>
        <reimplementedby refid="structCGAL_1_1Three_1_1Edge__container_1aeee6974cb2fdacdde8baa2c7ab2e39fb">initGL</reimplementedby>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>initGL initializes the OpenGL containers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>It must be called within a valid OpenGL context. The <computeroutput><ref refid="classCGAL_1_1Three_1_1Primitive__container_1a9fb69c70ce71f05f1f2b864830a92e62" kindref="member">draw()</ref></computeroutput> function of an item is always a safe place to call this.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1acd54752341c760ebef4e7ce6068b1943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::removeViewer</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer)</argsstring>
        <name>removeViewer</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>removeViewer deletes and removes the <ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref> assigned to <computeroutput>viewer</computeroutput> from <computeroutput>Vaos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput> to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ab8a59da5c79b1a8804fa6a71667719c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::reset_vbos</definition>
        <argsstring>(Scene_item_rendering_helper::Gl_data_names)</argsstring>
        <name>reset_vbos</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Scene__item__rendering__helper_1a1e253e837a2d00836ea11cfe431b7c9c" kindref="member">Scene_item_rendering_helper::Gl_data_names</ref></type>
        </param>
        <briefdescription>
<para>reset_vbos de-allocates the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s. </para>        </briefdescription>
        <detaileddescription>
<para>It must be called when the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s data is updated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1aaaf88b8c3e3861c6394d01dffb5ca4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setFlatDataSize</definition>
        <argsstring>(std::size_t)</argsstring>
        <name>setFlatDataSize</name>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
<para>setFlatDataSize sets the number of un-indexed vertices of this container. </para>        </briefdescription>
        <detaileddescription>
<para>If the vertices are indexed, you can ignore this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a3a0b40ddb67193c1ef5eac3efc9d1c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setIdxSize</definition>
        <argsstring>(std::size_t)</argsstring>
        <name>setIdxSize</name>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
<para>setIdxDataSize sets the number of indexed vertices of this container. </para>        </briefdescription>
        <detaileddescription>
<para>If the vertices are not indexed, you can ignore this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1aa5d5252c55f17ce5439a2955b720e09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setCenterSize</definition>
        <argsstring>(std::size_t)</argsstring>
        <name>setCenterSize</name>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
<para>setCenterSize sets the number of instances of the item in this container. </para>        </briefdescription>
        <detaileddescription>
<para>If the program of this container is not instanced, you can ignore this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a4f780e052de09d950caf91f9bf349b14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Three::Primitive_container::isGLInit</definition>
        <argsstring>(Viewer_interface *viewer) const</argsstring>
        <name>isGLInit</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the container <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput>s and <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s are created in the context of <computeroutput>viewer</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a77abc4e9ccbd2639761e4edccd2da25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::allocate</definition>
        <argsstring>(std::size_t vbo_id, void *data, int datasize)</argsstring>
        <name>allocate</name>
        <param>
          <type>std::size_t</type>
          <declname>vbo_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>datasize</declname>
        </param>
        <briefdescription>
<para>allocate sets the data for a <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vbo_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput> in this container vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to give to the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datasize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size in bytes of <computeroutput>data</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a17f368a2c6d6b880e77eb90d50296d9f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setVao</definition>
        <argsstring>(Viewer_interface *viewer, Vao *)</argsstring>
        <name>setVao</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref> *</type>
        </param>
        <briefdescription>
<para>setVao sets the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput> corresponding to <computeroutput>viewer</computeroutput> of this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ad4d688ba21c4e3bf60f3f6b0e02bd226" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setVbos</definition>
        <argsstring>(std::vector&lt; Vbo *&gt;)</argsstring>
        <name>setVbos</name>
        <param>
          <type>std::vector&lt; <ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref> *&gt;</type>
        </param>
        <briefdescription>
<para>setVbos sets the vector of <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s for this container. </para>        </briefdescription>
        <detaileddescription>
<para>It must contain at least all the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s that will be used by the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput>s. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1aff95bf1bc91acfecc27982567540ce89" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setVbo</definition>
        <argsstring>(std::size_t vbo_id, Vbo *vbo)</argsstring>
        <name>setVbo</name>
        <param>
          <type>std::size_t</type>
          <declname>vbo_id</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref> *</type>
          <declname>vbo</declname>
        </param>
        <briefdescription>
<para>setVbo sets the <computeroutput>vbo_id</computeroutput>th <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput> of this container to <computeroutput>vbo</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vbo_id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vbo</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ac77f3bd31305984b82159581370c8e95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setGLInit</definition>
        <argsstring>(Viewer_interface *viewer, bool)</argsstring>
        <name>setGLInit</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Use this to specify if the container <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput>s and <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s are created in the context of <computeroutput>viewer</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a770cdef083ec47f307288e08dc3c42df" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref> *</type>
        <definition>Vao* CGAL::Three::Primitive_container::getVao</definition>
        <argsstring>(Viewer_interface *viewer) const</argsstring>
        <name>getVao</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput> bound to <computeroutput>viewer</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a1c980d55c933407d9d9d2ee6bed28f3e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref> *</type>
        <definition>Vbo* CGAL::Three::Primitive_container::getVbo</definition>
        <argsstring>(std::size_t id) const</argsstring>
        <name>getVbo</name>
        <param>
          <type>std::size_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>getVbo returns the <computeroutput>id</computeroutput>th <ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref> of this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a9b00336ef8dcef685af7caf2e8625b74" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Three::Primitive_container::getProgram</definition>
        <argsstring>() const</argsstring>
        <name>getProgram</name>
        <briefdescription>
<para>getProgram returns the <computeroutput>OpenGL_program_IDs</computeroutput> used with this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a0b92f52ee3c14803594e97ed4703c28f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Three::Primitive_container::isDataIndexed</definition>
        <argsstring>()</argsstring>
        <name>isDataIndexed</name>
        <briefdescription>
<para>isDataIndexed specifies if the data is indexed or not. </para>        </briefdescription>
        <detaileddescription>
<para>This matters for the internal drawing functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1af2082b395f3b50df0777d754a7eea1e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Primitive_container::setInit</definition>
        <argsstring>(Viewer_interface *viewer, bool)</argsstring>
        <name>setInit</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Use this to specify if the container <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s are filled for <computeroutput>viewer</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1ad0f2f3bf41226fc5b0ca0044fdb317cf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Three::Primitive_container::isInit</definition>
        <argsstring>(Viewer_interface *viewer) const</argsstring>
        <name>isInit</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>isInit returns <computeroutput>true</computeroutput> if the container <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput>s are filled for <computeroutput>viewer</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a8cb4a0ec38fa895b7ab4f8939478c81f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Three::Primitive_container::getFlatDataSize</definition>
        <argsstring>() const</argsstring>
        <name>getFlatDataSize</name>
        <briefdescription>
<para>getFlatDataSize returns the number of un-indexed vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a146d562999fedb497e5387eb2bc618c8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Three::Primitive_container::getIdxSize</definition>
        <argsstring>() const</argsstring>
        <name>getIdxSize</name>
        <briefdescription>
<para>getIdxSize returns the number of indexed vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Primitive__container_1a26c98609f94ce3119803c030fe97fed2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Three::Primitive_container::getCenterSize</definition>
        <argsstring>() const</argsstring>
        <name>getCenterSize</name>
        <briefdescription>
<para>getCenterSize returns the number of instances of the item in this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Primitive_container.h" line="203" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classCGAL_1_1Three_1_1Primitive__container" kindref="compound">Primitive_container</ref> struct provides a base for the OpenGL data wrappers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="23">
        <label>CGAL::Three::Edge_container</label>
        <link refid="structCGAL_1_1Three_1_1Edge__container"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>CGAL::Three::Triangle_container</label>
        <link refid="structCGAL_1_1Three_1_1Triangle__container"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>CGAL::Three::Point_container</label>
        <link refid="structCGAL_1_1Three_1_1Point__container"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>CGAL::Three::Primitive_container</label>
        <link refid="classCGAL_1_1Three_1_1Primitive__container"/>
      </node>
    </inheritancegraph>
    <location file="CGAL/Three/Primitive_container.h" line="48" column="1" bodyfile="CGAL/Three/Primitive_container.h" bodystart="47" bodyend="216"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a77abc4e9ccbd2639761e4edccd2da25d" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>allocate</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a1854417897bc92670fac1a8de3bd4b2d" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>bindUniformValues</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a6f7af4d8c4d97d9864f093f84ebe9903" prot="private" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>D</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a70bb6e07c24287288cf8a5fe9253dcfd" prot="private" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>d</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a9fb69c70ce71f05f1f2b864830a92e62" prot="public" virt="pure-virtual"><scope>CGAL::Three::Primitive_container</scope><name>draw</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a26c98609f94ce3119803c030fe97fed2" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getCenterSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a5a33ffaefe8a6fda05f777b1351340d3" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getColor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a8cb4a0ec38fa895b7ab4f8939478c81f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getFlatDataSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a146d562999fedb497e5387eb2bc618c8" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getIdxSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a9b00336ef8dcef685af7caf2e8625b74" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getProgram</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a770cdef083ec47f307288e08dc3c42df" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getVao</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a1c980d55c933407d9d9d2ee6bed28f3e" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>getVbo</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ae9895202c87827719d68564037e57f59" prot="public" virt="pure-virtual"><scope>CGAL::Three::Primitive_container</scope><name>initGL</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a698b3665a3539bb14a156d4ed5796c6b" prot="public" virt="virtual"><scope>CGAL::Three::Primitive_container</scope><name>initializeBuffers</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a0b92f52ee3c14803594e97ed4703c28f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>isDataIndexed</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a4f780e052de09d950caf91f9bf349b14" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>isGLInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ad0f2f3bf41226fc5b0ca0044fdb317cf" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>isInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a764016cfacbebb99f8da6d39d3bc8029" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>isSelected</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a188cda7751dbb561c5cdaefad22ec3da" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>Primitive_container</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1acd54752341c760ebef4e7ce6068b1943" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>removeViewer</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ab8a59da5c79b1a8804fa6a71667719c1" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>reset_vbos</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aa5d5252c55f17ce5439a2955b720e09f" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setCenterSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ac3d3bdc4dbd02cef7553873d64341de6" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setColor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aaaf88b8c3e3861c6394d01dffb5ca4d4" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setFlatDataSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ac77f3bd31305984b82159581370c8e95" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setGLInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a3a0b40ddb67193c1ef5eac3efc9d1c16" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setIdxSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1af2082b395f3b50df0777d754a7eea1e9" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a0d9301b47e0c08a12e8661ac4f8b9997" prot="public" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setSelected</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a17f368a2c6d6b880e77eb90d50296d9f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setVao</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aff95bf1bc91acfecc27982567540ce89" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setVbo</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ad4d688ba21c4e3bf60f3f6b0e02bd226" prot="protected" virt="non-virtual"><scope>CGAL::Three::Primitive_container</scope><name>setVbos</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a81e79371ef38e131e004c32cc84c33a7" prot="public" virt="virtual"><scope>CGAL::Three::Primitive_container</scope><name>~Primitive_container</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
