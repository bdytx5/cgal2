<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Three_1_1Triangle__container" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Three::Triangle_container</compoundname>
    <basecompoundref refid="classCGAL_1_1Three_1_1Primitive__container" prot="public" virt="non-virtual">CGAL::Three::Primitive_container</basecompoundref>
    <includes local="no">CGAL/Three/Triangle_container.h</includes>
      <sectiondef kind="user-defined">
      <header>Getters and Setters for the shaders parameters.</header>
      <description><para>Each of those depends of the <computeroutput>OpenGL_program_IDs</computeroutput> this container is using.</para><para>If the shaders of this program doesn&apos;t need one, you can ignore it. The others should be filled at each <computeroutput><ref refid="structCGAL_1_1Three_1_1Triangle__container_1ac463ed9a204d671d099688209541a528" kindref="member">draw()</ref></computeroutput> from the item.</para><para>getter for the &quot;shrink_factor&quot; parameter </para></description>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a5f839f5c09085bb7a9d6e3ef173a4339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Three::Triangle_container::getShrinkFactor</definition>
        <argsstring>()</argsstring>
        <name>getShrinkFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1ac9b6cb8a078129296303cc202ef1e18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector4D</type>
        <definition>QVector4D CGAL::Three::Triangle_container::getPlane</definition>
        <argsstring>()</argsstring>
        <name>getPlane</name>
        <briefdescription>
<para>getter for the &quot;plane&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a0864bac87e30658435d2b873fd578331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Three::Triangle_container::getAlpha</definition>
        <argsstring>()</argsstring>
        <name>getAlpha</name>
        <briefdescription>
<para>getter for the &quot;alpha&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a2aea399d6645da23fc800367f2ae4f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::setShrinkFactor</definition>
        <argsstring>(const float &amp;)</argsstring>
        <name>setShrinkFactor</name>
        <param>
          <type>const float &amp;</type>
        </param>
        <briefdescription>
<para>setter for the &quot;shrink_factor&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a7f8b8219d2016de84d304b865f7b5e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::setPlane</definition>
        <argsstring>(const QVector4D &amp;)</argsstring>
        <name>setPlane</name>
        <param>
          <type>const QVector4D &amp;</type>
        </param>
        <briefdescription>
<para>setter for the &quot;plane&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a6e8290a50b9b0cea67659c6a8cea5af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::setAlpha</definition>
        <argsstring>(const float &amp;)</argsstring>
        <name>setAlpha</name>
        <param>
          <type>const float &amp;</type>
        </param>
        <briefdescription>
<para>setter for the &quot;alpha&quot; parameter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105" prot="public" static="no">
        <name>vbosName</name>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105ac341a4d013ad3c5bc972efc25a931332" prot="public">
          <name>Flat_vertices</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Designates the buffer that contains the flat vertex coordinates (not indexed). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a672a9e22c527c58390050e4f70a27a38" prot="public">
          <name>Smooth_vertices</name>
          <briefdescription>
<para>Designates the buffer that contains the smooth vertex coordinates (indexed). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105ad965096fa6047c0d3f5ea15285999891" prot="public">
          <name>Vertex_indices</name>
          <briefdescription>
<para>Designates the buffer that contains the indices for the smooth vertices. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a536ca325db6c6aef88797803579ebf1a" prot="public">
          <name>Flat_normals</name>
          <briefdescription>
<para>Designates the buffer that contains the normals for the flat vertices. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a3f93e3d9dbbe19cd801139ab66b775b2" prot="public">
          <name>Smooth_normals</name>
          <briefdescription>
<para>Designates the buffer that contains the normals for the smooth vertices. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a270d26cf54610a1b99ca59a29ac0885b" prot="public">
          <name>Facet_barycenters</name>
          <briefdescription>
<para>Designates the buffer that contains the barycenters of the c3t3 facets or the center of the spheres. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a97c50a1b9b3345855c2a55322909c7b8" prot="public">
          <name>Radius</name>
          <briefdescription>
<para>Designates the buffer that contains the radius of the spheres. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105aeba12ff9000ef227c74c33e8d644dc86" prot="public">
          <name>VColors</name>
          <briefdescription>
<para>Designates the buffer that contains the colors of the smooth vertices. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105aa3d38101829e4b8db87224bcab719504" prot="public">
          <name>FColors</name>
          <briefdescription>
<para>Designates the buffer that contains the colors of the flat vertices. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a45deb1ec994e52d510cee557707aec9b" prot="public">
          <name>NbOfVbos</name>
          <briefdescription>
<para>Designates the size of the VBOs vector for <computeroutput><ref refid="structCGAL_1_1Three_1_1Triangle__container" kindref="compound">Triangle_container</ref></computeroutput>s. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The vbosName enum. </para>        </briefdescription>
        <detaileddescription>
<para>Holds the <computeroutput><ref refid="structCGAL_1_1Three_1_1Vbo" kindref="compound">Vbo</ref></computeroutput> Ids of this container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="49" column="1" bodyfile="CGAL/Three/Triangle_container.h" bodystart="49" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structCGAL_1_1Three_1_1Triangle__container_1a56a5feabcfecf54bd90022c6a490f82d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct Tri_d</definition>
        <argsstring></argsstring>
        <name>Tri_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="110" column="1" bodyfile="CGAL/Three/Triangle_container.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structCGAL_1_1Three_1_1Triangle__container_1ad2c68e7e23197a3f968ebc6942133159" prot="private" static="no" mutable="yes">
        <type>Tri_d *</type>
        <definition>Tri_d* CGAL::Three::Triangle_container::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="111" column="1" bodyfile="CGAL/Three/Triangle_container.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a675936c38e847ff0459f33cb3e33d011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Three::Triangle_container::Triangle_container</definition>
        <argsstring>(int program, bool indexed)</argsstring>
        <name>Triangle_container</name>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexed</declname>
        </param>
        <briefdescription>
<para>The constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>program</parametername>
</parameternamelist>
<parameterdescription>
<para>is the <computeroutput>QOpenGLShaderProgram</computeroutput> that is used by this <computeroutput><ref refid="structCGAL_1_1Three_1_1Triangle__container" kindref="compound">Triangle_container</ref></computeroutput> <computeroutput><ref refid="structCGAL_1_1Three_1_1Vao" kindref="compound">Vao</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexed</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput>true</computeroutput> if the data is indexed, <computeroutput>false</computeroutput> otherwise. If <computeroutput>true</computeroutput>, <computeroutput>VBOs</computeroutput>[<computeroutput>Vertex_indices</computeroutput>] must be filled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1a2db9c8d984f6330ff4f17db59eabef22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::initGL</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer) Q_DECL_OVERRIDE</argsstring>
        <name>initGL</name>
        <reimplements refid="classCGAL_1_1Three_1_1Primitive__container_1ae9895202c87827719d68564037e57f59">initGL</reimplements>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>initGL creates the Vbos and Vaos of this <computeroutput><ref refid="structCGAL_1_1Three_1_1Triangle__container" kindref="compound">Triangle_container</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>It must be called within a valid OpenGL context. The <computeroutput><ref refid="structCGAL_1_1Three_1_1Triangle__container_1ac463ed9a204d671d099688209541a528" kindref="member">draw()</ref></computeroutput> function of an item is always a safe place to call this.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1ac463ed9a204d671d099688209541a528" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::draw</definition>
        <argsstring>(CGAL::Three::Viewer_interface *viewer, bool is_color_uniform) Q_DECL_OVERRIDE</argsstring>
        <name>draw</name>
        <reimplements refid="classCGAL_1_1Three_1_1Primitive__container_1a9fb69c70ce71f05f1f2b864830a92e62">draw</reimplements>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_color_uniform</declname>
        </param>
        <briefdescription>
<para>draw is the function that actually renders the data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the active <computeroutput><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_color_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput>false</computeroutput> if the color buffers are not empty, <computeroutput>true</computeroutput> otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Three_1_1Triangle__container_1ae774263ffc478d60239c1dba1047c480" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CGAL::Three::Triangle_container::initializeBuffers</definition>
        <argsstring>(Viewer_interface *viewer) Q_DECL_OVERRIDE</argsstring>
        <name>initializeBuffers</name>
        <reimplements refid="classCGAL_1_1Three_1_1Primitive__container_1a698b3665a3539bb14a156d4ed5796c6b">initializeBuffers</reimplements>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">Viewer_interface</ref> *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Triangle_container.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structCGAL_1_1Three_1_1Triangle__container" kindref="compound">Triangle_container</ref> struct wraps the OpenGL data for drawing triangles. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="68">
        <label>CGAL::Three::Triangle_container</label>
        <link refid="structCGAL_1_1Three_1_1Triangle__container"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>CGAL::Three::Primitive_container</label>
        <link refid="classCGAL_1_1Three_1_1Primitive__container"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="70">
        <label>CGAL::Three::Triangle_container</label>
        <link refid="structCGAL_1_1Three_1_1Triangle__container"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>CGAL::Three::Primitive_container</label>
        <link refid="classCGAL_1_1Three_1_1Primitive__container"/>
      </node>
    </collaborationgraph>
    <location file="CGAL/Three/Triangle_container.h" line="43" column="1" bodyfile="CGAL/Three/Triangle_container.h" bodystart="42" bodyend="113"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a77abc4e9ccbd2639761e4edccd2da25d" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>allocate</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a1854417897bc92670fac1a8de3bd4b2d" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>bindUniformValues</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1ad2c68e7e23197a3f968ebc6942133159" prot="private" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>d</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1ac463ed9a204d671d099688209541a528" prot="public" virt="virtual"><scope>CGAL::Three::Triangle_container</scope><name>draw</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a270d26cf54610a1b99ca59a29ac0885b" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Facet_barycenters</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105aa3d38101829e4b8db87224bcab719504" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>FColors</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a536ca325db6c6aef88797803579ebf1a" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Flat_normals</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105ac341a4d013ad3c5bc972efc25a931332" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Flat_vertices</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a0864bac87e30658435d2b873fd578331" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getAlpha</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a26c98609f94ce3119803c030fe97fed2" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getCenterSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a5a33ffaefe8a6fda05f777b1351340d3" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getColor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a8cb4a0ec38fa895b7ab4f8939478c81f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getFlatDataSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a146d562999fedb497e5387eb2bc618c8" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getIdxSize</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1ac9b6cb8a078129296303cc202ef1e18f" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getPlane</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a9b00336ef8dcef685af7caf2e8625b74" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getProgram</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a5f839f5c09085bb7a9d6e3ef173a4339" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getShrinkFactor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a770cdef083ec47f307288e08dc3c42df" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getVao</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a1c980d55c933407d9d9d2ee6bed28f3e" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>getVbo</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a2db9c8d984f6330ff4f17db59eabef22" prot="public" virt="virtual"><scope>CGAL::Three::Triangle_container</scope><name>initGL</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1ae774263ffc478d60239c1dba1047c480" prot="public" virt="virtual"><scope>CGAL::Three::Triangle_container</scope><name>initializeBuffers</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a0b92f52ee3c14803594e97ed4703c28f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>isDataIndexed</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a4f780e052de09d950caf91f9bf349b14" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>isGLInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ad0f2f3bf41226fc5b0ca0044fdb317cf" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>isInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a764016cfacbebb99f8da6d39d3bc8029" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>isSelected</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a45deb1ec994e52d510cee557707aec9b" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>NbOfVbos</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a188cda7751dbb561c5cdaefad22ec3da" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Primitive_container</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a97c50a1b9b3345855c2a55322909c7b8" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Radius</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1acd54752341c760ebef4e7ce6068b1943" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>removeViewer</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ab8a59da5c79b1a8804fa6a71667719c1" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>reset_vbos</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a6e8290a50b9b0cea67659c6a8cea5af3" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setAlpha</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aa5d5252c55f17ce5439a2955b720e09f" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setCenterSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ac3d3bdc4dbd02cef7553873d64341de6" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setColor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aaaf88b8c3e3861c6394d01dffb5ca4d4" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setFlatDataSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ac77f3bd31305984b82159581370c8e95" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setGLInit</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a3a0b40ddb67193c1ef5eac3efc9d1c16" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setIdxSize</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1af2082b395f3b50df0777d754a7eea1e9" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setInit</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a7f8b8219d2016de84d304b865f7b5e62" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setPlane</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a0d9301b47e0c08a12e8661ac4f8b9997" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setSelected</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a2aea399d6645da23fc800367f2ae4f10" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setShrinkFactor</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a17f368a2c6d6b880e77eb90d50296d9f" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setVao</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1aff95bf1bc91acfecc27982567540ce89" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setVbo</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1ad4d688ba21c4e3bf60f3f6b0e02bd226" prot="protected" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>setVbos</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a3f93e3d9dbbe19cd801139ab66b775b2" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Smooth_normals</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105a672a9e22c527c58390050e4f70a27a38" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Smooth_vertices</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a56a5feabcfecf54bd90022c6a490f82d" prot="private" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Tri_d</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a675936c38e847ff0459f33cb3e33d011" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Triangle_container</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>vbosName</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105aeba12ff9000ef227c74c33e8d644dc86" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>VColors</name></member>
      <member refid="structCGAL_1_1Three_1_1Triangle__container_1a19c31652e3d2713ce871a6f60390f105ad965096fa6047c0d3f5ea15285999891" prot="public" virt="non-virtual"><scope>CGAL::Three::Triangle_container</scope><name>Vertex_indices</name></member>
      <member refid="classCGAL_1_1Three_1_1Primitive__container_1a81e79371ef38e131e004c32cc84c33a7" prot="public" virt="virtual"><scope>CGAL::Three::Triangle_container</scope><name>~Primitive_container</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
