<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Three_1_1Scene__transparent__interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>CGAL::Three::Scene_transparent_interface</compoundname>
    <includes local="no">CGAL/Three/Scene_transparent_interface.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Scene__transparent__interface_1a6654401c54393961a65d1e332c40184e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CGAL::Three::Scene_transparent_interface::~Scene_transparent_interface</definition>
        <argsstring>()</argsstring>
        <name>~Scene_transparent_interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Scene_transparent_interface.h" line="33" column="1" bodyfile="CGAL/Three/Scene_transparent_interface.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Three_1_1Scene__transparent__interface_1a2d12f46758b251d3989e1a5fd95e3157" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void CGAL::Three::Scene_transparent_interface::drawTransparent</definition>
        <argsstring>(CGAL::Three::Viewer_interface *) const =0</argsstring>
        <name>drawTransparent</name>
        <param>
          <type><ref refid="classCGAL_1_1Three_1_1Viewer__interface" kindref="compound">CGAL::Three::Viewer_interface</ref> *</type>
        </param>
        <briefdescription>
<para>Draw transparent faces. </para>        </briefdescription>
        <detaileddescription>
<para>It is the last drawing call in the <ref refid="classScene" kindref="compound">Scene</ref>, so all the items are already in place and the blending takes them all, their points and their edges into account, whatever the position of the transparent item is in the scene&apos;s entries. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Three/Scene_transparent_interface.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class to allow an item to draw transparent faces. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Three/Scene_transparent_interface.h" line="31" column="1" bodyfile="CGAL/Three/Scene_transparent_interface.h" bodystart="31" bodyend="40"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Three_1_1Scene__transparent__interface_1a2d12f46758b251d3989e1a5fd95e3157" prot="public" virt="pure-virtual"><scope>CGAL::Three::Scene_transparent_interface</scope><name>drawTransparent</name></member>
      <member refid="classCGAL_1_1Three_1_1Scene__transparent__interface_1a6654401c54393961a65d1e332c40184e" prot="public" virt="virtual"><scope>CGAL::Three::Scene_transparent_interface</scope><name>~Scene_transparent_interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
