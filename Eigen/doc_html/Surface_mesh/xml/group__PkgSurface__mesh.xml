<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgSurface__mesh" kind="group">
    <compoundname>PkgSurface_mesh</compoundname>
    <title>Surface Mesh Reference</title>
    <innerclass refid="classCGAL_1_1Surface__mesh" prot="public">CGAL::Surface_mesh</innerclass>
    <innergroup refid="group__PkgDrawSurfaceMesh">Draw a Surface Mesh</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurface__mesh_1gaf10a90e383ba440f115eeb1553e44768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>write_off</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2079" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2079" bodyend="2081"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1gab985fbde15bac9d10d7b211600e04702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>read_off</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2235" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2235" bodyend="2238"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1gace96325c1be2a053bba0afd0fae128c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>Surface_mesh&lt; P &gt; &amp;</type>
        <definition>Surface_mesh&lt; P &gt; &amp; operator+=</definition>
        <argsstring>(Surface_mesh&lt; P &gt; &amp;sm, const Surface_mesh&lt; P &gt; &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts <computeroutput>other</computeroutput> into <computeroutput>sm</computeroutput>. Shifts the indices of vertices of <computeroutput>other</computeroutput> by <computeroutput>sm.number_of_vertices() + sm.number_of_removed_vertices()</computeroutput> and analoguously for halfedges, edges, and faces. Copies entries of all property maps which have the same name in <computeroutput>sm</computeroutput> and <computeroutput>other</computeroutput>. that is, property maps which are only in <computeroutput>other</computeroutput> are ignored. Also copies elements which are marked as removed, and concatenates the freelists of <computeroutput>sm</computeroutput> and <computeroutput>other</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2015" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2015" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1gab9cba393612ed9793e20b2d8b65bca79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool write_off</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm, const NamedParameters &amp;np)</argsstring>
        <name>write_off</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the surface mesh in an output stream in Ascii OFF format. Only the <emphasis>point</emphasis> property is inserted in the stream. If an alternative vertex_point map is given through <computeroutput>np</computeroutput>, then it will be used instead of the default one. <simplesect kind="pre"><para><computeroutput>operator&lt;&lt;(std::ostream&amp;,const P&amp;)</computeroutput> must be defined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2029" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2029" bodyend="2076"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1ga5bb8fea5de90f1481268a5e313405808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This operator calls <computeroutput><ref refid="group__PkgSurface__mesh_1gaf10a90e383ba440f115eeb1553e44768" kindref="member">write_off(std::ostream&amp; os, const CGAL::Surface_mesh&amp; sm)</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2086" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2086" bodyend="2090"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1gaff345ead523f3c3d2c8ec7943a9a1e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool read_off</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm, NamedParameters np)</argsstring>
        <name>read_off</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>NamedParameters</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the surface mesh from an input stream in Ascii OFF, COFF, NOFF, CNOFF format and appends it to the surface mesh <computeroutput>sm</computeroutput>. The operator reads the point property as well as &quot;v:normal&quot;, &quot;v:color&quot;, and &quot;f:color&quot;. Vertex texture coordinates are ignored. If an alternative vertex_point map is given through <computeroutput>np</computeroutput>, then it will be used instead of the default one. <simplesect kind="pre"><para><computeroutput>operator&gt;&gt;(std::istream&amp;,const P&amp;)</computeroutput> must be defined. </para></simplesect>
<simplesect kind="pre"><para>The data in the stream must represent a two-manifold. If this is not the case the <computeroutput>failbit</computeroutput> of <computeroutput>is</computeroutput> is set and the mesh cleared. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2123" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2123" bodyend="2231"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1ga268e72b885b6a04c4ee6c16ad5265b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This operator calls <computeroutput><ref refid="group__PkgSurface__mesh_1gab985fbde15bac9d10d7b211600e04702" kindref="member">read_off(std::istream&amp; is, CGAL::Surface_mesh&amp; sm)</ref></computeroutput>. <simplesect kind="attention"><para>Up to CGAL 4.10 this operator called <computeroutput>sm.clear()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2244" column="1" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2244" bodyend="2248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="Surface_mesh_teaser.png"></image>
   Mario Botsch, Daniel Sieger, Philipp Moeller, and Andreas Fabri The surface mesh class provided by this package is an implementation of the halfedge data structure allowing to represent polyhedral surfaces. It is an alternative to the packages <ref refid="packages_1PkgHDSSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Halfedge Data Structures</ref> and <ref refid="packages_1PkgPolyhedronSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">3D Polyhedral Surface</ref>. The main differences are that it is indexed based and not pointer based, and that the mechanism for adding information to vertices, halfedges, edges, and faces is much simpler and can be used at runtime and not at compile time. <linebreak/>
   <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bsmf-sm-18b">cgal:bsmf-sm-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para><para></para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh" kindref="compound">CGAL::Surface_mesh</ref>&lt;P&gt;</computeroutput></para></listitem></itemizedlist>
</para><para><heading level="3">Draw a Surface Mesh</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgDrawPolyhedron_1ga3ca458ed11c9fb052476b00227d93584" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polyhedron.tag">CGAL::draw</ref>&lt;SM&gt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
