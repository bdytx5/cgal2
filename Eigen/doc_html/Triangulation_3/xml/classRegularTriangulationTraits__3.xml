<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRegularTriangulationTraits__3" kind="class" language="C++" prot="public">
    <compoundname>RegularTriangulationTraits_3</compoundname>
    <includes local="no">Concepts/RegularTriangulationTraits_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a888cc8536d736895eb4caaa92fe22dec" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Line_3</definition>
        <argsstring></argsstring>
        <name>Line_3</name>
        <briefdescription>
<para>The line type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="36" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a4bd36cf6a6318afc6e0dfe53d7982d16" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Object_3</definition>
        <argsstring></argsstring>
        <name>Object_3</name>
        <briefdescription>
<para>The object type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="41" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1aa48139f6580e103ceedde2995ddbff0f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Plane_3</definition>
        <argsstring></argsstring>
        <name>Plane_3</name>
        <briefdescription>
<para>The plane type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="46" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a5b9e14050df962fb832137a063c3b002" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Ray_3</definition>
        <argsstring></argsstring>
        <name>Ray_3</name>
        <briefdescription>
<para>The ray type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="51" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1ab0848f1f29ee780edf0212502343c531" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Weighted_point_3</definition>
        <argsstring></argsstring>
        <name>Weighted_point_3</name>
        <briefdescription>
<para>The weighted point type. </para>        </briefdescription>
        <detaileddescription>
<para>It has to be a model of the concept <computeroutput><ref refid="classKernel_1_1WeightedPoint__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::WeightedPoint_3</ref></computeroutput>.</para><para><simplesect kind="note"><para>The unweighted point type <computeroutput>Point_3</computeroutput> is requested by the concept <computeroutput><ref refid="classTriangulationTraits__3" kindref="compound">TriangulationTraits_3</ref></computeroutput>, which this concept refines. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="59" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1ac6f779e0b64196f159d5dac233745ee3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Power_side_of_oriented_power_sphere_3</definition>
        <argsstring></argsstring>
        <name>Power_side_of_oriented_power_sphere_3</name>
        <briefdescription>
<para>A predicate object, model of <computeroutput><ref refid="classKernel_1_1PowerSideOfOrientedPowerSphere__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::PowerSideOfOrientedPowerSphere_3</ref></computeroutput>, that must provide the following function operators: </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Oriented_side operator()( Weighted_point_3 p,           Weighted_point_3 q,             Weighted_point_3 r,             Weighted_point_3 s,             Weighted_point_3 t)</computeroutput>,</para><para>which performs the following:</para><para>Let <formula id="54">$ {z(p,q,r,s)}^{(w)}$</formula> be the power sphere of the weighted points <formula id="55">$ (p,q,r,s)$</formula>. Returns</para><para><itemizedlist>
<listitem><para><computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>t</computeroutput> is orthogonal to <formula id="54">$ {z(p,q,r,s)}^{(w)}$</formula>,</para></listitem><listitem><para><computeroutput>ON_NEGATIVE_SIDE</computeroutput> if <computeroutput>t</computeroutput> lies outside the oriented sphere of center <formula id="56">$ z(p,q,r,s)$</formula> and radius <formula id="57">$ \sqrt{ w_{z(p,q,r,s)}^2 + w_t^2 }$</formula> (which is equivalent to <formula id="58">$ \Pi({t}^{(w)},{z(p,q,r,s)}^{(w)}) &gt;0$</formula>),</para></listitem><listitem><para><computeroutput>ON_POSITIVE_SIDE</computeroutput> if <computeroutput>t</computeroutput> lies inside this oriented sphere.</para></listitem></itemizedlist>
</para><para><simplesect kind="pre"><para><computeroutput>p, q, r, s</computeroutput> are not coplanar. Note that with this definition, if all the points have a weight equal to 0, then <computeroutput>power_side_of_oriented_power_sphere_3(p,q,r,s,t)</computeroutput> = <computeroutput>side_of_oriented_sphere(p,q,r,s,t)</computeroutput>.</para></simplesect>
<hruler/>
</para><para><computeroutput>Oriented_side operator()( Weighted_point_3 p,           Weighted_point_3 q,             Weighted_point_3 r,             Weighted_point_3 t)</computeroutput>,</para><para>which has a definition analogous to the previous method, for coplanar points, with the power circle <formula id="59">$ {z(p,q,r)}^{(w)}$</formula>. <simplesect kind="pre"><para><computeroutput>p, q, r</computeroutput> are not collinear and <computeroutput>p, q, r, t</computeroutput> are coplanar. If all the points have a weight equal to 0, then <computeroutput>power_side_of_oriented_power_sphere_3(p,q,r,t)</computeroutput> = <computeroutput>side_of_oriented_circle(p,q,r,t)</computeroutput>.</para></simplesect>
<hruler/>
</para><para><computeroutput>Oriented_side operator()( Weighted_point_3 p,           Weighted_point_3 q,             Weighted_point_3 t)</computeroutput>,</para><para>which is the same for collinear points, where <formula id="60">$ {z(p,q)}^{(w)}$</formula> is the power segment of <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. <simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> have different bare points, and <computeroutput>p, q, t</computeroutput> are collinear. If all points have a weight equal to 0, then <computeroutput>power_side_of_oriented_power_sphere_3(p,q,t)</computeroutput> gives the same answer as the kernel predicate <computeroutput>s(p,q).has_on(t)</computeroutput> would give, where <computeroutput>s(p,q)</computeroutput> denotes the segment with endpoints <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>.</para></simplesect>
<hruler/>
</para><para><computeroutput>Oriented_side operator()( Weighted_point_3 p, Weighted_point_3 q)</computeroutput>,</para><para>which is the same for equal bare points, then it returns the comparison of the weights (<computeroutput>ON_POSITIVE_SIDE</computeroutput> when <computeroutput>q</computeroutput> is heavier than <computeroutput>p</computeroutput>). <simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> have equal bare points. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="119" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1aecba519c5776a5c3e7a7afffbeb161eb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Compare_power_distance_3</definition>
        <argsstring></argsstring>
        <name>Compare_power_distance_3</name>
        <briefdescription>
<para>A predicate object, model of <computeroutput><ref refid="classKernel_1_1ComparePowerDistance__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ComparePowerDistance_3</ref></computeroutput>, that must provide the function operator. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Comparison_result operator()(Point_3 p, Weighted_point_3 q, Weighted_point_3 r)</computeroutput>,</para><para>which compares the power distance between <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> to the power distance between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>.</para><para><simplesect kind="note"><para>This predicate is required if a call to <computeroutput>nearest_power_vertex()</computeroutput> or <computeroutput>nearest_power_vertex_in_cell()</computeroutput> is issued. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="137" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a09d0071234b1669d30327154aabc0b90" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_point_3</definition>
        <argsstring></argsstring>
        <name>Construct_point_3</name>
        <briefdescription>
<para>A constructor type, model of <computeroutput><ref refid="classKernel_1_1ConstructPoint__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ConstructPoint_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>operator()</computeroutput> extracts the bare point from a weighted point.</para><para><computeroutput>Point_3 operator() ( Weighted_point_3 p);</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="146" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1ad5295e3c13b42de21a5444abc831ca06" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_weighted_circumcenter_3</definition>
        <argsstring></argsstring>
        <name>Construct_weighted_circumcenter_3</name>
        <briefdescription>
<para>A constructor type, model of <computeroutput><ref refid="classKernel_1_1ConstructWeightedCircumcenter__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::ConstructWeightedCircumcenter_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>operator()</computeroutput> constructs the bare point which is the center of the smallest orthogonal sphere to the input weighted points.</para><para><computeroutput>Point_3 operator() ( Weighted_point_3 p, Weighted_point_3 q, Weighted_point_3 r, Weighted_point_3 s);</computeroutput></para><para><simplesect kind="note"><para>Only required when the dual operations are used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="160" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a6c870e6a5846c208e6fc30998f4eab61" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_object_3</definition>
        <argsstring></argsstring>
        <name>Construct_object_3</name>
        <briefdescription>
<para>A constructor object that must provide the function operators. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Object_3 operator()(Point_3 p)</computeroutput>,</para><para><computeroutput>Object_3 operator()(Segment_3 s)</computeroutput> and</para><para><computeroutput>Object_3 operator()(Ray_3 r)</computeroutput></para><para>that construct an object respectively from a point, a segment and a ray.</para><para><simplesect kind="note"><para>Only required when the dual operations are used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="175" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a628c256f9fc30dcd1718d5fcd2616b29" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_perpendicular_line_3</definition>
        <argsstring></argsstring>
        <name>Construct_perpendicular_line_3</name>
        <briefdescription>
<para>A constructor object that must provide the function operator. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Line_3 operator()(Plane_3 pl, Point_3 p)</computeroutput>,</para><para>which constructs the line perpendicular to <computeroutput>pl</computeroutput> passing through <computeroutput>p</computeroutput>.</para><para><simplesect kind="note"><para>Only required when the dual operations are used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="186" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1a1df35b3e1f34e7c7ba027e0360fe119f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_plane_3</definition>
        <argsstring></argsstring>
        <name>Construct_plane_3</name>
        <briefdescription>
<para>A constructor object that must provide the function operator. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Plane_3 operator()(Point_3 p, Point_3 q, Point_3 r)</computeroutput>,</para><para>which constructs the plane passing through <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput> are non collinear.</para></simplesect>
<simplesect kind="note"><para>Only required when the dual operations are used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="198" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1ac18d52e0591e7ea6382edf75fd26c6cf" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Construct_ray_3</definition>
        <argsstring></argsstring>
        <name>Construct_ray_3</name>
        <briefdescription>
<para>A constructor object that must provide the function operator. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Ray_3 operator()(Point_3 p, Line_3 l)</computeroutput>,</para><para>which constructs the ray starting at <computeroutput>p</computeroutput> with direction given by <computeroutput>l</computeroutput>.</para><para><simplesect kind="note"><para>Only required when the dual operations are used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="209" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>When <computeroutput>is_Gabriel</computeroutput> functions are used, the traits class must in addition provide the following predicate object: </para></description>
      <memberdef kind="typedef" id="classRegularTriangulationTraits__3_1adc12f36515d841b5f2ba6a9cbf21cd3f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits_3::Power_side_of_bounded_power_sphere_3</definition>
        <argsstring></argsstring>
        <name>Power_side_of_bounded_power_sphere_3</name>
        <briefdescription>
<para>A predicate object that must provide the function operators. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Bounded_side operator()(Weighted_point_3 p, Weighted_point_3 t)</computeroutput>,</para><para>which returns the sign of the power test of <computeroutput>t</computeroutput> with respect to the smallest sphere orthogonal to <computeroutput>p</computeroutput> (which is the sphere with center <computeroutput>p</computeroutput> and squared radius <computeroutput>-w_p</computeroutput> with <computeroutput>w_p</computeroutput> the weight of <computeroutput>p</computeroutput>),</para><para><computeroutput>Bounded_side operator()(Weighted_point_3 p, Weighted_point_3 q, Weighted_point_3 t)</computeroutput>,</para><para>which returns the sign of the power test of <computeroutput>t</computeroutput> with respect to the smallest sphere orthogonal to <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>,</para><para><computeroutput>Bounded_side operator()(Weighted_point_3 p, Weighted_point_3 q, Weighted_point_3 r, Weighted_point_3 t)</computeroutput>,</para><para>which returns the sign of the power test of <computeroutput>t</computeroutput> with respect to the smallest sphere orthogonal to <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="237" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1afd96447c4918cc4ac7ab96603d1720fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1ac6f779e0b64196f159d5dac233745ee3" kindref="member">Power_side_of_oriented_power_sphere_3</ref></type>
        <definition>Power_side_of_oriented_power_sphere_3 RegularTriangulationTraits_3::power_side_of_oriented_power_sphere_3_object</definition>
        <argsstring>()</argsstring>
        <name>power_side_of_oriented_power_sphere_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1a76c2f80bb0553effa2792bb50c34e2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1aecba519c5776a5c3e7a7afffbeb161eb" kindref="member">Compare_power_distance_3</ref></type>
        <definition>Compare_power_distance_3 RegularTriangulationTraits_3::compare_power_distance_3_object</definition>
        <argsstring>()</argsstring>
        <name>compare_power_distance_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1a7b19dd6235ea3f26f8573931bfd7306d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1a09d0071234b1669d30327154aabc0b90" kindref="member">Construct_point_3</ref></type>
        <definition>Construct_point_3 RegularTriangulationTraits_3::construct_point_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_point_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="257" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>The following functions must be provided only if the member functions of <computeroutput><ref refid="classCGAL_1_1Regular__triangulation__3" kindref="compound">CGAL::Regular_triangulation_3</ref></computeroutput> returning elements of the dual diagram are called: </para></description>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1abbd9643713f836bcc5a54402bcfe66a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1ad5295e3c13b42de21a5444abc831ca06" kindref="member">Construct_weighted_circumcenter_3</ref></type>
        <definition>Construct_weighted_circumcenter_3 RegularTriangulationTraits_3::construct_weighted_circumcenter_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_weighted_circumcenter_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1a63911c25fff4ed44e75563d51d65819c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1a6c870e6a5846c208e6fc30998f4eab61" kindref="member">Construct_object_3</ref></type>
        <definition>Construct_object_3 RegularTriangulationTraits_3::construct_object_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_object_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1a55eb991235fb06705bf033db3f5efab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1a628c256f9fc30dcd1718d5fcd2616b29" kindref="member">Construct_perpendicular_line_3</ref></type>
        <definition>Construct_perpendicular_line_3 RegularTriangulationTraits_3::construct_perpendicular_line_object</definition>
        <argsstring>()</argsstring>
        <name>construct_perpendicular_line_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1ada6873493b62c64ba0e265c594f28d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1a1df35b3e1f34e7c7ba027e0360fe119f" kindref="member">Construct_plane_3</ref></type>
        <definition>Construct_plane_3 RegularTriangulationTraits_3::construct_plane_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_plane_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits__3_1a3d5e41b16d9b8445f9bfd370bae9eab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits__3_1ac18d52e0591e7ea6382edf75fd26c6cf" kindref="member">Construct_ray_3</ref></type>
        <definition>Construct_ray_3 RegularTriangulationTraits_3::construct_ray_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_ray_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits_3.h" line="288" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classRegularTriangulationTraits__3" kindref="compound">RegularTriangulationTraits_3</ref></computeroutput> is the first template parameter of the class <computeroutput><ref refid="classCGAL_1_1Regular__triangulation__3" kindref="compound">CGAL::Regular_triangulation_3</ref></computeroutput>. It defines the geometric objects (points, segments...) forming the triangulation together with a few geometric predicates and constructions on these objects. </para>    </briefdescription>
    <detaileddescription>
<para> We use here the same notation as in Section <ref refid="index_1Triangulation3secclassRegulartriangulation" kindref="member">Regular Triangulation</ref>. To simplify notation, <formula id="4">$ p$</formula> will often denote in the sequel either the point <formula id="53">$ p\in\mathbb{R}^3$</formula> or the weighted point <formula id="9">$ {p}^{(w)}=(p,w_p)$</formula>.</para><para><xrefsect id="refines_1_refines000005"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationTraits__3" kindref="compound">TriangulationTraits_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000005"><xreftitle>Has Models</xreftitle><xrefdescription><para>All models of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>.</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Regular__triangulation__3" kindref="compound">CGAL::Regular_triangulation_3</ref></computeroutput></para></simplesect>
In addition to the requirements described for the traits class of <computeroutput><ref refid="classCGAL_1_1Triangulation__3" kindref="compound">CGAL::Triangulation_3</ref></computeroutput>, the geometric traits class of <computeroutput><ref refid="classCGAL_1_1Regular__triangulation__3" kindref="compound">CGAL::Regular_triangulation_3</ref></computeroutput> must fulfill the following requirements. </para>    </detaileddescription>
    <location file="Concepts/RegularTriangulationTraits_3.h" line="27" column="1" bodyfile="Concepts/RegularTriangulationTraits_3.h" bodystart="27" bodyend="292"/>
    <listofallmembers>
      <member refid="classRegularTriangulationTraits__3_1aecba519c5776a5c3e7a7afffbeb161eb" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Compare_power_distance_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a76c2f80bb0553effa2792bb50c34e2e8" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>compare_power_distance_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a6c870e6a5846c208e6fc30998f4eab61" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_object_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a63911c25fff4ed44e75563d51d65819c" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_object_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a628c256f9fc30dcd1718d5fcd2616b29" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_perpendicular_line_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a55eb991235fb06705bf033db3f5efab1" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_perpendicular_line_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a1df35b3e1f34e7c7ba027e0360fe119f" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_plane_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1ada6873493b62c64ba0e265c594f28d9a" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_plane_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a09d0071234b1669d30327154aabc0b90" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_point_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a7b19dd6235ea3f26f8573931bfd7306d" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_point_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1ac18d52e0591e7ea6382edf75fd26c6cf" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_ray_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a3d5e41b16d9b8445f9bfd370bae9eab3" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_ray_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1ad5295e3c13b42de21a5444abc831ca06" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Construct_weighted_circumcenter_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1abbd9643713f836bcc5a54402bcfe66a3" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>construct_weighted_circumcenter_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a888cc8536d736895eb4caaa92fe22dec" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Line_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1a4bd36cf6a6318afc6e0dfe53d7982d16" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Object_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1aa48139f6580e103ceedde2995ddbff0f" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Plane_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1adc12f36515d841b5f2ba6a9cbf21cd3f" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Power_side_of_bounded_power_sphere_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1ac6f779e0b64196f159d5dac233745ee3" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Power_side_of_oriented_power_sphere_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1afd96447c4918cc4ac7ab96603d1720fd" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>power_side_of_oriented_power_sphere_3_object</name></member>
      <member refid="classRegularTriangulationTraits__3_1a5b9e14050df962fb832137a063c3b002" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Ray_3</name></member>
      <member refid="classRegularTriangulationTraits__3_1ab0848f1f29ee780edf0212502343c531" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits_3</scope><name>Weighted_point_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
