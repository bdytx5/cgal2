<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classAlphaShapeCell__3" kind="class" language="C++" prot="public">
    <compoundname>AlphaShapeCell_3</compoundname>
    <includes local="no">Concepts/AlphaShapeCell_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classAlphaShapeCell__3_1adf5bd7b0ff2fc73b1c4569f1d3e2aa32" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AlphaShapeCell_3::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <briefdescription>
<para>A number type. </para>        </briefdescription>
        <detaileddescription>
<para>Must be the same as the number type used in the traits class of the triangulation underlying the alpha shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="27" column="1" bodyfile="Concepts/AlphaShapeCell_3.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAlphaShapeCell__3_1a0f2e97c033ecae7b7f3288d10f139ebf" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type AlphaShapeCell_3::Alpha_status_iterator</definition>
        <argsstring></argsstring>
        <name>Alpha_status_iterator</name>
        <briefdescription>
<para>An iterator with value type <computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">CGAL::Alpha_status</ref>&lt;NT&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="32" column="1" bodyfile="Concepts/AlphaShapeCell_3.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classAlphaShapeCell__3_1ae75872f4950e107dba282cf3a67d8782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AlphaShapeCell_3::AlphaShapeCell_3</definition>
        <argsstring>()</argsstring>
        <name>AlphaShapeCell_3</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAlphaShapeCell__3_1a3767bd4ec771d22113aff6d2ff4e0cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AlphaShapeCell_3::AlphaShapeCell_3</definition>
        <argsstring>(const Vertex_handle &amp;v0, const Vertex_handle &amp;v1, const Vertex_handle &amp;v2, const Vertex_handle &amp;v3)</argsstring>
        <name>AlphaShapeCell_3</name>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
<para>constructor setting the incident vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAlphaShapeCell__3_1a717a7fc3e18e7b5b3e59034cc4f4ad03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AlphaShapeCell_3::AlphaShapeCell_3</definition>
        <argsstring>(const Vertex_handle &amp;v0, const Vertex_handle &amp;v1, const Vertex_handle &amp;v2, const Vertex_handle &amp;v3, const Cell_handle &amp;n0, const Cell_handle &amp;n1, const Cell_handle &amp;n2, const Cell_handle &amp;n3)</argsstring>
        <name>AlphaShapeCell_3</name>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>const Vertex_handle &amp;</type>
          <declname>v3</declname>
        </param>
        <param>
          <type>const Cell_handle &amp;</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>const Cell_handle &amp;</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>const Cell_handle &amp;</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>const Cell_handle &amp;</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
<para>constructor setting the incident vertices and the neighboring cells. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classAlphaShapeCell__3_1aa6f8e4433d4442bc8a5f903390837100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAlphaShapeCell__3_1adf5bd7b0ff2fc73b1c4569f1d3e2aa32" kindref="member">NT</ref></type>
        <definition>NT AlphaShapeCell_3::get_alpha</definition>
        <argsstring>()</argsstring>
        <name>get_alpha</name>
        <briefdescription>
<para>Returns the alpha value of the cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAlphaShapeCell__3_1a68f98c0c2f764a6ac5459f4ca8ded443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAlphaShapeCell__3_1a0f2e97c033ecae7b7f3288d10f139ebf" kindref="member">Alpha_status_iterator</ref></type>
        <definition>Alpha_status_iterator AlphaShapeCell_3::get_facet_status</definition>
        <argsstring>(int i)</argsstring>
        <name>get_facet_status</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns an iterator on the <computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">CGAL::Alpha_status</ref>&lt;NT&gt;</computeroutput> of the facet <computeroutput>i</computeroutput> of the cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="69" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classAlphaShapeCell__3_1ad2a7b5def6e0c47c26453d0c74854671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AlphaShapeCell_3::set_alpha</definition>
        <argsstring>(const NT &amp;alpha)</argsstring>
        <name>set_alpha</name>
        <param>
          <type>const <ref refid="classAlphaShapeCell__3_1adf5bd7b0ff2fc73b1c4569f1d3e2aa32" kindref="member">NT</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Sets the critical value of the cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAlphaShapeCell__3_1a5b30efe5e50e73060e37cbafdb26c2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AlphaShapeCell_3::set_facet_status</definition>
        <argsstring>(int i, Alpha_status_iterator as)</argsstring>
        <name>set_facet_status</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classAlphaShapeCell__3_1a0f2e97c033ecae7b7f3288d10f139ebf" kindref="member">Alpha_status_iterator</ref></type>
          <declname>as</declname>
        </param>
        <briefdescription>
<para>Sets the iterator pointing to the <computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">CGAL::Alpha_status</ref>&lt;NT&gt;</computeroutput> of the facet <computeroutput>i</computeroutput> of the cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlphaShapeCell_3.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classAlphaShapeCell__3" kindref="compound">AlphaShapeCell_3</ref></computeroutput> describes the requirements for the base cell of an alpha shape. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000001"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classDelaunayTriangulationCellBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">DelaunayTriangulationCellBase_3</ref></computeroutput>, if the underlying triangulation of the alpha shape is a Delaunay triangulation. </para><para><computeroutput><ref refid="classRegularTriangulationCellBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">RegularTriangulationCellBase_3</ref></computeroutput>, if the underlying triangulation of the alpha shape is a regular triangulation. </para><para><computeroutput><ref refid="classPeriodic__3TriangulationDSCellBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Periodic_3_triangulation_3.tag">Periodic_3TriangulationDSCellBase_3</ref></computeroutput>, if the underlying triangulation of the alpha shape is a periodic triangulation.</para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Alpha__shape__cell__base__3" kindref="compound">CGAL::Alpha_shape_cell_base_3</ref></computeroutput> (templated with the appropriate triangulation cell base class).</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">CGAL::Alpha_status</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/AlphaShapeCell_3.h" line="17" column="1" bodyfile="Concepts/AlphaShapeCell_3.h" bodystart="17" bodyend="89"/>
    <listofallmembers>
      <member refid="classAlphaShapeCell__3_1a0f2e97c033ecae7b7f3288d10f139ebf" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>Alpha_status_iterator</name></member>
      <member refid="classAlphaShapeCell__3_1ae75872f4950e107dba282cf3a67d8782" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>AlphaShapeCell_3</name></member>
      <member refid="classAlphaShapeCell__3_1a3767bd4ec771d22113aff6d2ff4e0cac" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>AlphaShapeCell_3</name></member>
      <member refid="classAlphaShapeCell__3_1a717a7fc3e18e7b5b3e59034cc4f4ad03" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>AlphaShapeCell_3</name></member>
      <member refid="classAlphaShapeCell__3_1aa6f8e4433d4442bc8a5f903390837100" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>get_alpha</name></member>
      <member refid="classAlphaShapeCell__3_1a68f98c0c2f764a6ac5459f4ca8ded443" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>get_facet_status</name></member>
      <member refid="classAlphaShapeCell__3_1adf5bd7b0ff2fc73b1c4569f1d3e2aa32" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>NT</name></member>
      <member refid="classAlphaShapeCell__3_1ad2a7b5def6e0c47c26453d0c74854671" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>set_alpha</name></member>
      <member refid="classAlphaShapeCell__3_1a5b30efe5e50e73060e37cbafdb26c2f0" prot="public" virt="non-virtual"><scope>AlphaShapeCell_3</scope><name>set_facet_status</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
