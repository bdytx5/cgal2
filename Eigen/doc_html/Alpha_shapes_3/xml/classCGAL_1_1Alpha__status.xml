<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Alpha__status" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Alpha_status</compoundname>
    <includes local="no">CGAL/Alpha_shape_cell_base_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename NT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a3564c107f92a114544044e1aa0c06671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Alpha_status&lt; NT &gt;::Alpha_status</definition>
        <argsstring>()</argsstring>
        <name>Alpha_status</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a71281e8abac576c02a8be78a9d85da7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Alpha_status&lt; NT &gt;::set_is_Gabriel</definition>
        <argsstring>(bool yesorno)</argsstring>
        <name>set_is_Gabriel</name>
        <param>
          <type>bool</type>
          <declname>yesorno</declname>
        </param>
        <briefdescription>
<para>sets Gabriel marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1ae3642f98e39babf61757f34bb5bffbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Alpha_status&lt; NT &gt;::set_is_on_chull</definition>
        <argsstring>(bool yesorno)</argsstring>
        <name>set_is_on_chull</name>
        <param>
          <type>bool</type>
          <declname>yesorno</declname>
        </param>
        <briefdescription>
<para>sets convex hull marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1ae5e83182af7c8719e7172d353f249a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Alpha_status&lt; NT &gt;::set_alpha_min</definition>
        <argsstring>(NT alpha)</argsstring>
        <name>set_alpha_min</name>
        <param>
          <type>NT</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>sets <computeroutput>alpha_min</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1ace5c82c550907d2951de7f646667b342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Alpha_status&lt; NT &gt;::set_alpha_mid</definition>
        <argsstring>(NT alpha)</argsstring>
        <name>set_alpha_mid</name>
        <param>
          <type>NT</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>sets <computeroutput>alpha_mid</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1ad008a4397d7ce0d93f77678fa559786f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Alpha_status&lt; NT &gt;::set_alpha_max</definition>
        <argsstring>(NT alpha)</argsstring>
        <name>set_alpha_max</name>
        <param>
          <type>NT</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>sets <computeroutput>alpha_max</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a3baa6b48cd6c2e7438034aae0058640a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Alpha_status&lt; NT &gt;::is_Gabriel</definition>
        <argsstring>() const</argsstring>
        <name>is_Gabriel</name>
        <briefdescription>
<para>Returns true for Gabriel faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a3afbbfc97476c2e63488dbe1936c7197" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Alpha_status&lt; NT &gt;::is_on_chull</definition>
        <argsstring>() const</argsstring>
        <name>is_on_chull</name>
        <briefdescription>
<para>Returns true for convex hull faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a0ad6b6ecb8cc54166997785e59256f83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::Alpha_status&lt; NT &gt;::alpha_min</definition>
        <argsstring>() const</argsstring>
        <name>alpha_min</name>
        <briefdescription>
<para>Returns the <computeroutput>alpha_min</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput><ref refid="classCGAL_1_1Alpha__status_1a3baa6b48cd6c2e7438034aae0058640a" kindref="member">is_Gabriel()</ref></computeroutput> returns false; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1ac22754f6302f398b5f73ee902a79a6af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::Alpha_status&lt; NT &gt;::alpha_mid</definition>
        <argsstring>() const</argsstring>
        <name>alpha_mid</name>
        <briefdescription>
<para>Returns the <computeroutput>alpha_mid</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Alpha__status_1a181b656254aa19345ed57f62a5e71538" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::Alpha_status&lt; NT &gt;::alpha_max</definition>
        <argsstring>() const</argsstring>
        <name>alpha_max</name>
        <briefdescription>
<para>Returns <computeroutput>alpha_max</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput><ref refid="classCGAL_1_1Alpha__status_1a3afbbfc97476c2e63488dbe1936c7197" kindref="member">is_on_chull()</ref></computeroutput> returns <computeroutput>false</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Alpha_shape_cell_base_3.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">Alpha_status</ref></computeroutput> is a small data structure to store the critical alpha values of faces of an alpha shape. </para>    </briefdescription>
    <detaileddescription>
<para>Each face has three critical alpha values, called <computeroutput>alpha_min</computeroutput>, <computeroutput>alpha_mid</computeroutput> and <computeroutput>alpha_max</computeroutput> in increasing order. The face will be exterior for any <formula id="17">$ \alpha &lt; $</formula> <computeroutput>alpha_min</computeroutput>, singular for <computeroutput>alpha_min</computeroutput> <formula id="18">$ \leq \alpha &lt; $</formula> <computeroutput>alpha_mid</computeroutput>, regular for <computeroutput>alpha_mid</computeroutput> <formula id="18">$ \leq \alpha &lt; $</formula> <computeroutput>alpha_max</computeroutput> and interior for <computeroutput>alpha_max</computeroutput> <formula id="19">$ \leq \alpha$</formula>. The value <computeroutput>alpha_min</computeroutput> is undefined for faces which are not Gabriel faces and therefore do not appear in the alpha complex without any of their including face. The value <computeroutput>alpha_max</computeroutput> is undefined for convex hull faces which can never be interior. The data structure also includes two Boolean to mark if the face is a Gabriel face or a convex hull face.</para><para>The class <computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">Alpha_status</ref></computeroutput> is parameterized by a number type <computeroutput>NT</computeroutput>.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classAlphaShapeCell__3" kindref="compound">AlphaShapeCell_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classAlphaShapeVertex__3" kindref="compound">AlphaShapeVertex_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Alpha_shape_cell_base_3.h" line="65" column="1" bodyfile="CGAL/Alpha_shape_cell_base_3.h" bodystart="65" bodyend="140"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Alpha__status_1a181b656254aa19345ed57f62a5e71538" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>alpha_max</name></member>
      <member refid="classCGAL_1_1Alpha__status_1ac22754f6302f398b5f73ee902a79a6af" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>alpha_mid</name></member>
      <member refid="classCGAL_1_1Alpha__status_1a0ad6b6ecb8cc54166997785e59256f83" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>alpha_min</name></member>
      <member refid="classCGAL_1_1Alpha__status_1a3564c107f92a114544044e1aa0c06671" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>Alpha_status</name></member>
      <member refid="classCGAL_1_1Alpha__status_1a3baa6b48cd6c2e7438034aae0058640a" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>is_Gabriel</name></member>
      <member refid="classCGAL_1_1Alpha__status_1a3afbbfc97476c2e63488dbe1936c7197" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>is_on_chull</name></member>
      <member refid="classCGAL_1_1Alpha__status_1ad008a4397d7ce0d93f77678fa559786f" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>set_alpha_max</name></member>
      <member refid="classCGAL_1_1Alpha__status_1ace5c82c550907d2951de7f646667b342" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>set_alpha_mid</name></member>
      <member refid="classCGAL_1_1Alpha__status_1ae5e83182af7c8719e7172d353f249a56" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>set_alpha_min</name></member>
      <member refid="classCGAL_1_1Alpha__status_1a71281e8abac576c02a8be78a9d85da7b" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>set_is_Gabriel</name></member>
      <member refid="classCGAL_1_1Alpha__status_1ae3642f98e39babf61757f34bb5bffbb1" prot="public" virt="non-virtual"><scope>CGAL::Alpha_status</scope><name>set_is_on_chull</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
