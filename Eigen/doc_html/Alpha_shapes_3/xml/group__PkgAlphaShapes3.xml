<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgAlphaShapes3" kind="group">
    <compoundname>PkgAlphaShapes3</compoundname>
    <title>3D Alpha Shapes Reference</title>
    <innerclass refid="classCGAL_1_1Alpha__shape__3" prot="public">CGAL::Alpha_shape_3</innerclass>
    <innerclass refid="classCGAL_1_1Alpha__shape__cell__base__3" prot="public">CGAL::Alpha_shape_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Alpha__status" prot="public">CGAL::Alpha_status</innerclass>
    <innerclass refid="classCGAL_1_1Alpha__shape__vertex__base__3" prot="public">CGAL::Alpha_shape_vertex_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Fixed__alpha__shape__3" prot="public">CGAL::Fixed_alpha_shape_3</innerclass>
    <innerclass refid="classCGAL_1_1Fixed__alpha__shape__cell__base__3" prot="public">CGAL::Fixed_alpha_shape_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Fixed__alpha__shape__vertex__base__3" prot="public">CGAL::Fixed_alpha_shape_vertex_base_3</innerclass>
    <innergroup refid="group__PkgAlphaShapes3Concepts">Concepts</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="alpha_shapes_3_small.png"></image>
   Tran Kai Frank Da, SÃ©bastien Loriot, and Mariette Yvinec This package offers a data structure encoding either one alpha-complex or the whole family of alpha-complexes related to a given 3D Delaunay or regular triangulation. In the latter case, the data structure allows to retrieve the alpha-complex for any alpha value, the whole spectrum of critical alpha values and a filtration on the triangulation faces (this filtration is based on the first alpha value for which each face is included on the alpha-complex).  <linebreak/>
   <bold>Introduced in:</bold> CGAL 2.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3Summary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dy-as3-18b">cgal:dy-as3-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/4.13/alpha_shape_3.zip">3D Alpha Shapes</ulink><linebreak/>
<bold>Common Demo Dlls:</bold> <ulink url="https://www.cgal.org/demo/4.13/CGAL-demoDLLs.zip">dlls</ulink><linebreak/>
 </para><para>Alpha shapes definition is based on an underlying triangulation that may be a Delaunay triangulation in case of basic alpha shapes or a regular triangulation (cf. Section <ref refid="index_1Triangulation3secclassRegulartriangulation" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">3D Regular Triangulation</ref>) in case of weighted alpha shapes.</para><para>Let us consider the basic case with a Delaunay triangulation. We first define the alpha complex of the set of points <formula id="0">$ S$</formula>. The alpha complex is a subcomplex of the Delaunay triangulation. For a given value of <formula id="2">$ \alpha$</formula>, the alpha complex includes all the simplices in the Delaunay triangulation which have an empty circumscribing sphere with squared radius equal or smaller than <formula id="2">$ \alpha$</formula>. Here &quot;empty&quot; means that the open sphere do not include any points of <formula id="0">$ S$</formula>. The alpha shape is then simply the domain covered by the simplices of the alpha complex (see <ref refid="citelist_1CITEREF_em-tdas-94" kindref="member">[2]</ref>).</para><para>In general, an alpha complex is a non-connected and non-pure complex. This means in particular that the alpha complex may have singular faces. For <formula id="5">$ 0 \leq k \leq d-1$</formula>, a <formula id="6">$ k$</formula>-simplex of the alpha complex is said to be singular if it is not a facet of a <formula id="7">$ (k+1)$</formula>-simplex of the complex</para><para>The alpha shapes of a set of points <formula id="0">$ S$</formula> form a discrete family, even though they are defined for all real numbers <formula id="2">$ \alpha$</formula>. The entire family of alpha shapes can be represented through the underlying triangulation of <formula id="0">$ S$</formula>. In this representation, each <formula id="6">$ k$</formula>-simplex of the underlying triangulation is associated with an interval that specifies for which values of <formula id="2">$ \alpha$</formula> the <formula id="6">$ k$</formula>-simplex belongs to the alpha complex. Relying on this fact, the family of alpha shapes can be computed efficiently and relatively easily. Furthermore, we can select the optimal value of <formula id="2">$ \alpha$</formula> to get an alpha shape including all data points and having less than a given number of connected components.</para><para>The definition is analog in the case of weighted alpha shapes. The input set is now a set of weighted points (which can be regarded as spheres) and the underlying triangulation is the regular triangulation of this set. Two spheres, or two weighted points, with centers <formula id="8">$ C_1, C_2$</formula> and radii <formula id="9">$ r_1, r_2 $</formula> are said to be orthogonal iff <formula id="10">$ C_1C_2 ^2 = r_1^2 + r_2^2$</formula> and suborthogonal iff <formula id="11">$ C_1C_2 ^2 &lt; r_1^2 + r_2^2$</formula>. For a given value of <formula id="2">$ \alpha$</formula> the weighted alpha complex is formed with the simplices of the regular triangulation triangulation such that there is a sphere orthogonal to the weighted points associated with the vertices of the simplex and suborthogonal to all the other input weighted points. Once again the alpha shape is then defined as the domain covered by a the alpha complex.</para><para><ref refid="namespaceCGAL" kindref="compound">CGAL</ref> provides two versions to compute alpha shapes. The first one gives access to an explicit classification of all the simplices for a fixed alpha value. The second one gives access to the entire family of alpha shapes of a set of points. This latter version comes with two modes. In the general mode, the alpha shapes correspond strictly to the definition previously made. The regularized mode provides a regularized version of the alpha shapes corresponding to the domain covered by a regularized version of the alpha complex where singular faces are removed.</para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classAlphaShapeTraits__3" kindref="compound">AlphaShapeTraits_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classWeightedAlphaShapeTraits__3" kindref="compound">WeightedAlphaShapeTraits_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classAlphaShapeCell__3" kindref="compound">AlphaShapeCell_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classAlphaShapeVertex__3" kindref="compound">AlphaShapeVertex_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFixedAlphaShapeTraits__3" kindref="compound">FixedAlphaShapeTraits_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFixedWeightedAlphaShapeTraits__3" kindref="compound">FixedWeightedAlphaShapeTraits_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFixedAlphaShapeCell__3" kindref="compound">FixedAlphaShapeCell_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFixedAlphaShapeVertex__3" kindref="compound">FixedAlphaShapeVertex_3</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Alpha__status" kindref="compound">CGAL::Alpha_status</ref>&lt;NT&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Alpha__shape__3" kindref="compound">CGAL::Alpha_shape_3</ref>&lt;Dt,ExactAlphaComparisonTag&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Alpha__shape__vertex__base__3" kindref="compound">CGAL::Alpha_shape_vertex_base_3</ref>&lt;Traits,Vb&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Alpha__shape__cell__base__3" kindref="compound">CGAL::Alpha_shape_cell_base_3</ref>&lt;Traits,Fb&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Fixed__alpha__shape__3" kindref="compound">CGAL::Fixed_alpha_shape_3</ref>&lt;Dt&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Fixed__alpha__shape__vertex__base__3" kindref="compound">CGAL::Fixed_alpha_shape_vertex_base_3</ref>&lt;Traits,Vb&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Fixed__alpha__shape__cell__base__3" kindref="compound">CGAL::Fixed_alpha_shape_cell_base_3</ref>&lt;Traits,Fb&gt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
