<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Point_set_2_2range_search_8cpp-example" kind="example">
    <compoundname>Point_set_2/range_search.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Exact_predicates_inexact_constructions_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Point_set_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Exact_predicates_inexact_constructions_kernel</ref><sp/><sp/>K;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Point__set__2_1a5ebf4f92a1c799aa8e0401fefefe647d" kindref="member">CGAL::Point_set_2&lt;K&gt;::Vertex_handle</ref><sp/><sp/>Vertex_handle;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>K::Point_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Point__set__2" kindref="compound">CGAL::Point_set_2&lt;K&gt;</ref><sp/>PSet;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Point_2&gt;<sp/>Lr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p1(12,14);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p2(-12,14);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p3(2,11);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p4(5,6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p5(6.7,3.8);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p6(11,20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p7(-5,6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p8(12,0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p9(4,31);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>p10(-10,-10);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Lr.push_back(p1);<sp/>Lr.push_back(p2);<sp/>Lr.push_back(p3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Lr.push_back(p4);<sp/>Lr.push_back(p5);<sp/>Lr.push_back(p6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Lr.push_back(p7);<sp/>Lr.push_back(p8);<sp/>Lr.push_back(p9);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Lr.push_back(p10);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PSet.insert(Lr.begin(),Lr.end());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;circular<sp/>range<sp/>search<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Circle_2&lt;K&gt;</ref><sp/>rc(p5,p6);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Vertex_handle&gt;<sp/>LV;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PSet.range_search(rc,<sp/>std::back_inserter(LV));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Vertex_handle&gt;::const_iterator<sp/>it;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=LV.begin();it<sp/>!=<sp/>LV.end();<sp/>it++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*it)-&gt;point()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triangular<sp/>range<sp/>search<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>LV.clear();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PSet.range_search(p1,p2,p3,<sp/>std::back_inserter(LV));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=LV.begin();it<sp/>!=<sp/>LV.end();<sp/>it++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*it)-&gt;point()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>LV.clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;isorectangular<sp/>range<sp/>search<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>pt1=p10;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>pt3=p3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>pt2<sp/>=<sp/>Point_2(pt3.x(),pt1.y());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point_2<sp/>pt4<sp/>=<sp/>Point_2(pt1.x(),pt3.y());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PSet.range_search(pt1,pt2,pt3,pt4,<sp/>std::back_inserter(LV));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=LV.begin();it<sp/>!=<sp/>LV.end();<sp/>it++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*it)-&gt;point()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
