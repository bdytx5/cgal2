<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classConvexHullTraits__2" kind="class" language="C++" prot="public">
    <compoundname>ConvexHullTraits_2</compoundname>
    <includes local="no">Concepts/ConvexHullTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a08aebda3e15d8353bb27ca42a8fba90f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>The point type on which the convex hull functions operate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="31" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a2affe5915bcb42ddc6cb53fc0c7ee7ba" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Equal_2</definition>
        <argsstring></argsstring>
        <name>Equal_2</name>
        <briefdescription>
<para>Binary predicate object type comparing <computeroutput>Point_2</computeroutput>s. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q)</computeroutput> where <computeroutput>true</computeroutput> is returned iff <formula id="17">$ p ==_{xy} q$</formula>, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="39" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a25e9ad900a40af604dfcaae17d14e4c8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Less_xy_2</definition>
        <argsstring></argsstring>
        <name>Less_xy_2</name>
        <briefdescription>
<para>Binary predicate object type comparing <computeroutput>Point_2</computeroutput>s lexicographically. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q)</computeroutput> where <computeroutput>true</computeroutput> is returned iff <formula id="18">$ p &lt;_{xy} q$</formula>. We have <formula id="19">$ p&lt;_{xy}q$</formula>, iff <formula id="20">$ p_x &lt; q_x$</formula> or <formula id="21">$ p_x = q_x$</formula> and <formula id="22">$ p_y &lt; q_y$</formula>, where <formula id="23">$ p_x$</formula> and <formula id="24">$ p_y$</formula> denote <formula id="11">$ x$</formula> and <formula id="13">$ y$</formula> coordinate of point <formula id="7">$ p$</formula>, respectively. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="51" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a8ce1f09925782c237df15f8647d2b5f6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Less_yx_2</definition>
        <argsstring></argsstring>
        <name>Less_yx_2</name>
        <briefdescription>
<para>Same as <computeroutput>Less_xy_2</computeroutput> with the roles of <formula id="11">$ x$</formula> and <formula id="13">$ y$</formula> interchanged. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="56" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a138a8c6d11aa81182a883cc5fcce5003" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Left_turn_2</definition>
        <argsstring></argsstring>
        <name>Left_turn_2</name>
        <briefdescription>
<para>Predicate object type that must provide <computeroutput>bool operator()(Point_2 p,Point_2 q,Point_2 r)</computeroutput>, which returns <computeroutput>true</computeroutput> iff <computeroutput>r</computeroutput> lies to the left of the oriented line through <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="64" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a5822148485a6abcbdd592a8a6348df5d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Less_signed_distance_to_line_2</definition>
        <argsstring></argsstring>
        <name>Less_signed_distance_to_line_2</name>
        <briefdescription>
<para>Predicate object type that must provide <computeroutput>bool operator()(Point_2 p, Point_2 q, Point_2 r,Point_2 s)</computeroutput>, which returns <computeroutput>true</computeroutput> iff the signed distance from <formula id="25">$ r$</formula> to the line <formula id="26">$ l_{pq}$</formula> through <formula id="7">$ p$</formula> and <formula id="8">$ q$</formula> is smaller than the distance from <formula id="27">$ s$</formula> to <formula id="26">$ l_{pq}$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>It is used to compute the point right of a line with maximum unsigned distance to the line. The predicate must provide a total order compatible with convexity, <emphasis>i.e.</emphasis>, for any line segment <formula id="27">$ s$</formula> one of the endpoints of <formula id="27">$ s$</formula> is the smallest point among the points on <formula id="27">$ s$</formula>, with respect to the order given by <computeroutput>Less_signed_distance_to_line_2</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="79" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a5b5303106aa11e17cde6fae3f91dc244" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Less_rotate_ccw_2</definition>
        <argsstring></argsstring>
        <name>Less_rotate_ccw_2</name>
        <briefdescription>
<para>Predicate object type that must provide <computeroutput>bool operator()(Point_2 e, Point_2 p,Point_2 q)</computeroutput>, where <computeroutput>true</computeroutput> is returned iff a tangent at <formula id="28">$ e$</formula> to the point set <formula id="29">$ \{e,p,q\}$</formula> hits <formula id="7">$ p$</formula> before <formula id="8">$ q$</formula> when rotated counterclockwise around <formula id="28">$ e$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Ties are broken such that the point with larger distance to <formula id="28">$ e$</formula> is smaller! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="90" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConvexHullTraits__2_1a3062a77e7316000630e46ad9b7bb4b19" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConvexHullTraits_2::Orientation_2</definition>
        <argsstring></argsstring>
        <name>Orientation_2</name>
        <briefdescription>
<para>Predicate object type that must provide <computeroutput>Orientation operator()(Point_2 e, Point_2 p,Point_2 q)</computeroutput>, that returns <computeroutput><ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::LEFT_TURN</ref></computeroutput>, if <computeroutput>r</computeroutput> lies to the left of the oriented line <computeroutput>l</computeroutput> defined by <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>, returns <computeroutput><ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::RIGHT_TURN</ref></computeroutput> if <computeroutput>r</computeroutput> lies to the right of <computeroutput>l</computeroutput>, and returns <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::COLLINEAR</ref></computeroutput> if <computeroutput>r</computeroutput> lies on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="99" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a copy constructor is required. </para></description>
      <memberdef kind="function" id="classConvexHullTraits__2_1ac9e142fe60b96353ff3d4922d4e3a451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ConvexHullTraits_2::ConvexHullTraits_2</definition>
        <argsstring>(ConvexHullTraits_2 &amp;t)</argsstring>
        <name>ConvexHullTraits_2</name>
        <param>
          <type><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>The following member functions to create instances of the above predicate object types must exist. </para></description>
      <memberdef kind="function" id="classConvexHullTraits__2_1a2bb1f29961658d17797c3c3bb8b8033b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a2affe5915bcb42ddc6cb53fc0c7ee7ba" kindref="member">Equal_2</ref></type>
        <definition>Equal_2 ConvexHullTraits_2::equal_2_object</definition>
        <argsstring>()</argsstring>
        <name>equal_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1a16fbc9e8267f81de4bb48169492429b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a25e9ad900a40af604dfcaae17d14e4c8" kindref="member">Less_xy_2</ref></type>
        <definition>Less_xy_2 ConvexHullTraits_2::less_xy_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_xy_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1ac24b67fb09b47ae2b0d10ef982ea5bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a8ce1f09925782c237df15f8647d2b5f6" kindref="member">Less_yx_2</ref></type>
        <definition>Less_yx_2 ConvexHullTraits_2::less_yx_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_yx_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1a1d02129842ba57ae9d3c43ad95d6ae6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a5822148485a6abcbdd592a8a6348df5d" kindref="member">Less_signed_distance_to_line_2</ref></type>
        <definition>Less_signed_distance_to_line_2 ConvexHullTraits_2::less_signed_distance_to_line_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_signed_distance_to_line_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1a248dff5bd62e341857ffb172163b9a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a5b5303106aa11e17cde6fae3f91dc244" kindref="member">Less_rotate_ccw_2</ref></type>
        <definition>Less_rotate_ccw_2 ConvexHullTraits_2::less_rotate_ccw_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_rotate_ccw_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1a337ba1357d6ef0ae1f8f3543dcea77ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a138a8c6d11aa81182a883cc5fcce5003" kindref="member">Left_turn_2</ref></type>
        <definition>Left_turn_2 ConvexHullTraits_2::left_turn_2_object</definition>
        <argsstring>()</argsstring>
        <name>left_turn_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConvexHullTraits__2_1a2edca963644c6a3f5aa071e2e9819532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConvexHullTraits__2_1a3062a77e7316000630e46ad9b7bb4b19" kindref="member">Orientation_2</ref></type>
        <definition>Orientation_2 ConvexHullTraits_2::orientation_2_object</definition>
        <argsstring>()</argsstring>
        <name>orientation_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConvexHullTraits_2.h" line="152" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>All convex hull and extreme point algorithms provided in CGAL are parameterized with a traits class <computeroutput>Traits</computeroutput>, which defines the primitives (objects and predicates) that the convex hull algorithms use. <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> defines the complete set of primitives required in these functions. The specific subset of these primitives required by each function is specified with each function. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Convex__hull__constructive__traits__2" kindref="compound">CGAL::Convex_hull_constructive_traits_2</ref>&lt;R&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Convex__hull__traits__2" kindref="compound">CGAL::Convex_hull_traits_2</ref>&lt;R&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Projection_traits_xy_3</ref>&lt;K&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Projection__traits__yz__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Projection_traits_yz_3</ref> &lt;K&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Projection__traits__xz__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Projection_traits_xz_3</ref>&lt;K&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput>IsStronglyConvexTraits_3</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ConvexHullTraits_2.h" line="22" column="1" bodyfile="Concepts/ConvexHullTraits_2.h" bodystart="22" bodyend="156"/>
    <listofallmembers>
      <member refid="classConvexHullTraits__2_1ac9e142fe60b96353ff3d4922d4e3a451" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>ConvexHullTraits_2</name></member>
      <member refid="classConvexHullTraits__2_1a2affe5915bcb42ddc6cb53fc0c7ee7ba" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Equal_2</name></member>
      <member refid="classConvexHullTraits__2_1a2bb1f29961658d17797c3c3bb8b8033b" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>equal_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a138a8c6d11aa81182a883cc5fcce5003" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Left_turn_2</name></member>
      <member refid="classConvexHullTraits__2_1a337ba1357d6ef0ae1f8f3543dcea77ff" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>left_turn_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a5b5303106aa11e17cde6fae3f91dc244" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Less_rotate_ccw_2</name></member>
      <member refid="classConvexHullTraits__2_1a248dff5bd62e341857ffb172163b9a3a" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>less_rotate_ccw_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a5822148485a6abcbdd592a8a6348df5d" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Less_signed_distance_to_line_2</name></member>
      <member refid="classConvexHullTraits__2_1a1d02129842ba57ae9d3c43ad95d6ae6e" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>less_signed_distance_to_line_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a25e9ad900a40af604dfcaae17d14e4c8" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Less_xy_2</name></member>
      <member refid="classConvexHullTraits__2_1a16fbc9e8267f81de4bb48169492429b0" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>less_xy_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a8ce1f09925782c237df15f8647d2b5f6" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Less_yx_2</name></member>
      <member refid="classConvexHullTraits__2_1ac24b67fb09b47ae2b0d10ef982ea5bd0" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>less_yx_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a3062a77e7316000630e46ad9b7bb4b19" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Orientation_2</name></member>
      <member refid="classConvexHullTraits__2_1a2edca963644c6a3f5aa071e2e9819532" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>orientation_2_object</name></member>
      <member refid="classConvexHullTraits__2_1a08aebda3e15d8353bb27ca42a8fba90f" prot="public" virt="non-virtual"><scope>ConvexHullTraits_2</scope><name>Point_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
