<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgConvexHull2Functions" kind="group">
    <compoundname>PkgConvexHull2Functions</compoundname>
    <title>Convex Hull Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_akl_toussaint</definition>
        <argsstring>(ForwardIterator first, ForwardIterator beyond, OutputIterator result, const Traits &amp;ch_traits=Default_traits())</argsstring>
        <name>ch_akl_toussaint</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits()</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>. The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the value type of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> is defined.</para></simplesect>
<bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> are equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> defines the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_yx_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>This function uses the algorithm of Akl and Toussaint <ref refid="citelist_1CITEREF_at-fcha-78" kindref="member">[1]</ref> that requires <formula id="0">$ O(n \log n)$</formula> time for <formula id="1">$ n$</formula> input points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_akl_toussaint.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_bykat</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result, const Traits &amp;ch_traits=Default_traits)</argsstring>
        <name>ch_bykat</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the value type of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> is defined.</para><para><bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> defines the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_signed_distance_to_line_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>This function implements the non-recursive variation of Eddy&apos;s algorithm <ref refid="citelist_1CITEREF_e-nchap-77" kindref="member">[6]</ref> described in <ref refid="citelist_1CITEREF_b-chfsp-78" kindref="member">[5]</ref>. This algorithm requires <formula id="2">$ O(n h)$</formula> time in the worst case for <formula id="1">$ n$</formula> input points with <formula id="3">$ h$</formula> extreme points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_bykat.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_eddy</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result, const Traits &amp;ch_traits=Default_traits)</argsstring>
        <name>ch_eddy</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the type value type of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> is defined.</para><para><bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> defines the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_signed_distance_to_line_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>This function implements Eddy&apos;s algorithm <ref refid="citelist_1CITEREF_e-nchap-77" kindref="member">[6]</ref>, which is the two-dimensional version of the quickhull algorithm <ref refid="citelist_1CITEREF_bdh-qach-96" kindref="member">[4]</ref>.</para><para>This algorithm requires <formula id="2">$ O(n h)$</formula> time in the worst case for <formula id="1">$ n$</formula> input points with <formula id="3">$ h$</formula> extreme points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_eddy.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_graham_andrew</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result, const Traits &amp;ch_traits=Default_traits)</argsstring>
        <name>ch_graham_andrew</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the value type of <computeroutput>InputIteratore</computeroutput> is defined.</para><para><bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> defines the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Subsequence_1gafa026d25f9fee686e7a58af0ff365f86" kindref="member">CGAL::ch_graham_andrew_scan()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Subsequence_1gaf6e4baad67192f0cc3da273cda717297" kindref="member">CGAL::lower_hull_points_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Subsequence_1ga1abc268fbd7b3edfc61af2efff6f3e93" kindref="member">CGAL::upper_hull_points_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>This function implements Andrew&apos;s variant of the Graham scan algorithm <ref refid="citelist_1CITEREF_a-aeach-79" kindref="member">[3]</ref> and follows the presentation of Mehlhorn <ref refid="citelist_1CITEREF_m-mdscg-84" kindref="member">[9]</ref>. This algorithm requires <formula id="0">$ O(n \log n)$</formula> time in the worst case for <formula id="1">$ n$</formula> input points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_graham_andrew.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_jarvis</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result, const Traits &amp;ch_traits=Default_traits)</argsstring>
        <name>ch_jarvis</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> is defined.</para><para><bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> defines the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_rotate_ccw_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Subsequence_1gae9e0919cb50981d1f31ac242a2c4ba9d" kindref="member">CGAL::ch_jarvis_march()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>This function uses the Jarvis march (gift-wrapping) algorithm <ref refid="citelist_1CITEREF_j-ichfs-73" kindref="member">[8]</ref>. This algorithm requires <formula id="2">$ O(n h)$</formula> time in the worst case for <formula id="1">$ n$</formula> input points with <formula id="3">$ h$</formula> extreme points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_jarvis.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::ch_melkman</definition>
        <argsstring>(InputIterator first, InputIterator last, OutputIterator result, const Traits &amp;ch_traits=Default_traits)</argsstring>
        <name>ch_melkman</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
          <defval>Default_traits</defval>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>, <computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) corresponds to a simple polyline. [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
The default traits class <computeroutput>Default_traits</computeroutput> is the kernel in which the value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> is defined.</para><para><bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> contains the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" kindref="member">CGAL::convex_hull_2()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>It uses an implementation of Melkman&apos;s algorithm <ref refid="citelist_1CITEREF_m-olcch-87" kindref="member">[10]</ref>. Running time of this is linear. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/ch_melkman.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1ga8241d43969ff61cb9be46811c2e9e176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::convex_hull_2</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result, const Traits &amp;ch_traits)</argsstring>
        <name>convex_hull_2</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>ch_traits</declname>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) with a user provided traits class. </para>        </briefdescription>
        <detaileddescription>
<para>It generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). The resulting sequence is placed starting at position <computeroutput>result</computeroutput>, and the past-the-end iterator for the resulting sequence is returned. It is not specified at which point the cyclic sequence of extreme points is cut into a linear sequence. <simplesect kind="pre"><para>The source range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) does not contain <computeroutput>result</computeroutput>.</para></simplesect>
<bold>Requirements</bold><linebreak/>
</para><para><orderedlist>
<listitem>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> is equivalent to <computeroutput>Traits::Point_2</computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>Traits</computeroutput> contains the following subset of types from the concept <computeroutput><ref refid="classConvexHullTraits__2" kindref="compound">ConvexHullTraits_2</ref></computeroutput> and their corresponding member functions that return instances of these types: <itemizedlist>
<listitem>
<para><computeroutput>Traits::Point_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_signed_distance_to_line_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Equal_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_xy_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Less_yx_2</computeroutput>, </para></listitem>
<listitem>
<para><computeroutput>Traits::Left_turn_2</computeroutput>. </para></listitem>
</itemizedlist>
</para></listitem>
</orderedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga53e842c0b8490653535c00ab81bb0939" kindref="member">CGAL::ch_akl_toussaint()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gac13b4efbc337c7a8d5ad418521edcd4f" kindref="member">CGAL::ch_bykat()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gab9c9511b024795495dd6154ebf19c29c" kindref="member">CGAL::ch_eddy()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1gaeccc6dda2f9d3096c94a7ff84cc91a85" kindref="member">CGAL::ch_graham_andrew()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga99d0534bf096ae28a10b6844b21e7867" kindref="member">CGAL::ch_jarvis()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgConvexHull2Functions_1ga3bba4c83b7ac3cb9183191ea78828a65" kindref="member">CGAL::ch_melkman()</ref></computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>One of two algorithms is used, depending on the type of iterator used to specify the input points. For input iterators, the algorithm used is that of Bykat <ref refid="citelist_1CITEREF_b-chfsp-78" kindref="member">[5]</ref>, which has a worst-case running time of <formula id="2">$ O(n h)$</formula>, where <formula id="1">$ n$</formula> is the number of input points and <formula id="3">$ h$</formula> is the number of extreme points. For all other types of iterators, the <formula id="0">$ O(n \log n)$</formula> algorithm of of Akl and Toussaint <ref refid="citelist_1CITEREF_at-fcha-78" kindref="member">[1]</ref> is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/convex_hull_2.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgConvexHull2Functions_1ga25d29704043d928065a240d80c4e6078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::convex_hull_2</definition>
        <argsstring>(InputIterator first, InputIterator beyond, OutputIterator result)</argsstring>
        <name>convex_hull_2</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>generates the counterclockwise sequence of extreme points of the points in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) using as traits class the kernel in which the point type is defined. </para>        </briefdescription>
        <detaileddescription>
<para>The kernel is deduced using <computeroutput>std::iterator_traits</computeroutput> and <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/convex_hull_2.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
