<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classApolloniusGraphTraits__2" kind="class" language="C++" prot="public">
    <compoundname>ApolloniusGraphTraits_2</compoundname>
    <includes local="no">Concepts/ApolloniusGraphTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1ab2355757b0cc8d0db808c4cd50f1df2e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>A type for a point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="33" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a79e97f824eb19e1d8be87af8ac2064b8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Site_2</definition>
        <argsstring></argsstring>
        <name>Site_2</name>
        <briefdescription>
<para>A type for an Apollonius site. </para>        </briefdescription>
        <detaileddescription>
<para>Must be a model of the concept <computeroutput><ref refid="classApolloniusSite__2" kindref="compound">ApolloniusSite_2</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="39" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1adbcdf91db9abf3d4322027fb4767aaeb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Line_2</definition>
        <argsstring></argsstring>
        <name>Line_2</name>
        <briefdescription>
<para>A type for a line. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if access to the dual of the Apollonius graph is required or if the primal or dual diagram are inserted in a stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="46" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a0b5108558dfc47f2aba0bd22f98ab6d8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Ray_2</definition>
        <argsstring></argsstring>
        <name>Ray_2</name>
        <briefdescription>
<para>A type for a ray. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if access to the dual of the Apollonius graph is required or if the primal or dual diagram are inserted in a stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="53" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1abcbde03d741efafa4181dcf92ff24396" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Segment_2</definition>
        <argsstring></argsstring>
        <name>Segment_2</name>
        <briefdescription>
<para>A type for a segment. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if access to the dual of the Apollonius graph is required or if the primal or dual diagram are inserted in a stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="60" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1ab113d2efcde056126521ede9b4abfc60" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Object_2</definition>
        <argsstring></argsstring>
        <name>Object_2</name>
        <briefdescription>
<para>A type representing different types of objects in two dimensions, namely: <computeroutput>Point_2</computeroutput>, <computeroutput>Site_2</computeroutput>, <computeroutput>Line_2</computeroutput>, <computeroutput>Ray_2</computeroutput> and <computeroutput>Segment_2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="67" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a08d3737a0761d951e953b048ed4a07ad" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>A type for the field number type of sites. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="72" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1afa9618bcfadb45987e0f2d5ed6bb066f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
<para>A type for the ring number type of sites. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="77" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a705fc3d395a7b7d0211b1c3f1e198a09" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Assign_2</definition>
        <argsstring></argsstring>
        <name>Assign_2</name>
        <briefdescription>
<para>Must provide <computeroutput>template &lt;class T&gt; bool operator() ( T&amp; t, Object_2 o)</computeroutput> which assigns <computeroutput>o</computeroutput> to <computeroutput>t</computeroutput> if <computeroutput>o</computeroutput> was constructed from an object of type <computeroutput>T</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput>, if the assignment was possible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="85" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a46158cedf62ca51b7b4b4a78ea89387d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Construct_object_2</definition>
        <argsstring></argsstring>
        <name>Construct_object_2</name>
        <briefdescription>
<para>Must provide <computeroutput>template &lt;class T&gt; Object_2 operator()( T t)</computeroutput> that constructs an object of type <computeroutput>Object_2</computeroutput> that contains <computeroutput>t</computeroutput> and returns it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="92" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a33eb1728f7cf7c4aee431dd309b85a2b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Construct_Apollonius_vertex_2</definition>
        <argsstring></argsstring>
        <name>Construct_Apollonius_vertex_2</name>
        <briefdescription>
<para>A constructor for a point of the Apollonius diagram equidistant from three sites. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Point_2 operator()(Site_2 s1, Site_2 s2, Site_2 s3)</computeroutput>, which constructs a point equidistant from the sites <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <computeroutput>s3</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="103" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a3bc9931ecd0b385400cd854bc07bfb0f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Construct_Apollonius_site_2</definition>
        <argsstring></argsstring>
        <name>Construct_Apollonius_site_2</name>
        <briefdescription>
<para>A constructor for a dual Apollonius site (a site whose center is a vertex of the Apollonius diagram and its weight is the common distance of its center from the three defining sites). </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Site_2 operator()(Site_2 s1, Site_2 s2, Site_2 s3)</computeroutput>, which constructs a dual site whose center <formula id="34">$ c$</formula> is equidistant from <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <computeroutput>s3</computeroutput>, and its weight is equal to the (signed) distance of <formula id="34">$ c$</formula> from <computeroutput>s1</computeroutput> (or <computeroutput>s2</computeroutput> or <computeroutput>s3</computeroutput>).</para><para>Must also provide <computeroutput>Line_2 operator()(Site_2 s1, Site_2 s2)</computeroutput>, which constructs a line bitangent to <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. This line is the dual site of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and the site at infinity; it can be viewed as a dual Apollonius site whose center is at infinity and its weight is infinite. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="123" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a66cc33014d37204aac6c6ce6d1a303e4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Compare_x_2</definition>
        <argsstring></argsstring>
        <name>Compare_x_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Comparison_result operator()(Site_2 s1, Site_2 s2)</computeroutput>, which compares the <formula id="8">$ x$</formula>-coordinates of the centers of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="131" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1ae0625658725677d700f0f4aea81adee1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Compare_y_2</definition>
        <argsstring></argsstring>
        <name>Compare_y_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Comparison_result operator()(Site_2 s1, Site_2 s2)</computeroutput>, which compares the <formula id="35">$ y$</formula>-coordinates of the centers of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="139" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1af2a67b0c8ccf196bfbac36c0cc8b95d7" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Compare_weight_2</definition>
        <argsstring></argsstring>
        <name>Compare_weight_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Comparison_result operator()(Site_2 s1, Site_2 s2)</computeroutput>, which compares the weights of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="147" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a0b553ea8b9684a3e5e842e7b0d7ecd56" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Orientation_2</definition>
        <argsstring></argsstring>
        <name>Orientation_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Orientation operator()(Site_2 s1, Site_2 s2, Site_2 s3)</computeroutput>, which performs the usual orientation test for the centers of the three sites <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <computeroutput>s3</computeroutput>.</para><para>Must also provide <computeroutput>Orientation operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 p1, Site_2 p2)</computeroutput>, which performs the usual orientation test for the Apollonius vertex of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and the centers of <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput>. <simplesect kind="pre"><para>the Apollonius vertex of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <computeroutput>s3</computeroutput> must exist. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="163" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a279d01089c62edfaaa7d987e6e75d07e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Is_hidden_2</definition>
        <argsstring></argsstring>
        <name>Is_hidden_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2)</computeroutput>, which returns <computeroutput>true</computeroutput> if the circle corresponding to <computeroutput>s2</computeroutput> is contained in the closure of the disk corresponding to <computeroutput>s1</computeroutput>, <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="172" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a3cd4124622c4d46de5b6611b94be762a" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Oriented_side_of_bisector_2</definition>
        <argsstring></argsstring>
        <name>Oriented_side_of_bisector_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Oriented_side operator()(Site_2 s1, Site_2 s2, Point_2 p)</computeroutput>, which returns the oriented side of the bisector of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> that contains <computeroutput>p</computeroutput>. Returns <computeroutput>ON_POSITIVE_SIDE</computeroutput> if <computeroutput>p</computeroutput> lies in the half-space of <computeroutput>s1</computeroutput> (i.e., <computeroutput>p</computeroutput> is closer to <computeroutput>s1</computeroutput> than <computeroutput>s2</computeroutput>); returns <computeroutput>ON_NEGATIVE_SIDE</computeroutput> if <computeroutput>p</computeroutput> lies in the half-space of <computeroutput>s2</computeroutput>; returns <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>p</computeroutput> lies on the bisector of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="185" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1aafa5d3e495dfa5b07a3407026b3a2939" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Vertex_conflict_2</definition>
        <argsstring></argsstring>
        <name>Vertex_conflict_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>Sign operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 q)</computeroutput>, which returns the sign of the distance of <computeroutput>q</computeroutput> from the dual Apollonius site of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput>. <simplesect kind="pre"><para>the dual Apollonius site of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> must exist.</para></simplesect>
Must also provide <computeroutput>Sign operator()(Site_2 s1, Site_2 s2, Site_2 q)</computeroutput>, which returns the sign of the distance of <computeroutput>q</computeroutput> from the bitangent line of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> (a degenerate dual Apollonius site, with its center at infinity). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="200" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1ad7a56b309a469414e0c8a3ca7b2d056d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Finite_edge_interior_conflict_2</definition>
        <argsstring></argsstring>
        <name>Finite_edge_interior_conflict_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 s4, Site_2 q, bool b)</computeroutput>. The sites <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and <computeroutput>s4</computeroutput> define an Apollonius edge that lies on the bisector of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> and has as endpoints the Apollonius vertices defined by the triplets <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and <computeroutput>s1</computeroutput>, <computeroutput>s4</computeroutput> and <computeroutput>s2</computeroutput>. The Boolean <computeroutput>b</computeroutput> denotes if the two Apollonius vertices are in conflict with the site <computeroutput>q</computeroutput> (in which case <computeroutput>b</computeroutput> should be <computeroutput>true</computeroutput>, otherwise <computeroutput>false</computeroutput>). In case that <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput>, the predicate returns <computeroutput>true</computeroutput> if and only if the entire Apollonius edge is in conflict with <computeroutput>q</computeroutput>. If <computeroutput>b</computeroutput> is <computeroutput>false</computeroutput>, the predicate returns <computeroutput>false</computeroutput> if and only if <computeroutput>q</computeroutput> is not in conflict with the Apollonius edge. <simplesect kind="pre"><para>the Apollonius vertices of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput>, and <computeroutput>s1</computeroutput>, <computeroutput>s4</computeroutput>, <computeroutput>s2</computeroutput> must exist.</para></simplesect>
Must also provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 q, bool b)</computeroutput>. The sites <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and the site at infinity <formula id="36">$ s_\infty$</formula> define an Apollonius edge that lies on the bisector of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> and has as endpoints the Apollonius vertices defined by the triplets <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and <computeroutput>s1</computeroutput>, <formula id="36">$ s_\infty$</formula> and <computeroutput>s2</computeroutput> (the second Apollonius vertex is actually at infinity). The Boolean <computeroutput>b</computeroutput> denotes if the two Apollonius vertices are in conflict with the site <computeroutput>q</computeroutput> (in which case <computeroutput>b</computeroutput> should be <computeroutput>true</computeroutput>, otherwise <computeroutput>false</computeroutput>). In case that <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput>, the predicate returns <computeroutput>true</computeroutput> if and only if the entire Apollonius edge is in conflict with <computeroutput>q</computeroutput>. If <computeroutput>b</computeroutput> is <computeroutput>false</computeroutput>, the predicate returns <computeroutput>false</computeroutput> if and only if <computeroutput>q</computeroutput> is not in conflict with the Apollonius edge. <simplesect kind="pre"><para>the Apollonius vertex of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> must exist.</para></simplesect>
Must finally provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2, Site_2 q, bool b)</computeroutput>. The sites <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and the site at infinity <formula id="36">$ s_\infty$</formula> define an Apollonius edge that lies on the bisector of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> and has as endpoints the Apollonius vertices defined by the triplets <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <formula id="36">$ s_\infty$</formula> and <computeroutput>s1</computeroutput>, <formula id="36">$ s_\infty$</formula> and <computeroutput>s2</computeroutput> (both Apollonius vertices are actually at infinity). The Boolean <computeroutput>b</computeroutput> denotes if the two Apollonius vertices are in conflict with the site <computeroutput>q</computeroutput> (in which case <computeroutput>b</computeroutput> should be <computeroutput>true</computeroutput>, otherwise <computeroutput>false</computeroutput>). In case that <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput>, the predicate returns <computeroutput>true</computeroutput> if and only if the entire Apollonius edge is in conflict with <computeroutput>q</computeroutput>. If <computeroutput>b</computeroutput> is <computeroutput>false</computeroutput>, the predicate returns <computeroutput>false</computeroutput> if and only if <computeroutput>q</computeroutput> is not in conflict with the Apollonius edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="251" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a0ccb183b193f7cd082b4b789cdf1d127" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Infinite_edge_interior_conflict_2</definition>
        <argsstring></argsstring>
        <name>Infinite_edge_interior_conflict_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 q, bool b)</computeroutput>. The sites <formula id="36">$ s_\infty$</formula>, <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <computeroutput>s3</computeroutput> define an Apollonius edge that lies on the bisector of <formula id="36">$ s_\infty$</formula> and <computeroutput>s1</computeroutput> and has as endpoints the Apollonius vertices defined by the triplets <formula id="36">$ s_\infty$</formula>, <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput> and <formula id="36">$ s_\infty$</formula>, <computeroutput>s3</computeroutput> and <computeroutput>s1</computeroutput>. The Boolean <computeroutput>b</computeroutput> denotes if the two Apollonius vertices are in conflict with the site <computeroutput>q</computeroutput> (in which case <computeroutput>b</computeroutput> should be <computeroutput>true</computeroutput>, otherwise <computeroutput>false</computeroutput>. In case that <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput>, the predicate returns <computeroutput>true</computeroutput> if and only if the entire Apollonius edge is in conflict with <computeroutput>q</computeroutput>. If <computeroutput>b</computeroutput> is <computeroutput>false</computeroutput>, the predicate returns <computeroutput>false</computeroutput> if and only if <computeroutput>q</computeroutput> is not in conflict with the Apollonius edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="270" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classApolloniusGraphTraits__2_1a63484160668e0cbc9f005a54170f2393" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ApolloniusGraphTraits_2::Is_degenerate_edge_2</definition>
        <argsstring></argsstring>
        <name>Is_degenerate_edge_2</name>
        <briefdescription>
<para>A predicate object type. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Site_2 s1, Site_2 s2, Site_2 s3, Site_2 s4)</computeroutput>. It returns <computeroutput>true</computeroutput> if the Apollonius edge defined by <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput> and <computeroutput>s4</computeroutput> is degenerate, <computeroutput>false</computeroutput> otherwise. An Apollonius edge is called degenerate if its two endpoints coincide. <simplesect kind="pre"><para>the Apollonius vertices of <computeroutput>s1</computeroutput>, <computeroutput>s2</computeroutput>, <computeroutput>s3</computeroutput>, and <computeroutput>s1</computeroutput>, <computeroutput>s4</computeroutput>, <computeroutput>s2</computeroutput> must exist. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="281" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a94b4aec8542153b6f1f8c67c4b93afe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ApolloniusGraphTraits_2::ApolloniusGraphTraits_2</definition>
        <argsstring>()</argsstring>
        <name>ApolloniusGraphTraits_2</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1af998112f354276582f2a807158b83ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ApolloniusGraphTraits_2::ApolloniusGraphTraits_2</definition>
        <argsstring>(ApolloniusGraphTraits_2 other)</argsstring>
        <name>ApolloniusGraphTraits_2</name>
        <param>
          <type><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1ab9b8f225e70b654c1552d82f9d1be2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></type>
        <definition>ApolloniusGraphTraits_2 ApolloniusGraphTraits_2::operator=</definition>
        <argsstring>(ApolloniusGraphTraits_2 other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="301" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to predicate objects</header>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a87fc620b85ade4223c3d7c17d47b3f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a66cc33014d37204aac6c6ce6d1a303e4" kindref="member">Compare_x_2</ref></type>
        <definition>Compare_x_2 ApolloniusGraphTraits_2::compare_x_2_object</definition>
        <argsstring>()</argsstring>
        <name>compare_x_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a33f0737ab458a86ad7b9eed117cf9cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1ae0625658725677d700f0f4aea81adee1" kindref="member">Compare_y_2</ref></type>
        <definition>Compare_y_2 ApolloniusGraphTraits_2::compare_y_2_object</definition>
        <argsstring>()</argsstring>
        <name>compare_y_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a475f4c943eafbcf997b9c5d66d1d9ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1af2a67b0c8ccf196bfbac36c0cc8b95d7" kindref="member">Compare_weight_2</ref></type>
        <definition>Compare_weight_2 ApolloniusGraphTraits_2::compare_weight_2_object</definition>
        <argsstring>()</argsstring>
        <name>compare_weight_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1ac6b92c7e8f8a3d742402acd427461fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a0b553ea8b9684a3e5e842e7b0d7ecd56" kindref="member">Orientation_2</ref></type>
        <definition>Orientation_2 ApolloniusGraphTraits_2::orientation_2_object</definition>
        <argsstring>()</argsstring>
        <name>orientation_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a8531fd35f648ac6bfb675b7ab44e6d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a279d01089c62edfaaa7d987e6e75d07e" kindref="member">Is_hidden_2</ref></type>
        <definition>Is_hidden_2 ApolloniusGraphTraits_2::is_hidden_2_object</definition>
        <argsstring>()</argsstring>
        <name>is_hidden_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1ab8c7d242e77cdad61dbbdb26184ff4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a3cd4124622c4d46de5b6611b94be762a" kindref="member">Oriented_side_of_bisector_2</ref></type>
        <definition>Oriented_side_of_bisector_2 ApolloniusGraphTraits_2::oriented_side_of_bisector_test_2_object</definition>
        <argsstring>()</argsstring>
        <name>oriented_side_of_bisector_test_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a2bf4f07a02c8b0cb022f5fcff40bb05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1aafa5d3e495dfa5b07a3407026b3a2939" kindref="member">Vertex_conflict_2</ref></type>
        <definition>Vertex_conflict_2 ApolloniusGraphTraits_2::vertex_conflict_2_object</definition>
        <argsstring>()</argsstring>
        <name>vertex_conflict_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a41c03bb2c87ff74ff39978e3d7a2b33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1ad7a56b309a469414e0c8a3ca7b2d056d" kindref="member">Finite_edge_interior_conflict_2</ref></type>
        <definition>Finite_edge_interior_conflict_2 ApolloniusGraphTraits_2::finite_edge_interior_conflict_2_object</definition>
        <argsstring>()</argsstring>
        <name>finite_edge_interior_conflict_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1ae1a02238a41326f1f4c2ad99687577d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a0ccb183b193f7cd082b4b789cdf1d127" kindref="member">Infinite_edge_interior_conflict_2</ref></type>
        <definition>Infinite_edge_interior_conflict_2 ApolloniusGraphTraits_2::infinite_edge_interior_conflict_2_object</definition>
        <argsstring>()</argsstring>
        <name>infinite_edge_interior_conflict_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a9ed992846a2c19d830bdfbdfa6d91c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a63484160668e0cbc9f005a54170f2393" kindref="member">Is_degenerate_edge_2</ref></type>
        <definition>Is_degenerate_edge_2 ApolloniusGraphTraits_2::is_degenerate_edge_2_object</definition>
        <argsstring>()</argsstring>
        <name>is_degenerate_edge_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="359" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to constructor objects</header>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1aa1a63fc44be9e693b49251fe59253296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a46158cedf62ca51b7b4b4a78ea89387d" kindref="member">Construct_object_2</ref></type>
        <definition>Construct_object_2 ApolloniusGraphTraits_2::construct_object_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_object_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a3366e666b5b7acdfe008d391e748d6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a33eb1728f7cf7c4aee431dd309b85a2b" kindref="member">Construct_Apollonius_vertex_2</ref></type>
        <definition>Construct_Apollonius_vertex_2 ApolloniusGraphTraits_2::construct_Apollonius_vertex_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_Apollonius_vertex_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1a88097ab23eeeb300b2e647845e4a7af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a3bc9931ecd0b385400cd854bc07bfb0f" kindref="member">Construct_Apollonius_site_2</ref></type>
        <definition>Construct_Apollonius_site_2 ApolloniusGraphTraits_2::construct_Apollonius_site_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_Apollonius_site_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="382" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to other objects</header>
      <memberdef kind="function" id="classApolloniusGraphTraits__2_1af40d58a413629b2b6af3a0dd619ab20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classApolloniusGraphTraits__2_1a705fc3d395a7b7d0211b1c3f1e198a09" kindref="member">Assign_2</ref></type>
        <definition>Assign_2 ApolloniusGraphTraits_2::assign_2_object</definition>
        <argsstring>()</argsstring>
        <name>assign_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ApolloniusGraphTraits_2.h" line="392" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000003"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">TriangulationTraits_2</ref></computeroutput></para></xrefdescription></xrefsect></para><para>The concept <computeroutput><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></computeroutput> provides the traits requirements for the <computeroutput>Apollonius_graph_2</computeroutput> class. In particular, it provides a type <computeroutput>Site_2</computeroutput>, which must be a model of the concept <computeroutput><ref refid="classApolloniusSite__2" kindref="compound">ApolloniusSite_2</ref></computeroutput>. It also provides constructions for sites and several function object types for the predicates.</para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__traits__2" kindref="compound">CGAL::Apollonius_graph_traits_2</ref>&lt;K,Method_tag&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__filtered__traits__2" kindref="compound">CGAL::Apollonius_graph_filtered_traits_2</ref>&lt;CK,CM,EK,EM,FK,FM&gt;</computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">CGAL::Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__traits__2" kindref="compound">CGAL::Apollonius_graph_traits_2</ref>&lt;K,Method_tag&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__filtered__traits__2" kindref="compound">CGAL::Apollonius_graph_filtered_traits_2</ref>&lt;CK,CM,EK,EM,FK,FM&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ApolloniusGraphTraits_2.h" line="24" column="1" bodyfile="Concepts/ApolloniusGraphTraits_2.h" bodystart="24" bodyend="396"/>
    <listofallmembers>
      <member refid="classApolloniusGraphTraits__2_1a94b4aec8542153b6f1f8c67c4b93afe1" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>ApolloniusGraphTraits_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1af998112f354276582f2a807158b83ef1" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>ApolloniusGraphTraits_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a705fc3d395a7b7d0211b1c3f1e198a09" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Assign_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1af40d58a413629b2b6af3a0dd619ab20c" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>assign_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1af2a67b0c8ccf196bfbac36c0cc8b95d7" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Compare_weight_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a475f4c943eafbcf997b9c5d66d1d9ac4" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>compare_weight_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a66cc33014d37204aac6c6ce6d1a303e4" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Compare_x_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a87fc620b85ade4223c3d7c17d47b3f8a" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>compare_x_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1ae0625658725677d700f0f4aea81adee1" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Compare_y_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a33f0737ab458a86ad7b9eed117cf9cc0" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>compare_y_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a3bc9931ecd0b385400cd854bc07bfb0f" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Construct_Apollonius_site_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a88097ab23eeeb300b2e647845e4a7af1" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>construct_Apollonius_site_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a33eb1728f7cf7c4aee431dd309b85a2b" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Construct_Apollonius_vertex_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a3366e666b5b7acdfe008d391e748d6a6" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>construct_Apollonius_vertex_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a46158cedf62ca51b7b4b4a78ea89387d" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Construct_object_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1aa1a63fc44be9e693b49251fe59253296" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>construct_object_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1ad7a56b309a469414e0c8a3ca7b2d056d" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Finite_edge_interior_conflict_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a41c03bb2c87ff74ff39978e3d7a2b33f" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>finite_edge_interior_conflict_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a08d3737a0761d951e953b048ed4a07ad" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>FT</name></member>
      <member refid="classApolloniusGraphTraits__2_1a0ccb183b193f7cd082b4b789cdf1d127" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Infinite_edge_interior_conflict_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1ae1a02238a41326f1f4c2ad99687577d8" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>infinite_edge_interior_conflict_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a63484160668e0cbc9f005a54170f2393" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Is_degenerate_edge_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a9ed992846a2c19d830bdfbdfa6d91c40" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>is_degenerate_edge_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a279d01089c62edfaaa7d987e6e75d07e" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Is_hidden_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a8531fd35f648ac6bfb675b7ab44e6d35" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>is_hidden_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1adbcdf91db9abf3d4322027fb4767aaeb" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Line_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1ab113d2efcde056126521ede9b4abfc60" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Object_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1ab9b8f225e70b654c1552d82f9d1be2ad" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>operator=</name></member>
      <member refid="classApolloniusGraphTraits__2_1a0b553ea8b9684a3e5e842e7b0d7ecd56" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Orientation_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1ac6b92c7e8f8a3d742402acd427461fbf" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>orientation_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1a3cd4124622c4d46de5b6611b94be762a" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Oriented_side_of_bisector_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1ab8c7d242e77cdad61dbbdb26184ff4c8" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>oriented_side_of_bisector_test_2_object</name></member>
      <member refid="classApolloniusGraphTraits__2_1ab2355757b0cc8d0db808c4cd50f1df2e" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Point_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a0b5108558dfc47f2aba0bd22f98ab6d8" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Ray_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1afa9618bcfadb45987e0f2d5ed6bb066f" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>RT</name></member>
      <member refid="classApolloniusGraphTraits__2_1abcbde03d741efafa4181dcf92ff24396" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Segment_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a79e97f824eb19e1d8be87af8ac2064b8" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Site_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1aafa5d3e495dfa5b07a3407026b3a2939" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>Vertex_conflict_2</name></member>
      <member refid="classApolloniusGraphTraits__2_1a2bf4f07a02c8b0cb022f5fcff40bb05c" prot="public" virt="non-virtual"><scope>ApolloniusGraphTraits_2</scope><name>vertex_conflict_2_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
