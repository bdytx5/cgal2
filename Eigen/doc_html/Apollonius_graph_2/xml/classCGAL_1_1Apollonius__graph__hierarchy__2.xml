<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Apollonius__graph__hierarchy__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Apollonius_graph_hierarchy_2</compoundname>
    <basecompoundref refid="classCGAL_1_1Apollonius__graph__2" prot="public" virt="non-virtual">CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</basecompoundref>
    <includes local="no">CGAL/Apollonius_graph_hierarchy_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename Gt</type>
      </param>
      <param>
        <type>typename Agds</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a03e2c9d08a1aaffcdc08b9339390686e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(Gt gt=Gt())</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <param>
          <type>Gt</type>
          <declname>gt</declname>
          <defval>Gt()</defval>
        </param>
        <briefdescription>
<para>Creates an hierarchy of Apollonius graphs using <computeroutput>gt</computeroutput> as geometric traits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad46364f1b6f577f641f31c815fa63be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Input_iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(Input_iterator first, Input_iterator beyond, Gt gt=Gt())</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <param>
          <type>Input_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Input_iterator</type>
          <declname>beyond</declname>
        </param>
        <param>
          <type>Gt</type>
          <declname>gt</declname>
          <defval>Gt()</defval>
        </param>
        <briefdescription>
<para>Creates an Apollonius graph hierarchy using <computeroutput>gt</computeroutput> as geometric traits and inserts all sites in the range [<computeroutput>first</computeroutput>, <computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a87a3d7a9e1747f7c442e379b0d98aadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; other)</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>All faces, vertices and inter-level pointers are duplicated. After the construction, <computeroutput>agh</computeroutput> and <computeroutput>other</computeroutput> refer to two different Apollonius graph hierarchies: if <computeroutput>other</computeroutput> is modified, <computeroutput>agh</computeroutput> is not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a4fbd488b397fdc3770ef068cd70fdece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
        <definition>Apollonius_graph_hierarchy_2&lt;Gt,Agds&gt; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator=</definition>
        <argsstring>(Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment. </para>        </briefdescription>
        <detaileddescription>
<para>All faces, vertices and inter-level pointers are duplicated. After the construction, <computeroutput>agh</computeroutput> and <computeroutput>other</computeroutput> refer to two different Apollonius graph hierarchies: if <computeroutput>other</computeroutput> is modified, <computeroutput>agh</computeroutput> is not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insertion</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0eaa28df7025c5f0899bb9c7fb721458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Input_iterator</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(Input_iterator first, Input_iterator beyond)</argsstring>
        <name>insert</name>
        <param>
          <type>Input_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Input_iterator</type>
          <declname>beyond</declname>
        </param>
        <briefdescription>
<para>Inserts the sites in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>The number of sites in the range [<computeroutput>first</computeroutput>, <computeroutput>beyond</computeroutput>) is returned. <simplesect kind="pre"><para><computeroutput>Input_iterator</computeroutput> must be a model of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and its value type must be <computeroutput>Site_2</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a6f38a1a54062988c732686af27821dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(Site_2 s)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" kindref="member">Site_2</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts the site <computeroutput>s</computeroutput> in the Apollonius graph hierarchy. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is visible then the vertex handle of <computeroutput>s</computeroutput> is returned, otherwise <computeroutput>Vertex_handle(NULL)</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad105e1ce1649b9ef380e849c61bf9be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(Site_2 s, Vertex_handle vnear)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" kindref="member">Site_2</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>vnear</declname>
        </param>
        <briefdescription>
<para>Inserts <computeroutput>s</computeroutput> in the Apollonius graph hierarchy using the site associated with <computeroutput>vnear</computeroutput> as an estimate for the nearest neighbor of the center of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is visible then the vertex handle of <computeroutput>s</computeroutput> is returned, otherwise <computeroutput>Vertex_handle(NULL)</computeroutput> is returned. A call to this method is equivalent to <computeroutput>agh.insert(s);</computeroutput> and it has been added for the sake of conformity with the interface of the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Removal</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a1dc064a2c574f6e2f9616288a14219fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::remove</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Removes the site associated to the vertex handle <computeroutput>v</computeroutput> from the Apollonius graph hierarchy. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>v</computeroutput> must correspond to a valid finite vertex of the Apollonius graph hierarchy. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Nearest Neighbor Location</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a384c3adc597f58dd9193834ff31b8f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::nearest_neighbor</definition>
        <argsstring>(Point p)</argsstring>
        <name>nearest_neighbor</name>
        <param>
          <type>Point</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Finds the nearest neighbor of the point <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>In other words it finds the site whose Apollonius cell contains <computeroutput>p</computeroutput>. Ties are broken arbitrarily and one of the nearest neighbors of <computeroutput>p</computeroutput> is returned. If there are no visible sites in the Apollonius diagram <computeroutput>Vertex_handle(NULL)</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1ab3e7b3f63e0fe659fb118fbfd897ce19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::nearest_neighbor</definition>
        <argsstring>(Point p, Vertex_handle vnear)</argsstring>
        <name>nearest_neighbor</name>
        <param>
          <type>Point</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>vnear</declname>
        </param>
        <briefdescription>
<para>Finds the nearest neighbor of the point <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If there are no visible sites in the Apollonius diagram <computeroutput>Vertex_handle(NULL)</computeroutput> is returned. A call to this method is equivalent to <computeroutput>agh.nearest_neighbor(p);</computeroutput> and it has been added for the sake of conformity with the interface of the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>I/O</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a6279dc5166bd3f6e201dfae4530e1700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::file_output</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>file_output</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Writes the current state of the Apollonius graph hierarchy to an output stream. </para>        </briefdescription>
        <detaileddescription>
<para>In particular, all visible and hidden sites are written as well as the underlying combinatorial hierarchical data structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a55ac85ac491b3bda8e1aa63030c241f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::file_input</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>file_input</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Reads the state of the Apollonius graph hierarchy from an input stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a398740bd777a33f218aea0a24e6e0af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; agh)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>agh</declname>
        </param>
        <briefdescription>
<para>Writes the current state of the Apollonius graph hierarchy to an output stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a84c03b88d5492c0261cef7ebc17b520d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; agh)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>agh</declname>
        </param>
        <briefdescription>
<para>Reads the state of the Apollonius graph hierarchy from an input stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="197" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0612cee07f0f84f69b4e6e359ea20b6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::is_valid</definition>
        <argsstring>(bool verbose=false, int level=1) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Checks the validity of the Apollonius graph hierarchy. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>verbose</computeroutput> is <computeroutput>true</computeroutput> a short message is sent to <computeroutput>std::cerr</computeroutput>. If <computeroutput>level</computeroutput> is 0, the data structure at all levels is validated, as well as the inter-level pointers. If <computeroutput>level</computeroutput> is 1, then the data structure at all levels is validated, the inter-level pointers are validated and all levels of the Apollonius graph hierarchy are also validated. Negative values of <computeroutput>level</computeroutput> always return <computeroutput>true</computeroutput>, and values greater then 1 are equivalent to <computeroutput>level</computeroutput> being 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="215" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a7f389883387f80c8069b0cea9ea15ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clears all contents of the Apollonius graph hierarchy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a47c78c576fb2b21f05e88ec629c43f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::swap</definition>
        <argsstring>(Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The Apollonius graph hierarchies <computeroutput>other</computeroutput> and <computeroutput>agh</computeroutput> are swapped. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>agh</computeroutput>.<computeroutput>swap(other)</computeroutput> should be preferred to <computeroutput>agh</computeroutput><computeroutput>= other</computeroutput> or to <computeroutput>agh</computeroutput><computeroutput>(other)</computeroutput> if <computeroutput>other</computeroutput> is deleted afterwards. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="233" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>We provide an alternative to the class <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> for the dynamic construction of the Apollonius graph. </para>    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> class maintains a hierarchy of Apollonius graphs. The bottom-most level of the hierarchy contains the full Apollonius diagram. A site that is in level <formula id="28">$ i$</formula>, is in level <formula id="29">$ i+1$</formula> with probability <formula id="30">$ 1/\alpha$</formula> where <formula id="31">$ \alpha &gt; 1$</formula> is some constant. The difference between the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class and the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> is on how the nearest neighbor location is done. Given a point <formula id="13">$ p$</formula> the location is done as follows: at the top most level we find the nearest neighbor of <formula id="13">$ p$</formula> as in the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. At every subsequent level <formula id="28">$ i$</formula> we use the nearest neighbor found at level <formula id="29">$ i+1$</formula> to find the nearest neighbor at level <formula id="28">$ i$</formula>. This is a variant of the corresponding hierarchy for points found in <ref refid="citelist_1CITEREF_d-iirdt-98" kindref="member">[2]</ref>. The class has two template parameters which have essentially the same meaning as in the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. The first template parameter must be a model of the <computeroutput><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></computeroutput> concept. The second template parameter must be a model of the <computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound">ApolloniusGraphDataStructure_2</ref></computeroutput> concept. However, the vertex base class that is to be used in the Apollonius graph data structure must be a model of the <computeroutput><ref refid="classApolloniusGraphHierarchyVertexBase__2" kindref="compound">ApolloniusGraphHierarchyVertexBase_2</ref></computeroutput> concept. The second template parameter defaults to <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/TDS_2.tag">Triangulation_data_structure_2</ref>&lt; <ref refid="classCGAL_1_1Apollonius__graph__hierarchy__vertex__base__2" kindref="compound">Apollonius_graph_hierarchy_vertex_base_2</ref>&lt; <ref refid="classCGAL_1_1Apollonius__graph__vertex__base__2" kindref="compound">Apollonius_graph_vertex_base_2</ref>&lt;Gt,true&gt; &gt;, <ref refid="classCGAL_1_1Triangulation__face__base__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">Triangulation_face_base_2</ref>&lt;Gt&gt; &gt;</computeroutput>.</para><para>The <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> class derives publicly from the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. The interface is the same with its base class. In the sequel only the methods overridden are documented.</para><para><bold>Types</bold><linebreak/>
</para><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> does not introduce other types than those introduced by its base class <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput>.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound">ApolloniusGraphDataStructure_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classApolloniusGraphHierarchyVertexBase__2" kindref="compound">ApolloniusGraphHierarchyVertexBase_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">CGAL::Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/TDS_2.tag">CGAL::Triangulation_data_structure_2</ref>&lt;Vb,Fb&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__traits__2" kindref="compound">CGAL::Apollonius_graph_traits_2</ref>&lt;K,Method_tag&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__filtered__traits__2" kindref="compound">CGAL::Apollonius_graph_filtered_traits_2</ref>&lt;CK,CM,EK,EM,FK,FM&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__vertex__base__2" kindref="compound">CGAL::Apollonius_graph_hierarchy_vertex_base_2</ref>&lt;Agvb&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="15">
        <label>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__hierarchy__2"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__2"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__hierarchy__2"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__2"/>
      </node>
    </collaborationgraph>
    <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="54" column="1" bodyfile="CGAL/Apollonius_graph_hierarchy_2.h" bodystart="54" bodyend="238"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ada8c9863db042083ae28408c001fbcf4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_edges_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0178c25b3a7518e380bb37f644359692" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_edges_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a1a980bb005f7609fe901793c14e029eb" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_edges_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af47e0b39e85b500d117ef1dfa706dd3b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_faces_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a08ff9d69334a433d7ceb229ef788cc73" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_faces_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a42b527855a0d86c39666fadbffe35a0e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_faces_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a53dfd042bfde5d64839b5214fae705b0" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_vertices_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab945277abbd6b2dfbe5874821bb05b8e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_vertices_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a67efc48a9fdc072f18176cf8b2d1bf4f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_vertices_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aa5584c72f4877bcac11e5022b79bbb8b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af387fad63bf790839d8ce5ffb2a875aa" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a77b430b6cf2e494cf14099e2a0054c1b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a03e2c9d08a1aaffcdc08b9339390686e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad46364f1b6f577f641f31c815fa63be4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a87a3d7a9e1747f7c442e379b0d98aadb" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a7f389883387f80c8069b0cea9ea15ca4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab42d8fe6f9dce31c11307ecbce8acb04" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1adc99b3b3a8d7adc7f5b4e38a21733985" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2483f3b1aaa22a0b03f6fa8b9211e633" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a1956a3b3d339eb667775f2051cbc80ab" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a42be977f239f865a1ae3b6d71346f410" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_dual_edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a36ec4fdf29bdd71aa89584cb30e0e1dc" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_primal</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6a4de4b2934b0f2b12bd00d4db3a4a1d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_primal_edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a304f5fe797914ddda090095ece7fdd7d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6e6e1b20ab5018c96e4b0ed2c0f0ee00" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a7bc59bde3f5e808541b8689e3516bfdc" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab1f5de353e920892190337b1b76cd509" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4a54f07541f4ef6fa55ac47cc260b619" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Edge_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a5fd4209127d34c18ac0885520aab5520" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6935414a5009edc49af24e8100deed54" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1afe012870773a550396ad67f4cdfe6ccd" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face_handle</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a55ac85ac491b3bda8e1aa63030c241f4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>file_input</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a6279dc5166bd3f6e201dfae4530e1700" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>file_output</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a8b782ea367c5df1f4813d469f257a4f9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_edges_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a62b059c99af5c3690fab08c306cf7a15" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_edges_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0c52fcbb3b25be0c6b78d4ae68f6661a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_edges_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2e13742a7565c0e46700bd87bd794fe4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_faces_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a26800688e5691e8a926568addb7cdbbe" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_faces_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a3969c0696ecb5a405a1a01a459c5b6df" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_faces_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4d72a42454bcdb44ef5c01f86fc3370a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a8df22478dee497b72c920425e9acd36f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertices_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a94cbfc716842f799a6c4651fc53f9e25" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertices_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4c2e91040f1c353a7b611b55614bcf79" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_vertices_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aef68035e2c956e1245b7d19eaebc66e1" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>geom_traits</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a1e780c09c97d949d3425144a8cc81e1a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Geom_traits</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a85aabaaf416756314dd0b9ba3cf86907" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>hidden_sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aca0816bba7a11471e4110093f22004b0" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>hidden_sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1afa1b8c7922d472b50aa9503520b12979" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Hidden_sites_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a5cc66d8aea2c6d07bd96fa182dfe2a36" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_edges</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ac1715033ce3824daa94823b6e6601a6c" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_edges</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ae0c4540c40f8a32a282472d7e5e9cafd" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a820ba9836d441f126cb6c7c587fb5d49" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab3be0a81ae7504909bd9a82e3a1e9070" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab68466a4f12c04717182f1aedc4ecdb0" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a53d22491d5633549c12dc0a27822b42f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>infinite_face</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aeb8926478276024fe28fd9d0ee65a46b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>infinite_vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0eaa28df7025c5f0899bb9c7fb721458" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a6f38a1a54062988c732686af27821dd9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad105e1ce1649b9ef380e849c61bf9be7" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a36820d88501404365245c6a7f7fca573" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4fb0275444193c09ffaacacaf3e57b40" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aeeea392554f6977a65d6c46d10bcf51f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a30ad9ee69b0b274624af3599d0c35550" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a82b53618d81c23d3b8f250fdbf942827" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0612cee07f0f84f69b4e6e359ea20b6f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2f6c0464322784e82763d88de0b7005b" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a384c3adc597f58dd9193834ff31b8f58" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1ab3e7b3f63e0fe659fb118fbfd897ce19" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a3fce781d622b0d63e4e290e29cceda4d" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a14a464708e13dcbad9b6830a64fa3881" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aba7a18aeeea055409484a0903fce0419" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a486c5612381fe5e6e20f74b2c93977fd" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_hidden_sites</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a67cebda221210a8cff1ac33af853e904" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ac96ec1df26d1517bde80cbb493b1c475" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_visible_sites</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a398740bd777a33f218aea0a24e6e0af0" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6248bc10d8530ff6a80d61c3af28c57e" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a4fbd488b397fdc3770ef068cd70fdece" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6f98fefa3d3e46720b190916b18989ed" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a84c03b88d5492c0261cef7ebc17b520d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a53ac2cdcd848ce2df937c519664aaad5" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4417369c58be047f0159259f4a679a9e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a1dc064a2c574f6e2f9616288a14219fc" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Site_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af75de607fc1ad50f56dda6583d6255bc" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a31460d44d7c55e72a59c94bb085b605f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ade765de09304a43067546280f0302003" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Sites_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af45600846b8c46a7cfb5ede06ff33d7e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a47c78c576fb2b21f05e88ec629c43f12" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>swap</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a09e9138285f7863da80e66eafa1dd352" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>swap</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0a5d7a0531e28bfc6aa9f1e6f39cc811" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>tds</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a61636138d13c212ff2a6dd4ff5f816c9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Triangulation_data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a17245aed36840bee031fc4fa908d2450" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a7c2be7467b149c7c76eab8ea3b1e2d33" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex_handle</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a55fb677849d54bf7dbfed8774aa891aa" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>visible_sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a3c1ddc6422028841f9082f6ae9ee32db" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>visible_sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a03a9c34a198c73ce1604723d4c4926ff" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Visible_sites_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
