<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgBGL" kind="group">
    <compoundname>PkgBGL</compoundname>
    <title>CGAL and the Boost Graph Library Reference</title>
    <innerfile refid="partition_8h">partition.h</innerfile>
    <innergroup refid="group__PkgBGLTraits">Specializations of boost::graph_traits</innergroup>
    <innergroup refid="group__bgl__namedparameters">BGL Named Parameters</innergroup>
    <innergroup refid="group__PkgBGLConcepts">Concepts</innergroup>
    <innergroup refid="group__PkgBGLProperties">Properties</innergroup>
    <innergroup refid="group__PkgBGLPropertiesDynamic">Dynamic Properties</innergroup>
    <innergroup refid="group__PkgBGLHelper">Helper Classes</innergroup>
    <innergroup refid="group__PkgBGLHelperFct">Helper Functions</innergroup>
    <innergroup refid="group__PkgBGLIterators">Iterators and Circulators</innergroup>
    <innergroup refid="group__PkgBGLSelectionFct">Selection Functions</innergroup>
    <innergroup refid="group__PkgBGLAdaptors">Graph Adaptors</innergroup>
    <innergroup refid="group__PkgBGLEulerOperations">Euler Operations</innergroup>
    <innergroup refid="group__PkgBGLPartition">Partitioning Operations</innergroup>
    <innergroup refid="group__PkgBGLIOFct">I/O Functions</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgBGL_1ga99ea6bf193f1194db5e523e713c82fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename Visitor</type>
          </param>
          <param>
            <type>typename IsTerminal</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::split_graph_into_polylines</definition>
        <argsstring>(const Graph &amp;graph, Visitor &amp;polyline_visitor, IsTerminal is_terminal)</argsstring>
        <name>split_graph_into_polylines</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>Visitor &amp;</type>
          <declname>polyline_visitor</declname>
        </param>
        <param>
          <type>IsTerminal</type>
          <declname>is_terminal</declname>
        </param>
        <briefdescription>
<para>splits into polylines the graph <computeroutput>g</computeroutput> at vertices of degree greater than 2 and at vertices for which <computeroutput>is_terminal(v,graph)==true</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The polylines are reported using a visitor. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the <computeroutput>boost</computeroutput> concepts <computeroutput><ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></computeroutput> and <computeroutput><ref refid="classEdgeListGraph" kindref="compound">EdgeListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>a class that provides:<itemizedlist>
<listitem><para><computeroutput>void start_new_polyline()</computeroutput> called when starting the description of a polyline.</para></listitem><listitem><para><computeroutput>void add_node(typename boost::graph_traits&lt;Graph&gt;::vertex_descriptor v)</computeroutput> called for each vertex <computeroutput>v</computeroutput> of the polyline currently described.</para></listitem><listitem><para><computeroutput>void end_polyline()</computeroutput> called when the description of a polyline is finished. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsTerminal</parametername>
</parameternamelist>
<parameterdescription>
<para>A functor providing <computeroutput>bool operator()(boost::graph_traits&lt;Graph&gt;::vertex_descriptor v, const Graph&amp; g) const</computeroutput> returning true if the vertex <computeroutput>v</computeroutput> of degree 2 is a polyline endpoint and false otherwise.</para></parameterdescription>
</parameteritem>
</parameterlist>
An overload without <computeroutput>is_terminal</computeroutput> is provided if no vertices but those of degree different from 2 are polyline endpoints.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/split_graph_into_polylines.h" line="230" column="1" bodyfile="CGAL/boost/graph/split_graph_into_polylines.h" bodystart="230" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="emst-detail.png"></image>
   Andreas Fabri, Fernando Cacciola, Philipp Moeller, and Ron Wein This package provides a framework for interfacing CGAL data structures with the algorithms of the Boost Graph Library, or BGL for short. It allows to run graph algorithms directly on CGAL data structures which are model of the BGL graph concepts, for example the shortest path algorithm on a Delaunay triangulation in order to compute the Euclidean minimum spanning tree. Furthermore, it introduces several new graph concepts describing halfedge data structures. <linebreak/>
   <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cfw-cbgl-18b">cgal:cfw-cbgl-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesLGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LGPL</ref> <linebreak/>
 </para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classEdgeListGraph" kindref="compound">EdgeListGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classMutableHalfedgeGraph" kindref="compound">MutableHalfedgeGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classMutableFaceGraph" kindref="compound">MutableFaceGraph</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Properties</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGLProperties_1gaec83b8086dfd0cb99447a6d0d14beeee" kindref="member">boost::vertex_index_t</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLProperties_1gab9975429768c90e61fa06fa88fa11bbf" kindref="member">boost::halfedge_index_t</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLProperties_1ga982c6c7eef63cee15d1769fd1a8b0d26" kindref="member">boost::edge_index_t</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLProperties_1ga315e5c7e887e2c2937eb411e14115dc6" kindref="member">boost::face_index_t</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLProperties_1ga042b2975580f7e0b507e82bf9d4ae2b6" kindref="member">boost::vertex_point_t</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">CGAL Classes Adapted for the Graph API</heading>
</para><para>Different CGAL types have been adapted as graphs for the Bgl. All adapted types are listed here. The pages document which concepts they model, the properties they support, and any possible caveats that a user might encounter.</para><para><itemizedlist>
<listitem><para><ref refid="group__PkgBGLTraits_1BGLSMGT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Surface_mesh&lt;P&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLPolyGT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Polyhedron_3&lt;T&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLLCCGT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Linear_cell_complex_for_combinatorial_map&lt;...&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLSeam_meshGT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Seam_mesh&lt;T&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLT2GT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Triangulation_2&lt;GT, TDS&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLArgtGT" kindref="member"><computeroutput>boost::graph_traits&lt; CGAL::Arrangement_2&lt;T,DC&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLOMPAK" kindref="member"><computeroutput>boost::graph_traits&lt;OpenMesh::PolyMesh_ArrayKernelT&lt;K&gt; &gt;</computeroutput> </ref></para></listitem><listitem><para><ref refid="group__PkgBGLTraits_1BGLOMTMAK" kindref="member"><computeroutput>boost::graph_traits&lt;OpenMesh::TriMesh_ArrayKernelT&lt;K&gt; &gt;</computeroutput> </ref></para></listitem></itemizedlist>
</para><para><heading level="2">Helper Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__vertex__base__with__id__2" kindref="compound">CGAL::Triangulation_vertex_base_with_id_2</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Arr__vertex__index__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arr_vertex_index_map</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Arr__face__index__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arr_face_index_map</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1HalfedgeDS__vertex__max__base__with__id" kindref="compound">CGAL::HalfedgeDS_vertex_max_base_with_id</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1HalfedgeDS__halfedge__max__base__with__id" kindref="compound">CGAL::HalfedgeDS_halfedge_max_base_with_id</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1HalfedgeDS__face__max__base__with__id" kindref="compound">CGAL::HalfedgeDS_face_max_base_with_id</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Polyhedron__items__with__id__3" kindref="compound">CGAL::Polyhedron_items_with_id_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelper_1ga0660924a1aa87e8be5cccbc261e931c7" kindref="member">CGAL::set_halfedgeds_items_id()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Linear__cell__complex__bgl__min__items" kindref="compound">CGAL::Linear_cell_complex_bgl_min_items</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Linear__cell__complex__for__bgl__combinatorial__map__helper" kindref="compound">CGAL::Linear_cell_complex_for_bgl_combinatorial_map_helper</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Helper Functions</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gad93e429ad24efeaddeb836c437e719ab" kindref="member">CGAL::is_border()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga63695419c5ce7f68949ff2fb4f42d733" kindref="member">CGAL::is_border_edge()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gadcd0f7717f833115030b951974837b6c" kindref="member">CGAL::is_bivalent()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga7216689879e9ee4d0143054f2bbaf09c" kindref="member">CGAL::is_bivalent_mesh()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga6c1acedeffc27f41b2959b517f843ae4" kindref="member">CGAL::is_trivalent()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga1472e0db19a5232f6ce14287c30eb521" kindref="member">CGAL::is_trivalent_mesh()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga0aeb3a6e6504032a485af3390dcec998" kindref="member">CGAL::is_isolated_triangle()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gae04c8044cf1eee6a84baa5b79ab99fef" kindref="member">CGAL::is_closed()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gaa552f609541c09f6d38ce92c19cd60c8" kindref="member">CGAL::is_triangle()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga11883d231eec1b58f37efe4acedd9588" kindref="member">CGAL::is_triangle_mesh()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gaefeddba3015a9723bfcacb904709bad0" kindref="member">CGAL::is_quad()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga092f99b04e99633136d6534e7bb76b0a" kindref="member">CGAL::is_quad_mesh()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga36ed1d044899aaeb9dc0e745b5a3d2e4" kindref="member">CGAL::is_isolated_quad()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga23e1d67dfacb0c3b659da32854f9026b" kindref="member">CGAL::is_valid_halfedge_graph()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gac164e7e125a766bd4e5d5bacd05f2d4a" kindref="member">CGAL::is_valid_face_graph()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gafa3bc673513c8750321bf062afd5e6b7" kindref="member">CGAL::is_valid_polygon_mesh()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gab737aaa204a6bdb8d18b00403f9d35d7" kindref="member">CGAL::is_tetrahedron()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga6c6e5a51ae08d56082eb4b0667d673d3" kindref="member">CGAL::is_hexahedron()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga81ac0b6fbedf7889e0164aec540bd112" kindref="member">CGAL::make_triangle()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gad2e132763721d8e4fd22020c1665c15f" kindref="member">CGAL::make_tetrahedron()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga94890a756e6c8d96ba91711ade533208" kindref="member">CGAL::make_quad()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gad9df350e98780f0c213046d8a257358e" kindref="member">CGAL::make_hexahedron()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gac35ac7a3cb0ca4a5452548a304f3835e" kindref="member">CGAL::make_icosahedron()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga859e3e5e3e40c20eb36807d573dddbb0" kindref="member">CGAL::make_regular_prism()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gad559ef0cf6a75f905957a3c5b89a03c8" kindref="member">CGAL::make_pyramid()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga5a41c8f7154516b2f6f58937136e4bb3" kindref="member">CGAL::make_grid()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member">CGAL::clear()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">CGAL::copy_face_graph()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Iterators</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__source__iterator" kindref="compound">CGAL::Halfedge_around_source_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__target__iterator" kindref="compound">CGAL::Halfedge_around_target_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__face__iterator" kindref="compound">CGAL::Halfedge_around_face_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Vertex__around__target__iterator" kindref="compound">CGAL::Vertex_around_target_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Vertex__around__face__iterator" kindref="compound">CGAL::Vertex_around_face_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Face__around__face__iterator" kindref="compound">CGAL::Face_around_face_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Face__around__target__iterator" kindref="compound">CGAL::Face_around_target_iterator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1gae1d90234861673d1457922d276b4282b" kindref="member">CGAL::halfedges_around_source()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1ga2be4fd4d24b1e48e00a92f90f0f2923c" kindref="member">CGAL::halfedges_around_target()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1ga37229df31508a78eb4acdaf907e637e5" kindref="member">CGAL::halfedges_around_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1ga5a12f39e74a0667374570d61b859bfb1" kindref="member">CGAL::faces_around_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1ga603c8a5526457b2bf54addacc52943a5" kindref="member">CGAL::faces_around_target()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1ga7746cb7b28520877375dfff6ec7bd32c" kindref="member">CGAL::vertices_around_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLIterators_1gab494736881fb051038dc55e4b49b580a" kindref="member">CGAL::vertices_around_target()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Circulators</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__source__circulator" kindref="compound">CGAL::Halfedge_around_source_circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__target__circulator" kindref="compound">CGAL::Halfedge_around_target_circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Halfedge__around__face__circulator" kindref="compound">CGAL::Halfedge_around_face_circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Vertex__around__target__circulator" kindref="compound">CGAL::Vertex_around_target_circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Face__around__target__circulator" kindref="compound">CGAL::Face_around_target_circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Face__around__face__circulator" kindref="compound">CGAL::Face_around_face_circulator</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Euler Operations</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga28e4d0f61f3cda26eb651e352cf756ce" kindref="member">CGAL::Euler::add_center_vertex()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga4661f850bc60686efeae2fc9d2ec3e65" kindref="member">CGAL::Euler::add_edge()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gaa386d0cdef3b5d6ef43d6b503392dbcd" kindref="member">CGAL::Euler::add_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga8666be89a7ffa73a5fe82b6b2bdc6f19" kindref="member">CGAL::Euler::add_face_to_border()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga2bd5538dc0fda2be88770f5fb96c6782" kindref="member">CGAL::Euler::add_vertex_and_face_to_border()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga5d15eb83f797b8f91e23e8e9ceec78c9" kindref="member">CGAL::Euler::collapse_edge()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga2d19a3573640a9abb28885425bfd9f40" kindref="member">CGAL::Euler::does_satisfy_link_condition()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga12e0a6376e2755b48356b186e1344fdb" kindref="member">CGAL::Euler::fill_hole()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga174af506cebf3def60b56a3501843864" kindref="member">CGAL::Euler::flip_edge()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga34c26f38b0453d3bad610963da8b24ee" kindref="member">CGAL::Euler::join_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga868c3f29a47f516c24953b9b3b18c827" kindref="member">CGAL::Euler::join_loop()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga585a3324ef493cc1340da5cb364b772c" kindref="member">CGAL::Euler::join_vertex()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gaa305bfc634d2aa7bca376d0550d8363e" kindref="member">CGAL::Euler::make_hole()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga8ec295610396e837258997c435b7a75f" kindref="member">CGAL::Euler::remove_center_vertex()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gacfae7ff8e782da55b941e4487e86c738" kindref="member">CGAL::Euler::remove_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1ga8a7629a2a0659ca059081eae8cedca3d" kindref="member">CGAL::Euler::split_edge()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gac0e8aebb3072d5dd67487ce40205f318" kindref="member">CGAL::Euler::split_face()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gaff8b953d3c70fbfd2ae9db2f59d62bd0" kindref="member">CGAL::Euler::split_loop()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLEulerOperations_1gaa60aecdf1aa48b7b3609abddd3b4d38b" kindref="member">CGAL::Euler::split_vertex()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Selection</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga569fe26f889e5e4eed27746ac921651b" kindref="member">CGAL::expand_face_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1gadeff090826a857c141251ce28bbe1f48" kindref="member">CGAL::reduce_face_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga6f6dd8a92c358a06592b9d481bf7bd74" kindref="member">CGAL::expand_edge_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga0fed4caaddf3fef51b37a64b42ba5fc0" kindref="member">CGAL::reduce_edge_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga49398c78507f5664b740439a92ca746b" kindref="member">CGAL::expand_vertex_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga569127b818c04bfca7a5a5bca5b0bc24" kindref="member">CGAL::reduce_vertex_selection()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga8c925a29d68613319c31772123755ec7" kindref="member">CGAL::select_incident_faces()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLSelectionFct_1ga6f8d338df28c24bbf93677f24f7bcbbe" kindref="member">CGAL::expand_face_selection_for_removal()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Conversion Functions</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGL_1ga99ea6bf193f1194db5e523e713c82fb9" kindref="member">CGAL::split_graph_into_polylines()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Graph Adaptors</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">CGAL::Face_filtered_graph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">CGAL::Graph_with_descriptor_with_graph</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph__property__map" kindref="compound">CGAL::Graph_with_descriptor_with_graph_property_map</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Seam__mesh" kindref="compound">CGAL::Seam_mesh</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Partitioning Methods</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgBGLPartition_1gae7e37b6101e63f4c5959f1ae6c6fe7d2" kindref="member">CGAL::METIS::partition_graph()</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="group__PkgBGLPartition_1ga145334c09252126cfc87c6000263eb1d" kindref="member">CGAL::METIS::partition_dual_graph()</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">I/O Functions</heading>
</para><para><itemizedlist>
<listitem><para><ref refid="group__PkgBGLIOFct" kindref="compound">CGAL::read_off() </ref></para></listitem><listitem><para><ref refid="group__PkgBGLIOFct" kindref="compound">CGAL::write_off() </ref> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
