<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classHalfedgeListGraph" kind="class" language="C++" prot="public">
    <compoundname>HalfedgeListGraph</compoundname>
    <includes local="no">Concepts/HalfedgeListGraph.h</includes>
      <sectiondef kind="related">
      <memberdef kind="function" id="classHalfedgeListGraph_1abdd8822c5cbb8e83de1df45abc3521f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; boost::graph_traits&lt; <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref> &gt;::halfedge_iterator, boost::graph_traits&lt; <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref> &gt;::halfedge_iterator &gt;</type>
        <definition>std::pair&lt; boost::graph_traits&lt; HalfedgeListGraph &gt;::halfedge_iterator, boost::graph_traits&lt; HalfedgeListGraph &gt;::halfedge_iterator &gt; halfedges</definition>
        <argsstring>(const HalfedgeListGraph &amp;g)</argsstring>
        <name>halfedges</name>
        <param>
          <type>const <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns an iterator range over all halfedges. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/HalfedgeListGraph.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classHalfedgeListGraph_1ace9a0b926be802e66ad008fd974d6ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref> &gt;::halfedge_size_type</type>
        <definition>boost::graph_traits&lt; HalfedgeListGraph &gt;::halfedge_size_type num_halfedges</definition>
        <argsstring>(const HalfedgeListGraph &amp;g)</argsstring>
        <name>num_halfedges</name>
        <param>
          <type>const <ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns an upper bound of the number of halfedges of the graph. <simplesect kind="attention"><para><computeroutput><ref refid="classHalfedgeListGraph_1ace9a0b926be802e66ad008fd974d6ccb" kindref="member">num_halfedges()</ref></computeroutput> may return a number larger than <computeroutput>std::distance(halfedges(g).first, halfedges(g).second)</computeroutput>. This is the case for implementations only marking halfedges deleted in the halfedge container. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/HalfedgeListGraph.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput> refines the concept <computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput> and adds the requirements for traversal of all halfedges in the graph. </para>    </briefdescription>
    <detaileddescription>
<para> <variablelist>
<varlistentry><term>Associated Types</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para>boost::graph_traits&lt;HalfedgeListGraph&gt;::halfedge_iterator</para></entry><entry thead="no"><para>A halfedge iterator (obtained via <computeroutput>halfedges(g)</computeroutput>) provides access to all of the halfedges in a graph. A halfedge iterator type must meet the requirements of <computeroutput>MultiPassInputIterator</computeroutput>. The value type of the halfedge iterator must be the same as the halfedge descriptor of the graph. </para><para></para></entry></row>
</table>
</para></listitem>
</variablelist>
</para><para><xrefsect id="refines_1_refines000005"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000005"><xreftitle>Has Models</xreftitle><xrefdescription><para>See <ref refid="group__PkgBGLTraits" kindref="compound">Boost Graph Traits Specializations </ref></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="group__PkgBGLConcepts" kindref="compound">Graph Concepts </ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/HalfedgeListGraph.h" line="24" column="1" bodyfile="Concepts/HalfedgeListGraph.h" bodystart="24" bodyend="24"/>
    <listofallmembers>
      <member refid="classHalfedgeListGraph_1abdd8822c5cbb8e83de1df45abc3521f2" prot="public" virt="non-virtual"><scope>HalfedgeListGraph</scope><name>halfedges</name></member>
      <member refid="classHalfedgeListGraph_1ace9a0b926be802e66ad008fd974d6ccb" prot="public" virt="non-virtual"><scope>HalfedgeListGraph</scope><name>num_halfedges</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
