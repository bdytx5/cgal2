<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Face__filtered__graph" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Face_filtered_graph</compoundname>
    <includes local="no">CGAL/boost/graph/Face_filtered_graph.h</includes>
    <innerclass refid="structCGAL_1_1Face__filtered__graph_1_1Is__simplex__valid" prot="public">CGAL::Face_filtered_graph::Is_simplex_valid</innerclass>
    <templateparamlist>
      <param>
        <type>typename Graph</type>
      </param>
      <param>
        <type>typename FIMap</type>
        <defval>typename boost::property_map&lt;Graph, CGAL::face_index_t&gt;::type</defval>
      </param>
      <param>
        <type>typename VIMap</type>
        <defval>typename boost::property_map&lt;Graph, <ref refid="group__PkgBGLProperties_1gaec83b8086dfd0cb99447a6d0d14beeee" kindref="member">boost::vertex_index_t</ref>&gt;::type</defval>
      </param>
      <param>
        <type>typename HIMap</type>
        <defval>typename boost::property_map&lt;Graph, CGAL::halfedge_index_t&gt;::type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a89a7b7790dd900f6438d551a6ae3c978" prot="public" static="no">
        <type>boost::graph_traits&lt; Graph &gt;</type>
        <definition>typedef boost::graph_traits&lt;Graph&gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::gt</definition>
        <argsstring></argsstring>
        <name>gt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="90" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a137cc0e8f6c8f4d7a916280085ea9947" prot="public" static="no">
        <type>boost::graph_traits&lt; Graph &gt;::<ref refid="structCGAL_1_1Face__filtered__graph_1a137cc0e8f6c8f4d7a916280085ea9947" kindref="member">vertex_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Graph&gt;::vertex_descriptor CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::vertex_descriptor</definition>
        <argsstring></argsstring>
        <name>vertex_descriptor</name>
        <briefdescription>
<para>Vertex descriptor type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="92" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a7bbe5ebea8b1792c366fdbea6efbd1b0" prot="public" static="no">
        <type>boost::graph_traits&lt; Graph &gt;::<ref refid="structCGAL_1_1Face__filtered__graph_1a7bbe5ebea8b1792c366fdbea6efbd1b0" kindref="member">halfedge_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Graph&gt;::halfedge_descriptor CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::halfedge_descriptor</definition>
        <argsstring></argsstring>
        <name>halfedge_descriptor</name>
        <briefdescription>
<para>Halfedge descriptor type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="94" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a39d585ed86d262a090636cdd22ca1217" prot="public" static="no">
        <type>boost::graph_traits&lt; Graph &gt;::<ref refid="structCGAL_1_1Face__filtered__graph_1a39d585ed86d262a090636cdd22ca1217" kindref="member">edge_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Graph&gt;::edge_descriptor CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::edge_descriptor</definition>
        <argsstring></argsstring>
        <name>edge_descriptor</name>
        <briefdescription>
<para>Edge descriptor type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="96" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a205b4716fba186d69d6527df34110939" prot="public" static="no">
        <type>boost::graph_traits&lt; Graph &gt;::<ref refid="structCGAL_1_1Face__filtered__graph_1a205b4716fba186d69d6527df34110939" kindref="member">face_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Graph&gt;::face_descriptor CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::face_descriptor</definition>
        <argsstring></argsstring>
        <name>face_descriptor</name>
        <briefdescription>
<para>Face descriptor type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="98" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a9f6a738f2a87c25f5c5606071a5fb1d0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Size type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="103" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a50604b321abd37dd3004cc97be569146" prot="public" static="no">
        <type>boost::property_traits&lt; FIMap &gt;::value_type</type>
        <definition>typedef boost::property_traits&lt; FIMap &gt;::value_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::face_index_type</definition>
        <argsstring></argsstring>
        <name>face_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="107" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a8973ca4f76f2cdd684b38741057ad33c" prot="public" static="no">
        <type>boost::property_traits&lt; VIMap &gt;::value_type</type>
        <definition>typedef boost::property_traits&lt; VIMap &gt;::value_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::vertex_index_type</definition>
        <argsstring></argsstring>
        <name>vertex_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="108" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1abe1bf886d57312d61c750a7be5a75d57" prot="public" static="no">
        <type>boost::property_traits&lt; HIMap &gt;::value_type</type>
        <definition>typedef boost::property_traits&lt; HIMap &gt;::value_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::halfedge_index_type</definition>
        <argsstring></argsstring>
        <name>halfedge_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="109" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Face__filtered__graph_1a2237a4f4d9a5bf87cf3d69cfeabaf5dd" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;</type>
        <definition>typedef Face_filtered_graph&lt;Graph, FIMap, VIMap, HIMap&gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Self</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="110" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1afd229f9f93f2029566b1258e02cdb0fd" prot="private" static="no" mutable="no">
        <type>Graph &amp;</type>
        <definition>Graph&amp; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::_graph</definition>
        <argsstring></argsstring>
        <name>_graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="530" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1af7106df8b063865bfdb9ca97a6b2d94c" prot="private" static="no" mutable="no">
        <type>FIMap</type>
        <definition>FIMap CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::fimap</definition>
        <argsstring></argsstring>
        <name>fimap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="531" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a4b51ccbdbd126a05784817f53957341d" prot="private" static="no" mutable="no">
        <type>VIMap</type>
        <definition>VIMap CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::vimap</definition>
        <argsstring></argsstring>
        <name>vimap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="532" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a182410dc372f665ba21b42e78db06e1a" prot="private" static="no" mutable="no">
        <type>HIMap</type>
        <definition>HIMap CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::himap</definition>
        <argsstring></argsstring>
        <name>himap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="533" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a988db05a25c7ab7d3bae458ba3bb3dee" prot="private" static="no" mutable="no">
        <type>boost::dynamic_bitset</type>
        <definition>boost::dynamic_bitset CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::selected_faces</definition>
        <argsstring></argsstring>
        <name>selected_faces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="534" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1aa4106c90b563cab80d73b3a3cbb3d58d" prot="private" static="no" mutable="no">
        <type>boost::dynamic_bitset</type>
        <definition>boost::dynamic_bitset CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::selected_vertices</definition>
        <argsstring></argsstring>
        <name>selected_vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="535" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a726b86fc35a0187c0b1a007bc8a81d9c" prot="private" static="no" mutable="no">
        <type>boost::dynamic_bitset</type>
        <definition>boost::dynamic_bitset CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::selected_halfedges</definition>
        <argsstring></argsstring>
        <name>selected_halfedges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="536" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1ab7cb1d5182ab43294a27abc1066ac7c4" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; face_index_type &gt;</type>
        <definition>std::vector&lt;face_index_type&gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::face_indices</definition>
        <argsstring></argsstring>
        <name>face_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="537" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a2f101a4eb59def1c716689803cddac28" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; vertex_index_type &gt;</type>
        <definition>std::vector&lt;vertex_index_type&gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::vertex_indices</definition>
        <argsstring></argsstring>
        <name>vertex_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="538" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Face__filtered__graph_1a294f4367c6e3d49ed9b2deb970531914" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; halfedge_index_type &gt;</type>
        <definition>std::vector&lt;halfedge_index_type&gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::halfedge_indices</definition>
        <argsstring></argsstring>
        <name>halfedge_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="539" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a420095992349fd86cf0aacb173316e73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FacePatchIndexMap</type>
          </param>
          <param>
            <type>class FacePatchIndexRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, const FacePatchIndexRange &amp;selected_face_patch_indices, FacePatchIndexMap face_patch_index_map, const NamedParameters &amp;np)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const FacePatchIndexRange &amp;</type>
          <declname>selected_face_patch_indices</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Constructor where the set of selected faces is specified as a range of patch ids. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FacePatchIndexMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>face_descriptor</computeroutput> as key type and <computeroutput>graph_traits&lt;Graph&gt;::faces_size_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FacePatchIndexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> with <computeroutput>boost::property_traits&lt;FacePatchIndexMap&gt;::value_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of named parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying graph. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>face_patch_index_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property_map that assigns a patch index to each face, with <computeroutput>face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;Graph&gt;::faces_size_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selected_face_patch_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of the face patch indices to select. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of named parameters among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each face initialized from 0 to <computeroutput>num_vertices(graph)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each vertex initialized 0 to <computeroutput>num_vertices(vertex)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_halfedge_index_map" kindref="member">halfedge_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each halfedge initialized 0 to <computeroutput>num_halfedges(graph)</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="140" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="140" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a8cfcbf43e3bd6b4acc9fc4de14c6be49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FacePatchIndexMap</type>
          </param>
          <param>
            <type>class FacePatchIndexRange</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, const FacePatchIndexRange &amp;selected_face_patch_indices, FacePatchIndexMap face_patch_index_map, typename boost::enable_if&lt; typename boost::has_range_const_iterator&lt; FacePatchIndexRange &gt;::type &gt;::type *=0)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const FacePatchIndexRange &amp;</type>
          <declname>selected_face_patch_indices</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <param>
          <type>typename boost::enable_if&lt; typename boost::has_range_const_iterator&lt; FacePatchIndexRange &gt;::type &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="159" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="159" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1abf094836eb5948d27c204c776708cce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FacePatchIndexMap</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type selected_face_patch_index, FacePatchIndexMap face_patch_index_map, const NamedParameters &amp;np)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type</type>
          <declname>selected_face_patch_index</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Constructor where the set of selected faces is specified as a patch id. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FacePatchIndexMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>face_descriptor</computeroutput> as key type and <computeroutput>graph_traits&lt;Graph&gt;::faces_size_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of named parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying graph. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>face_patch_index_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the property_map that assigns a patch index to each face, with <computeroutput>face_descriptor</computeroutput> as key type and <computeroutput>graph_traits&lt;Graph&gt;::faces_size_type</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selected_face_patch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the face patch selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of named parameters among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each face initialized from 0 to <computeroutput>num_vertices(graph)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each vertex initialized 0 to <computeroutput>num_vertices(vertex)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_halfedge_index_map" kindref="member">halfedge_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each halfedge initialized 0 to <computeroutput>num_halfedges(graph)</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="200" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="200" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a3a383f540403ba4179bb61d62015ee15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FacePatchIndexMap</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type pid, FacePatchIndexMap face_patch_index_map)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="214" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="214" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1ad4059cafe683c7b8e829957c6d22f231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
          <param>
            <type>class NamedParameters</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, const FaceRange &amp;selected_faces, const NamedParameters &amp;np)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>selected_faces</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Constructor where the set of selected faces is specified as a range of face descriptors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> with <computeroutput>face_descriptor</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of named parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the wanted patch. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selected_faces</parametername>
</parameternamelist>
<parameterdescription>
<para>the set of selected faces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional sequence of named parameters among the ones listed below</para></parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_face_index_map" kindref="member">face_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each face initialized from 0 to <computeroutput>num_vertices(graph)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_vertex_index_map" kindref="member">vertex_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each vertex initialized 0 to <computeroutput>num_vertices(vertex)</computeroutput>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="group__bgl__namedparameters_1BGL_halfedge_index_map" kindref="member">halfedge_index_map</ref></para></entry><entry thead="no"><para>a property map containing an index for each halfedge initialized 0 to <computeroutput>num_halfedges(graph)</computeroutput>  </para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="247" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="247" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a45d844d27684269adea132ce2083e738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceRange</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::Face_filtered_graph</definition>
        <argsstring>(const Graph &amp;graph, const FaceRange &amp;selected_faces)</argsstring>
        <name>Face_filtered_graph</name>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>selected_faces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="259" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="259" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1afe1f4d25eaf3117e1c3f94aed6070c17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Graph &amp;</type>
        <definition>const Graph&amp; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::graph</definition>
        <argsstring>() const</argsstring>
        <name>graph</name>
        <briefdescription>
<para>returns a const reference to the underlying graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="270" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a7b01b76aca8ade3087d26e122c742b93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Graph &amp;</type>
        <definition>Graph&amp; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::graph</definition>
        <argsstring>()</argsstring>
        <name>graph</name>
        <briefdescription>
<para>returns a reference to the underlying graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="272" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1aca0fda876cf69d11207ad45752ef9fc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FacePatchIndexMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::set_selected_faces</definition>
        <argsstring>(typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type face_patch_id, FacePatchIndexMap face_patch_index_map)</argsstring>
        <name>set_selected_faces</name>
        <param>
          <type>typename boost::property_traits&lt; FacePatchIndexMap &gt;::value_type</type>
          <declname>face_patch_id</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <briefdescription>
<para>change the set of selected faces using a patch id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="276" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="276" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a5322419b265a6cb33afedd05efa0b83f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FacePatchIndexRange</type>
          </param>
          <param>
            <type>class FacePatchIndexMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::set_selected_faces</definition>
        <argsstring>(const FacePatchIndexRange &amp;selected_face_patch_indices, FacePatchIndexMap face_patch_index_map)</argsstring>
        <name>set_selected_faces</name>
        <param>
          <type>const FacePatchIndexRange &amp;</type>
          <declname>selected_face_patch_indices</declname>
        </param>
        <param>
          <type>FacePatchIndexMap</type>
          <declname>face_patch_index_map</declname>
        </param>
        <briefdescription>
<para>change the set of selected faces using a range of patch ids </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="305" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="305" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a3a17351778505a646a75e150e5df47fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FaceRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::set_selected_faces</definition>
        <argsstring>(const FaceRange &amp;selection)</argsstring>
        <name>set_selected_faces</name>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>change the set of selected faces using a range of face descriptors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="344" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="344" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a9d125ec4175a84ef8b9765799f66ff37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::is_in_cc</definition>
        <argsstring>(face_descriptor f) const</argsstring>
        <name>is_in_cc</name>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph_1a205b4716fba186d69d6527df34110939" kindref="member">face_descriptor</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="386" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1abf16d26aa85ddf32180784888aee412a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::is_in_cc</definition>
        <argsstring>(vertex_descriptor v) const</argsstring>
        <name>is_in_cc</name>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph_1a137cc0e8f6c8f4d7a916280085ea9947" kindref="member">vertex_descriptor</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="391" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a96071ae948976e8feb360da71decb6e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::is_in_cc</definition>
        <argsstring>(halfedge_descriptor h) const</argsstring>
        <name>is_in_cc</name>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph_1a7bbe5ebea8b1792c366fdbea6efbd1b0" kindref="member">halfedge_descriptor</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="396" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1aa558558d8d47e5de37c2b9c37b49563b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::is_in_cc</definition>
        <argsstring>(edge_descriptor e) const</argsstring>
        <name>is_in_cc</name>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph_1a39d585ed86d262a090636cdd22ca1217" kindref="member">edge_descriptor</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="401" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1ac82d8efddf90cb302e16f3dfa6ace359" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Face__filtered__graph_1a9f6a738f2a87c25f5c5606071a5fb1d0" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::number_of_faces</definition>
        <argsstring>() const</argsstring>
        <name>number_of_faces</name>
        <briefdescription>
<para>returns the number of selected faces </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="406" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a170f192e48bcdebdffeda0513f2410b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Face__filtered__graph_1a9f6a738f2a87c25f5c5606071a5fb1d0" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::number_of_vertices</definition>
        <argsstring>() const</argsstring>
        <name>number_of_vertices</name>
        <briefdescription>
<para>returns the number of selected vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="411" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a8adaca786ab8cb5bbdbe59c2e645d792" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Face__filtered__graph_1a9f6a738f2a87c25f5c5606071a5fb1d0" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::number_of_halfedges</definition>
        <argsstring>() const</argsstring>
        <name>number_of_halfedges</name>
        <briefdescription>
<para>returns the number of selected halfedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="416" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1a8d04b9ac8ab9fa69da338155cbe325d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Property_map_binder&lt; FIMap, typename <ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; typename boost::property_traits&lt; FIMap &gt;::value_type &gt;::type &gt;</type>
        <definition>Property_map_binder&lt; FIMap, typename Pointer_property_map&lt; typename boost::property_traits&lt; FIMap &gt;::value_type &gt;::type &gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::get_face_index_map</definition>
        <argsstring>() const</argsstring>
        <name>get_face_index_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="422" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="422" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1acebf581d35c533f4ba435ee8616e8a1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Property_map_binder&lt; VIMap, typename <ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; typename boost::property_traits&lt; VIMap &gt;::value_type &gt;::type &gt;</type>
        <definition>Property_map_binder&lt; VIMap, typename Pointer_property_map&lt; typename boost::property_traits&lt; VIMap &gt;::value_type &gt;::type &gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::get_vertex_index_map</definition>
        <argsstring>() const</argsstring>
        <name>get_vertex_index_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="437" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="437" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1adc80c3e2daa6de5408ece4dbfeb1d401" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Property_map_binder&lt; HIMap, typename <ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; typename boost::property_traits&lt; HIMap &gt;::value_type &gt;::type &gt;</type>
        <definition>Property_map_binder&lt; HIMap, typename Pointer_property_map&lt; typename boost::property_traits&lt; HIMap &gt;::value_type &gt;::type &gt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::get_halfedge_index_map</definition>
        <argsstring>() const</argsstring>
        <name>get_halfedge_index_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="452" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="452" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Face__filtered__graph_1aa4561d3e2391bb1987c08a2147067c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::is_selection_valid</definition>
        <argsstring>()</argsstring>
        <name>is_selection_valid</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if around any vertex of a selected face, there is at most one connected set of selected faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="468" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="468" bodyend="527"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref></computeroutput> is an adaptor that creates a filtered view of a graph by restricting it to a subset of faces. </para>    </briefdescription>
    <detaileddescription>
<para>Contrary to <ulink url="https://www.boost.org/doc/libs/release/libs/graph/doc/filtered_graph.html"><computeroutput>boost::filtered_graph</computeroutput></ulink>, this class only requires a way to access the selected faces and will automatically select the edges/halfedges and vertices present in the adapted graph. A vertex is selected if it is incident to at least one selected face. A edge is selected if it is incident to at least a selected face. A halfedge is selected if its edge is selected.</para><para>Since this class is a model of the <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput> concept, there is a restriction on the set of selected faces: the adapted graph must define a manifold mesh. In order to check that this condition is verified, you can use the function <computeroutput><ref refid="structCGAL_1_1Face__filtered__graph_1aa4561d3e2391bb1987c08a2147067c57" kindref="member">is_selection_valid()</ref></computeroutput>.</para><para>There are two different ways to initialize this class. You can directly provide the set of faces selected, or if you have a face patch map, select the patches of faces. The latter option is convenient if you want to access some connected components of a graph after having called <computeroutput>CGAL::Polygon_mesh_processing::connected_components()</computeroutput>.</para><para>The documented interface of this class is limited on purpose and free functions of the concept this class is a model of must be used to manipulate it.</para><para>A BGL-like named parameter mechanism is used in the constructors of this class. Default values are available but if you need to set them, you can pass for <computeroutput>np</computeroutput> <computeroutput>CGAL::parameters::face_index_map(fim).halfedge_index_map(him).vertex_index_map(vim)</computeroutput> where <computeroutput>fim</computeroutput>, <computeroutput>him</computeroutput>, and <computeroutput>vim</computeroutput> are the respective index maps. The order of the arguments is not important and any of them can be missing if the default is fine.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of a <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput>, <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput>, and <ulink url="http://www.boost.org/libs/graph/doc/VertexListGraph.html"><computeroutput>VertexListGraph</computeroutput></ulink>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FIMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>face_descriptor</computeroutput> as key and <computeroutput>graph_traits&lt;Graph&gt;::faces_size_type</computeroutput> as value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VIMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>vertex_descriptor</computeroutput> as key and <computeroutput>graph_traits&lt;Graph&gt;::vertices_size_type</computeroutput> as value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HIMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>halfedge_descriptor</computeroutput> as key and <computeroutput>graph_traits&lt;Graph&gt;::halfedges_size_type</computeroutput> as value</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000027"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> </para><para><computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput> </para><para><ulink url="http://www.boost.org/libs/graph/doc/VertexListGraph.html"><computeroutput>VertexListGraph</computeroutput></ulink> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/boost/graph/Face_filtered_graph.h" line="89" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="88" bodyend="540"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Face__filtered__graph_1afd229f9f93f2029566b1258e02cdb0fd" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a39d585ed86d262a090636cdd22ca1217" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>edge_descriptor</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a205b4716fba186d69d6527df34110939" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>face_descriptor</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a420095992349fd86cf0aacb173316e73" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a8cfcbf43e3bd6b4acc9fc4de14c6be49" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1abf094836eb5948d27c204c776708cce9" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a3a383f540403ba4179bb61d62015ee15" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1ad4059cafe683c7b8e829957c6d22f231" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a45d844d27684269adea132ce2083e738" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Face_filtered_graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a50604b321abd37dd3004cc97be569146" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>face_index_type</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1ab7cb1d5182ab43294a27abc1066ac7c4" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>face_indices</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1af7106df8b063865bfdb9ca97a6b2d94c" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>fimap</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a8d04b9ac8ab9fa69da338155cbe325d0" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>get_face_index_map</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1adc80c3e2daa6de5408ece4dbfeb1d401" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>get_halfedge_index_map</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1acebf581d35c533f4ba435ee8616e8a1d" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>get_vertex_index_map</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1afe1f4d25eaf3117e1c3f94aed6070c17" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a7b01b76aca8ade3087d26e122c742b93" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>graph</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a89a7b7790dd900f6438d551a6ae3c978" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>gt</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a7bbe5ebea8b1792c366fdbea6efbd1b0" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>halfedge_descriptor</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1abe1bf886d57312d61c750a7be5a75d57" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>halfedge_index_type</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a294f4367c6e3d49ed9b2deb970531914" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>halfedge_indices</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a182410dc372f665ba21b42e78db06e1a" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>himap</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a9d125ec4175a84ef8b9765799f66ff37" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>is_in_cc</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1abf16d26aa85ddf32180784888aee412a" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>is_in_cc</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a96071ae948976e8feb360da71decb6e3" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>is_in_cc</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1aa558558d8d47e5de37c2b9c37b49563b" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>is_in_cc</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1aa4561d3e2391bb1987c08a2147067c57" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>is_selection_valid</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1ac82d8efddf90cb302e16f3dfa6ace359" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>number_of_faces</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a8adaca786ab8cb5bbdbe59c2e645d792" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>number_of_halfedges</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a170f192e48bcdebdffeda0513f2410b1" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>number_of_vertices</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a988db05a25c7ab7d3bae458ba3bb3dee" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>selected_faces</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a726b86fc35a0187c0b1a007bc8a81d9c" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>selected_halfedges</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1aa4106c90b563cab80d73b3a3cbb3d58d" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>selected_vertices</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a2237a4f4d9a5bf87cf3d69cfeabaf5dd" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>Self</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1aca0fda876cf69d11207ad45752ef9fc5" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>set_selected_faces</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a5322419b265a6cb33afedd05efa0b83f" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>set_selected_faces</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a3a17351778505a646a75e150e5df47fb" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>set_selected_faces</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a9f6a738f2a87c25f5c5606071a5fb1d0" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>size_type</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a137cc0e8f6c8f4d7a916280085ea9947" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>vertex_descriptor</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a8973ca4f76f2cdd684b38741057ad33c" prot="public" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>vertex_index_type</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a2f101a4eb59def1c716689803cddac28" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>vertex_indices</name></member>
      <member refid="structCGAL_1_1Face__filtered__graph_1a4b51ccbdbd126a05784817f53957341d" prot="private" virt="non-virtual"><scope>CGAL::Face_filtered_graph</scope><name>vimap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
