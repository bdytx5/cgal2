<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Face__filtered__graph_8h" kind="file" language="C++">
    <compoundname>Face_filtered_graph.h</compoundname>
    <includes local="no">CGAL/assertions.h</includes>
    <includes refid="properties_8h" local="no">CGAL/boost/graph/properties.h</includes>
    <includes refid="iterator_8h" local="no">CGAL/boost/graph/iterator.h</includes>
    <includes local="no">CGAL/boost/graph/named_function_params.h</includes>
    <includes refid="helpers_8h" local="no">CGAL/boost/graph/helpers.h</includes>
    <includes local="no">CGAL/Dynamic_property_map.h</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes local="no">boost/unordered_set.hpp</includes>
    <includes local="no">boost/graph/graph_traits.hpp</includes>
    <includes local="no">CGAL/boost/iterator/transform_iterator.hpp</includes>
    <includes local="no">boost/iterator/filter_iterator.hpp</includes>
    <includes local="no">boost/dynamic_bitset.hpp</includes>
    <includes local="no">boost/range/has_range_iterator.hpp</includes>
    <includedby refid="partition__graph_8h" local="no">CGAL/boost/graph/METIS/partition_graph.h</includedby>
    <includedby refid="partition__dual__graph_8h" local="no">CGAL/boost/graph/METIS/partition_dual_graph.h</includedby>
    <incdepgraph>
      <node id="77">
        <label>boost/range/has_range_iterator.hpp</label>
      </node>
      <node id="71">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="74">
        <label>CGAL/boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="76">
        <label>boost/dynamic_bitset.hpp</label>
      </node>
      <node id="73">
        <label>boost/graph/graph_traits.hpp</label>
      </node>
      <node id="67">
        <label>CGAL/boost/graph/Face_filtered_graph.h</label>
        <link refid="Face__filtered__graph_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>boost/unordered_set.hpp</label>
      </node>
      <node id="68">
        <label>CGAL/assertions.h</label>
      </node>
      <node id="75">
        <label>boost/iterator/filter_iterator.hpp</label>
      </node>
      <node id="69">
        <label>CGAL/boost/graph/named_function_params.h</label>
      </node>
      <node id="70">
        <label>CGAL/Dynamic_property_map.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structCGAL_1_1Face__filtered__graph" prot="public">CGAL::Face_filtered_graph</innerclass>
    <innerclass refid="structCGAL_1_1Face__filtered__graph_1_1Is__simplex__valid" prot="public">CGAL::Face_filtered_graph::Is_simplex_valid</innerclass>
    <innerclass refid="structboost_1_1graph__traits_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_00_01HIMap_01_4_01_4" prot="public">boost::graph_traits&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1graph__traits_3_01const_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_00_01HIMap_01_4_01_4" prot="public">boost::graph_traits&lt; const CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;</innerclass>
    <innerclass refid="structCGAL_1_1graph__has__property_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01V4f758a8bc3563784859a7c224ac6afaf" prot="public">CGAL::graph_has_property&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, PropertyTag &gt;</innerclass>
    <innerclass refid="structboost_1_1property__map_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_0c82a671facceba2dab6d9440062a168e" prot="public">boost::property_map&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, PropertyTag &gt;</innerclass>
    <innerclass refid="structboost_1_1property__map_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_0d514edcbaf51612f4e0f3fb2d86b33d8" prot="public">boost::property_map&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, CGAL::face_index_t &gt;</innerclass>
    <innerclass refid="structboost_1_1property__map_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_09279fe138a39a0685cb839a22bc96f88" prot="public">boost::property_map&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::vertex_index_t &gt;</innerclass>
    <innerclass refid="structboost_1_1property__map_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01VIMap_0a1c2bd2c4bb0de897b791c917be654aa" prot="public">boost::property_map&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, CGAL::halfedge_index_t &gt;</innerclass>
    <innernamespace refid="namespaceCGAL">CGAL</innernamespace>
    <innernamespace refid="namespaceboost">boost</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="Face__filtered__graph_8h_1afb16bb0637f21712981a92720e9e7128" prot="public" static="no">
        <name>CGAL_BGL_NP_TEMPLATE_PARAMETERS</name>
        <initializer>NamedParameters</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="41" column="9" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Face__filtered__graph_8h_1a37c0e774dc6c78522522eae73cb48f84" prot="public" static="no">
        <name>CGAL_BGL_NP_CLASS</name>
        <initializer>NamedParameters</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="42" column="9" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Face__filtered__graph_8h_1a4e4acd2f2e41929c32e16d0c20a8addc" prot="public" static="no">
        <name>CGAL_FILTERED_FACE_GRAPH_DYNAMIC_PMAP_SPECIALIZATION</name>
        <param><defname>DYNAMIC_TAG</defname></param>
        <initializer>template&lt;typename Graph, \
         typename FIMap, \
         typename VIMap, \
         typename HIMap, \
         typename T&gt; \
struct property_map&lt;<ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">CGAL::Face_filtered_graph</ref>&lt;Graph, FIMap, VIMap, HIMap&gt;, CGAL::DYNAMIC_TAG&lt;T&gt; &gt; { \
  typedef typename boost::property_map&lt;Graph, CGAL::DYNAMIC_TAG&lt;T&gt; &gt;::type type; \
  typedef typename boost::property_map&lt;Graph, CGAL::DYNAMIC_TAG&lt;T&gt; &gt;::const_type const_type; \
};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1135" column="9" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/boost/graph/Face_filtered_graph.h"/>
  </compounddef>
</doxygen>
