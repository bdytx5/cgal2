<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__bgl__namedparameters" kind="group">
    <compoundname>bgl_namedparameters</compoundname>
    <title>BGL Named Parameters</title>
    <briefdescription>
<para>The algorithms of the Bgl often have many parameters with default values that are appropriate for most cases. </para>    </briefdescription>
    <detaileddescription>
<para>In general, when no special treatment is applied, the values of such parameters are passed as a sequence. Deviating from the default for a certain parameter requires the user to explicitly pass values for all preceding parameters. The solution to this problem is to first write a tag and then the parameter, which for Dijkstra&apos;s shortest path algorithm might look as follows:</para><para><programlisting><codeline><highlight class="normal">std::vector&lt;vertex_descriptor&gt;<sp/>p(<ref refid="classVertexListGraph_1aaf9b2179d10962108d4eabbba0224d49" kindref="member">num_vertices</ref>(g));</highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;int&gt;<sp/>d(<ref refid="classVertexListGraph_1aaf9b2179d10962108d4eabbba0224d49" kindref="member">num_vertices</ref>(g));</highlight></codeline>
<codeline><highlight class="normal">vertex_descriptor<sp/>s<sp/>=<sp/>vertex(A,<sp/>g);</highlight></codeline>
<codeline><highlight class="normal">dijkstra_shortest_paths(g,<sp/>s,<sp/>predecessor_map(&amp;p[0]).distance_map(&amp;d[0]));</highlight></codeline>
</programlisting></para><para>In the Bgl manual, this is called <ulink url="https://www.boost.org/libs/graph/doc/bgl_named_params.html">named parameters</ulink>. The named parameters in the example use the tags <computeroutput>predecessor_map</computeroutput> and <computeroutput>distance_map</computeroutput> and they are concatenated with the dot operator.<linebreak/>
</para><para>In the following, we assume that <computeroutput>PolygonMesh</computeroutput> is a model of the concept <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. Note that for some functions, the type might be more specific:</para><para>Here is the list of the named parameters available in this package:</para><para><variablelist>
<varlistentry><term></term></varlistentry>
<listitem><para><table rows="15" cols="2"><row>
<entry thead="no"><para>vertex_point_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_vertex_point_map"/>is the property map with the points associated to the vertices of the polygon mesh.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and a CGAL point type as value type. <linebreak/>
<bold>Default:</bold><programlisting><codeline><highlight class="normal">boost::get(CGAL::vertex_point,<sp/>pmesh)<sp/></highlight></codeline>
</programlisting> </para><para></para></entry></row>
<row>
<entry thead="no"><para>vertex_index_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_vertex_index_map"/>is the property map containing the index of each vertex of the input polygon mesh.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and the value type <programlisting><codeline><highlight class="normal">typename<sp/>boost::property_traits&lt;typename<sp/>boost::property_map&lt;PolygonMesh,<sp/>CGAL::vertex_index_t&gt;::type&gt;::value_type<sp/></highlight></codeline>
</programlisting> <bold>Default:</bold><programlisting><codeline><highlight class="normal">boost::get(CGAL::vertex_index,<sp/>pmesh)</highlight></codeline>
</programlisting> </para><para></para></entry></row>
<row>
<entry thead="no"><para>halfedge_index_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_halfedge_index_map"/>is the property map containing the index of each halfedge of the input polygon mesh.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor</computeroutput> as key type and the value type: <programlisting><codeline><highlight class="normal">typename<sp/>boost::property_traits&lt;typename<sp/>boost::property_map&lt;PolygonMesh,<sp/>CGAL::halfedge_index_t&gt;::type&gt;::value_type<sp/></highlight></codeline>
</programlisting> <bold>Default:</bold><programlisting><codeline><highlight class="normal">boost::get(CGAL::halfedge_index,<sp/>pmesh)</highlight></codeline>
</programlisting> If this internal property map exists, its values should be initialized. </para><para></para></entry></row>
<row>
<entry thead="no"><para>edge_index_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_edge_index_map"/>is the property map containing the index of each edge of the input polygon mesh.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput> as key type and the value type: <programlisting><codeline><highlight class="normal">typename<sp/>boost::property_traits&lt;typename<sp/>boost::property_map&lt;PolygonMesh,<sp/>CGAL::edge_index_t&gt;::type&gt;::value_type<sp/></highlight></codeline>
</programlisting> <bold>Default:</bold><programlisting><codeline><highlight class="normal">boost::get(CGAL::edge_index,<sp/>pmesh)</highlight></codeline>
</programlisting> If this internal property map exists, its values should be initialized. </para><para></para></entry></row>
<row>
<entry thead="no"><para>face_index_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_face_index_map"/>is the property map containing the index of each face of the input polygon mesh.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and the value type: <programlisting><codeline><highlight class="normal">typename<sp/>boost::property_traits&lt;typename<sp/>boost::property_map&lt;PolygonMesh,<sp/>CGAL::face_index_t&gt;::type&gt;::value_type<sp/></highlight></codeline>
</programlisting> <bold>Default:</bold><programlisting><codeline><highlight class="normal">boost::get(CGAL::face_index,<sp/>pmesh)</highlight></codeline>
</programlisting> If this internal property map exists, its values should be initialized. </para><para></para></entry></row>
<row>
<entry thead="no"><para>edge_is_constrained_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_edge_is_constrained_map"/>is the property map containing information about edges of the input polygon mesh being marked or not.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. It should be default constructible.<linebreak/>
<bold>Default:</bold> a default property map where no edge is constrained </para><para></para></entry></row>
<row>
<entry thead="no"><para>METIS_options </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_METIS_options"/>is a parameter used in <computeroutput><ref refid="group__PkgBGLPartition_1gae7e37b6101e63f4c5959f1ae6c6fe7d2" kindref="member">partition_graph()</ref></computeroutput> and <computeroutput><ref refid="group__PkgBGLPartition_1ga145334c09252126cfc87c6000263eb1d" kindref="member">partition_dual_graph()</ref></computeroutput> to pass options to the METIS graph partitioner. The many options of METIS are not described here. Instead, users should refer to METIS&apos; <ulink url="http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf">documentation</ulink>.<linebreak/>
<bold>Type:</bold> an array of size <computeroutput>METIS_NOPTIONS</computeroutput> with value type <computeroutput>idx_t</computeroutput> (an integer type defined by METIS). <linebreak/>
<bold>Default:</bold> an array of size <computeroutput>METIS_NOPTIONS</computeroutput> with value type <computeroutput>idx_t</computeroutput>, initialized using the function <computeroutput>METIS_SetDefaultOptions()</computeroutput>. </para><para></para></entry></row>
<row>
<entry thead="no"><para>vertex_partition_id_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_vertex_partition_id_map"/>is the property map storing for each vertex of the mesh the id of the subpart of the partition that has been assigned to this vertex.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>int</computeroutput> as value type. <linebreak/>
<bold>Default:</bold> None: this property map is used to store the partition IDs of the vertices as result of a partition algorithm; if it is not provided, this information is simply inaccessible. </para><para></para></entry></row>
<row>
<entry thead="no"><para>face_partition_id_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_face_partition_id_map"/>is the property map storing for each face of the mesh the id of the subpart of the partition that has been assigned to this face.<linebreak/>
<bold>Type:</bold> a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>int</computeroutput> as value type. <linebreak/>
<bold>Default:</bold> None: this property map is used to store the partition IDs of the faces as result of a partition algorithm; if it is not provided, this information is simply inaccessible. </para><para></para></entry></row>
<row>
<entry thead="no"><para>vertex_to_vertex_output_iterator </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_vertex_to_vertex_output_iterator"/>is a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;vertex_descriptor, vertex_descriptor&gt;</computeroutput> A typical use case is mapping the vertices from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor, <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor&gt;</computeroutput>.<linebreak/>
<bold>Default:</bold> Emptyset_iterator </para><para></para></entry></row>
<row>
<entry thead="no"><para>halfedge_to_halfedge_output_iterator </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_halfedge_to_halfedge_output_iterator"/>is a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;halfedge_descriptor, halfedge_descriptor&gt;</computeroutput> A typical use case is mapping the halfedges from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor, <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor&gt;</computeroutput>.<linebreak/>
<bold>Default:</bold> Emptyset_iterator </para><para></para></entry></row>
<row>
<entry thead="no"><para>face_to_face_output_iterator </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_face_to_face_output_iterator"/>is a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;face_descriptor, face_descriptor&gt;</computeroutput> A typical use case is mapping the faces from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor, <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::face_descriptor&gt;</computeroutput>.<linebreak/>
<bold>Default:</bold> Emptyset_iterator </para><para></para></entry></row>
<row>
<entry thead="no"><para>vertex_to_vertex_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_vertex_to_vertex_map"/>is a property map storing for each vertex of a source mesh the corresponding vertex of another mesh.<linebreak/>
A typical use case is mapping the vertices from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh1&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh2&gt;::vertex_descriptor</computeroutput> as value type.<linebreak/>
<bold>Default:</bold> None. </para><para></para></entry></row>
<row>
<entry thead="no"><para>halfedge_to_halfedge_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_halfedge_to_halfedge_map"/>is a property map storing for each halfedge of a source mesh the corresponding halfedge of another mesh.<linebreak/>
A typical use case is mapping the vertices from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh1&gt;::halfedge_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh2&gt;::halfedge_descriptor</computeroutput> as value type.<linebreak/>
<bold>Default:</bold> None. </para><para></para></entry></row>
<row>
<entry thead="no"><para>face_to_face_map </para></entry><entry thead="no"><para><anchor id="group__bgl__namedparameters_1BGL_face_to_face_map"/>is a property map storing for each face of a source mesh the corresponding face of another mesh.<linebreak/>
A typical use case is mapping the vertices from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2d3eb044bfe42eab566779ce32216c11" kindref="member">copy_face_graph()</ref></computeroutput> operation.<linebreak/>
<bold>Type:</bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh1&gt;::face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;PolygonMesh2&gt;::face_descriptor</computeroutput> as value type.<linebreak/>
<bold>Default:</bold> None. </para><para></para></entry></row>
</table>
</para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
