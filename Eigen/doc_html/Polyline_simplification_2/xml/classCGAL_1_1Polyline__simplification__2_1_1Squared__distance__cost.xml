<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Polyline__simplification__2_1_1Squared__distance__cost" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Polyline_simplification_2::Squared_distance_cost</compoundname>
    <includes local="no">CGAL/Polyline_simplification_2/Squared_distance_cost.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Polyline__simplification__2_1_1Squared__distance__cost_1a37f78d14e679de30e9780d619df1bcf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyline_simplification_2::Squared_distance_cost::Squared_distance_cost</definition>
        <argsstring>()</argsstring>
        <name>Squared_distance_cost</name>
        <briefdescription>
<para>Initializes the cost function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyline_simplification_2/Squared_distance_cost.h" line="53" column="1" bodyfile="CGAL/Polyline_simplification_2/Squared_distance_cost.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyline__simplification__2_1_1Squared__distance__cost_1aca0cbfe07a22d6dfd7e0b98e3edd34b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>boost::optional&lt; typename CDT::Geom_traits::FT &gt;</type>
        <definition>boost::optional&lt;typename CDT::Geom_traits::FT&gt; CGAL::Polyline_simplification_2::Squared_distance_cost::operator()</definition>
        <argsstring>(const Constrained_triangulation_plus_2&lt; CDT &gt; &amp;pct, typename Constrained_triangulation_plus_2&lt; CDT &gt;::Vertices_in_constraint_iterator vicq) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">Constrained_triangulation_plus_2</ref>&lt; CDT &gt; &amp;</type>
          <declname>pct</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">Constrained_triangulation_plus_2</ref>&lt; CDT &gt;::Vertices_in_constraint_iterator</type>
          <declname>vicq</declname>
        </param>
        <briefdescription>
<para>Given a vertex in constraint iterator <computeroutput>vicq</computeroutput> computes <computeroutput>vicp=std::prev(vicq)</computeroutput> and <computeroutput>vicr=std::next(vicq)</computeroutput>,. </para>        </briefdescription>
        <detaileddescription>
<para>returns the maximum of the square distances between each point along the original subpolyline, between <computeroutput>vicp</computeroutput> and <computeroutput>vicr</computeroutput>, and the straight line segment from <computeroutput>*vicp-&gt;point() to *vicr-&gt;point()</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput><ref refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_Delaunay_triangulation_2</ref></computeroutput> with a vertex type that is model of <computeroutput><ref refid="classPolylineSimplificationVertexBase__2" kindref="compound">PolylineSimplificationVertexBase_2</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyline_simplification_2/Squared_distance_cost.h" line="63" column="1" bodyfile="CGAL/Polyline_simplification_2/Squared_distance_cost.h" bodystart="63" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a cost function which calculates the cost as the square of the distance between the original and simplified polylines. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classPolylineSimplificationCostFunction" kindref="compound">PolylineSimplificationCostFunction</ref></computeroutput>. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Polyline_simplification_2/Squared_distance_cost.h" line="48" column="1" bodyfile="CGAL/Polyline_simplification_2/Squared_distance_cost.h" bodystart="47" bodyend="97"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Polyline__simplification__2_1_1Squared__distance__cost_1aca0cbfe07a22d6dfd7e0b98e3edd34b6" prot="public" virt="non-virtual"><scope>CGAL::Polyline_simplification_2::Squared_distance_cost</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Polyline__simplification__2_1_1Squared__distance__cost_1a37f78d14e679de30e9780d619df1bcf2" prot="public" virt="non-virtual"><scope>CGAL::Polyline_simplification_2::Squared_distance_cost</scope><name>Squared_distance_cost</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
