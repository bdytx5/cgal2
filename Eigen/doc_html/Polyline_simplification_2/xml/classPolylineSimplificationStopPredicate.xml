<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPolylineSimplificationStopPredicate" kind="class" language="C++" prot="public">
    <compoundname>PolylineSimplificationStopPredicate</compoundname>
    <includes local="no">Concepts/PolylineSimplificationStopPredicate.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPolylineSimplificationStopPredicate_1a0bc3ed77a7623cc73f5da3ff74172238" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool PolylineSimplificationStopPredicate::operator()</definition>
        <argsstring>(const CGAL::Constrained_triangulation_plus_2&lt; CDT &gt; &amp;ct, CGAL::Constrained_triangulation_plus_2&lt; CDT &gt;::Vertex_handle q, typename CDT::Geom_traits::FT cost, std::size_t initial_count, std::size_t current_count) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_triangulation_plus_2</ref>&lt; CDT &gt; &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_triangulation_plus_2</ref>&lt; CDT &gt;::Vertex_handle</type>
          <declname>q</declname>
        </param>
        <param>
          <type>typename CDT::Geom_traits::FT</type>
          <declname>cost</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>initial_count</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>current_count</declname>
        </param>
        <briefdescription>
<para>Indicates if the simplification must be stopped. </para>        </briefdescription>
        <detaileddescription>
<para>This is called right before each vertex is about to be removed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying constrained Delaunay triangulation which embeds the polyline constraints </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>The current vertex about to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cost</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated cost for removing the current vertex (as given by <computeroutput><ref refid="classPolylineSimplificationCostFunction" kindref="compound">PolylineSimplificationCostFunction</ref></computeroutput>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial number of vertices in the entire polyline set (including intersection vertices not in any source polyline) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The current number of vertices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the algorithm should stop, <computeroutput>false</computeroutput> if it should continue. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_triangulation_plus_2</ref></computeroutput> with a vertex type that is model of <computeroutput><ref refid="classPolylineSimplificationVertexBase__2" kindref="compound">PolylineSimplificationVertexBase_2</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolylineSimplificationStopPredicate.h" line="29" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Models of this concept are passed to the polyline simplification algorithm to indicate when to stop the process. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000002"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Polyline__simplification__2_1_1Stop__below__count__ratio__threshold" kindref="compound">CGAL::Polyline_simplification_2::Stop_below_count_ratio_threshold</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Polyline__simplification__2_1_1Stop__below__count__threshold" kindref="compound">CGAL::Polyline_simplification_2::Stop_below_count_threshold</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Polyline__simplification__2_1_1Stop__above__cost__threshold" kindref="compound">CGAL::Polyline_simplification_2::Stop_above_cost_threshold</ref></computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/PolylineSimplificationStopPredicate.h" line="14" column="1" bodyfile="Concepts/PolylineSimplificationStopPredicate.h" bodystart="13" bodyend="35"/>
    <listofallmembers>
      <member refid="classPolylineSimplificationStopPredicate_1a0bc3ed77a7623cc73f5da3ff74172238" prot="public" virt="non-virtual"><scope>PolylineSimplificationStopPredicate</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
