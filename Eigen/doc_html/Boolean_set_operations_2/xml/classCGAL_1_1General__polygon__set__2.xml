<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1General__polygon__set__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::General_polygon_set_2</compoundname>
    <includes local="no">CGAL/General_polygon_set_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Traits</declname>
        <defname>Traits</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Dcel</declname>
        <defname>Dcel</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1General__polygon__set__2_1a1c9674a989396f1603d132695ae22689" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::Traits_2</definition>
        <argsstring></argsstring>
        <name>Traits_2</name>
        <briefdescription>
<para>the traits class in use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="67" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::Polygon_2</definition>
        <argsstring></argsstring>
        <name>Polygon_2</name>
        <briefdescription>
<para>the general polygon type. </para>        </briefdescription>
        <detaileddescription>
<para>Must model the <computeroutput><ref refid="classGpsTraitsGeneralPolygon__2" kindref="compound">GpsTraitsGeneralPolygon_2</ref></computeroutput> concept. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="72" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::Polygon_with_holes_2</definition>
        <argsstring></argsstring>
        <name>Polygon_with_holes_2</name>
        <briefdescription>
<para>the general polygon with holes type. </para>        </briefdescription>
        <detaileddescription>
<para>Must model the <computeroutput><ref refid="classGpsTraitsGeneralPolygonWithHoles__2" kindref="compound">GpsTraitsGeneralPolygonWithHoles_2</ref></computeroutput> concept. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="77" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1General__polygon__set__2_1ae519cff0b3a00b544da89c3cbf7e9419" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <briefdescription>
<para>number of polygons with holes size type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="82" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1General__polygon__set__2_1abed0cf3e9515d209da3d3ed763558d93" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::Arrangement_2</definition>
        <argsstring></argsstring>
        <name>Arrangement_2</name>
        <briefdescription>
<para>the arrangement type used internally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ae0d978bb73a8e4e9488a30bd874431f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::General_polygon_set_2</definition>
        <argsstring>()</argsstring>
        <name>General_polygon_set_2</name>
        <briefdescription>
<para>constructs an empty set of polygons <computeroutput>gps</computeroutput> represented by an empty arrangement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a38a897d66b46f2dbe4955bc88b119135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::General_polygon_set_2</definition>
        <argsstring>(const Self &amp;other)</argsstring>
        <name>General_polygon_set_2</name>
        <param>
          <type>const Self &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a5098dfc385a047de54fcfa9a46d020ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::General_polygon_set_2</definition>
        <argsstring>(Traits &amp;traits)</argsstring>
        <name>General_polygon_set_2</name>
        <param>
          <type>Traits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>constructs an empty set of polygons <computeroutput>gps</computeroutput> that uses the given <computeroutput>traits</computeroutput> instance for performing the geometric operations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a54a0dfd9778009ba36ef8c6cdb270314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::General_polygon_set_2</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>General_polygon_set_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>constructs a set of polygons <computeroutput>gps</computeroutput> that consists of the single polygon <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1afcd0109c06ffc04426405f533e554d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::General_polygon_set_2</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn_with_holes)</argsstring>
        <name>General_polygon_set_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn_with_holes</declname>
        </param>
        <briefdescription>
<para>constructs a set of polygons <computeroutput>gps</computeroutput> that consists of the single polygon with holes <computeroutput>pgn_with_holes</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="87" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a72c56fb7753555ff932f1fca3f1f5712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::polygons_with_holes</definition>
        <argsstring>(OutputIterator out)</argsstring>
        <name>polygons_with_holes</name>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>obtains the polygons with holes represented by <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a17a48e568ce9b6969eaa1af747dcf5f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1General__polygon__set__2_1ae519cff0b3a00b544da89c3cbf7e9419" kindref="member">Size</ref></type>
        <definition>Size CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::number_of_polygons_with_holes</definition>
        <argsstring>() const</argsstring>
        <name>number_of_polygons_with_holes</name>
        <briefdescription>
<para>returns the total number of general polygons represented by <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a186fb5a29321ff6f291090c79ae3c292" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> represents an empty set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a873c472029091a7d6c5ace6a2aa12ac6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::is_plane</definition>
        <argsstring>() const</argsstring>
        <name>is_plane</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> represents the entire plane. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aa66d4b81ac557291acc9cb5432f5aca0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Traits &amp;</type>
        <definition>Traits&amp; CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::traits</definition>
        <argsstring>() const</argsstring>
        <name>traits</name>
        <briefdescription>
<para>obtains an instance of the traits. </para>        </briefdescription>
        <detaileddescription>
<para>If the traits was passed as a parameter to the constructor of <computeroutput>gps</computeroutput>, it is returned. Otherwise, a newly created instance is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1af795f9296531d3a9d12dbca472defa6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abed0cf3e9515d209da3d3ed763558d93" kindref="member">Arrangement_2</ref> &amp;</type>
        <definition>const Arrangement_2&amp; CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::arrangement</definition>
        <argsstring>() const</argsstring>
        <name>arrangement</name>
        <briefdescription>
<para>obtains the arrangement data structure that internally represents the general-polygon set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a4edd575187af9aa5224489157605f425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>clears <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a9d41f55871a2b65d1b421f19f155e6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::insert</definition>
        <argsstring>(Polygon_2 &amp;pgn)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>inserts <computeroutput>pgn</computeroutput> into <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>pgn</computeroutput> and the point set represented by <computeroutput>gps</computeroutput> are disjoint. This precondition enables the use of very efficient insertion methods. Use the respective overloaded method that inserts a polygon of type <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput>, if only a relaxed precondition can be guaranteed. If even the relaxed precondition cannot be guaranteed, use the <computeroutput>join</computeroutput> method. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aa839f6a7da59bf5719412c040c359221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::insert</definition>
        <argsstring>(Polygon_with_holes_2 &amp;pgn_with_holes)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn_with_holes</declname>
        </param>
        <briefdescription>
<para>inserts <computeroutput>pgn_with_holes</computeroutput> into <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>pgn_with_holes</computeroutput> does not intersect with the point set represented by <computeroutput>gps</computeroutput>, except maybe at the vertices. If this relaxed precondition cannot be guaranteed, use the <computeroutput>join</computeroutput> method. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a9e292b6eaa6c3c7b5166df4fe34b5be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::insert</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>inserts the range of polygons (or polygons with holes) into <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>(The value type of the input iterator is used to distinguish between the two.) <simplesect kind="pre"><para>If the given range contains objects of type <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput>, then these polygons and the point set represented by <computeroutput>gps</computeroutput> are pairwise disjoint, except maybe at the vertices. If the given range contains objects of type <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput>, then these polygons and the point set represented by <computeroutput>gps</computeroutput> are pairwise disjoint without any exceptions. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a1fa68a9e21ca86ea913b2ba5710aa9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator1</type>
          </param>
          <param>
            <type>class InputIterator2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::insert</definition>
        <argsstring>(InputIterator1 pgn_begin, InputIterator1 pgn_end, InputIterator2 pgn_with_holes_begin, InputIterator2 pgn_with_holes_end)</argsstring>
        <name>insert</name>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_begin</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_end</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_begin</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_end</declname>
        </param>
        <briefdescription>
<para>inserts the two ranges of polygons and polygons with holes into <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>All polygons in the first range, all polygon with holes in the second range, and the point set represented by <computeroutput>gps</computeroutput> are pairwise disjoint, except maybe at the vertices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a769156c6b8a6d53ce4d288f6c6bd1318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::complement</definition>
        <argsstring>()</argsstring>
        <name>complement</name>
        <briefdescription>
<para>computes the complement of <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a5e18f081bdc535ea1f87566b939e00f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::complement</definition>
        <argsstring>(const Polygon_set_2 &amp;other)</argsstring>
        <name>complement</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__set__2" kindref="compound">Polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>computes the complement of <computeroutput>other</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>gps</computeroutput> is overridden by the result. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="215" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Univariate Operations</header>
      <description><para>In the following univariate and bivariate methods the result is placed in <computeroutput>gps</computeroutput> after it is cleared. </para></description>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac4d7f7e338d1fb3149d443045b8448e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>computes the intersection of <computeroutput>gps</computeroutput> and <computeroutput>other</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a1c10b9cf775e0a916f54afd0194fa4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the intersection of <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1acaff2dd99c5fdb57307f34b00cf8df15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the intersection of <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a2536d0e86f56e7f41bad407810d38257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>computes the intersection of a collection of point sets. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons (or polygons with holes) in the given range and the point set represented by <computeroutput>gps</computeroutput>. (The value type of the input iterator is used to distinguish between the two options.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1af93dbce4007557da6b3c864ba6ec5011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator1</type>
          </param>
          <param>
            <type>class InputIterator2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(InputIterator1 pgn_begin, InputIterator1 pgn_end, InputIterator2 pgn_with_holes_begin, InputIterator2 pgn_with_holes_end)</argsstring>
        <name>intersection</name>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_begin</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_end</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_begin</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_end</declname>
        </param>
        <briefdescription>
<para>computes the intersection of a collection of point sets. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons and polygons with holes in the given two ranges and the point set represented by <computeroutput>gps</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aba665959aba438571f1e7f0522307ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>computes the union of <computeroutput>gps</computeroutput> and <computeroutput>other</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a6098d063d916b4bec3a7268ac63beeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the union of <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a9bca5d457fc8c8ac24bf920ebb946adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the union of <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aa0e051243490f91df25f3b503c504e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>join</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>computes the union of the polygons (or polygons with holes) in the given range and the point set represented by <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>(The value type of the input iterator is used to distinguish between the two options.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a2d0bbbd0b61f30598e7fa936d34d9a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator1</type>
          </param>
          <param>
            <type>class InputIterator2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(InputIterator1 pgn_begin, InputIterator1 pgn_end, InputIterator2 pgn_with_holes_begin, InputIterator2 pgn_with_holes_end)</argsstring>
        <name>join</name>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_begin</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_end</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_begin</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_end</declname>
        </param>
        <briefdescription>
<para>computes the union of the polygons and polygons with holes in the given two ranges and the point set represented by <computeroutput>gps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aed192585133c91397b72adab4ae81a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::difference</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>computes the difference between <computeroutput>gps</computeroutput> and <computeroutput>other</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ada373fa64e7acd4949d9d4e4ba34ef76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::difference</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the difference between <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ae273e6a6b96319cf0bbad008714d7336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::difference</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the difference between <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac160e6c607b309d19b389258342b0505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference between <computeroutput>gps</computeroutput> and <computeroutput>other</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a5220a0b69f65c2135e63b38b3d7d3781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference between <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a897de9631e72b08c2fcb44cf8e04fe56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference between <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1aefab7ed30bca6bc4a4fd93a220f70456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference (xor) of a collection of point sets. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons (or polygons with holes) in the given range and the point set represented by <computeroutput>gps</computeroutput>. (The value type of the input iterator is used to distinguish between the two options.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1abe38fb03266e72a3b3ac580d3d068c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator1</type>
          </param>
          <param>
            <type>class InputIterator2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(InputIterator1 pgn_begin, InputIterator1 pgn_end, InputIterator2 pgn_with_holes_begin, InputIterator2 pgn_with_holes_end)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_begin</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_end</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_begin</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_end</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference (xor) of a collection of point sets. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons and polygons with holes in the given two ranges and the point set represented by <computeroutput>gps</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="334" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Bivariate Operations</header>
      <description><para>The following bivariate function replace <computeroutput>gps</computeroutput> with the result. </para></description>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac69cd2db10652bd62a262e5931ea06e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::intersection</definition>
        <argsstring>(const General_polygon_set_2 &amp;gps1, const General_polygon_set_2 &amp;gps2)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps2</declname>
        </param>
        <briefdescription>
<para>computes the intersection of <computeroutput>gps1</computeroutput> and <computeroutput>gps2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a0fbb358af1dacd20774f9fdc598a3bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::join</definition>
        <argsstring>(const General_polygon_set_2 &amp;gps1, const General_polygon_set_2 &amp;gps2)</argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps2</declname>
        </param>
        <briefdescription>
<para>computes the union of <computeroutput>gps1</computeroutput> and <computeroutput>gps2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac18c32dc498a4a9f49a38f8351795dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::difference</definition>
        <argsstring>(const General_polygon_set_2 &amp;gps1, const General_polygon_set_2 &amp;gps2)</argsstring>
        <name>difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps2</declname>
        </param>
        <briefdescription>
<para>computes the difference between <computeroutput>gps1</computeroutput> and <computeroutput>gps2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1abce804d687c42bdf257e894ac3736c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::symmetric_difference</definition>
        <argsstring>(const General_polygon_set_2 &amp;gps1, const General_polygon_set_2 &amp;gps2)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>gps2</declname>
        </param>
        <briefdescription>
<para>computes the symmetric difference between <computeroutput>gps1</computeroutput> and <computeroutput>gps2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="365" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Query Functions</header>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a99ada8a1705bdd970cdf81a71cab502a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::do_intersect</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> and <computeroutput>other</computeroutput> intersect in their interior, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac8708b6fd5a0a2c53c661e29acfe390a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::do_intersect</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput> intersect in their interior, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a7cf04105b1e0cba6ac4442efabdd738c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> and <computeroutput>pgn</computeroutput> intersect in their interior, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ab3903f5e011bd313e4871f5608dd4f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::do_intersect</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>do_intersect</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the interior of the point sets in a collection intersect, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons (or polygons with holes) in the given range and the point set represented by <computeroutput>gps</computeroutput>. (The value type of the input iterator is used to distinguish between the two options.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a20690997135eab18b695761018dcbe73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator1</type>
          </param>
          <param>
            <type>class InputIterator2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::do_intersect</definition>
        <argsstring>(InputIterator1 pgn_begin, InputIterator1 pgn_end, InputIterator2 pgn_with_holes_begin, InputIterator2 pgn_with_holes_end)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_begin</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>pgn_end</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_begin</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>pgn_with_holes_end</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the interior of the point sets in a collection intersect, and <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>The collection consists of the polygons and polygons with holes in the given two ranges and the point set represented by <computeroutput>gps</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ae7ad6d2242a520a5ed2c749f518bb51e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::locate</definition>
        <argsstring>(const Point_2 &amp;p, Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>obtains a polygon with holes that contains the query point <computeroutput>p</computeroutput>, if exists, through <computeroutput>pgn</computeroutput>, and returns <computeroutput>true</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise, returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ab0271fcaec958067f7ce4d81eec14ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::oriented_side</definition>
        <argsstring>(const Point_2 &amp;q)</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns either the constant <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput>, <computeroutput>ON_POSITIVE_SIDE</computeroutput>, or <computeroutput>ON_NEGATIVE_SIDE</computeroutput>, iff <computeroutput>p</computeroutput> lies on the boundary, properly on the positive side, or properly on the negative side of <computeroutput>gps</computeroutput> respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1a251bdd1186c0c4aeae2fd1ebf91e9902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::oriented_side</definition>
        <argsstring>(const General_polygon_set_2 &amp;other)</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>returns either the constant <computeroutput>ON_NEGATIVE_SIDE</computeroutput>, <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput>, or <computeroutput>ON_POSITIVE_SIDE</computeroutput>, iff <computeroutput>other</computeroutput> and <computeroutput>gps</computeroutput> are completely disjoint, in contact, or intersect in their interior, respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1af9452055544c5a2b1a62d896cb422d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::oriented_side</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>returns either the constant <computeroutput>ON_NEGATIVE_SIDE</computeroutput>, <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput>, or <computeroutput>ON_POSITIVE_SIDE</computeroutput>, iff <computeroutput>pgn</computeroutput> and <computeroutput>gps</computeroutput> are completely disjoint, in contact, or intersect in their interior, respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ac02ebeb4e77db6a897c90e367b318aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>returns either the constant <computeroutput>ON_NEGATIVE_SIDE</computeroutput>, <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput>, or <computeroutput>ON_POSITIVE_SIDE</computeroutput>, iff <computeroutput>pgn</computeroutput> and <computeroutput>gps</computeroutput> are completely disjoint, in contact, or intersect in their interior, respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="449" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1General__polygon__set__2_1ad6940f2a41ad01a486435467b736950c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>gps</computeroutput> represents a valid point set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/General_polygon_set_2.h" line="459" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the <computeroutput><ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref></computeroutput> class-template represents a point set in the plane bounded by <formula id="0">$ x$</formula> monotone curves. </para>    </briefdescription>
    <detaileddescription>
<para>Points in the set lie on the boundary or on the positive side of the curves. This class template provides methods to apply regularized Boolean set-operations and few other utility methods. An <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref></computeroutput> data structure is internally used to represent the point set. The arrangement is represented as a doubly-connected edge-list (Dcel).</para><para>The <computeroutput>Traits</computeroutput> template-parameter should be instantiated with a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. The traits class defines the types of points, <formula id="0">$ x$</formula>-monotone curves, general polygons, and general polygons with holes, that is <computeroutput>Traits::Point_2</computeroutput>, <computeroutput>Traits::X_monotone_curve_2</computeroutput>, <computeroutput>Traits::Polygon_2</computeroutput>, and <computeroutput>Traits::Polygon_with_holes_2</computeroutput>, respectively. <computeroutput>Traits::Point_2</computeroutput> must be the type of the endpoints of <computeroutput>Traits::X_monotone_curve_2</computeroutput>, and <computeroutput>Traits::X_monotone_curve_2</computeroutput> must be the type of the curves that comprise the boundaries of the general polygons. The traits class supports geometric operations on the types above. We sometimes use the term <emphasis>polygon</emphasis> instead of general polygon for simplicity hereafter.</para><para>The template parameter <computeroutput>Dcel</computeroutput> should be instantiated with a model of the concept <computeroutput><ref refid="classGeneralPolygonSetDcel" kindref="compound">GeneralPolygonSetDcel</ref></computeroutput>. It is instantiated by default with the type <computeroutput><ref refid="classCGAL_1_1Gps__default__dcel" kindref="compound">Gps_default_dcel</ref>&lt;Traits&gt;</computeroutput>. You can override this default, with a different Dcel class, typically an extension of the <computeroutput><ref refid="classCGAL_1_1Gps__default__dcel" kindref="compound">Gps_default_dcel</ref></computeroutput> class template. Overriding the default is necessary only if you intend to obtain the underlying internal arrangement and process it further.</para><para>The input and output of the Boolean set-operations methods consist of one or more general polygons, some of which may have holes. In particular, these methods operate on pairs of objects of type <computeroutput><ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">General_polygon_set_2</ref></computeroutput>, or directly on objects of type <computeroutput>Traits::Polygon_2</computeroutput> or <computeroutput>Traits::Polygon_with_holes_2</computeroutput>. An object of type <computeroutput>Traits::Polygon_2</computeroutput> is a valid operand, only if it is simple and its boundary is oriented counterclockwise. An object of type <computeroutput>Traits::Polygon_with_holes_2</computeroutput> is valid, only if its outer boundary bounds a relatively simple general polygon oriented counterclockwise, and each one of its holes is a simple polygon oriented clockwise. The holes are pairwise disjoint, except perhaps at the vertices, and are contained in the polygon bounded by the outer boundary. The outer boundary and the holes are also pairwise disjoint, except perhaps at the vertices.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementXMonotoneTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Arrangement_on_surface_2.tag">ArrangementXMonotoneTraits_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Nef_2.tag">Nef_polyhedron_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18">
        <label>CGAL::Polygon_set_2&lt; Kernel, Container, Dcel &gt;</label>
        <link refid="classCGAL_1_1Polygon__set__2"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>CGAL::General_polygon_set_2&lt; Traits, Dcel &gt;</label>
        <link refid="classCGAL_1_1General__polygon__set__2"/>
      </node>
      <node id="17">
        <label>CGAL::General_polygon_set_2&lt; Gps_segment_traits_2&lt; Kernel, Container &gt; &gt;</label>
        <link refid="classCGAL_1_1General__polygon__set__2"/>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; Gps_segment_traits_2&lt; Kernel, Container &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CGAL/General_polygon_set_2.h" line="58" column="1" bodyfile="CGAL/General_polygon_set_2.h" bodystart="58" bodyend="463"/>
    <listofallmembers>
      <member refid="classCGAL_1_1General__polygon__set__2_1af795f9296531d3a9d12dbca472defa6a" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>arrangement</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1abed0cf3e9515d209da3d3ed763558d93" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>Arrangement_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a4edd575187af9aa5224489157605f425" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a769156c6b8a6d53ce4d288f6c6bd1318" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>complement</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a5e18f081bdc535ea1f87566b939e00f2" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>complement</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aed192585133c91397b72adab4ae81a65" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ada373fa64e7acd4949d9d4e4ba34ef76" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ae273e6a6b96319cf0bbad008714d7336" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac18c32dc498a4a9f49a38f8351795dd6" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a99ada8a1705bdd970cdf81a71cab502a" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>do_intersect</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac8708b6fd5a0a2c53c661e29acfe390a" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>do_intersect</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a7cf04105b1e0cba6ac4442efabdd738c" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>do_intersect</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ab3903f5e011bd313e4871f5608dd4f6f" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>do_intersect</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a20690997135eab18b695761018dcbe73" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>do_intersect</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ae0d978bb73a8e4e9488a30bd874431f2" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>General_polygon_set_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a38a897d66b46f2dbe4955bc88b119135" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>General_polygon_set_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a5098dfc385a047de54fcfa9a46d020ba" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>General_polygon_set_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a54a0dfd9778009ba36ef8c6cdb270314" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>General_polygon_set_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1afcd0109c06ffc04426405f533e554d03" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>General_polygon_set_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a9d41f55871a2b65d1b421f19f155e6d4" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aa839f6a7da59bf5719412c040c359221" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a9e292b6eaa6c3c7b5166df4fe34b5be9" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a1fa68a9e21ca86ea913b2ba5710aa9a3" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac4d7f7e338d1fb3149d443045b8448e4" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a1c10b9cf775e0a916f54afd0194fa4db" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1acaff2dd99c5fdb57307f34b00cf8df15" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a2536d0e86f56e7f41bad407810d38257" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1af93dbce4007557da6b3c864ba6ec5011" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac69cd2db10652bd62a262e5931ea06e3" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a186fb5a29321ff6f291090c79ae3c292" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a873c472029091a7d6c5ace6a2aa12ac6" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>is_plane</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ad6940f2a41ad01a486435467b736950c" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aba665959aba438571f1e7f0522307ba6" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a6098d063d916b4bec3a7268ac63beeb1" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a9bca5d457fc8c8ac24bf920ebb946adc" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aa0e051243490f91df25f3b503c504e05" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a2d0bbbd0b61f30598e7fa936d34d9a78" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a0fbb358af1dacd20774f9fdc598a3bea" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>join</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ae7ad6d2242a520a5ed2c749f518bb51e" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>locate</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a17a48e568ce9b6969eaa1af747dcf5f9" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>number_of_polygons_with_holes</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ab0271fcaec958067f7ce4d81eec14ccb" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a251bdd1186c0c4aeae2fd1ebf91e9902" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1af9452055544c5a2b1a62d896cb422d2c" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac02ebeb4e77db6a897c90e367b318aff" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1abf0c1d986a9fe4678b6c07c377e5b3c4" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a07d7f9861b6157a19016ef8a2458b22c" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a72c56fb7753555ff932f1fca3f1f5712" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>polygons_with_holes</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ae519cff0b3a00b544da89c3cbf7e9419" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>Size</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1ac160e6c607b309d19b389258342b0505" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a5220a0b69f65c2135e63b38b3d7d3781" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a897de9631e72b08c2fcb44cf8e04fe56" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aefab7ed30bca6bc4a4fd93a220f70456" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1abe38fb03266e72a3b3ac580d3d068c25" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1abce804d687c42bdf257e894ac3736c51" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>symmetric_difference</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1aa66d4b81ac557291acc9cb5432f5aca0" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>traits</name></member>
      <member refid="classCGAL_1_1General__polygon__set__2_1a1c9674a989396f1603d132695ae22689" prot="public" virt="non-virtual"><scope>CGAL::General_polygon_set_2</scope><name>Traits_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
