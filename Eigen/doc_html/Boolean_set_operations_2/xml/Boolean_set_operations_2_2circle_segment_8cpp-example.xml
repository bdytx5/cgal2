<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Boolean_set_operations_2_2circle_segment_8cpp-example" kind="example">
    <compoundname>Boolean_set_operations_2/circle_segment.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Exact_predicates_exact_constructions_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Gps_circle_segment_traits_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/General_polygon_set_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Lazy__exact__nt_8h" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">CGAL/Lazy_exact_nt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Exact_predicates_exact_constructions_kernel</ref><sp/>Kernel;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classKernel_1_1Circle__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Circle_2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Circle_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Gps__circle__segment__traits__2" kindref="compound">CGAL::Gps_circle_segment_traits_2&lt;Kernel&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Traits_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1General__polygon__set__2" kindref="compound">CGAL::General_polygon_set_2&lt;Traits_2&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polygon_set_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Traits_2::General_polygon_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polygon_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Traits_2::General_polygon_with_holes_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polygon_with_holes_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Traits_2::Curve_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curve_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Traits_2::X_monotone_curve_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_monotone_curve_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>polygon<sp/>from<sp/>a<sp/>circle.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Polygon_2<sp/>construct_polygon<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Circle_2&amp;<sp/>circle)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subdivide<sp/>the<sp/>circle<sp/>into<sp/>two<sp/>x-monotone<sp/>arcs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Traits_2<sp/>traits;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Curve_2<sp/>curve<sp/>(circle);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;CGAL::Object&gt;<sp/><sp/>objects;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>traits.make_x_monotone_2_object()<sp/>(curve,<sp/>std::back_inserter(objects));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion<sp/>(objects.size()<sp/>==<sp/>2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>polygon.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>pgn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>X_monotone_curve_2<sp/>arc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;CGAL::Object&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>objects.begin();<sp/>iter<sp/>!=<sp/>objects.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CGAL::assign<sp/>(arc,<sp/>*iter);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pgn.push_back<sp/>(arc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pgn;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>polygon<sp/>from<sp/>a<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Polygon_2<sp/>construct_polygon<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point_2&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point_2&amp;<sp/>p2,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point_2&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point_2&amp;<sp/>p4)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>pgn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>X_monotone_curve_2<sp/>s1(p1,<sp/>p2);<sp/><sp/><sp/><sp/>pgn.push_back(s1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>X_monotone_curve_2<sp/>s2(p2,<sp/>p3);<sp/><sp/><sp/><sp/>pgn.push_back(s2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>X_monotone_curve_2<sp/>s3(p3,<sp/>p4);<sp/><sp/><sp/><sp/>pgn.push_back(s3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>X_monotone_curve_2<sp/>s4(p4,<sp/>p1);<sp/><sp/><sp/><sp/>pgn.push_back(s4);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pgn;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>program:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>four<sp/>non-intersecting<sp/>circles.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_set_2<sp/>S;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>circ1,<sp/>circ2,<sp/>circ3,<sp/>circ4;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>circ1<sp/>=<sp/>construct_polygon(Circle_2(Point_2(1,<sp/>1),<sp/>1));<sp/><sp/>S.insert(circ1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>circ2<sp/>=<sp/>construct_polygon(Circle_2(Point_2(5,<sp/>1),<sp/>1));<sp/><sp/>S.insert(circ2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>circ3<sp/>=<sp/>construct_polygon(Circle_2(Point_2(5,<sp/>5),<sp/>1));<sp/><sp/>S.insert(circ3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>circ4<sp/>=<sp/>construct_polygon(Circle_2(Point_2(1,<sp/>5),<sp/>1));<sp/><sp/>S.insert(circ4);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>union<sp/>with<sp/>four<sp/>rectangles<sp/>incrementally.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>rect1,<sp/>rect2,<sp/>rect3,<sp/>rect4;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>rect1<sp/>=<sp/>construct_polygon(Point_2(1,<sp/>0),<sp/>Point_2(5,<sp/>0),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2(5,<sp/>2),<sp/>Point_2(1,<sp/>2));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>S.join<sp/>(rect1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>rect2<sp/>=<sp/>construct_polygon(Point_2(1,<sp/>4),<sp/>Point_2(5,<sp/>4),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2(5,<sp/>6),<sp/>Point_2(1,<sp/>6));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>S.join<sp/>(rect2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>rect3<sp/>=<sp/>construct_polygon(Point_2(0,<sp/>1),<sp/>Point_2(2,<sp/>1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2(2,<sp/>5),<sp/>Point_2(0,<sp/>5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>S.join<sp/>(rect3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>rect4<sp/>=<sp/>construct_polygon(Point_2(4,<sp/>1),<sp/>Point_2(6,<sp/>1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2(6,<sp/>5),<sp/>Point_2(4,<sp/>5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>S.join<sp/>(rect4);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Polygon_with_holes_2&gt;<sp/>res;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>S.polygons_with_holes<sp/>(std::back_inserter<sp/>(res));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::copy<sp/>(res.begin(),<sp/>res.end(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream_iterator&lt;Polygon_with_holes_2&gt;(std::cout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
