<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Boolean_set_operations_2_2symmetric_difference_8cpp-example" kind="example">
    <compoundname>Boolean_set_operations_2/symmetric_difference.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Exact_predicates_exact_constructions_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Boolean_set_operations_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Exact_predicates_exact_constructions_kernel</ref><sp/>Kernel;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2&lt;Kernel&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polygon_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_with_holes_2&lt;Kernel&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Polygon_with_holes_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;Polygon_with_holes_2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pwh_list_2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;print_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>P<sp/>-<sp/>a<sp/>bounded<sp/>rectangle<sp/>that<sp/>contains<sp/>a<sp/>rectangular<sp/>hole.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>outP;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>holesP[1];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>outP.push_back<sp/>(Point_2<sp/>(-3,<sp/>-5));<sp/><sp/>outP.push_back<sp/>(Point_2<sp/>(3,<sp/>-5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>outP.push_back<sp/>(Point_2<sp/>(3,<sp/>5));<sp/><sp/><sp/><sp/>outP.push_back<sp/>(Point_2<sp/>(-3,<sp/>5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesP[0].push_back<sp/>(Point_2<sp/>(-1,<sp/>-3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesP[0].push_back<sp/>(Point_2<sp/>(-1,<sp/>3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesP[0].push_back<sp/>(Point_2<sp/>(1,<sp/>3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesP[0].push_back<sp/>(Point_2<sp/>(1,<sp/>-3));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_with_holes_2<sp/><sp/>P<sp/>(outP,<sp/>holesP,<sp/>holesP<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;P<sp/>=<sp/>&quot;</highlight><highlight class="normal">;<sp/>print_polygon_with_holes<sp/>(P);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>Q<sp/>-<sp/>a<sp/>bounded<sp/>rectangle<sp/>that<sp/>contains<sp/>a<sp/>rectangular<sp/>hole.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>outQ;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_2<sp/>holesQ[1];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>outQ.push_back<sp/>(Point_2<sp/>(-5,<sp/>-3));<sp/><sp/>outQ.push_back<sp/>(Point_2<sp/>(5,<sp/>-3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>outQ.push_back<sp/>(Point_2<sp/>(5,<sp/>3));<sp/><sp/><sp/><sp/>outQ.push_back<sp/>(Point_2<sp/>(-5,<sp/>3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesQ[0].push_back<sp/>(Point_2<sp/>(-3,<sp/>-1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesQ[0].push_back<sp/>(Point_2<sp/>(-3,<sp/>1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesQ[0].push_back<sp/>(Point_2<sp/>(3,<sp/>1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>holesQ[0].push_back<sp/>(Point_2<sp/>(3,<sp/>-1));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Polygon_with_holes_2<sp/><sp/>Q<sp/>(outQ,<sp/>holesQ,<sp/>holesQ<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Q<sp/>=<sp/>&quot;</highlight><highlight class="normal">;<sp/>print_polygon_with_holes<sp/>(Q);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>symmetric<sp/>difference<sp/>of<sp/>P<sp/>and<sp/>Q.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Pwh_list_2<sp/>symmR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Pwh_list_2::const_iterator<sp/>it;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__boolean__symmetric__difference_1ga16f709a3037b2d4ae61141eda60f72e7" kindref="member">CGAL::symmetric_difference</ref><sp/>(P,<sp/>Q,<sp/>std::back_inserter(symmR));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>symmetric<sp/>difference:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>symmR.begin();<sp/>it<sp/>!=<sp/>symmR.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;--&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print_polygon_with_holes<sp/>(*it);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
