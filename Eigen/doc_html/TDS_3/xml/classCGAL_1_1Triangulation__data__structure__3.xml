<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Triangulation__data__structure__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation_data_structure_3</compoundname>
    <basecompoundref refid="structCGAL_1_1Triangulation__utils__3" prot="public" virt="non-virtual">CGAL::Triangulation_utils_3</basecompoundref>
    <includes local="no">CGAL/Triangulation_data_structure_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref></type>
      </param>
      <param>
        <type>typename Concurrency_tag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1aa397226f80cbfbdce5c8e61da46737ae" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; Vertex, <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Vertex, Default&gt; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::Vertex_range</definition>
        <argsstring></argsstring>
        <name>Vertex_range</name>
        <briefdescription>
<para>Vertex container type. </para>        </briefdescription>
        <detaileddescription>
<para>If Concurrency_tag is <ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref>, a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput> is used instead of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="61" column="1" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1ad30d453316a88e646fc5ea8509aaa50d" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; Cell, <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Cell, Default&gt; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::Cell_range</definition>
        <argsstring></argsstring>
        <name>Cell_range</name>
        <briefdescription>
<para>Cell container type. </para>        </briefdescription>
        <detaileddescription>
<para>If Concurrency_tag is <ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref>, a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput> is used instead of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="67" column="1" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1a1537ba1ef92561936439c308f0100f47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1ad30d453316a88e646fc5ea8509aaa50d" kindref="member">Cell_range</ref> &amp;</type>
        <definition>Cell_range&amp; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::cells</definition>
        <argsstring>() const</argsstring>
        <name>cells</name>
        <briefdescription>
<para>Returns a reference to the container of cells. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1abe0f3c5986e46d56a8ec1aa3a3bd45a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1ad30d453316a88e646fc5ea8509aaa50d" kindref="member">Cell_range</ref> &amp;</type>
        <definition>Cell_range&amp; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::cells</definition>
        <argsstring>()</argsstring>
        <name>cells</name>
        <briefdescription>
<para>Returns a reference to the container of cells. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1ad2787a980abbaf3b28a3c4bf10c096fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1aa397226f80cbfbdce5c8e61da46737ae" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range&amp; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::vertices</definition>
        <argsstring>() const</argsstring>
        <name>vertices</name>
        <briefdescription>
<para>Returns a reference to the container of vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1a3e17ffe7e3d4adc515013a020150caef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1aa397226f80cbfbdce5c8e61da46737ae" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range&amp; CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;::vertices</definition>
        <argsstring>()</argsstring>
        <name>vertices</name>
        <briefdescription>
<para>Returns a reference to the container of vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__3" kindref="compound">Triangulation_data_structure_3</ref></computeroutput> stores a 3D-triangulation data structure and provides the optional geometric functionalities to be used as a parameter for a 3D-geometric triangulation (see Chapter <ref refid="index_1chapterTriangulation3" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">3D Triangulations</ref>). </para>    </briefdescription>
    <detaileddescription>
<para>The vertices and cells are stored in two nested containers, which are implemented using <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput> (or <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput>, see below). The class may offer some flexibility for the choice of container in the future, in the form of additional template parameters.</para><para><bold>Parameters</bold><linebreak/>
</para><para>It is parameterized by base classes for vertices and cells which have to match the requirements for the concepts <computeroutput><ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref></computeroutput> and <computeroutput><ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref></computeroutput> respectively.</para><para>They have the default values <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">Triangulation_ds_vertex_base_3</ref>&lt;TDS&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__cell__base__3" kindref="compound">Triangulation_ds_cell_base_3</ref>&lt;TDS&gt;</computeroutput> respectively.</para><para>The <computeroutput>Concurrency_tag</computeroutput> parameter allows to enable the use of a concurrent container to store vertices and cells. It can be <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (use of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput> to store vertices and cells) or <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (use of a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput>). If it is <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput>, the following functions can be called concurrently: <computeroutput>create_vertex</computeroutput>, <computeroutput>create_cell</computeroutput>, <computeroutput>delete_vertex</computeroutput>, <computeroutput>delete_cell</computeroutput>. <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> is the default value.</para><para><xrefsect id="models_1_models000001"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para>The base class <computeroutput><ref refid="structCGAL_1_1Triangulation__utils__3" kindref="compound">Triangulation_utils_3</ref></computeroutput> defines basic computations on indices of vertices and neighbors of cells.</para><para><simplesect kind="attention"><para>All members listed here are additional to the interface specified by the concept.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">CGAL::Triangulation_ds_vertex_base_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__cell__base__3" kindref="compound">CGAL::Triangulation_ds_cell_base_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__vertex__base__with__info__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Triangulation_vertex_base_with_info_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__cell__base__with__info__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Triangulation_cell_base_with_info_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;</label>
        <link refid="classCGAL_1_1Triangulation__data__structure__3"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CGAL::Triangulation_utils_3</label>
        <link refid="structCGAL_1_1Triangulation__utils__3"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Triangulation_data_structure_3&lt; TriangulationDSVertexBase_3, TriangulationDSCellBase_3, Concurrency_tag &gt;</label>
        <link refid="classCGAL_1_1Triangulation__data__structure__3"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CGAL::Triangulation_utils_3</label>
        <link refid="structCGAL_1_1Triangulation__utils__3"/>
      </node>
    </collaborationgraph>
    <location file="CGAL/Triangulation_data_structure_3.h" line="51" column="1" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="51" bodyend="95"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a3e483dd7b1e45dd3bcce3dbc7f94bd70" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>ccw</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1ad30d453316a88e646fc5ea8509aaa50d" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Cell_range</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a1537ba1ef92561936439c308f0100f47" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cells</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1abe0f3c5986e46d56a8ec1aa3a3bd45a2" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cells</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a39b8813b2f15dcb4446ff42b5c100529" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cw</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a54bf42467e28dcbea13bfd022ef49217" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>next_around_edge</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1aa397226f80cbfbdce5c8e61da46737ae" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Vertex_range</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a71288c8c2833f954a73090336ed60054" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertex_triple_index</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1ad2787a980abbaf3b28a3c4bf10c096fe" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a3e17ffe7e3d4adc515013a020150caef" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
