<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTriangulationDSVertexBase__3" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDSVertexBase_3</compoundname>
    <includes local="no">Concepts/TriangulationDSVertexBase_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationDSVertexBase__3_1ac521620e28c38e71e36bc6ddf40d5d48" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using TriangulationDSVertexBase_3::Rebind_TDS =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Rebind_TDS</name>
        <briefdescription>
<para>This template class has to define a type <computeroutput>Rebind_TDS&lt;TDS2&gt;::Other</computeroutput> which is the <emphasis>rebound</emphasis> vertex, that is, the one whose <computeroutput>Triangulation_data_structure</computeroutput> will be the actually used one. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Rebind_TDS&lt;TDS2&gt;::Other</computeroutput> will be the real base class of <computeroutput>Triangulation_data_structure_3::Vertex</computeroutput>. <simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="52" column="1" bodyfile="Concepts/TriangulationDSVertexBase_3.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDSVertexBase__3_1a151b388d072a81d754d6eaaf84238e49" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></type>
        <definition>typedef TriangulationDataStructure_3 TriangulationDSVertexBase_3::Triangulation_data_structure</definition>
        <argsstring></argsstring>
        <name>Triangulation_data_structure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="57" column="1" bodyfile="Concepts/TriangulationDSVertexBase_3.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDSVertexBase__3_1ad17f7b390a370dbce4f0b55baa1442d1" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3_1a9073bf95270d94eb9887ca816ef8fa04" kindref="member">TriangulationDataStructure_3::Vertex_handle</ref></type>
        <definition>typedef TriangulationDataStructure_3::Vertex_handle TriangulationDSVertexBase_3::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="62" column="1" bodyfile="Concepts/TriangulationDSVertexBase_3.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDSVertexBase__3_1adf7dfac9a840c3ab6aadb89e1a7ecdeb" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3_1ab0d95391bd3516f74b1fd105df5b9628" kindref="member">TriangulationDataStructure_3::Cell_handle</ref></type>
        <definition>typedef TriangulationDataStructure_3::Cell_handle TriangulationDSVertexBase_3::Cell_handle</definition>
        <argsstring></argsstring>
        <name>Cell_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="67" column="1" bodyfile="Concepts/TriangulationDSVertexBase_3.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1ae82af43e016e5e52abaff0eb940428d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationDSVertexBase_3::TriangulationVertexBase_3</definition>
        <argsstring>()</argsstring>
        <name>TriangulationVertexBase_3</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1aa9d1b792c6ee14dc729d2d5a6578e7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationDSVertexBase_3::TriangulationVertexBase_3</definition>
        <argsstring>(Cell_handle c)</argsstring>
        <name>TriangulationVertexBase_3</name>
        <param>
          <type><ref refid="classTriangulationDSVertexBase__3_1adf7dfac9a840c3ab6aadb89e1a7ecdeb" kindref="member">Cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs a vertex pointing to cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1afca21cd88d559d16d3f064fcf5720d2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDSVertexBase__3_1adf7dfac9a840c3ab6aadb89e1a7ecdeb" kindref="member">Cell_handle</ref></type>
        <definition>Cell_handle TriangulationDSVertexBase_3::cell</definition>
        <argsstring>() const</argsstring>
        <name>cell</name>
        <briefdescription>
<para>Returns the pointer to an incident cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setting</header>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1afc7b552ac4c0985319bc7b9688d99ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDSVertexBase_3::set_cell</definition>
        <argsstring>(Cell_handle c)</argsstring>
        <name>set_cell</name>
        <param>
          <type><ref refid="classTriangulationDSVertexBase__3_1adf7dfac9a840c3ab6aadb89e1a7ecdeb" kindref="member">Cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Sets the incident cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Checking</header>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1a8275cd68244b9e5aa11313056835ca89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDSVertexBase_3::is_valid</definition>
        <argsstring>(bool verbose=false, int level=0) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Performs any desired test on a vertex. Checks that the pointer to an incident cell is not the default constructed handle.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Members for Compact_container</header>
      <description><para></para><para>These member functions are required by <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__3" kindref="compound">CGAL::Triangulation_data_structure_3</ref></computeroutput> because it uses <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Compact_container</ref></computeroutput> to store its cells.</para><para>See the documentation of <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Compact_container</ref></computeroutput> for the exact requirements.  </para></description>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1a09613cf18061ad70e329524ce8ca55db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* TriangulationDSVertexBase_3::for_compact_container</definition>
        <argsstring>() const</argsstring>
        <name>for_compact_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1a5961d5469b0efc97a4fa8bdc8ff1b41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *&amp;</type>
        <definition>void* &amp; TriangulationDSVertexBase_3::for_compact_container</definition>
        <argsstring>()</argsstring>
        <name>for_compact_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1a88175915d3665bbeb1b559d1ce6ca952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream&amp; TriangulationDSVertexBase_3::operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, TriangulationDSVertexBase_3 &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Inputs the non-combinatorial information given by the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSVertexBase__3_1a0d51fcc197ad7a316853781d32312da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; TriangulationDSVertexBase_3::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const TriangulationDSVertexBase_3 &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Outputs the non-combinatorial information given by the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSVertexBase_3.h" line="147" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>At the bottom level of 3D-triangulations (see Sections <ref refid="index_1Triangulation3secdesign" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">Software Design</ref> and <ref refid="index_1TDS3secdesign" kindref="member">Software Design</ref>), a vertex provides access to one of its incident cells through a handle. </para>    </briefdescription>
    <detaileddescription>
<para> Note that when you use the triangulation data structure as parameter of a geometric triangulation, the vertex base class has additional geometric requirements : it has to match the <computeroutput><ref refid="classTriangulationVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">TriangulationVertexBase_3</ref></computeroutput> concept.</para><para>Since the Triangulation data structure is the class which defines the handle types, the vertex base class has to be somehow parameterized by the Triangulation data structure. But since it is itself parameterized by the cell and vertex base classes, there is a cycle in the definition of these classes. In order to break the cycle, the base classes for vertex and cell which are given as arguments for the Triangulation data structure use <computeroutput>void</computeroutput> as Triangulation data structure parameter, and the Triangulation data structure then uses a <emphasis>rebind</emphasis>-like mechanism (similar to the one specified in <computeroutput>std::allocator</computeroutput>) in order to put itself as parameter to the vertex and cell classes. The <emphasis>rebound</emphasis> base classes so obtained are the classes which are used as base classes for the final vertex and cell classes. More information can be found in Section <ref refid="index_1TDS3secdesign" kindref="member">Software Design</ref>.</para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">CGAL::Triangulation_ds_vertex_base_3</ref> </para><para><ref refid="classCGAL_1_1Triangulation__vertex__base__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Triangulation_vertex_base_3</ref> </para><para><ref refid="classCGAL_1_1Triangulation__vertex__base__with__info__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">CGAL::Triangulation_vertex_base_with_info_3</ref> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">TriangulationVertexBase_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput>TriangulationHierarchyVertexBase_3</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationCellBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">TriangulationCellBase_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/TriangulationDSVertexBase_3.h" line="38" column="1" bodyfile="Concepts/TriangulationDSVertexBase_3.h" bodystart="38" bodyend="151"/>
    <listofallmembers>
      <member refid="classTriangulationDSVertexBase__3_1afca21cd88d559d16d3f064fcf5720d2c" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>cell</name></member>
      <member refid="classTriangulationDSVertexBase__3_1adf7dfac9a840c3ab6aadb89e1a7ecdeb" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>Cell_handle</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a09613cf18061ad70e329524ce8ca55db" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>for_compact_container</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a5961d5469b0efc97a4fa8bdc8ff1b41d" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>for_compact_container</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a8275cd68244b9e5aa11313056835ca89" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>is_valid</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a0d51fcc197ad7a316853781d32312da1" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a88175915d3665bbeb1b559d1ce6ca952" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationDSVertexBase__3_1ac521620e28c38e71e36bc6ddf40d5d48" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>Rebind_TDS</name></member>
      <member refid="classTriangulationDSVertexBase__3_1afc7b552ac4c0985319bc7b9688d99ad6" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>set_cell</name></member>
      <member refid="classTriangulationDSVertexBase__3_1a151b388d072a81d754d6eaaf84238e49" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>Triangulation_data_structure</name></member>
      <member refid="classTriangulationDSVertexBase__3_1ae82af43e016e5e52abaff0eb940428d5" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>TriangulationVertexBase_3</name></member>
      <member refid="classTriangulationDSVertexBase__3_1aa9d1b792c6ee14dc729d2d5a6578e7d3" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>TriangulationVertexBase_3</name></member>
      <member refid="classTriangulationDSVertexBase__3_1ad17f7b390a370dbce4f0b55baa1442d1" prot="public" virt="non-virtual"><scope>TriangulationDSVertexBase_3</scope><name>Vertex_handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
