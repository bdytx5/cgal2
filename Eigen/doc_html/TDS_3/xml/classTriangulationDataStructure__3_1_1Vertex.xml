<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTriangulationDataStructure__3_1_1Vertex" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDataStructure_3::Vertex</compoundname>
    <includes local="no">Concepts/TriangulationDataStructure_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>The class <computeroutput><ref refid="classTriangulationDataStructure__3_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> defines types that are the same as some of the types defined by the triangulation data structure class <computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></computeroutput>. </para></description>
      <memberdef kind="typedef" id="classTriangulationDataStructure__3_1_1Vertex_1a44a9b44c659ddb457db3f9e556e46970" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure_3::Vertex::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para><emphasis>Optional for the triangulation data structure alone</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1070" column="1" bodyfile="Concepts/TriangulationDataStructure_3.h" bodystart="1070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure__3_1_1Vertex_1aaa79f9a7574ebe6963620a7552b91419" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></type>
        <definition>typedef TriangulationDataStructure_3 TriangulationDataStructure_3::Vertex::Triangulation_data_structure</definition>
        <argsstring></argsstring>
        <name>Triangulation_data_structure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1075" column="1" bodyfile="Concepts/TriangulationDataStructure_3.h" bodystart="1075" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure__3_1_1Vertex_1af8e23ae87a8d7ef4bc67a8fdcab85b92" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3_1a9073bf95270d94eb9887ca816ef8fa04" kindref="member">TriangulationDataStructure_3::Vertex_handle</ref></type>
        <definition>typedef TriangulationDataStructure_3::Vertex_handle TriangulationDataStructure_3::Vertex::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1080" column="1" bodyfile="Concepts/TriangulationDataStructure_3.h" bodystart="1080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure__3_1_1Vertex_1a0058a4bae5802e4633644179bc6e5c95" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure__3_1ab0d95391bd3516f74b1fd105df5b9628" kindref="member">TriangulationDataStructure_3::Cell_handle</ref></type>
        <definition>typedef TriangulationDataStructure_3::Cell_handle TriangulationDataStructure_3::Vertex::Cell_handle</definition>
        <argsstring></argsstring>
        <name>Cell_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1085" column="1" bodyfile="Concepts/TriangulationDataStructure_3.h" bodystart="1085" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classTriangulationDataStructure__3_1_1Vertex_1a98f8d1fcc93b2a390c6d7f8aeb45773a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure__3_1_1Vertex_1a0058a4bae5802e4633644179bc6e5c95" kindref="member">Cell_handle</ref></type>
        <definition>Cell_handle TriangulationDataStructure_3::Vertex::cell</definition>
        <argsstring>() const</argsstring>
        <name>cell</name>
        <briefdescription>
<para>Returns a cell of the triangulation having <computeroutput>v</computeroutput> as vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure__3_1_1Vertex_1a38176107fb6944ece1fa1a6c3d7b1d91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure__3_1_1Vertex_1a44a9b44c659ddb457db3f9e556e46970" kindref="member">Point</ref></type>
        <definition>Point TriangulationDataStructure_3::Vertex::point</definition>
        <argsstring>() const</argsstring>
        <name>point</name>
        <briefdescription>
<para>Returns the point stored in the vertex. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>Optional for the triangulation data structure alone.</emphasis> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1101" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setting</header>
      <memberdef kind="function" id="classTriangulationDataStructure__3_1_1Vertex_1a91e74aaa742d4cd4146892935f1d503a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure_3::Vertex::set_cell</definition>
        <argsstring>(Cell_handle c)</argsstring>
        <name>set_cell</name>
        <param>
          <type><ref refid="classTriangulationDataStructure__3_1_1Vertex_1a0058a4bae5802e4633644179bc6e5c95" kindref="member">Cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Sets the incident cell to <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure__3_1_1Vertex_1a6ab8b261adac3079809ff92e7c283ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure_3::Vertex::set_point</definition>
        <argsstring>(const Point &amp;p)</argsstring>
        <name>set_point</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure__3_1_1Vertex_1a44a9b44c659ddb457db3f9e556e46970" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Sets the point to <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>Optional for the triangulation data structure alone.</emphasis> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1117" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Checking</header>
      <memberdef kind="function" id="classTriangulationDataStructure__3_1_1Vertex_1a8d1d300e509dfe5dde7faa781b4e7f5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure_3::Vertex::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Checks the validity of the vertex. Must check that its incident cell has this vertex. The validity of the base vertex is also checked.</para><para>When <computeroutput>verbose</computeroutput> is set to <computeroutput>true</computeroutput>, messages are printed to give a precise indication on the kind of invalidity encountered.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure_3.h" line="1134" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classTriangulationDataStructure__3_1_1Vertex" kindref="compound">TriangulationDataStructure_3::Vertex</ref></computeroutput> represents the vertex class of a 3D-triangulation data structure. It must define the types and operations listed in this section. Some of these requirements are of geometric nature, they are <emphasis>optional</emphasis> when using the triangulation data structure class alone. They become compulsory when the triangulation data structure is used as a layer for the geometric triangulation class. (See Section <ref refid="index_1TDS3secdesign" kindref="member">Software Design</ref>.) </para>    </briefdescription>
    <detaileddescription>
<para> <bold>Creation</bold><linebreak/>
</para><para>In order to obtain new vertices or destruct unused vertices, the user must call the <computeroutput><ref refid="classTriangulationDataStructure__3_1a0fc1c3d4aa69c6411d240989dec0d7ff" kindref="member">create_vertex()</ref></computeroutput> and <computeroutput><ref refid="classTriangulationDataStructure__3_1ab3dc7f89e6aa9416f152a8f9f901ab2e" kindref="member">delete_vertex()</ref></computeroutput> methods of the triangulation data structure.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure__3_1_1Cell" kindref="compound">TriangulationDataStructure_3::Cell</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/TriangulationDataStructure_3.h" line="1058" column="1" bodyfile="Concepts/TriangulationDataStructure_3.h" bodystart="1058" bodyend="1138"/>
    <listofallmembers>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a98f8d1fcc93b2a390c6d7f8aeb45773a" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>cell</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a0058a4bae5802e4633644179bc6e5c95" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>Cell_handle</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a8d1d300e509dfe5dde7faa781b4e7f5d" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>is_valid</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a44a9b44c659ddb457db3f9e556e46970" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>Point</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a38176107fb6944ece1fa1a6c3d7b1d91" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>point</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a91e74aaa742d4cd4146892935f1d503a" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>set_cell</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1a6ab8b261adac3079809ff92e7c283ed3" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>set_point</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1aaa79f9a7574ebe6963620a7552b91419" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>Triangulation_data_structure</name></member>
      <member refid="classTriangulationDataStructure__3_1_1Vertex_1af8e23ae87a8d7ef4bc67a8fdcab85b92" prot="public" virt="non-virtual"><scope>TriangulationDataStructure_3::Vertex</scope><name>Vertex_handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
