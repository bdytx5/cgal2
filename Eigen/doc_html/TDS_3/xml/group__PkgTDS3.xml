<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgTDS3" kind="group">
    <compoundname>PkgTDS3</compoundname>
    <title>3D Triangulation Data Structure Reference</title>
    <innergroup refid="group__PkgTDS3Concepts">Concepts</innergroup>
    <innergroup refid="group__PkgTDS3Classes">Classes</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="tds3_small.png"></image>
   Cl√©ment Jamin, Sylvain Pion and Monique Teillaud This package provides a data structure to store a three-dimensional triangulation that has the topology of a three-dimensional sphere. The package acts as a container for the vertices and cells of the triangulation and provides basic combinatorial operations on the triangulation. <linebreak/>
   <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:pt-tds3-18b">cgal:pt-tds3-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para><para>The triangulation data structure is able to represent a triangulation of a topological sphere <formula id="10">$ S^d$</formula> of <formula id="11">$ \mathbb{R}^{d+1}$</formula>, for <formula id="12">$ d \in \{-1,0,1,2,3\}$</formula>. (See <ref refid="index_1TDS3secintro" kindref="member">Representation</ref>.)</para><para>The vertex class of a 3D-triangulation data structure must define a number of types and operations. The requirements that are of geometric nature are required only when the triangulation data structure is used as a layer for the geometric triangulation classes. (See Section <ref refid="index_1TDS3secdesign" kindref="member">Software Design</ref>.)</para><para>The cell class of a triangulation data structure stores four handles to its four vertices and four handles to its four neighbors. The vertices are indexed 0, 1, 2, and 3 in a consistent order. The neighbor indexed <formula id="2">$ i$</formula> lies opposite to vertex <computeroutput>i</computeroutput>.</para><para>In degenerate dimensions, cells are used to store faces of maximal dimension: in dimension 2, each cell represents only one facet of index 3, and 3 edges <formula id="13">$ (0,1)$</formula>, <formula id="14">$ (1,2)$</formula> and <formula id="15">$ (2,0)$</formula>; in dimension 1, each cell represents one edge <formula id="13">$ (0,1)$</formula>. (See Section <ref refid="index_1TDS3secintro" kindref="member">Representation</ref>.)</para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classTriangulationDataStructure__3_1_1Cell" kindref="compound">TriangulationDataStructure_3::Cell</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classTriangulationDataStructure__3_1_1Vertex" kindref="compound">TriangulationDataStructure_3::Vertex</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__3" kindref="compound">CGAL::Triangulation_data_structure_3</ref>&lt;<ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref>,<ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref>,Vertex_container_strategy,Cell_container_strategy,Concurrency_tag&gt;</computeroutput> is a model for the concept of the 3D-triangulation data structure <computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></computeroutput>. It is templated by base classes for vertices and cells.</para></listitem></itemizedlist>
</para><para>CGAL provides base vertex classes and base cell classes:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__cell__base__3" kindref="compound">CGAL::Triangulation_ds_cell_base_3</ref>&lt;TDS&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">CGAL::Triangulation_ds_vertex_base_3</ref>&lt;TDS&gt;</computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Helper Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Triangulation__utils__3" kindref="compound">CGAL::Triangulation_utils_3</ref></computeroutput> defines operations on the indices of vertices and neighbors within a cell of a triangulation. </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
