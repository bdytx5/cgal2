<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Level__interval" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Level_interval</compoundname>
    <includes local="no">CGAL/Level_interval.h</includes>
    <templateparamlist>
      <param>
        <type>typename FaceHandle</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Level__interval_1a2a4248814434f89e629f2b4c17a254d4" prot="public" static="no">
        <type>FT</type>
        <definition>typedef FT CGAL::Level_interval&lt; FaceHandle &gt;::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
<para>The type of the <formula id="5">$ z$</formula>-coordinate of points stored in vertices of faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Level_interval.h" line="29" column="1" bodyfile="CGAL/Level_interval.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Level__interval_1ace10f8d42f397588654a9f83c7fdecf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Level_interval&lt; FaceHandle &gt;::Level_interval</definition>
        <argsstring>()</argsstring>
        <name>Level_interval</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Level_interval.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Level__interval_1ac87511db8d72a8d0d9f4e92020839477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Level_interval&lt; FaceHandle &gt;::Level_interval</definition>
        <argsstring>(FaceHandle fh)</argsstring>
        <name>Level_interval</name>
        <param>
          <type>FaceHandle</type>
          <declname>fh</declname>
        </param>
        <briefdescription>
<para>Constructs the interval with smallest and largest <computeroutput>z</computeroutput> coordinate of the points stored in the vertices of the face <computeroutput>fh</computeroutput> points to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Level_interval.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Level__interval_1a1ce2de53c1079514dc0495a7b45d37e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FaceHandle</type>
        <definition>FaceHandle CGAL::Level_interval&lt; FaceHandle &gt;::face_handle</definition>
        <argsstring>()</argsstring>
        <name>face_handle</name>
        <briefdescription>
<para>Returns the face handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Level_interval.h" line="55" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Level__interval_1a556b0d19a35c8283577666298b92f6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FaceHandle</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Level_interval&lt; FaceHandle &gt; &amp;i)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Level__interval" kindref="compound">Level_interval</ref>&lt; FaceHandle &gt; &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Inserts the interval <computeroutput>i</computeroutput> into the stream <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The output operator for <computeroutput>*Face_handle</computeroutput> is defined. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Level_interval.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Level__interval" kindref="compound">Level_interval</ref></computeroutput> represents intervals for the minimum and maximum value of the <computeroutput>z</computeroutput>-coordinate of a face of a triangulation. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a handle with the value type <computeroutput>Face</computeroutput>, which must have a nested type <computeroutput>Vertex</computeroutput>, which must have a nested type <computeroutput>Point</computeroutput>, whose <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel_traits</ref>&lt;Point&gt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> must have a nested type <computeroutput>FT</computeroutput>. These requirements are fulfilled, if one uses a CGAL triangulation and a CGAL <computeroutput><ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Level_interval.h" line="20" column="1" bodyfile="CGAL/Level_interval.h" bodystart="20" bodyend="59"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Level__interval_1a1ce2de53c1079514dc0495a7b45d37e9" prot="public" virt="non-virtual"><scope>CGAL::Level_interval</scope><name>face_handle</name></member>
      <member refid="classCGAL_1_1Level__interval_1ace10f8d42f397588654a9f83c7fdecf0" prot="public" virt="non-virtual"><scope>CGAL::Level_interval</scope><name>Level_interval</name></member>
      <member refid="classCGAL_1_1Level__interval_1ac87511db8d72a8d0d9f4e92020839477" prot="public" virt="non-virtual"><scope>CGAL::Level_interval</scope><name>Level_interval</name></member>
      <member refid="classCGAL_1_1Level__interval_1a556b0d19a35c8283577666298b92f6fe" prot="public" virt="non-virtual"><scope>CGAL::Level_interval</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Level__interval_1a2a4248814434f89e629f2b4c17a254d4" prot="public" virt="non-virtual"><scope>CGAL::Level_interval</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
