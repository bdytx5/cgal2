<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgIntervalSkipList" kind="group">
    <compoundname>PkgIntervalSkipList</compoundname>
    <title>Interval Skip List Reference</title>
    <innerclass refid="classCGAL_1_1Interval__skip__list" prot="public">CGAL::Interval_skip_list</innerclass>
    <innerclass refid="classCGAL_1_1Interval__skip__list__interval" prot="public">CGAL::Interval_skip_list_interval</innerclass>
    <innerclass refid="classCGAL_1_1Level__interval" prot="public">CGAL::Level_interval</innerclass>
    <innergroup refid="group__PkgIntervalSkipListConcepts">Concepts</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="query.png"></image>
   Andreas Fabri An interval skip list is a data structure for finding all intervals that contain a point, and for stabbing queries, that is for answering the question whether a given point is contained in an interval or not. For a triangulated terrain, this allows to quickly identify the triangles which intersect an iso line.  <linebreak/>
   <bold>Introduced in:</bold> CGAL 3.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:f-isl-18b">cgal:f-isl-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para><para>This chapter presents the interval skip list introduced by Hanson <ref refid="citelist_1CITEREF_h-islds-91" kindref="member">[1]</ref>, and derived from the skip list data structure <ref refid="citelist_1CITEREF_p-slpab-90" kindref="member">[2]</ref>.</para><para>The data structure stores intervals and allows to perform stabbing queries, that is to test whether a point is covered by any of the intervals. It further allows to find all intervals that contain a point.</para><para>The interval skip list is, as far as its functionality is concerned, related to the <computeroutput>Segment_tree_d</computeroutput>. Both allow to do stabbing queries and both allow to find all intervals that contain a given point. The implementation of segment trees in CGAL works in higher dimensions, whereas the interval skip list is limited to the 1D case. However, this interval skip list implementation is fully dynamic, whereas the segment tree implementation in CGAL is static, that is all intervals must be known in advance.</para><para>This package has one concept, namely for the interval with which the interval skip list class is parameterized.</para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Interval__skip__list" kindref="compound">CGAL::Interval_skip_list</ref>&lt;<ref refid="classInterval" kindref="compound">Interval</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Interval__skip__list__interval" kindref="compound">CGAL::Interval_skip_list_interval</ref>&lt;Value&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Level__interval" kindref="compound">CGAL::Level_interval</ref>&lt;FaceHandle&gt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
