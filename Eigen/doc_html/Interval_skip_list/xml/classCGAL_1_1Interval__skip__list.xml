<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Interval__skip__list" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Interval_skip_list</compoundname>
    <includes local="no">CGAL/Interval_skip_list.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classInterval" kindref="compound">Interval</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Interval__skip__list_1abdbdd1d92de99dbf3b185705afea68dd" prot="public" static="no">
        <type><ref refid="classInterval_1ab0d9bb9bd358241a89e8de776182b418" kindref="member">Interval::Value</ref></type>
        <definition>typedef Interval::Value CGAL::Interval_skip_list&lt; Interval &gt;::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
<para>the type of inf and sup of the interval. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="31" column="1" bodyfile="CGAL/Interval_skip_list.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Interval__skip__list_1acdbc9ab64b23d19855f9a68a1ffee8c9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Interval_skip_list&lt; Interval &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>An iterator over all intervals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="36" column="1" bodyfile="CGAL/Interval_skip_list.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a3cee1c203923039a795beb296f09a01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Interval_skip_list&lt; Interval &gt;::Interval_skip_list</definition>
        <argsstring>()</argsstring>
        <name>Interval_skip_list</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a4506267838a2c82ddab041b180ca882e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Interval_skip_list&lt; Interval &gt;::Interval_skip_list</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>Interval_skip_list</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Constructor that inserts the iterator range <computeroutput>[first, last)</computeroutput> in the interval skip list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with value type <computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a452f3f75ff3c03212e48203070741eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CGAL::Interval_skip_list&lt; Interval &gt;::insert</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Inserts the iterator range <computeroutput>[first, last)</computeroutput> in the interval skip list, and returns the number of inserted intervals. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with value type <computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1ac5807f7f081eb9e4a62796d083ab223d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Interval_skip_list&lt; Interval &gt;::insert</definition>
        <argsstring>(const Interval &amp;i)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classInterval" kindref="compound">Interval</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Inserts interval <computeroutput>i</computeroutput> in the interval skip list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a657e004bd4fe5b3539e43fb0ea7b0d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Interval_skip_list&lt; Interval &gt;::remove</definition>
        <argsstring>(const Interval &amp;i)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="classInterval" kindref="compound">Interval</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Removes interval <computeroutput>i</computeroutput> from the interval skip list. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> iff removal was successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a8e4b9201a3fca0c10f0b8393d960af6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Interval_skip_list&lt; Interval &gt;::is_contained</definition>
        <argsstring>(const Value &amp;v)</argsstring>
        <name>is_contained</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Interval__skip__list_1abdbdd1d92de99dbf3b185705afea68dd" kindref="member">Value</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> iff there is an interval that contains <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a49a0eca03e485d3ef328c328eec18cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Interval_skip_list&lt; Interval &gt;::find_intervals</definition>
        <argsstring>(const Value &amp;v, OutputIterator out)</argsstring>
        <name>find_intervals</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Interval__skip__list_1abdbdd1d92de99dbf3b185705afea68dd" kindref="member">Value</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Writes the intervals <computeroutput>i</computeroutput> with <computeroutput>i.inf()</computeroutput> <formula id="4">$ \leq$</formula> <computeroutput>v</computeroutput> <formula id="4">$ \leq$</formula> <computeroutput>i.sup</computeroutput> to the output iterator <computeroutput>out</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an output iterator with value type <computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a7e5052b16ceb9ec040862a26947045cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Interval_skip_list&lt; Interval &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Removes all intervals from the interval skip list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a448e608116a4ddff43c2822beaed56db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Interval__skip__list_1acdbc9ab64b23d19855f9a68a1ffee8c9" kindref="member">const_iterator</ref></type>
        <definition>const_iterator CGAL::Interval_skip_list&lt; Interval &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator over all intervals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1aaa57b6b49702a38d8dc470ef525c9de2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Interval__skip__list_1acdbc9ab64b23d19855f9a68a1ffee8c9" kindref="member">const_iterator</ref></type>
        <definition>const_iterator CGAL::Interval_skip_list&lt; Interval &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the past the end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="111" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Interval__skip__list_1a32d8500e9f8715e1492473313143b642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typenme</type>
            <declname>Interval</declname>
            <defname>Interval</defname>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Interval_skip_list&lt; Interval &gt; &amp;isl)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Interval__skip__list" kindref="compound">Interval_skip_list</ref>&lt; <ref refid="classInterval" kindref="compound">Interval</ref> &gt; &amp;</type>
          <declname>isl</declname>
        </param>
        <briefdescription>
<para>Inserts the interval skip list <computeroutput>isl</computeroutput> into the stream <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The output operator must be defined for <computeroutput><ref refid="classInterval" kindref="compound">Interval</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Interval_skip_list.h" line="123" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Interval__skip__list" kindref="compound">Interval_skip_list</ref></computeroutput> is a dynamic data structure that allows to find all members of a set of intervals that overlap a point. </para>    </briefdescription>
    <detaileddescription>
<para><bold>Implementation</bold><linebreak/>
</para><para>The insertion and deletion of a segment in the interval skip list takes expected time <formula id="0">$ O(\log^2 n)$</formula>, if the segment endpoints are chosen from a continuous distribution. A stabbing query takes expected time <formula id="1">$ O(\log n)$</formula>, and finding all intervals that contain a point takes expected time <formula id="2">$ O(\log n + k)$</formula>, where <formula id="3">$ k$</formula> is the number of intervals.</para><para>The implementation is based on the code developed by Eric N. Hansen. </para>    </detaileddescription>
    <location file="CGAL/Interval_skip_list.h" line="22" column="1" bodyfile="CGAL/Interval_skip_list.h" bodystart="22" bodyend="115"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Interval__skip__list_1a448e608116a4ddff43c2822beaed56db" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a7e5052b16ceb9ec040862a26947045cf" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1acdbc9ab64b23d19855f9a68a1ffee8c9" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>const_iterator</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1aaa57b6b49702a38d8dc470ef525c9de2" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>end</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a49a0eca03e485d3ef328c328eec18cb5" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>find_intervals</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a452f3f75ff3c03212e48203070741eb0" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1ac5807f7f081eb9e4a62796d083ab223d" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a3cee1c203923039a795beb296f09a01b" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>Interval_skip_list</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a4506267838a2c82ddab041b180ca882e" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>Interval_skip_list</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a8e4b9201a3fca0c10f0b8393d960af6e" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>is_contained</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a32d8500e9f8715e1492473313143b642" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1a657e004bd4fe5b3539e43fb0ea7b0d95" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Interval__skip__list_1abdbdd1d92de99dbf3b185705afea68dd" prot="public" virt="non-virtual"><scope>CGAL::Interval_skip_list</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
