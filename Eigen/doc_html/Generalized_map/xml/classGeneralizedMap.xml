<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classGeneralizedMap" kind="class" language="C++" prot="public">
    <compoundname>GeneralizedMap</compoundname>
    <includes local="no">Concepts/GeneralizedMap.h</includes>
      <sectiondef kind="user-defined">
      <header>Access Member Functions</header>
      <memberdef kind="function" id="classGeneralizedMap_1a4920caebca0178bd59bae1fe8280dffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Dart_handle</type>
        <definition>Dart_handle GeneralizedMap::alpha</definition>
        <argsstring>(Dart_handle dh, int i, int j)</argsstring>
        <name>alpha</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="13">$ \alpha_j$</formula>( <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>)). </para>        </briefdescription>
        <detaileddescription>
<para>Overloads of this member function are defined that take from one to nine integer as arguments. For each function, alphas are applied in the same order as their indices are given as parameters.</para><para>For example <computeroutput>alpha(dh,1)</computeroutput>= <formula id="15">$ \alpha_1$</formula>(<computeroutput>*dh</computeroutput>), and <computeroutput>alpha(dh,1,2,3,0)</computeroutput>= <formula id="3">$ \alpha_0$</formula>( <formula id="16">$ \alpha_3$</formula>( <formula id="17">$ \alpha_2$</formula>( <formula id="15">$ \alpha_1$</formula>(<computeroutput>*dh</computeroutput>)))). <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, 0 <formula id="18">$ \leq $</formula> <emphasis>j</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1ad1af2f8c7648ae028be1c769de10bb18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Dart_const_handle</type>
        <definition>Dart_const_handle GeneralizedMap::alpha</definition>
        <argsstring>(Dart_const_handle dh, int i, int j) const</argsstring>
        <name>alpha</name>
        <param>
          <type>Dart_const_handle</type>
          <declname>dh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="13">$ \alpha_j$</formula>( <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>)). </para>        </briefdescription>
        <detaileddescription>
<para>Overloads of this member function are defined that take from one to nine integer as arguments. <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, 0 <formula id="18">$ \leq $</formula> <emphasis>j</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1a25fc38ab3f3edd25974e4ad2664d10c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>int</type>
            <declname>j</declname>
            <defname>j</defname>
          </param>
        </templateparamlist>
        <type>Dart_handle</type>
        <definition>Dart_handle GeneralizedMap::alpha</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>alpha</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="13">$ \alpha_j$</formula>( <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>)). </para>        </briefdescription>
        <detaileddescription>
<para>Overloads of this member function are defined that take from one to nine integer as template arguments. For each function, alphas are applied in the same order as their indices are given as template arguments.</para><para>For example <computeroutput>alpha&lt;1&gt;(dh)</computeroutput>= <formula id="15">$ \alpha_1$</formula>(<computeroutput>*dh</computeroutput>), and <computeroutput>alpha&lt;1,2,3,0&gt;(dh)</computeroutput>= <formula id="3">$ \alpha_0$</formula>( <formula id="16">$ \alpha_3$</formula>( <formula id="17">$ \alpha_2$</formula>( <formula id="15">$ \alpha_1$</formula>(<computeroutput>*dh</computeroutput>)))). <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, 0 <formula id="18">$ \leq $</formula> <emphasis>j</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1a7d4daecd629685adbdb86bcd7cf3dfc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>int</type>
            <declname>j</declname>
            <defname>j</defname>
          </param>
        </templateparamlist>
        <type>Dart_const_handle</type>
        <definition>Dart_const_handle GeneralizedMap::alpha</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>alpha</name>
        <param>
          <type>Dart_const_handle</type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="13">$ \alpha_j$</formula>( <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>)). </para>        </briefdescription>
        <detaileddescription>
<para>Overloads of this member function are defined that take from one to nine integer as template arguments. <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, 0 <formula id="18">$ \leq $</formula> <emphasis>j</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1ab8d321c182b8cfc669c438b101f3f6de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GeneralizedMap::is_orientable</definition>
        <argsstring>() const</argsstring>
        <name>is_orientable</name>
        <briefdescription>
<para>Returns true iff the current generalized map is orientable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1a89e3d7e21cb5a7b7303e92e655a68f6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GeneralizedMap::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
<para>Returns true iff the generalized map is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A generalized map is valid (see Sections <ref refid="index_1sec_definition_gmap" kindref="member">Mathematical Definitions</ref> and <ref refid="index_1ssecgenmapvalidity" kindref="member">Generalized Map Properties</ref>) if for all its darts <computeroutput>d</computeroutput> <formula id="20">$\in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>:</para><para><itemizedlist>
<listitem><para><formula id="21">$ \forall $</formula> <emphasis>i</emphasis>, 0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>: <formula id="22">$ \alpha_i(\alpha_i(d))=d$</formula>;</para></listitem><listitem><para><formula id="21">$ \forall $</formula> <emphasis>i</emphasis>, <formula id="21">$ \forall $</formula> <emphasis>j</emphasis> such that 0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>-2 and <emphasis>i</emphasis>+2 <formula id="18">$ \leq $</formula> <emphasis>j</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>: <formula id="23">$ \alpha_j(\alpha_i(\alpha_j(\alpha_i(d))))=d$</formula>;</para></listitem><listitem><para><formula id="21">$ \forall $</formula> <emphasis>i</emphasis>, 0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref> such that <emphasis>i</emphasis>-attributes are non void:<itemizedlist>
<listitem><para><formula id="21">$ \forall $</formula> <emphasis>d2</emphasis> in the same <emphasis>i</emphasis>-cell than <emphasis>d</emphasis>: <emphasis>d</emphasis> and <emphasis>d2</emphasis> have the same <emphasis>i</emphasis>-attribute;</para></listitem><listitem><para><formula id="21">$ \forall $</formula> <emphasis>d2</emphasis> in a different <emphasis>i</emphasis>-cell than <emphasis>d</emphasis>: <emphasis>d</emphasis> and <emphasis>d2</emphasis> have different <emphasis>i</emphasis>-attributes. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classGeneralizedMap_1a6197c4b336eb5d16432ece30eccf95e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GeneralizedMap::link_alpha</definition>
        <argsstring>(Dart_handle dh1, Dart_handle dh2)</argsstring>
        <name>link_alpha</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh1</declname>
        </param>
        <param>
          <type>Dart_handle</type>
          <declname>dh2</declname>
        </param>
        <briefdescription>
<para>Links <computeroutput>*dh1</computeroutput> and <computeroutput>*dh2</computeroutput> by <formula id="14">$ \alpha_i$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>The generalized map can be no longer valid after this operation. If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, non void attributes of <computeroutput>*dh1</computeroutput> and <computeroutput>*dh2</computeroutput> are updated: if one dart has an attribute and the second dart not, the non null attribute is associated to the dart having a null attribute. If both darts have an attribute, the attribute of <computeroutput>*dh1</computeroutput> is associated to <computeroutput>*dh2</computeroutput>. <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, <computeroutput>*dh1</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>, <computeroutput>*dh2</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref> and (<emphasis>i</emphasis> <formula id="24">$ &lt;$</formula> 2 or <computeroutput>dh1</computeroutput> <formula id="25">$ \neq$</formula><computeroutput>dh2</computeroutput>). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1a606ad087f9795771924794422bdae1bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GeneralizedMap::unlink_alpha</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>unlink_alpha</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Unlinks <computeroutput>*dh</computeroutput> and <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>) by <formula id="14">$ \alpha_i$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>The generalized map can be no longer valid after this operation. Attributes of <computeroutput>*dh</computeroutput> and <formula id="14">$ \alpha_i$</formula>(<computeroutput>*dh</computeroutput>) are not modified. <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, <computeroutput>*dh</computeroutput> <formula id="19">$ \in$</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>darts()</computeroutput></ref>, and <computeroutput>*dh</computeroutput> is not <emphasis>i</emphasis>-free. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classGeneralizedMap_1a149d20ef211f5c855ca8a024cffe4f41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GeneralizedMap::is_sewable</definition>
        <argsstring>(Dart_const_handle dh1, Dart_const_handle dh2) const</argsstring>
        <name>is_sewable</name>
        <param>
          <type>Dart_const_handle</type>
          <declname>dh1</declname>
        </param>
        <param>
          <type>Dart_const_handle</type>
          <declname>dh2</declname>
        </param>
        <briefdescription>
<para>Returns true iff <computeroutput>*dh1</computeroutput> can be <emphasis>i</emphasis>-sewn with <computeroutput>*dh2</computeroutput> by keeping the generic map valid. </para>        </briefdescription>
        <detaileddescription>
<para>This is true if there is a bijection <emphasis>f</emphasis> between all the darts of the orbit <emphasis>D1</emphasis>= <formula id="2">$ \langle{}$</formula> <formula id="3">$ \alpha_0$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="5">$ \alpha_{i-2}$</formula>, <formula id="6">$ \alpha_{i+2}$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="7">$ \alpha_d$</formula> <formula id="8">$ \rangle{}$</formula>(<emphasis>*dh1</emphasis>) and <emphasis>D2</emphasis>= <formula id="2">$ \langle{}$</formula> <formula id="3">$ \alpha_0$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="5">$ \alpha_{i-2}$</formula>, <formula id="6">$ \alpha_{i+2}$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="7">$ \alpha_d$</formula> <formula id="8">$ \rangle{}$</formula>(<emphasis>*dh2</emphasis>) satisfying:<itemizedlist>
<listitem><para><emphasis>f</emphasis>(<emphasis>*dh1</emphasis>)=<emphasis>*dh2</emphasis>,</para></listitem><listitem><para><formula id="21">$ \forall $</formula> <emphasis>e</emphasis> <formula id="19">$ \in$</formula> <emphasis>D1</emphasis>, <formula id="21">$ \forall $</formula> <emphasis>j</emphasis> <formula id="19">$ \in$</formula> {1, <formula id="4">$ \ldots$</formula>,<emphasis>i</emphasis>-2,<emphasis>i</emphasis>+2, <formula id="4">$ \ldots$</formula>,<emphasis>d</emphasis>}, <emphasis>f</emphasis>( <formula id="13">$ \alpha_j$</formula>(<emphasis>e</emphasis>))= <formula id="13">$ \alpha_j$</formula>(<emphasis>f</emphasis>(<emphasis>e</emphasis>)).</para></listitem></itemizedlist>
</para><para><simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, <computeroutput>*dh1</computeroutput> <formula id="26">$ \in $</formula> <computeroutput>darts()</computeroutput>, and <computeroutput>*dh2</computeroutput> <formula id="26">$ \in $</formula> <computeroutput>darts()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1ab521d38908d046c0883d324fb29ef670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GeneralizedMap::sew</definition>
        <argsstring>(Dart_handle dh1, Dart_handle dh2)</argsstring>
        <name>sew</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh1</declname>
        </param>
        <param>
          <type>Dart_handle</type>
          <declname>dh2</declname>
        </param>
        <briefdescription>
<para><emphasis>i</emphasis>-sew darts <computeroutput>*dh1</computeroutput> and <computeroutput>*dh2</computeroutput>, by keeping the generic map valid. </para>        </briefdescription>
        <detaileddescription>
<para>Links by <formula id="14">$ \alpha_i$</formula> two by two all the darts of the orbit <emphasis>D1</emphasis>= <formula id="2">$ \langle{}$</formula> <formula id="3">$ \alpha_0$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="5">$ \alpha_{i-2}$</formula>, <formula id="6">$ \alpha_{i+2}$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="7">$ \alpha_d$</formula> <formula id="8">$ \rangle{}$</formula>(<computeroutput>*dh1</computeroutput>) and <emphasis>D2</emphasis>= <formula id="2">$ \langle{}$</formula> <formula id="3">$ \alpha_0$</formula>, <formula id="17">$ \alpha_2$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="5">$ \alpha_{i-2}$</formula>, <formula id="6">$ \alpha_{i+2}$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="7">$ \alpha_d$</formula> <formula id="8">$ \rangle{}$</formula>(<computeroutput>*dh2</computeroutput>) such that <emphasis>d2</emphasis>=<emphasis>f</emphasis>(<emphasis>d1</emphasis>), where <emphasis>f</emphasis> is the bijection between <emphasis>D1</emphasis> and <emphasis>D2</emphasis> satisfying: <emphasis>f</emphasis>(<emphasis>*dh1</emphasis>)=<emphasis>*dh2</emphasis>, and for all <emphasis>e</emphasis> <formula id="19">$ \in$</formula> <emphasis>D1</emphasis>, for all <emphasis>j</emphasis> <formula id="19">$ \in$</formula> {1, <formula id="4">$ \ldots$</formula>,<emphasis>i</emphasis>-2,<emphasis>i</emphasis>+2, <formula id="4">$ \ldots$</formula>,<emphasis>d</emphasis>}, <emphasis>f</emphasis>( <formula id="13">$ \alpha_j$</formula>(<emphasis>e</emphasis>))= <formula id="13">$ \alpha_j$</formula>(<emphasis>f</emphasis>(<emphasis>e</emphasis>)).</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, when necessary, non void attributes are updated to ensure the validity of the generic map: for each <emphasis>j</emphasis>-cells <emphasis>c1</emphasis> and <emphasis>c2</emphasis> which are merged into one <emphasis>j</emphasis>-cell during the sew, the two associated attributes <emphasis>attr1</emphasis> and <emphasis>attr2</emphasis> are considered. If one attribute is NULL and the other not, the non NULL attribute is associated to all the darts of the resulting cell. When the two attributes are non NULL, functor <ref refid="classCellAttribute_1a31081515f9da08876797a998f7199b27" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>Attribute_type&lt;i&gt;::type::On_merge</computeroutput></ref> is called on the two attributes <emphasis>attr1</emphasis> and <emphasis>attr2</emphasis>. If set, the dynamic onmerge function of <emphasis>i</emphasis>-attributes is also called on <emphasis>attr1</emphasis> and <emphasis>attr2</emphasis>. Then, the attribute <emphasis>attr1</emphasis> is associated to all darts of the resulting <emphasis>j</emphasis>-cell. Finally, attribute <emphasis>attr2</emphasis> is removed from the generic map. <simplesect kind="pre"><para><ref refid="classGeneralizedMap_1a149d20ef211f5c855ca8a024cffe4f41" kindref="member"><computeroutput>is_sewable&lt;i&gt;(dh1,dh2)</computeroutput></ref>.</para></simplesect>
</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGeneralizedMap_1a5bf1efadce33d43e4eb2e32844084591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GeneralizedMap::unsew</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>unsew</name>
        <param>
          <type>Dart_handle</type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para><emphasis>i</emphasis>-unsew darts <computeroutput>*dh</computeroutput> and <computeroutput>*opposite&lt;i&gt;(*dh)</computeroutput>, by keeping the generic map valid. </para>        </briefdescription>
        <detaileddescription>
<para>Unlinks by <formula id="14">$ \alpha_i$</formula> all the darts in the orbit <formula id="2">$ \langle{}$</formula> <formula id="3">$ \alpha_0$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="5">$ \alpha_{i-2}$</formula>, <formula id="6">$ \alpha_{i+2}$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="7">$ \alpha_d$</formula> <formula id="8">$ \rangle{}$</formula>(<computeroutput>*dh</computeroutput>).</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, when necessary, non void attributes are updated to ensure the validity of the generic map: for each <emphasis>j</emphasis>-cell <emphasis>c</emphasis> split in two <emphasis>j</emphasis>-cells <emphasis>c1</emphasis> and <emphasis>c2</emphasis> by the operation, if <emphasis>c</emphasis> is associated to a <emphasis>j</emphasis>-attribute <emphasis>attr1</emphasis>, then this attribute is duplicated into <emphasis>attr2</emphasis>, and all the darts belonging to <emphasis>c2</emphasis> are associated with this new attribute. Finally, the functor <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>Attribute_type&lt;i&gt;::type::On_split</computeroutput></ref> is called on the two attributes <emphasis>attr1</emphasis> and <emphasis>attr2</emphasis>. If set, the dynamic onsplit function of <emphasis>i</emphasis>-attributes is also called on <emphasis>attr1</emphasis> and <emphasis>attr2</emphasis>. <simplesect kind="pre"><para>0 <formula id="18">$ \leq $</formula> <emphasis>i</emphasis> <formula id="18">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>dimension</computeroutput></ref>, <computeroutput>*dh</computeroutput> <formula id="26">$ \in $</formula> <computeroutput>darts()</computeroutput> and <computeroutput>*dh</computeroutput> is not <emphasis>i</emphasis>-free.</para></simplesect>
</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated thus the generic map can be no more valid after this operation.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GeneralizedMap.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGeneralizedMap" kindref="compound">GeneralizedMap</ref></computeroutput> defines a <emphasis>d</emphasis>-dimensional generalized map. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000001"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classGenericMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag">GenericMap</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><ref refid="classCGAL_1_1Generalized__map" kindref="compound"><computeroutput>CGAL::Generalized_map&lt;d,Items,Alloc&gt;</computeroutput></ref></para></xrefdescription></xrefsect></para><para>For a generalized map, the function <ref refid="classGenericMap_1a871e921eff665637dd5b30eb5169856a" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>next</computeroutput></ref> is equal to <formula id="10">$ \alpha_1\circ\alpha_0$</formula>, <ref refid="classGenericMap_1a1df4fa8da65992fd9d0593f32d695285" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>previous</computeroutput></ref> is equal to <formula id="11">$ \alpha_0\circ\alpha_1$</formula> and the function <ref refid="classGenericMap_1a956fbbb8fb58f6d1e7813ca286d50012" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Combinatorial_map.tag"><computeroutput>opposite&lt;i&gt;</computeroutput></ref> is equal to <formula id="12">$ \alpha_i\circ\alpha_0$</formula>. </para>    </detaileddescription>
    <location file="Concepts/GeneralizedMap.h" line="15" column="1" bodyfile="Concepts/GeneralizedMap.h" bodystart="15" bodyend="139"/>
    <listofallmembers>
      <member refid="classGeneralizedMap_1a4920caebca0178bd59bae1fe8280dffb" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>alpha</name></member>
      <member refid="classGeneralizedMap_1ad1af2f8c7648ae028be1c769de10bb18" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>alpha</name></member>
      <member refid="classGeneralizedMap_1a25fc38ab3f3edd25974e4ad2664d10c0" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>alpha</name></member>
      <member refid="classGeneralizedMap_1a7d4daecd629685adbdb86bcd7cf3dfc7" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>alpha</name></member>
      <member refid="classGeneralizedMap_1ab8d321c182b8cfc669c438b101f3f6de" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>is_orientable</name></member>
      <member refid="classGeneralizedMap_1a149d20ef211f5c855ca8a024cffe4f41" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>is_sewable</name></member>
      <member refid="classGeneralizedMap_1a89e3d7e21cb5a7b7303e92e655a68f6b" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>is_valid</name></member>
      <member refid="classGeneralizedMap_1a6197c4b336eb5d16432ece30eccf95e4" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>link_alpha</name></member>
      <member refid="classGeneralizedMap_1ab521d38908d046c0883d324fb29ef670" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>sew</name></member>
      <member refid="classGeneralizedMap_1a606ad087f9795771924794422bdae1bb" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>unlink_alpha</name></member>
      <member refid="classGeneralizedMap_1a5bf1efadce33d43e4eb2e32844084591" prot="public" virt="non-virtual"><scope>GeneralizedMap</scope><name>unsew</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
