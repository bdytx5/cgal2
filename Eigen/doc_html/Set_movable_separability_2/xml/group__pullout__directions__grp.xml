<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__pullout__directions__grp" kind="group">
    <compoundname>pullout_directions_grp</compoundname>
    <title>Pullout Directions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__pullout__directions__grp_1ga861c10709685f4154563d651146129ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; bool, std::pair&lt; typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref>, typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &gt; &gt;</type>
        <definition>std::pair&lt;bool, std::pair&lt;typename CastingTraits_2::Direction_2, typename CastingTraits_2::Direction_2&gt; &gt; CGAL::Set_movable_separability_2::Single_mold_translational_casting::pullout_directions</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CGAL::Polygon_2&lt; CastingTraits_2 &gt;::Edge_const_iterator &amp;it, CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>pullout_directions</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Given a simple polygon and an edge of the polygon, this function determines whether a cavity (of a mold in the plane) that has the shape of the polygon can be used so that the polygon could be casted in the mold using the input edge as the top edge and then pulled out of the mold without colliding into the mold (but possibly sliding along the mold surface). </para>        </briefdescription>
        <detaileddescription>
<para>If the polygon is <emphasis>castable</emphasis> this way, the function computes the closed range of pullout directions.</para><para>The type that substitutes the template parameter <computeroutput>CastingTraits_2</computeroutput> must be a model of the concept <computeroutput><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator to an edge in polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pair of elements, where the first is a Boolean that indicates whether the input edge is a valid top edge, and the second is a closed range of pullout directions represented as a pair of the extreme directions in the range. If the input edge is not a valid top edge, the range is nondeterministic.</para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/pullout_directions.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__pullout__directions__grp_1gad081e61c7e5d83b52ab16810f291eb04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; bool, std::pair&lt; typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref>, typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &gt; &gt;</type>
        <definition>std::pair&lt;bool, std::pair&lt;typename CastingTraits_2::Direction_2, typename CastingTraits_2::Direction_2&gt; &gt; CGAL::Set_movable_separability_2::Single_mold_translational_casting::pullout_directions</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CGAL::Polygon_2&lt; CastingTraits_2 &gt;::Edge_const_iterator &amp;it, CGAL::Orientation orientation, CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>pullout_directions</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Same as above with the additional <computeroutput>orientation</computeroutput> argument. </para>        </briefdescription>
        <detaileddescription>
<para>If the orientation of the polygon is known upon invocation, specify it. Otherwise, it has to be computed. Note that finding the orientation of a polygon requires time linear in the number of edges.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator to an edge in polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>the orientation of <computeroutput>polygon</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pair of elements, where the first is a Boolean that indicates whether the input edge is a valid top edge, and the second is a closed range of pullout directions represented as a pair of the extreme directions in the range. If the input edge is not a valid top edge, the range is nondeterministic.</para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/pullout_directions.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>These functions determine whether a cavity (of a mold in the plane) that has the shape of a given polygon could be casted in the mold using a given edge as the top edge and then pulled out of the mold without colliding into the mold (but possibly sliding along the mold boundary). </para>    </briefdescription>
    <detaileddescription>
<para>If the polygon is <emphasis>castable</emphasis> this way, the function computes the closed range of pullout directions. </para>    </detaileddescription>
  </compounddef>
</doxygen>
