<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__is__pullout__direction__grp" kind="group">
    <compoundname>is_pullout_direction_grp</compoundname>
    <title>Is Pullout Direction</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__is__pullout__direction__grp_1ga0e2c774abc7cc2d8d99e10e243c050e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator</type>
        <definition>CGAL::Polygon_2&lt;CastingTraits_2&gt;::Edge_const_iterator CGAL::Set_movable_separability_2::Single_mold_translational_casting::is_pullout_direction</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CastingTraits_2::Direction_2 &amp;d, const CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>is_pullout_direction</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Given a simple polygon and a direction, this function determines whether a cavity (of a mold in the plane) that has the shape of the polygon could be casted in the mold and then pulled out of the mold in the given direction without colliding into the mold (but possibly sliding along the mold surface). </para>        </briefdescription>
        <detaileddescription>
<para>If the polygon is not castable at all, the function returns <computeroutput>false</computeroutput> whatsoever.</para><para>The type that substitutes the template parameter <computeroutput>CastingTraits_2</computeroutput> must be a model of the concept <computeroutput><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the inspected direction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if <computeroutput>polygon</computeroutput> can be pullout in the <computeroutput>d</computeroutput> direction the iterator of the corresponding top edge, otherwise, <computeroutput>polygon.edges_end()</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/is_pullout_direction.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__is__pullout__direction__grp_1gae0461dca31bd13cba87e8d90f67d55a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator</type>
        <definition>CGAL::Polygon_2&lt;CastingTraits_2&gt;::Edge_const_iterator CGAL::Set_movable_separability_2::Single_mold_translational_casting::is_pullout_direction</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CastingTraits_2::Direction_2 &amp;d, CGAL::Orientation orientation, const CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>is_pullout_direction</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>const <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Same as above with the additional <computeroutput>orientation</computeroutput> argument. </para>        </briefdescription>
        <detaileddescription>
<para>If the orientation of the polygon is known upon invocation, specify it. Otherwise, it has to be computed. Note that finding the orientation of a polygon requires time linear in the number of edges.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the inspected direction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>the orientation of <computeroutput>polygon</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if <computeroutput>polygon</computeroutput> can be pullout in the <computeroutput>d</computeroutput> direction the iterator of the corresponding top edge, otherwise, <computeroutput>polygon.edges_end()</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/is_pullout_direction.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__is__pullout__direction__grp_1ga38d7cb3f61055c10036a7ad42fe75a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Set_movable_separability_2::Single_mold_translational_casting::is_pullout_direction</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CGAL::Polygon_2&lt; CastingTraits_2 &gt;::Edge_const_iterator &amp;it, const typename CastingTraits_2::Direction_2 &amp;d, const CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>is_pullout_direction</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Given a simple polygon, an edge of the polygon, and a direction, this function determines whether a cavity (of a mold in the plane) that has the shape of the polygon can be used so that the polygon could be casted in the mold and then pulled out of the mold in the given direction such that the given edge is used as the top edge without colliding into the mold (but possibly sliding along the mold surface). </para>        </briefdescription>
        <detaileddescription>
<para>Observe, that if polygon can be pulled out in the given direction, but with a top edge different than the given one, the function returns <computeroutput>false</computeroutput>.</para><para>The type that substitutes the template parameter <computeroutput>CastingTraits_2</computeroutput> must be a model of the concept <computeroutput><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator to an edge in polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the tested direction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if <computeroutput>polygon</computeroutput> can be pulled out in the <computeroutput>d</computeroutput> direction with the edge identified by <computeroutput>i</computeroutput> being the top edge, and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/is_pullout_direction.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__is__pullout__direction__grp_1gaec89e1363b03ed160c168de82bec7e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Set_movable_separability_2::Single_mold_translational_casting::is_pullout_direction</definition>
        <argsstring>(const CGAL::Polygon_2&lt; CastingTraits_2 &gt; &amp;polygon, const typename CGAL::Polygon_2&lt; CastingTraits_2 &gt;::Edge_const_iterator &amp;it, const typename CastingTraits_2::Direction_2 &amp;d, CGAL::Orientation orientation, const CastingTraits_2 &amp;traits=CastingTraits_2())</argsstring>
        <name>is_pullout_direction</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">CGAL::Polygon_2</ref>&lt; <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &gt;::Edge_const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const typename <ref refid="classCastingTraits__2_1a3dae442a7b07bd41dc5e0e3e7b964e03" kindref="member">CastingTraits_2::Direction_2</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>const <ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref> &amp;</type>
          <declname>traits</declname>
          <defval><ref refid="classCastingTraits__2" kindref="compound">CastingTraits_2</ref>()</defval>
        </param>
        <briefdescription>
<para>Same as above with the additional <computeroutput>orientation</computeroutput> argument. </para>        </briefdescription>
        <detaileddescription>
<para>If the orientation of the polygon is known upon invocation, specify it. Otherwise, it has to be computed. Note that finding the orientation of a polygon requires time linear in the number of edges.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator to an edge in polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the tested direction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>the orientation of <computeroutput>polygon</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>the traits to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if <computeroutput>polygon</computeroutput> can be pulled out in the <computeroutput>d</computeroutput> direction with the edge identified by <computeroutput>i</computeroutput> being the top edge, and <computeroutput>false</computeroutput> otherwise. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> must be non-degenerate (has at least 3 vertices) and simple, and it does not have three consecutive collinear vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Set_movable_separability_2/Single_mold_translational_casting/is_pullout_direction.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>These functions determine whether a cavity (of a mold in the plane) that has the shape of a given polygon could be casted in the mold and then pulled out of the mold in a given direction without colliding into the mold (but possibly sliding along the mold boundary). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
