<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classAlgebraicKernel__d__1_1_1IsCoprime__1" kind="class" language="C++" prot="public">
    <compoundname>AlgebraicKernel_d_1::IsCoprime_1</compoundname>
    <includes local="no">Concepts/AlgebraicKernel_d_1--IsCoprime_1.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classAlgebraicKernel__d__1_1_1IsCoprime__1_1aa0e2a99fff05a49dcfd7dd13429c2e97" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool AlgebraicKernel_d_1::IsCoprime_1::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" line="24" column="1" bodyfile="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a67cecb0bb01bb743238671b373ee494f" prot="public" static="no">
        <type><ref refid="classAlgebraicKernel__d__1_1ae49b9882d6f700d17476e00933ed20f3" kindref="member">AlgebraicKernel_d_1::Polynomial_1</ref></type>
        <definition>typedef AlgebraicKernel_d_1::Polynomial_1 AlgebraicKernel_d_1::IsCoprime_1::first_argument_type</definition>
        <argsstring></argsstring>
        <name>first_argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" line="29" column="1" bodyfile="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a29b003def0277f4b6935d03ecd3cecad" prot="public" static="no">
        <type><ref refid="classAlgebraicKernel__d__1_1ae49b9882d6f700d17476e00933ed20f3" kindref="member">AlgebraicKernel_d_1::Polynomial_1</ref></type>
        <definition>typedef AlgebraicKernel_d_1::Polynomial_1 AlgebraicKernel_d_1::IsCoprime_1::second_argument_type</definition>
        <argsstring></argsstring>
        <name>second_argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" line="34" column="1" bodyfile="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a04ea7179f6980b8c9f3bdd228aaee0f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1aa0e2a99fff05a49dcfd7dd13429c2e97" kindref="member">result_type</ref></type>
        <definition>result_type AlgebraicKernel_d_1::IsCoprime_1::operator()</definition>
        <argsstring>(const first_argument_type &amp;p1, const second_argument_type &amp;p2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a67cecb0bb01bb743238671b373ee494f" kindref="member">first_argument_type</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a29b003def0277f4b6935d03ecd3cecad" kindref="member">second_argument_type</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput> are coprime. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Determines whether a given pair of univariate polynomials <formula id="26">$ p_1, p_2$</formula> is coprime, namely if <formula id="27">$ \deg({\rm gcd}(p_1 ,p_2)) = 0$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000007"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classAlgebraicKernel__d__1_1_1MakeCoprime__1" kindref="compound">AlgebraicKernel_d_1::MakeCoprime_1</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" line="15" column="1" bodyfile="Concepts/AlgebraicKernel_d_1--IsCoprime_1.h" bodystart="15" bodyend="50"/>
    <listofallmembers>
      <member refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a67cecb0bb01bb743238671b373ee494f" prot="public" virt="non-virtual"><scope>AlgebraicKernel_d_1::IsCoprime_1</scope><name>first_argument_type</name></member>
      <member refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a04ea7179f6980b8c9f3bdd228aaee0f5" prot="public" virt="non-virtual"><scope>AlgebraicKernel_d_1::IsCoprime_1</scope><name>operator()</name></member>
      <member refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1aa0e2a99fff05a49dcfd7dd13429c2e97" prot="public" virt="non-virtual"><scope>AlgebraicKernel_d_1::IsCoprime_1</scope><name>result_type</name></member>
      <member refid="classAlgebraicKernel__d__1_1_1IsCoprime__1_1a29b003def0277f4b6935d03ecd3cecad" prot="public" virt="non-virtual"><scope>AlgebraicKernel_d_1::IsCoprime_1</scope><name>second_argument_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
