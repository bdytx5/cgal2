<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Optimal__transportation__reconstruction__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Optimal_transportation_reconstruction_2</compoundname>
    <includes local="no">CGAL/Optimal_transportation_reconstruction_2.h</includes>
    <templateparamlist>
      <param>
        <type>class Traits</type>
      </param>
      <param>
        <type>class PointPMap</type>
        <defval>boost::typed_identity_property_map &lt;typename Traits::Point_2&gt;</defval>
      </param>
      <param>
        <type>class MassPMap</type>
        <defval>boost::static_property_map &lt;typename Traits::FT&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a5a6558881ec7202b16384318605bb3c3" prot="public" static="no">
        <type>Traits::FT</type>
        <definition>typedef Traits::FT CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Number type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="103" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a8cbbcfc431de3be57cdc3cf986521dc1" prot="public" static="no">
        <type>Traits::Point_2</type>
        <definition>typedef Traits::Point_2 CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>Point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="108" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1ac7070d263cfc0776e18c6e2ac1a5e651" prot="public" static="no">
        <type>Traits::Segment_2</type>
        <definition>typedef Traits::Segment_2 CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::Segment</definition>
        <argsstring></argsstring>
        <name>Segment</name>
        <briefdescription>
<para>Segment type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="113" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a6d945a9ddf0faa394e4d15e2e3e7b831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputRange</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::Optimal_transportation_reconstruction_2</definition>
        <argsstring>(const InputRange &amp;input_range, PointPMap point_map=PointPMap(), MassPMap mass_map=MassPMap(1), std::size_t sample_size=0, bool use_flip=true, unsigned int relocation=2, int verbose=0, Traits traits=Traits())</argsstring>
        <name>Optimal_transportation_reconstruction_2</name>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>PointPMap</type>
          <declname>point_map</declname>
          <defval>PointPMap()</defval>
        </param>
        <param>
          <type>MassPMap</type>
          <declname>mass_map</declname>
          <defval>MassPMap(1)</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>sample_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>use_flip</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>relocation</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>int</type>
          <declname>verbose</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>Traits</type>
          <declname>traits</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>Constructor of the optimal transportation reconstruction class. </para>        </briefdescription>
        <detaileddescription>
<para>It builds an initial simplicial complex for a given range of point-mass pairs.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputRange</parametername>
</parameternamelist>
<parameterdescription>
<para>is a model of <computeroutput>Range</computeroutput> with forward iterators, providing input points and point masses through the <computeroutput>PointPMap</computeroutput> and <computeroutput>MassPMap</computeroutput> property maps.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_range</parametername>
</parameternamelist>
<parameterdescription>
<para>Range of input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> used to access the input points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mass_map</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> used to access the input points&apos; masses. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_size</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>sample_size != 0</computeroutput>, the size of the random sample which replaces the exhaustive priority queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_flip</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> the edge flipping procedure is used to ensure that every edge can be made collapsible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relocation</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of point relocations that are performed between two edge collapses. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Controls how much console output is produced by the algorithm. The values are 0, 1, or &gt; 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>The traits class. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="216" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="216" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Settting Parameters</header>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1afd9b7e1ac33076cce2a7027c8857e511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::set_random_sample_size</definition>
        <argsstring>(std::size_t sample_size)</argsstring>
        <name>set_random_sample_size</name>
        <param>
          <type>std::size_t</type>
          <declname>sample_size</declname>
        </param>
        <briefdescription>
<para>If <computeroutput>sample_size == 0</computeroutput>, the simplification is performed using an exhaustive priority queue. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>sample_size</computeroutput> is stricly positive the simplification is performed using a multiple choice approach, ie, a best-choice selection in a random sample of edge collapse operators, of size <computeroutput>sample_size</computeroutput>. A typical value for the sample size is 15, but this value must be enlarged when targeting a very coarse simplification. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample_size</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>sample_size != 0</computeroutput>, the size of the random sample replaces the priority queue. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="253" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a28260d575a16a1e351381016692ee14f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::set_verbose</definition>
        <argsstring>(int verbose)</argsstring>
        <name>set_verbose</name>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Determines how much console output the algorithm generates. </para>        </briefdescription>
        <detaileddescription>
<para>If set to a value larger than 0 details about the reconstruction process are written to <computeroutput>std::cerr</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>The verbosity level. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="264" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1ad491547e673dcbde076d68018e56ea8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::set_use_flip</definition>
        <argsstring>(const bool use_flip)</argsstring>
        <name>set_use_flip</name>
        <param>
          <type>const bool</type>
          <declname>use_flip</declname>
        </param>
        <briefdescription>
<para>The use_flip parameter determines whether the edge flipping procedure is used for the half-edge collapse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="275" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a124dba5f9ea1fd561df35e499936679d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::set_relocation</definition>
        <argsstring>(unsigned int relocation)</argsstring>
        <name>set_relocation</name>
        <param>
          <type>unsigned int</type>
          <declname>relocation</declname>
        </param>
        <briefdescription>
<para>Sets the number of vertex relocations that are performed between two edge collapses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="284" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a9d13bdd2e76d4503e049728ee006e357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::set_relevance</definition>
        <argsstring>(const FT relevance)</argsstring>
        <name>set_relevance</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a5a6558881ec7202b16384318605bb3c3" kindref="member">FT</ref></type>
          <declname>relevance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relevance</parametername>
</parameternamelist>
<parameterdescription>
<para>The relevance threshold used for filtering the edges. An edge is relevant from the approximation point of view if it is long, covers a large mass (or equivalently the number of points when all masses are equal), and has a small transport cost. This notion is defined as <formula id="0">$ m(e) * |e|^2 / cost(e) $</formula>, where <formula id="1">$ m(e) $</formula> denotes the mass of the points approximated by the edge, <formula id="2">$ |e| $</formula> denotes the edge length and <formula id="3">$ cost(e) $</formula> its approximation error. As the cost is defined by mass time squared distance the relevance is unitless.</para></parameterdescription>
</parameteritem>
</parameterlist>
The default value is 1, so that all edges receiving some mass are considered relevant. Setting a large relevance value is used to get robustness to a large amount of outliers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="313" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="313" bodyend="316"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Simplification</header>
      <description><para>You can freely mix calls of the following functions. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a4da6cbf9c758cd7e04cd281f8bbd4960" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::run_until</definition>
        <argsstring>(std::size_t np)</argsstring>
        <name>run_until</name>
        <param>
          <type>std::size_t</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Computes a shape consisting of <computeroutput>np</computeroutput> points, reconstructing the input points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of points which will be present in the output. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the number of points <computeroutput>np</computeroutput> was reached, <computeroutput>false</computeroutput> if the algorithm was prematurely ended because no more edge collapse was possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1504" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1504" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1af2f0f6e6b52b27e5f558b14f3f670c71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::run</definition>
        <argsstring>(const unsigned steps)</argsstring>
        <name>run</name>
        <param>
          <type>const unsigned</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
<para>Computes a shape, reconstructing the input, by performing <computeroutput>steps</computeroutput> edge collapse operators on the output simplex. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of edge collapse operators to be performed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the required number of steps was performed, <computeroutput>false</computeroutput> if the algorithm was prematurely ended because no more edge collapse was possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1537" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1537" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1ada2cdd4244c0005d0527acdb68cb02cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::run_under_wasserstein_tolerance</definition>
        <argsstring>(const FT tolerance)</argsstring>
        <name>run_under_wasserstein_tolerance</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a5a6558881ec7202b16384318605bb3c3" kindref="member">FT</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Computes a shape, reconstructing the input, by performing edge collapse operators on the output simplex until the user-defined tolerance is reached. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The tolerance is given in the sense of the Wasserstein distance. It is <emphasis>not</emphasis> a Hausdorff tolerance: it does not mean that the distance between the input samples and the output polyline is guaranteed to be less than <computeroutput>tolerance</computeroutput>. It means that the square root of transport cost per mass (homogeneous to a distance) is at most <computeroutput>tolerance</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance on the Wasserstein distance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1575" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1575" bodyend="1591"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1aec29a3302616e3b9975d4f3290af95e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::relocate_all_points</definition>
        <argsstring>()</argsstring>
        <name>relocate_all_points</name>
        <briefdescription>
<para>Since noise and missing data may prevent the reconstructed shape to have sharp corners well located, the algorithm offers the possibility to automatically relocate points after each edge collapse. </para>        </briefdescription>
        <detaileddescription>
<para>The new location of the points is chosen such that the fitting of the output segments to the input points is improved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1597" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1597" bodyend="1638"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Output</header>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1a9eb72be2035c41a456164ada3a3f2f89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointOutputIterator</type>
          </param>
          <param>
            <type>typename IndexOutputIterator</type>
          </param>
          <param>
            <type>typename IndexPairOutputIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::tuple</ref>&lt; PointOutputIterator, IndexOutputIterator, IndexPairOutputIterator &gt;</type>
        <definition>CGAL::cpp11::tuple&lt; PointOutputIterator, IndexOutputIterator, IndexPairOutputIterator&gt; CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::indexed_output</definition>
        <argsstring>(PointOutputIterator points, IndexOutputIterator isolated_points, IndexPairOutputIterator segments) const</argsstring>
        <name>indexed_output</name>
        <param>
          <type>PointOutputIterator</type>
          <declname>points</declname>
        </param>
        <param>
          <type>IndexOutputIterator</type>
          <declname>isolated_points</declname>
        </param>
        <param>
          <type>IndexPairOutputIterator</type>
          <declname>segments</declname>
        </param>
        <briefdescription>
<para>Writes the points and segments of the output simplex in an indexed format into output iterators. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An output iterator with value type <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a8cbbcfc431de3be57cdc3cf986521dc1" kindref="member">Point </ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndexOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An output iterator with value type <computeroutput>std::size_t</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndexPairOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An output iterator with value type <computeroutput>std::pair&lt;std::size_t, std::size_t&gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>The output iterator for all points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isolated_points</parametername>
</parameternamelist>
<parameterdescription>
<para>The output iterator for the indices of isolated points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segments</parametername>
</parameternamelist>
<parameterdescription>
<para>The output iterator for the pairs of segment indices. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1666" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1666" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Optimal__transportation__reconstruction__2_1ad94fc673df480c8b2076ae542fdd0e04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PointOutputIterator</type>
          </param>
          <param>
            <type>class SegmentOutputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Optimal_transportation_reconstruction_2&lt; Traits, PointPMap, MassPMap &gt;::list_output</definition>
        <argsstring>(PointOutputIterator v_it, SegmentOutputIterator e_it) const</argsstring>
        <name>list_output</name>
        <param>
          <type>PointOutputIterator</type>
          <declname>v_it</declname>
        </param>
        <param>
          <type>SegmentOutputIterator</type>
          <declname>e_it</declname>
        </param>
        <briefdescription>
<para>Returns the solid edges and vertices present after the reconstruction process finished. </para>        </briefdescription>
        <detaileddescription>
<para>It takes two output iterators, one for storing the isolated points and one for storing the edges of the reconstructed shape.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An output iterator with value type <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a8cbbcfc431de3be57cdc3cf986521dc1" kindref="member">Point </ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SegmentOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An output iterator with value type <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ac7070d263cfc0776e18c6e2ac1a5e651" kindref="member">Segment </ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="1736" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="1736" bodyend="1777"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides a means to reconstruct a 1-dimensional shape from a set of 2D points with masses. </para>    </briefdescription>
    <detaileddescription>
<para>The algorithm computes an initial 2D Delaunay triangulation from the input points, and performs a simplification of the triangulation by performing half edge collapses, edge flips and vertex relocations.</para><para>The edges are either processed in the order imposed by an priority queue, or in an order based on random selection of edge collapse operators. As the exhaustive priority queue guarantees a higher quality it is the default. The user can switch to the other method, for example for an initial simplification round, by calling <computeroutput><ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1afd9b7e1ac33076cce2a7027c8857e511" kindref="member">set_random_sample_size()</ref></computeroutput>.</para><para>By default edge flip operators are applied to ensure that every edge of the triangulation are candidate to be collapsed, while preserving a valid embedding of the triangulation. This option can be disabled by calling <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ad491547e673dcbde076d68018e56ea8f" kindref="member"><computeroutput>set_use_flip(false)</computeroutput></ref> to reduce the running times.</para><para>By default the vertices are not relocated after each half edge collapse. This option can be changed by setting the number of vertex relocation steps performed between two edge collapse operators.</para><para>The simplification is performed by calling either <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a4da6cbf9c758cd7e04cd281f8bbd4960" kindref="member"><computeroutput>run_until(n)</computeroutput></ref> or <ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1af2f0f6e6b52b27e5f558b14f3f670c71" kindref="member"><computeroutput>run(steps)</computeroutput></ref>. The former simplifies the triangulation until n points remain, while the latter stops after <computeroutput>steps</computeroutput> edge collapse operators have been performed. Furthermore, we can relocate the vertices by calling <computeroutput><ref refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1aec29a3302616e3b9975d4f3290af95e0" kindref="member">relocate_all_points()</ref></computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classOptimalTransportationReconstructionTraits__2" kindref="compound">OptimalTransportationReconstructionTraits_2</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with value type <computeroutput>Traits::Point_2</computeroutput>. Defaults to <ulink url="https://www.boost.org/doc/libs/release/libs/property_map/doc/identity_property_map.html"><computeroutput>boost::typed_identity_property_map&lt;Traits::Point_2&gt;</computeroutput></ulink> (for the case the input is points without mass).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MassPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with value type <computeroutput>Traits::FT</computeroutput> Defaults to <ulink url="https://www.boost.org/doc/libs/release/libs/property_map/doc/static_property_map.html"><computeroutput>boost::static_property_map&lt;Traits::FT&gt;</computeroutput></ulink> (for the case the input is points without mass). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Optimal_transportation_reconstruction_2.h" line="95" column="1" bodyfile="CGAL/Optimal_transportation_reconstruction_2.h" bodystart="94" bodyend="1824"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a5a6558881ec7202b16384318605bb3c3" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a9eb72be2035c41a456164ada3a3f2f89" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>indexed_output</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ad94fc673df480c8b2076ae542fdd0e04" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>list_output</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a6d945a9ddf0faa394e4d15e2e3e7b831" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>Optimal_transportation_reconstruction_2</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a8cbbcfc431de3be57cdc3cf986521dc1" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1aec29a3302616e3b9975d4f3290af95e0" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>relocate_all_points</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1af2f0f6e6b52b27e5f558b14f3f670c71" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>run</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ada2cdd4244c0005d0527acdb68cb02cb" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>run_under_wasserstein_tolerance</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a4da6cbf9c758cd7e04cd281f8bbd4960" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>run_until</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ac7070d263cfc0776e18c6e2ac1a5e651" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>Segment</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1afd9b7e1ac33076cce2a7027c8857e511" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>set_random_sample_size</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a9d13bdd2e76d4503e049728ee006e357" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>set_relevance</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a124dba5f9ea1fd561df35e499936679d" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>set_relocation</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1ad491547e673dcbde076d68018e56ea8f" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>set_use_flip</name></member>
      <member refid="classCGAL_1_1Optimal__transportation__reconstruction__2_1a28260d575a16a1e351381016692ee14f" prot="public" virt="non-virtual"><scope>CGAL::Optimal_transportation_reconstruction_2</scope><name>set_verbose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
