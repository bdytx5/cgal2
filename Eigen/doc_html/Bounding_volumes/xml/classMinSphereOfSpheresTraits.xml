<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classMinSphereOfSpheresTraits" kind="class" language="C++" prot="public">
    <compoundname>MinSphereOfSpheresTraits</compoundname>
    <includes local="no">Concepts/MinSphereOfSpheresTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Constants</header>
      <memberdef kind="variable" id="classMinSphereOfSpheresTraits_1a2281c7d02f22fc6182cba5dc1396e31e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MinSphereOfSpheresTraits::D</definition>
        <argsstring></argsstring>
        <name>D</name>
        <briefdescription>
<para>specifies the dimension of the spheres you want to compute the minsphere of. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="25" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classMinSphereOfSpheresTraits_1abe6d8d91793a32c34f5a17bc28f1bf98" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MinSphereOfSpheresTraits::Sphere</definition>
        <argsstring></argsstring>
        <name>Sphere</name>
        <briefdescription>
<para>is a typedef to to some class representing a sphere. </para>        </briefdescription>
        <detaileddescription>
<para>(The package will compute the minsphere of spheres of type <computeroutput>Sphere</computeroutput>.) The type <computeroutput>Sphere</computeroutput> must provide a copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="37" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMinSphereOfSpheresTraits_1a29f1fcd8f0f18aa3612634e580a4b606" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MinSphereOfSpheresTraits::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>is a (exact or inexact) field number type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FT</parametername>
</parameternamelist>
<parameterdescription>
<para>must either be <computeroutput>double</computeroutput> or <computeroutput>float</computeroutput>, or an exact field number type. (An <emphasis>exact</emphasis> number type is one which evaluates arithmetic expressions involving the four basic operations and comparisions with infinite precision, that is, like in <formula id="162">$ \mathbb{R}$</formula>.) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="44" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMinSphereOfSpheresTraits_1a2b85a73d8bac26b11b4cf66708a5c5ad" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MinSphereOfSpheresTraits::Cartesian_const_iterator</definition>
        <argsstring></argsstring>
        <name>Cartesian_const_iterator</name>
        <briefdescription>
<para>non-mutable model of the STL concept <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> with value type <computeroutput>FT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Used to access the center coordinates of a sphere. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="51" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMinSphereOfSpheresTraits_1aaa26c2ff7703b9e4ea45667acc8b58a4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MinSphereOfSpheresTraits::Use_square_roots</definition>
        <argsstring></argsstring>
        <name>Use_square_roots</name>
        <briefdescription>
<para>must typedef to either <computeroutput><ref refid="group__PkgStlExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput> or <computeroutput><ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The algorithm uses (depending on the type <computeroutput><ref refid="classMinSphereOfSpheresTraits_1a974f1f67169bbe7e246f55b28a487b2e" kindref="member">MinSphereOfSpheresTraits::Algorithm</ref></computeroutput>) floating-point arithmetic internally for some intermediate computations. The type <computeroutput>Use_square_roots</computeroutput> affects how these calculations are done: When <computeroutput>Use_square_roots</computeroutput> is <computeroutput>Tag_true</computeroutput>, the algorithm computing the minsphere will perform square-root operations on <computeroutput>double</computeroutput>s and <computeroutput>float</computeroutput>s where appropriate. On the other hand, if <computeroutput>Use_square_roots</computeroutput> is <computeroutput><ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, the algorithm will work without doing square-roots.</para><para><emphasis>Note:</emphasis> On some platforms the algorithm is much faster when square-roots are disabled (due to lacking hardware support). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="69" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMinSphereOfSpheresTraits_1a974f1f67169bbe7e246f55b28a487b2e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MinSphereOfSpheresTraits::Algorithm</definition>
        <argsstring></argsstring>
        <name>Algorithm</name>
        <briefdescription>
<para>selects the method to compute the minsphere with. </para>        </briefdescription>
        <detaileddescription>
<para>It must typedef to either <computeroutput>CGAL::Default_algorithm</computeroutput>, <computeroutput>CGAL::LP_algorithm</computeroutput> or <computeroutput>CGAL::Farthest_first_heuristic</computeroutput>. The recommended choice is the first, which is a synonym to the one of the other two methods which we consider &quot;the best in practice.&quot; In case of <computeroutput>CGAL::LP_algorithm</computeroutput>, the minsphere will be computed using the LP-algorithm <ref refid="citelist_1CITEREF_msw-sblp-92" kindref="member">[11]</ref>, which in our implementation has maximal expected running time <formula id="138">$ O(2^d n)$</formula> (in the number of operations on the number type <computeroutput>FT</computeroutput>). In case of <computeroutput>CGAL::Farthest_first_heuristic</computeroutput>, a simple heuristic will be used instead which seems to work fine in practice, but comes without a guarantee on the running time. For an inexact number type <computeroutput>FT</computeroutput> we strongly recommend <computeroutput>CGAL::Default_algorithm</computeroutput>, or, if you want, <computeroutput>CGAL::Farthest_first_heuristic</computeroutput>, since these handle most degeneracies in a satisfying manner. Notice that this compile-time flag is taken as a hint only. Should one of the methods not be available anymore in a future release, then the default algorithm will be chosen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="91" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classMinSphereOfSpheresTraits_1a84854b3f1b3c2a86b88e7f6ce82c38d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMinSphereOfSpheresTraits_1a29f1fcd8f0f18aa3612634e580a4b606" kindref="member">FT</ref></type>
        <definition>FT MinSphereOfSpheresTraits::radius</definition>
        <argsstring>(const Sphere &amp;s)</argsstring>
        <name>radius</name>
        <param>
          <type>const <ref refid="classMinSphereOfSpheresTraits_1abe6d8d91793a32c34f5a17bc28f1bf98" kindref="member">Sphere</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the radius of sphere <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="post"><para>The returned number is greater or equal to <formula id="163">$ 0$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMinSphereOfSpheresTraits_1aa881714cb55d5d25b4118671df89ae1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMinSphereOfSpheresTraits_1a2b85a73d8bac26b11b4cf66708a5c5ad" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator MinSphereOfSpheresTraits::center_cartesian_begin</definition>
        <argsstring>(const Sphere &amp;s)</argsstring>
        <name>center_cartesian_begin</name>
        <param>
          <type>const <ref refid="classMinSphereOfSpheresTraits_1abe6d8d91793a32c34f5a17bc28f1bf98" kindref="member">Sphere</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns an iterator referring to the first of the <computeroutput>D</computeroutput> Cartesian coordinates of the center of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MinSphereOfSpheresTraits.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A model of concept <computeroutput><ref refid="classMinSphereOfSpheresTraits" kindref="compound">MinSphereOfSpheresTraits</ref></computeroutput> must provide the following constants, types, predicates and operations. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000006"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Min__sphere__of__spheres__d__traits__2" kindref="compound">CGAL::Min_sphere_of_spheres_d_traits_2</ref>&lt;K,FT,UseSqrt,Algorithm&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Min__sphere__of__spheres__d__traits__3" kindref="compound">CGAL::Min_sphere_of_spheres_d_traits_3</ref>&lt;K,FT,UseSqrt,Algorithm&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Min__sphere__of__spheres__d__traits__d" kindref="compound">CGAL::Min_sphere_of_spheres_d_traits_d</ref>&lt;K,FT,Dim,UseSqrt,Algorithm&gt;</computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/MinSphereOfSpheresTraits.h" line="15" column="1" bodyfile="Concepts/MinSphereOfSpheresTraits.h" bodystart="15" bodyend="114"/>
    <listofallmembers>
      <member refid="classMinSphereOfSpheresTraits_1a974f1f67169bbe7e246f55b28a487b2e" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>Algorithm</name></member>
      <member refid="classMinSphereOfSpheresTraits_1a2b85a73d8bac26b11b4cf66708a5c5ad" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>Cartesian_const_iterator</name></member>
      <member refid="classMinSphereOfSpheresTraits_1aa881714cb55d5d25b4118671df89ae1d" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>center_cartesian_begin</name></member>
      <member refid="classMinSphereOfSpheresTraits_1a2281c7d02f22fc6182cba5dc1396e31e" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>D</name></member>
      <member refid="classMinSphereOfSpheresTraits_1a29f1fcd8f0f18aa3612634e580a4b606" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>FT</name></member>
      <member refid="classMinSphereOfSpheresTraits_1a84854b3f1b3c2a86b88e7f6ce82c38d8" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>radius</name></member>
      <member refid="classMinSphereOfSpheresTraits_1abe6d8d91793a32c34f5a17bc28f1bf98" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>Sphere</name></member>
      <member refid="classMinSphereOfSpheresTraits_1aaa26c2ff7703b9e4ea45667acc8b58a4" prot="public" virt="non-virtual"><scope>MinSphereOfSpheresTraits</scope><name>Use_square_roots</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
