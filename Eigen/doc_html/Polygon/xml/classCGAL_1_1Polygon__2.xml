<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Polygon__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Polygon_2</compoundname>
    <includes local="no">CGAL/Polygon_2.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Traits_P</declname>
        <defname>Traits_P</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Container_P</declname>
        <defname>Container_P</defname>
        <defval>std::vector&lt;typename Traits_P::Point_2&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Global Operators</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a0defc827866d4985ea6f4e6335f8c9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits_P</type>
          </param>
          <param>
            <type>class Container1_P</type>
          </param>
          <param>
            <type>class Container2_P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Polygon_2&lt; Traits_P, Container1_P &gt; &amp;p1, const Polygon_2&lt; Traits_P, Container2_P &gt; &amp;p2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container1_P &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container2_P &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Test for equality: two polygons are equal iff there exists a cyclic permutation of the vertices of <computeroutput>p2</computeroutput> such that they are equal to the vertices of <computeroutput>p1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the template argument <computeroutput>Container</computeroutput> of <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput> may be different. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="489" column="1" bodyfile="CGAL/Polygon_2/Polygon_2_impl.h" bodystart="46" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a7c22179fbdf0f6b8c69ad2b980e8d86b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits_P</type>
          </param>
          <param>
            <type>class Container1_P</type>
          </param>
          <param>
            <type>class Container2_P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Polygon_2&lt; Traits_P, Container1_P &gt; &amp;p1, const Polygon_2&lt; Traits_P, Container2_P &gt; &amp;p2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container1_P &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container2_P &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="497" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="541" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a9c5d3a438fa619b673508d7088df03b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Transformation</type>
          </param>
          <param>
            <type>class Traits_P</type>
          </param>
          <param>
            <type>class Container_P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt;</type>
        <definition>Polygon_2&lt; Traits_P, Container_P &gt; transform</definition>
        <argsstring>(const Transformation &amp;t, const Polygon_2&lt; Traits_P, Container_P &gt; &amp;p)</argsstring>
        <name>transform</name>
        <param>
          <type>const Transformation &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Returns the image of the polygon <computeroutput>p</computeroutput> under the transformation <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="504" column="1" bodyfile="CGAL/Polygon_2/Polygon_2_impl.h" bodystart="151" bodyend="158"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>I/O</header>
      <description><para>The information output in the <computeroutput>std::iostream</computeroutput> is the number of points followed by the output of the coordinates of the vertices. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a2ff96b1a99b20d61fb974ffdc0f0e96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits_P</type>
          </param>
          <param>
            <type>class Container_P</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Polygon_2&lt; Traits_P, Container_P &gt; &amp;p)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Inserts the polygon <computeroutput>p</computeroutput> into the stream <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The insert operator must be defined for <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="517" column="1" bodyfile="CGAL/Polygon_2/Polygon_2_impl.h" bodystart="93" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1aacf55ebc4ccb144496b1aae6b867ef5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits_P</type>
          </param>
          <param>
            <type>class Container_P</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Polygon_2&lt; Traits_P, Container_P &gt; &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Reads a polygon from stream <computeroutput>is</computeroutput> and assigns it to <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The extract operator must be defined for <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="523" column="1" bodyfile="CGAL/Polygon_2/Polygon_2_impl.h" bodystart="116" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a00194ff40333cdeb46f6237a6786d005" prot="public" static="no">
        <type>Container_P</type>
        <definition>typedef Container_P CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Container</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <briefdescription>
<para>The container type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="80" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a04d87b1de472f3573ab7ee998bd8c122" prot="public" static="no">
        <type>Traits_P::FT</type>
        <definition>typedef Traits_P::FT CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>The number type of the coordinates of the points of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="83" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" prot="public" static="no">
        <type>Traits_P::Point_2</type>
        <definition>typedef Traits_P::Point_2 CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>The point type of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="85" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1ad34b1ecb838f41fed730be3d60bb43be" prot="public" static="no">
        <type>Traits_P::Segment_2</type>
        <definition>typedef Traits_P::Segment_2 CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Segment_2</definition>
        <argsstring></argsstring>
        <name>Segment_2</name>
        <briefdescription>
<para>The type of a segment between two points of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="87" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iterators</header>
      <description><para>The following types denote iterators that allow to traverse the vertices and edges of a polygon.</para><para>Since a polygon can be viewed as a circular as well as a linear data structure both circulators and iterators are defined.</para><para><simplesect kind="note"><para>At least conceptually, the circulators and iterators are non-mutable. The enforcement depends on preprocessor flags.</para></simplesect>
<simplesect kind="note"><para>The iterator category is in all cases bidirectional, except for Vertex_iterator, which has the same iterator category as <computeroutput>Container::iterator</computeroutput>. In fact all of them should have the same iterator category as <computeroutput>Container::iterator</computeroutput>. However, due to compiler problems this is currently not possible. </para></simplesect>
</para></description>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" prot="public" static="no">
        <type>Container::iterator</type>
        <definition>typedef Container::iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_iterator</name>
        <briefdescription>
<para>vertex iterator type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="126" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Vertex_circulator</definition>
        <argsstring></argsstring>
        <name>Vertex_circulator</name>
        <briefdescription>
<para>vertex circulator type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="133" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1ae575d525fb2ad134952c28a57be92076" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Edge_const_iterator</definition>
        <argsstring></argsstring>
        <name>Edge_const_iterator</name>
        <briefdescription>
<para>edge circulator type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="135" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a58113fae308eed14d63f63f532223338" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Edge_const_circulator</definition>
        <argsstring></argsstring>
        <name>Edge_const_circulator</name>
        <briefdescription>
<para>edge circular type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="137" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a12cff5ba589a540a837774c63c9c55cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Polygon_2</definition>
        <argsstring>(const Traits &amp;p_traits=Traits())</argsstring>
        <name>Polygon_2</name>
        <param>
          <type>const Traits &amp;</type>
          <declname>p_traits</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>Creates an empty polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="150" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a925bf21e0061550b4e2527f720ae9215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Polygon_2</definition>
        <argsstring>(const Polygon_2&lt; Traits_P, Container_P &gt; &amp;polygon)</argsstring>
        <name>Polygon_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="153" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="153" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a70f472d2a157796924224fd7c7002884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Polygon_2</definition>
        <argsstring>(InputIterator first, InputIterator last, Traits p_traits=Traits())</argsstring>
        <name>Polygon_2</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>Traits</type>
          <declname>p_traits</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>Introduces a polygon with vertices from the sequence defined by the range <computeroutput></computeroutput>[first,last). </para>        </briefdescription>
        <detaileddescription>
<para>The value type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="160" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="160" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a2a1ce71bfd682cdec898bc59143b1263" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::set</definition>
        <argsstring>(Vertex_iterator i, const Point_2 &amp;q)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Acts as <computeroutput>*i = q</computeroutput>, except that that would be illegal because the iterator is not mutable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="175" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="175" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a549bfe1f56e4a8f7c4ac3676205e4007" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::insert</definition>
        <argsstring>(Vertex_iterator i, const Point_2 &amp;q)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Inserts the vertex <computeroutput>q</computeroutput> before <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The return value points to the inserted vertex. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="187" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a8ecb44995ea7ae30f0003891dd735129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::insert</definition>
        <argsstring>(Vertex_circulator i, const Point_2 &amp;q)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" kindref="member">Vertex_circulator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Inserts the vertex <computeroutput>q</computeroutput> before <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The return value points to the inserted vertex. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="194" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a244ebe215889feea6f69132e7c11e6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::insert</definition>
        <argsstring>(Vertex_iterator i, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Inserts the vertices in the range <computeroutput>[first, last)</computeroutput> before <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The value type of points in the range <computeroutput>[first,last)</computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="203" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ad9ecb194da73496c15662c1636a29b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::insert</definition>
        <argsstring>(Vertex_circulator i, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" kindref="member">Vertex_circulator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Inserts the vertices in the range <computeroutput>[first, last)</computeroutput> before <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The value type of points in the range <computeroutput>[first,last)</computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="212" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a66ff561172016056897409f26f23add1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::push_back</definition>
        <argsstring>(const Point_2 &amp;x)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Has the same semantics as <computeroutput>p.insert(p.vertices_end(), q)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="218" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="218" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a2e96120934e83ee73ace7a0e207beafa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::erase</definition>
        <argsstring>(Vertex_iterator i)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Erases the vertex pointed to by <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="222" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1af2cfe113e380b038cdfce3fd70a3f585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" kindref="member">Vertex_circulator</ref></type>
        <definition>Vertex_circulator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::erase</definition>
        <argsstring>(Vertex_circulator i)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" kindref="member">Vertex_circulator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Erases the vertex pointed to by <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="228" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ae5ab413382acd7a90afaf2b404472295" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::erase</definition>
        <argsstring>(Vertex_iterator first, Vertex_iterator last)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" kindref="member">Vertex_iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Erases the vertices in the range <computeroutput>[first, last)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="235" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a26f2bd5c5a35112fc6beba29b860f8b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Erases the vertices in the range <computeroutput>[first, last)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="241" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ac9bca34769a460a300acdc1415be7ca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::reverse_orientation</definition>
        <argsstring>()</argsstring>
        <name>reverse_orientation</name>
        <briefdescription>
<para>Reverses the orientation of the polygon. </para>        </briefdescription>
        <detaileddescription>
<para>The vertex pointed to by <computeroutput>p.vertices_begin()</computeroutput> remains the same. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="248" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="248" bodyend="254"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <description><para>The following methods of the class <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> return circulators and iterators that allow to traverse the vertices and edges. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a20ae65167d8950c803667a47c30649f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::vertices_begin</definition>
        <argsstring>() const</argsstring>
        <name>vertices_begin</name>
        <briefdescription>
<para>Returns a constant iterator that allows to traverse the vertices of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="266" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="266" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a46168a01e53aa7d1ced7b9d73821227a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::vertices_end</definition>
        <argsstring>() const</argsstring>
        <name>vertices_end</name>
        <briefdescription>
<para>Returns the corresponding past-the-end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="270" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="270" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a7ec8d53657b794443a87e8942dceb4a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_circulator</type>
        <definition>Vertex_const_circulator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::vertices_circulator</definition>
        <argsstring>() const</argsstring>
        <name>vertices_circulator</name>
        <briefdescription>
<para>Returns a mutable circulator that allows to traverse the vertices of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="278" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="278" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a86f33fca6d164c220c4c3ad8f202996d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1ae575d525fb2ad134952c28a57be92076" kindref="member">Edge_const_iterator</ref></type>
        <definition>Edge_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::edges_begin</definition>
        <argsstring>() const</argsstring>
        <name>edges_begin</name>
        <briefdescription>
<para>Returns a non-mutable iterator that allows to traverse the edges of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="287" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="287" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a3a39a28a975453aa5c2346c2e0fe2043" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1ae575d525fb2ad134952c28a57be92076" kindref="member">Edge_const_iterator</ref></type>
        <definition>Edge_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::edges_end</definition>
        <argsstring>() const</argsstring>
        <name>edges_end</name>
        <briefdescription>
<para>Returns the corresponding past-the-end iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="291" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="291" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ae2ec375b3f99726295d98fdfea9cc369" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1a58113fae308eed14d63f63f532223338" kindref="member">Edge_const_circulator</ref></type>
        <definition>Edge_const_circulator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::edges_circulator</definition>
        <argsstring>() const</argsstring>
        <name>edges_circulator</name>
        <briefdescription>
<para>Returns a non-mutable circulator that allows to traverse the edges of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="296" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="296" bodyend="297"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a5b405ab2d80ac04e197e509996e3cdfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_simple</definition>
        <argsstring>() const</argsstring>
        <name>is_simple</name>
        <briefdescription>
<para>Returns whether this is a simple polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="305" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a3f647c626553c0cc293b4c1e267b43b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_convex</definition>
        <argsstring>() const</argsstring>
        <name>is_convex</name>
        <briefdescription>
<para>Returns whether this is convex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="311" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::orientation</definition>
        <argsstring>() const</argsstring>
        <name>orientation</name>
        <briefdescription>
<para>Returns the orientation. </para>        </briefdescription>
        <detaileddescription>
<para>If the number of vertices <computeroutput>p.size() &lt; 3</computeroutput> then <computeroutput>COLLINEAR</computeroutput> is returned. <simplesect kind="pre"><para><computeroutput>p.is_simple()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="319" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a6385012493b99af603666574557f5089" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::oriented_side</definition>
        <argsstring>(const Point_2 &amp;value) const</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>ON_POSITIVE_SIDE</computeroutput>, or <computeroutput>ON_NEGATIVE_SIDE</computeroutput>, or <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput>, depending on where point <computeroutput>q</computeroutput> is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p.is_simple()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="328" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1aff9f5e227e90bb285c7b3fbd8cb23369" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::bounded_side</definition>
        <argsstring>(const Point_2 &amp;value) const</argsstring>
        <name>bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns the symbolic constant <computeroutput>ON_BOUNDED_SIDE</computeroutput>, <computeroutput>ON_BOUNDARY</computeroutput> or <computeroutput>ON_UNBOUNDED_SIDE</computeroutput>, depending on where point <computeroutput>q</computeroutput> is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p.is_simple()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="338" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="338" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1aa22a296ee6535ed78e0424aad4ac5ba7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref></type>
        <definition>Bbox_2 CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>Returns the smallest bounding box containing this polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="346" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ac286f10f18daff172c9c5a2108695ada" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1a04d87b1de472f3573ab7ee998bd8c122" kindref="member">FT</ref></type>
        <definition>FT CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::area</definition>
        <argsstring>() const</argsstring>
        <name>area</name>
        <briefdescription>
<para>Returns the signed area of the polygon. </para>        </briefdescription>
        <detaileddescription>
<para>This means that the area is positive for counter clockwise polygons and negative for clockwise polygons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="354" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a208b93e1c24e12fb20a414eb6827fed7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::left_vertex</definition>
        <argsstring>() const</argsstring>
        <name>left_vertex</name>
        <briefdescription>
<para>Returns the leftmost vertex of the polygon with the smallest <computeroutput>x</computeroutput>-coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="361" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="361" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1adbf749798f8d552eb93a57141bcb20a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::right_vertex</definition>
        <argsstring>() const</argsstring>
        <name>right_vertex</name>
        <briefdescription>
<para>Returns the rightmost vertex of the polygon with the largest <computeroutput>x</computeroutput>-coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="370" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="370" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1af5126a26abc0eb1d3010dfe10cbfa5f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::top_vertex</definition>
        <argsstring>() const</argsstring>
        <name>top_vertex</name>
        <briefdescription>
<para>Returns topmost vertex of the polygon with the largest <computeroutput>y</computeroutput>-coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="379" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="379" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a863872bdbe9f5ac59271bdcb0cf50ab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::bottom_vertex</definition>
        <argsstring>() const</argsstring>
        <name>bottom_vertex</name>
        <briefdescription>
<para>Returns the bottommost vertex of the polygon with the smallest <computeroutput>y</computeroutput>-coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="388" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="388" bodyend="393"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convenience Orientation Functions</header>
      <description><para>For convenience we provide the following Boolean functions: </para></description>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a50f72a61b1a3eac123e10a8b6d928635" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_counterclockwise_oriented</definition>
        <argsstring>() const</argsstring>
        <name>is_counterclockwise_oriented</name>
        <briefdescription>
<para>returns <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" kindref="member">orientation()</ref> == COUNTERCLOCKWISE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="403" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="403" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a97bf2a2897ddb855b1029e47c12f8c30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_clockwise_oriented</definition>
        <argsstring>() const</argsstring>
        <name>is_clockwise_oriented</name>
        <briefdescription>
<para>returns <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" kindref="member">orientation()</ref> == CLOCKWISE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="406" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="406" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ade4b77785a9dbd4c0db071347b34be11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_collinear_oriented</definition>
        <argsstring>() const</argsstring>
        <name>is_collinear_oriented</name>
        <briefdescription>
<para>returns <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" kindref="member">orientation()</ref> == COLLINEAR</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="409" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="409" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a31d36abde31f74b5f5f808eaa848d2c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::has_on_positive_side</definition>
        <argsstring>(const Point_2 &amp;q) const</argsstring>
        <name>has_on_positive_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>oriented_side(q) == ON_POSITIVE_SIDE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="412" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="412" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ac5b6db40b42ec0e92779183b78de32bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::has_on_negative_side</definition>
        <argsstring>(const Point_2 &amp;q) const</argsstring>
        <name>has_on_negative_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>oriented_side(q) == ON_NEGATIVE_SIDE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="415" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="415" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ab4136b501282d309cc72fcf4974d1479" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::has_on_boundary</definition>
        <argsstring>(const Point_2 &amp;q) const</argsstring>
        <name>has_on_boundary</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>bounded_side(q) == ON_BOUNDARY</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="418" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="418" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1aed22a0e432f6f3fa503ed1e06ec188f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::has_on_bounded_side</definition>
        <argsstring>(const Point_2 &amp;q) const</argsstring>
        <name>has_on_bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>bounded_side(q) == ON_BOUNDED_SIDE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="421" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="421" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a3f70e9c00e0f1cceccfea9405663e658" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::has_on_unbounded_side</definition>
        <argsstring>(const Point_2 &amp;q) const</argsstring>
        <name>has_on_unbounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>bounded_side(q) == ON_UNBOUNDED_SIDE</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="424" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="424" bodyend="425"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Random Access Methods</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ae19b8c39122eb1f231caa261044141f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
        <definition>const Point_2&amp; CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::vertex</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a (const) reference to the <computeroutput>i</computeroutput>-th vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="434" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="434" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1adf72d9c39820b914aa7895a3e6d2e18f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" kindref="member">Point_2</ref> &amp;</type>
        <definition>const Point_2&amp; CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a (const) reference to the <computeroutput>i</computeroutput>-th vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="442" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="442" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a248711791a392a950984c2c0334646bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polygon__2_1ad34b1ecb838f41fed730be3d60bb43be" kindref="member">Segment_2</ref></type>
        <definition>Segment_2 CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::edge</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>edge</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>i</computeroutput>-th edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="446" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="446" bodyend="447"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a52bab6b64430d70d6756f4dda5944bac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of vertices of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="455" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="455" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a167bfa9dc447b094cb987e639f7019d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <briefdescription>
<para>Returns <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a52bab6b64430d70d6756f4dda5944bac" kindref="member">size()</ref> == 0</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="459" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="459" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a8de2912f07eed7c5c3e4f1652b89be54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Container_P &amp;</type>
        <definition>const Container_P&amp; CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::container</definition>
        <argsstring>() const</argsstring>
        <name>container</name>
        <briefdescription>
<para>Returns a const reference to the sequence of vertices of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="463" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="463" bodyend="464"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a8c3fc9394aebfc0febff86ee1774d40a" prot="public" static="no">
        <type>Container_P::difference_type</type>
        <definition>typedef Container_P::difference_type CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="91" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1abff2f2d31c2405fbc82500b2c91eadc3" prot="public" static="no">
        <type>Container_P::value_type</type>
        <definition>typedef Container_P::value_type CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="92" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a1dc1fa0d6756cc14e58f4002e6220f12" prot="public" static="no">
        <type>Container_P::pointer</type>
        <definition>typedef Container_P::pointer CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="93" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a333ec1f2fbf529264584564706c76f8e" prot="public" static="no">
        <type>Container_P::reference</type>
        <definition>typedef Container_P::reference CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="94" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a809af0fe1cf55cebc078dc1e6fd33369" prot="public" static="no">
        <type>Container_P::const_reference</type>
        <definition>typedef Container_P::const_reference CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="95" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a5b5b762be401dbfb1bc2e791a5a183e1" prot="public" static="no">
        <type>Container_P::iterator</type>
        <definition>typedef Container_P::iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="100" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a564dd558a7f4d30bafb720538481bccd" prot="public" static="no">
        <type>Container_P::const_iterator</type>
        <definition>typedef Container_P::const_iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="101" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1adc80d9e74bfdc3b3c3e05ddc32fce900" prot="public" static="no">
        <type>Container::iterator</type>
        <definition>typedef Container::iterator CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Vertex_const_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="103" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__2_1a65bfe8a04db21cad5eabc4946fc13adb" prot="public" static="no">
        <type>Polygon_circulator&lt; Container_P &gt;</type>
        <definition>typedef Polygon_circulator&lt;Container_P&gt; CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::Vertex_const_circulator</definition>
        <argsstring></argsstring>
        <name>Vertex_const_circulator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="104" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Polygon__2_1a433ff5030d63f1a33f5feaeeba28ee7f" prot="private" static="no" mutable="no">
        <type>Container_P</type>
        <definition>Container_P CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::d_container</definition>
        <argsstring></argsstring>
        <name>d_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="474" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Polygon__2_1a46ec90013d1162ec55212f6a187f1d3c" prot="private" static="no" mutable="no">
        <type>Traits_P</type>
        <definition>Traits_P CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::traits</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="475" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1ab373e3a39cb0df4f7f81f985318099b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::identical</definition>
        <argsstring>(const Polygon_2&lt; Traits_P, Container_P &gt; &amp;q) const</argsstring>
        <name>identical</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt; Traits_P, Container_P &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="468" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="468" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__2_1a3ae730c6100e132320267e9a7cd20ab0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Traits_P const  &amp;</type>
        <definition>Traits_P const&amp; CGAL::Polygon_2&lt; Traits_P, Container_P &gt;::traits_member</definition>
        <argsstring>() const</argsstring>
        <name>traits_member</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_2.h" line="471" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="471" bodyend="471"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> implements polygons. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> is parameterized by a traits class and a container class. The latter can be any class that fulfills the requirements for an STL container. It defaults to the std::vector class.</para><para><bold>Implementation</bold><linebreak/>
</para><para>The methods <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a5b405ab2d80ac04e197e509996e3cdfc" kindref="member">is_simple()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a3f647c626553c0cc293b4c1e267b43b0" kindref="member">is_convex()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" kindref="member">orientation()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a6385012493b99af603666574557f5089" kindref="member">oriented_side()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1aff9f5e227e90bb285c7b3fbd8cb23369" kindref="member">bounded_side()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1aa22a296ee6535ed78e0424aad4ac5ba7" kindref="member">bbox()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1ac286f10f18daff172c9c5a2108695ada" kindref="member">area()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a208b93e1c24e12fb20a414eb6827fed7" kindref="member">left_vertex()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1adbf749798f8d552eb93a57141bcb20a2" kindref="member">right_vertex()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Polygon__2_1af5126a26abc0eb1d3010dfe10cbfa5f9" kindref="member">top_vertex()</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Polygon__2_1a863872bdbe9f5ac59271bdcb0cf50ab7" kindref="member">bottom_vertex()</ref></computeroutput> are all implemented using the algorithms on sequences of 2D points. See the corresponding global functions for information about which algorithms were used and what complexity they have. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="20">
        <label>CGAL::Polygon_2&lt; Traits_P, Container_P &gt;</label>
        <link refid="classCGAL_1_1Polygon__2"/>
      </node>
      <node id="21">
        <label>CGAL::Polygon_2&lt; Kernel, Containter &gt;</label>
        <link refid="classCGAL_1_1Polygon__2"/>
        <childnode refid="20" relation="template-instance">
          <edgelabel>&lt; Kernel, Containter &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CGAL/Polygon_2.h" line="70" column="1" bodyfile="CGAL/Polygon_2.h" bodystart="70" bodyend="476"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Polygon__2_1ac286f10f18daff172c9c5a2108695ada" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>area</name></member>
      <member refid="classCGAL_1_1Polygon__2_1aa22a296ee6535ed78e0424aad4ac5ba7" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a863872bdbe9f5ac59271bdcb0cf50ab7" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>bottom_vertex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1aff9f5e227e90bb285c7b3fbd8cb23369" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>bounded_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a26f2bd5c5a35112fc6beba29b860f8b4" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a564dd558a7f4d30bafb720538481bccd" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>const_iterator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a809af0fe1cf55cebc078dc1e6fd33369" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>const_reference</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a00194ff40333cdeb46f6237a6786d005" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Container</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a8de2912f07eed7c5c3e4f1652b89be54" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>container</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a433ff5030d63f1a33f5feaeeba28ee7f" prot="private" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>d_container</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a8c3fc9394aebfc0febff86ee1774d40a" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>difference_type</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a248711791a392a950984c2c0334646bf" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>edge</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a58113fae308eed14d63f63f532223338" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Edge_const_circulator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ae575d525fb2ad134952c28a57be92076" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Edge_const_iterator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a86f33fca6d164c220c4c3ad8f202996d" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>edges_begin</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ae2ec375b3f99726295d98fdfea9cc369" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>edges_circulator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a3a39a28a975453aa5c2346c2e0fe2043" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>edges_end</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a2e96120934e83ee73ace7a0e207beafa" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>erase</name></member>
      <member refid="classCGAL_1_1Polygon__2_1af2cfe113e380b038cdfce3fd70a3f585" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>erase</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ae5ab413382acd7a90afaf2b404472295" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>erase</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a04d87b1de472f3573ab7ee998bd8c122" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ab4136b501282d309cc72fcf4974d1479" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>has_on_boundary</name></member>
      <member refid="classCGAL_1_1Polygon__2_1aed22a0e432f6f3fa503ed1e06ec188f5" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>has_on_bounded_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ac5b6db40b42ec0e92779183b78de32bd" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>has_on_negative_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a31d36abde31f74b5f5f808eaa848d2c6" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>has_on_positive_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a3f70e9c00e0f1cceccfea9405663e658" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>has_on_unbounded_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ab373e3a39cb0df4f7f81f985318099b6" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>identical</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a549bfe1f56e4a8f7c4ac3676205e4007" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a8ecb44995ea7ae30f0003891dd735129" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a244ebe215889feea6f69132e7c11e6df" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ad9ecb194da73496c15662c1636a29b6a" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a97bf2a2897ddb855b1029e47c12f8c30" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_clockwise_oriented</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ade4b77785a9dbd4c0db071347b34be11" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_collinear_oriented</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a3f647c626553c0cc293b4c1e267b43b0" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_convex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a50f72a61b1a3eac123e10a8b6d928635" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_counterclockwise_oriented</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a167bfa9dc447b094cb987e639f7019d3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a5b405ab2d80ac04e197e509996e3cdfc" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>is_simple</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a5b5b762be401dbfb1bc2e791a5a183e1" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a208b93e1c24e12fb20a414eb6827fed7" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>left_vertex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a7c22179fbdf0f6b8c69ad2b980e8d86b" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Polygon__2_1aacf55ebc4ccb144496b1aae6b867ef5e" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a0defc827866d4985ea6f4e6335f8c9a0" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a2ff96b1a99b20d61fb974ffdc0f0e96b" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Polygon__2_1adf72d9c39820b914aa7895a3e6d2e18f" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a4ce8b4b8395406243ac16c2a120ffc15" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>orientation</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a6385012493b99af603666574557f5089" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a65df166848e4365d38cfc1cedcb4d6d2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a1dc1fa0d6756cc14e58f4002e6220f12" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>pointer</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a12cff5ba589a540a837774c63c9c55cd" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a925bf21e0061550b4e2527f720ae9215" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a70f472d2a157796924224fd7c7002884" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a66ff561172016056897409f26f23add1" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a333ec1f2fbf529264584564706c76f8e" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>reference</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ac9bca34769a460a300acdc1415be7ca9" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>reverse_orientation</name></member>
      <member refid="classCGAL_1_1Polygon__2_1adbf749798f8d552eb93a57141bcb20a2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>right_vertex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ad34b1ecb838f41fed730be3d60bb43be" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Segment_2</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a2a1ce71bfd682cdec898bc59143b1263" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>set</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a52bab6b64430d70d6756f4dda5944bac" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>size</name></member>
      <member refid="classCGAL_1_1Polygon__2_1af5126a26abc0eb1d3010dfe10cbfa5f9" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>top_vertex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a46ec90013d1162ec55212f6a187f1d3c" prot="private" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>traits</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a3ae730c6100e132320267e9a7cd20ab0" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>traits_member</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a9c5d3a438fa619b673508d7088df03b2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Polygon__2_1abff2f2d31c2405fbc82500b2c91eadc3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>value_type</name></member>
      <member refid="classCGAL_1_1Polygon__2_1ae19b8c39122eb1f231caa261044141f2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>vertex</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a9513789e9a22cdcb6b559db0d2e41e30" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Vertex_circulator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a65bfe8a04db21cad5eabc4946fc13adb" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Vertex_const_circulator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1adc80d9e74bfdc3b3c3e05ddc32fce900" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Vertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1abfdae92fbbf75d1076a711498bcfd8c5" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>Vertex_iterator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a20ae65167d8950c803667a47c30649f6" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>vertices_begin</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a7ec8d53657b794443a87e8942dceb4a3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>vertices_circulator</name></member>
      <member refid="classCGAL_1_1Polygon__2_1a46168a01e53aa7d1ced7b9d73821227a" prot="public" virt="non-virtual"><scope>CGAL::Polygon_2</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
