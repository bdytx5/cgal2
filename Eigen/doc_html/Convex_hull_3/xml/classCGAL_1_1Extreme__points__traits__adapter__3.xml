<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Extreme__points__traits__adapter__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Extreme_points_traits_adapter_3</compoundname>
    <includes local="no">CGAL/Extreme_points_traits_adapter_3.h</includes>
    <templateparamlist>
      <param>
        <type>class PointPropertyMap</type>
      </param>
      <param>
        <type>class Base_traits</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Extreme__points__traits__adapter__3_1a6455fb1140ae7353e586ec4eccf368f2" prot="public" static="no">
        <type>boost::property_traits&lt; PointPropertyMap &gt;::key_type</type>
        <definition>typedef boost::property_traits&lt;PointPropertyMap&gt;::key_type CGAL::Extreme_points_traits_adapter_3&lt; PointPropertyMap, Base_traits &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Extreme_points_traits_adapter_3.h" line="37" column="1" bodyfile="CGAL/Extreme_points_traits_adapter_3.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Extreme__points__traits__adapter__3_1ab6ef7a739a1e2637f13c929310016981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Extreme_points_traits_adapter_3&lt; PointPropertyMap, Base_traits &gt;::Extreme_points_traits_adapter_3</definition>
        <argsstring>(const PointPropertyMap &amp;pmap, Base_traits base=Base_traits())</argsstring>
        <name>Extreme_points_traits_adapter_3</name>
        <param>
          <type>const PointPropertyMap &amp;</type>
          <declname>pmap</declname>
        </param>
        <param>
          <type>Base_traits</type>
          <declname>base</declname>
          <defval>Base_traits()</defval>
        </param>
        <briefdescription>
<para>Constructor for the adapter. </para>        </briefdescription>
        <detaileddescription>
<para>It uses the functors from <computeroutput>Base_traits</computeroutput> with a call to <computeroutput>get()</computeroutput> for each argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmap</parametername>
</parameternamelist>
<parameterdescription>
<para>the propertymap used for retrieving the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>the base <ref refid="classConvexHullTraits__3" kindref="compound">ConvexHullTraits_3</ref> used for <computeroutput><ref refid="group__PkgConvexHull3Functions_1ga3d3caeb206adf06814821c0a066f6a72" kindref="member">extreme_points_3()</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Extreme_points_traits_adapter_3.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Extreme__points__traits__adapter__3_1a19f2792e2e2069d633fd2d8a5343beff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::property_traits&lt; PointPropertyMap &gt;::reference</type>
        <definition>boost::property_traits&lt;PointPropertyMap&gt;::reference CGAL::Extreme_points_traits_adapter_3&lt; PointPropertyMap, Base_traits &gt;::get_point</definition>
        <argsstring>(const typename boost::property_traits&lt; PointPropertyMap &gt;::key_type &amp;k) const</argsstring>
        <name>get_point</name>
        <param>
          <type>const typename boost::property_traits&lt; PointPropertyMap &gt;::key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput> associated with <computeroutput>k</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Extreme_points_traits_adapter_3.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Extreme__points__traits__adapter__3" kindref="compound">Extreme_points_traits_adapter_3</ref></computeroutput> serves as a traits class for the function <computeroutput><ref refid="group__PkgConvexHull3Functions_1ga3d3caeb206adf06814821c0a066f6a72" kindref="member">extreme_points_3()</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>It permits the use of this function for accessing vertices, indices, or anything that can be used as <computeroutput>key_type</computeroutput> for <computeroutput>PointPropertyMap</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointPropertyMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput> as value_type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Base_traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConvexHullTraits__3" kindref="compound">ConvexHullTraits_3</ref></computeroutput> and <computeroutput><ref refid="classIsStronglyConvexTraits__3" kindref="compound">IsStronglyConvexTraits_3</ref></computeroutput>. If the kernel <computeroutput>R</computeroutput> of the points from <computeroutput>PointPropertyMap</computeroutput> is a kernel with exact predicates but inexact constructions (in practice we check <computeroutput>R::Has_filtered_predicates_tag</computeroutput> is <computeroutput>Tag_true</computeroutput> and <computeroutput>R::FT</computeroutput> is a floating point type), then the default traits class used is <computeroutput><ref refid="classCGAL_1_1Convex__hull__traits__3" kindref="compound">Convex_hull_traits_3</ref>&lt;R&gt;</computeroutput>, and <computeroutput>R</computeroutput> otherwise.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classConvexHullTraits__3" kindref="compound">ConvexHullTraits_3</ref></computeroutput> </para><para><computeroutput><ref refid="classIsStronglyConvexTraits__3" kindref="compound">IsStronglyConvexTraits_3</ref></computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Extreme_points_traits_adapter_3.h" line="23" column="1" bodyfile="CGAL/Extreme_points_traits_adapter_3.h" bodystart="22" bodyend="45"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Extreme__points__traits__adapter__3_1ab6ef7a739a1e2637f13c929310016981" prot="public" virt="non-virtual"><scope>CGAL::Extreme_points_traits_adapter_3</scope><name>Extreme_points_traits_adapter_3</name></member>
      <member refid="classCGAL_1_1Extreme__points__traits__adapter__3_1a19f2792e2e2069d633fd2d8a5343beff" prot="public" virt="non-virtual"><scope>CGAL::Extreme_points_traits_adapter_3</scope><name>get_point</name></member>
      <member refid="classCGAL_1_1Extreme__points__traits__adapter__3_1a6455fb1140ae7353e586ec4eccf368f2" prot="public" virt="non-virtual"><scope>CGAL::Extreme_points_traits_adapter_3</scope><name>Point_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
