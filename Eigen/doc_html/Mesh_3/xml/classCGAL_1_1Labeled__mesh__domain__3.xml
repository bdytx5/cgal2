<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Labeled__mesh__domain__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Labeled_mesh_domain_3</compoundname>
    <includes local="no">CGAL/Labeled_mesh_domain_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename BGT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1a4a65f0465ed14559b2f9e32673227a01" prot="public" static="no">
        <type>int</type>
        <definition>typedef int CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Subdomain_index</definition>
        <argsstring></argsstring>
        <name>Subdomain_index</name>
        <briefdescription>
<para>The subdomain index of this model of <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="66" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1a3d03d5d05c5fa1dea7525665e979ff04" prot="public" static="no">
        <type><ref refid="classCGAL_1_1cpp11_1_1function" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::function</ref>&lt; <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a4a65f0465ed14559b2f9e32673227a01" kindref="member">Subdomain_index</ref>(const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1ae6d31a712e0eb0870d8855f716595229" kindref="member">Point_3</ref> &amp;)&gt;</type>
        <definition>typedef CGAL::cpp11::function&lt;Subdomain_index(const Point_3&amp;)&gt; CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Labeling_function</definition>
        <argsstring></argsstring>
        <name>Labeling_function</name>
        <briefdescription>
<para>The type of object that stores the function using type-erasure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="69" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types imported from the geometric traits class</header>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1ae6d31a712e0eb0870d8855f716595229" prot="public" static="no">
        <type>Geom_traits::Point_3</type>
        <definition>typedef Geom_traits::Point_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
<para>The point type of the geometric traits class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="76" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1a75196b9f4f5be2f049decf3affe11560" prot="public" static="no">
        <type>Geom_traits::Sphere_3</type>
        <definition>typedef Geom_traits::Sphere_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Sphere_3</definition>
        <argsstring></argsstring>
        <name>Sphere_3</name>
        <briefdescription>
<para>The sphere type of the geometric traits class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="78" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1a26599b0585d6f01752b666f2ce4c9e79" prot="public" static="no">
        <type>Geom_traits::Iso_cuboid_3</type>
        <definition>typedef Geom_traits::Iso_cuboid_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Iso_cuboid_3</definition>
        <argsstring></argsstring>
        <name>Iso_cuboid_3</name>
        <briefdescription>
<para>The iso-cuboid type of the geometric traits class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="80" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" prot="public" static="no">
        <type>Geom_traits::FT</type>
        <definition>typedef Geom_traits::FT CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>The number type (a field type) of the geometric traits class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="82" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1acf7298ad8f5efefdb73693acd1fb850e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>A_i</declname>
            <defname>A_i</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Labeled_mesh_domain_3</definition>
        <argsstring>(const A_i &amp;...)</argsstring>
        <name>Labeled_mesh_domain_3</name>
        <param>
          <type>const A_i &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
<para>Construction from a function, a bounding object and a relative error bound. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor uses named parameters (from the <emphasis>Boost Parameter Library</emphasis>). They can be specified in any order.</para><para><bold>Named Parameters</bold><linebreak/>
<itemizedlist>
<listitem><para><bold><computeroutput>parameters::function</computeroutput> (mandatory)</bold> the labeling function, compatible with <computeroutput>Labeling_function</computeroutput>.</para></listitem><listitem><para><bold><computeroutput>parameters::bounding_object</computeroutput> (mandatory)</bold> the bounding object is either a bounding sphere (of type <computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Sphere_3</ref></computeroutput>), a bounding box (type <computeroutput><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_3</ref></computeroutput>), or a bounding <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Iso_cuboid_3</ref></computeroutput>. It bounds the meshable space.</para></listitem><listitem><para><bold><computeroutput>parameters::relative_error_bound</computeroutput> (optional)</bold> the relative error bound used to compute intersection points between the implicit surface and query segments. The bisection is stopped when the length of the intersected segment is less than the product of <computeroutput>relative_error_bound</computeroutput> by the diameter of the bounding object. Its default value is <computeroutput>FT(1e-3)</computeroutput>.</para><para><bold>Example</bold><linebreak/>
 From the example (<ref refid="Mesh_3_2mesh_implicit_domains_2_8cpp-example" kindref="compound">Mesh_3/mesh_implicit_domains_2.cpp</ref>): <programlisting><codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">param<sp/>=<sp/><ref refid="namespaceCGAL_1_1parameters" kindref="compound">CGAL::parameters</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain(param::function<sp/>=<sp/>Function_wrapper(v,<sp/>vps),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param::bounding_object<sp/>=<sp/>K::Sphere_3(<ref refid="group__kernel__enums_1ga9d272a8e3a8080b851741b6d3a44afdc" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::ORIGIN</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.*5.),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param::relative_error_bound<sp/>=<sp/>1e-6);</highlight></codeline>
</programlisting></para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation of domains from implicit functions</header>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1ae236ca7246ca4eb186c4146981be7212" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>A_i</declname>
            <defname>A_i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></type>
        <definition>static Labeled_mesh_domain_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::create_implicit_mesh_domain</definition>
        <argsstring>(A_i &amp;...)</argsstring>
        <name>create_implicit_mesh_domain</name>
        <param>
          <type>A_i &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
<para>Construction from an implicit function. </para>        </briefdescription>
        <detaileddescription>
<para>This static method is a <emphasis>named constructor</emphasis>. It constructs a domain whose bounding surface is described implicitly as the zero level set of a function. The domain to be discretized is assumed to be the domain where the function has negative values.</para><para>The method takes as argument a bounding sphere which is required to circumscribe the surface and to have its center inside the domain.</para><para>This constructor uses named parameters (from the <emphasis>Boost Parameter Library</emphasis>). They can be specified in any order.</para><para><bold>Named Parameters</bold><linebreak/>
 <itemizedlist>
<listitem>
<para><bold><computeroutput>parameters::function</computeroutput> (mandatory)</bold> the implicit function, compatible with the signature <computeroutput>FT(Point_3)</computeroutput>: it takes a point as argument, and returns a scalar value. That object must be model of <computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput>. </para></listitem>
<listitem>
<para><bold><computeroutput>parameters::bounding_object</computeroutput> (mandatory)</bold> the bounding object is either a bounding sphere (of type <computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Sphere_3</ref></computeroutput>), a bounding box (type <computeroutput><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_3</ref></computeroutput>), or a bounding <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Iso_cuboid_3</ref></computeroutput>. It must bounds the surface, and its center must be inside the domain. </para></listitem>
</itemizedlist>
</para><para><bold>Examples</bold><linebreak/>
</para><para>From the example (<ref refid="Mesh_3_2mesh_implicit_sphere_8cpp-example" kindref="compound">Mesh_3/mesh_implicit_sphere.cpp</ref>), where the name of the parameters is not specified, as they are given is the same order as the parameters definition:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh_domain::create_implicit_mesh_domain(sphere_function,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K::Sphere_3(<ref refid="group__kernel__enums_1ga9d272a8e3a8080b851741b6d3a44afdc" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::ORIGIN</ref>,<sp/>2.));</highlight></codeline>
</programlisting> From the example (<ref refid="Mesh_3_2mesh_implicit_sphere_variable_size_8cpp-example" kindref="compound">Mesh_3/mesh_implicit_sphere_variable_size.cpp</ref>):</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">p<sp/>=<sp/><ref refid="namespaceCGAL_1_1parameters" kindref="compound">CGAL::parameters</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain<sp/>=<sp/>Mesh_domain::create_implicit_mesh_domain</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(p::function<sp/>=<sp/>&amp;sphere_function,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>p::bounding_object<sp/>=<sp/>K::Sphere_3(<ref refid="group__kernel__enums_1ga9d272a8e3a8080b851741b6d3a44afdc" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::ORIGIN</ref>,<sp/>2.)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
</programlisting></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="152" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation of domains from 3D images</header>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1ab7746c99b2eff13b7f70d2f3d6a831eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>A_i</declname>
            <defname>A_i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></type>
        <definition>static Labeled_mesh_domain_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::create_gray_image_mesh_domain</definition>
        <argsstring>(A_i &amp;...)</argsstring>
        <name>create_gray_image_mesh_domain</name>
        <param>
          <type>A_i &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
<para>Construction from a 3D gray image. </para>        </briefdescription>
        <detaileddescription>
<para>This static method is a <emphasis>named constructor</emphasis>. It constructs a domain described by a 3D gray image. A 3D gray image is a grid of voxels, where each voxel is associated with a gray level value. Unless otherwise specified by the parameter <computeroutput>image_values_to_subdom_indices</computeroutput>, the domain to be discretized is the union of voxels that lie inside a surface described by an isolevel value, called <emphasis>isovalue</emphasis>. The voxels lying inside the domain have gray level values that are larger than the isovalue.</para><para>The value of voxels is interpolated to a gray level value at any query point.</para><para>This constructor uses named parameters (from the <emphasis>Boost Parameter Library</emphasis>). They can be specified in any order.</para><para><bold>Named Parameters</bold><linebreak/>
 The parameters are optional unless otherwise specified. <itemizedlist>
<listitem>
<para><bold><computeroutput>parameters::image</computeroutput> (mandatory)</bold> the input 3D image. Must be a <computeroutput><ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref></computeroutput> object.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameters::iso_value</computeroutput></bold> the isovalue, inside <computeroutput>image</computeroutput>, of the surface describing the boundary of the object to be meshed. Its default value is <computeroutput>0</computeroutput>.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameters::image_values_to_subdom_indices</computeroutput></bold> a function or a function object, compatible with the signature <computeroutput>Subdomain_index(double)</computeroutput>. This function returns the subdomain index corresponding to a pixel value. If this parameter is used, then the parameter <computeroutput>iso_value</computeroutput> is ignored.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameter::value_outside</computeroutput></bold> the value attached to voxels outside of the domain to be meshed. It should be lower than <computeroutput>iso_value</computeroutput>. Its default value is <computeroutput>0</computeroutput>.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameter::relative_error_bound</computeroutput></bold> is the relative error bound, relative to the diameter of the box of the image. Its default value is <computeroutput>FT(1e-3)</computeroutput>. </para></listitem>
</itemizedlist>
</para><para><bold>Examples</bold><linebreak/>
</para><para>From the example (<ref refid="Mesh_3_2mesh_3D_gray_image_8cpp-example" kindref="compound">Mesh_3/mesh_3D_gray_image.cpp</ref>), where the name of the parameters is not specified, as they are given is the same order as the parameters definition:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh_domain::create_gray_image_mesh_domain(image,<sp/>2.9f,<sp/>0.f);</highlight></codeline>
</programlisting> From the example (<ref refid="Mesh_3_2mesh_3D_gray_vtk_image_8cpp-example" kindref="compound">Mesh_3/mesh_3D_gray_vtk_image.cpp</ref>):</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>verbose<sp/>function<sp/>and<sp/>named<sp/>parameters<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCGAL_1_1parameters" kindref="compound">CGAL::parameters</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain<sp/>=<sp/>Mesh_domain::create_gray_image_mesh_domain</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(image,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>image_values_to_subdomain_indices<sp/>=<sp/>Less(iso),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>value_outside<sp/>=<sp/>0);</highlight></codeline>
</programlisting></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1a2d77aff36bbb720190b01e3d36f76a67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>A_i</declname>
            <defname>A_i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></type>
        <definition>static Labeled_mesh_domain_3 CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::create_labeled_image_mesh_domain</definition>
        <argsstring>(A_i &amp;...)</argsstring>
        <name>create_labeled_image_mesh_domain</name>
        <param>
          <type>A_i &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
<para>Construction from a 3D labeled image. </para>        </briefdescription>
        <detaileddescription>
<para>This static method is a <emphasis>named constructor</emphasis>. It constructs a domain described by a 3D labeled image. A 3D labeled image is a grid of voxels, where each voxel is associated with an index (a subdomain index) characterizing the subdomain in which the voxel lies. The domain to be discretized is the union of voxels that have non-zero values.</para><para>This constructor uses named parameters (from the <emphasis>Boost Parameter Library</emphasis>). They can be specified in any order.</para><para><bold>Named Parameters</bold><linebreak/>
 The parameters are optional unless otherwise specified. <itemizedlist>
<listitem>
<para><bold><computeroutput>parameters::image</computeroutput> (mandatory)</bold> the input 3D image. Must be a <computeroutput><ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref></computeroutput> object.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameter::value_outside</computeroutput></bold> the value attached to voxels outside of the domain to be meshed. Its default value is <computeroutput>0</computeroutput>.</para><para></para></listitem>
<listitem>
<para><bold><computeroutput>parameter::relative_error_bound</computeroutput></bold> is the relative error bound, relative to the diameter of the box of the image. Its default value is <computeroutput>FT(1e-3)</computeroutput>. </para></listitem>
</itemizedlist>
</para><para><bold>Example</bold><linebreak/>
</para><para>From the example (<ref refid="Mesh_3_2mesh_3D_image_8cpp-example" kindref="compound">Mesh_3/mesh_3D_image.cpp</ref>):</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/>Mesh_domain<sp/>domain<sp/>=<sp/>Mesh_domain::create_labeled_image_mesh_domain(image);</highlight></codeline>
</programlisting></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="253" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Deprecated constructors</header>
      <description><para>Those three constructors have been deprecated since CGAL-4.13, and replaced by the constructor using the <emphasis>Boost Parameter Library</emphasis>. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1a53af430b878490d22dbff765c50bceee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Labeled_mesh_domain_3</definition>
        <argsstring>(Labeling_function f, const Sphere_3 &amp;bounding_sphere, const FT &amp;relative_error_bound=FT(1e-3))</argsstring>
        <name>Labeled_mesh_domain_3</name>
        <param>
          <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a3d03d5d05c5fa1dea7525665e979ff04" kindref="member">Labeling_function</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a75196b9f4f5be2f049decf3affe11560" kindref="member">Sphere_3</ref> &amp;</type>
          <declname>bounding_sphere</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref> &amp;</type>
          <declname>relative_error_bound</declname>
          <defval><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref>(1e-3)</defval>
        </param>
        <briefdescription>
<para>Construction from a labeling function, a bounding Sphere and a relative error bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the labeling function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounding_sphere</parametername>
</parameternamelist>
<parameterdescription>
<para>the bounding sphere of the meshable space. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relative_error_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>is the relative error bound used to compute intersection points between the implicit surface and query segments. The bisection is stopped when the length of the intersected segment is less than the product of <computeroutput>relative_error_bound</computeroutput> by the radius of <computeroutput>bounding_sphere</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This constructor is deprecated since CGAL-4.13, and replaced by the constructor using the <emphasis>Boost Parameter Library</emphasis>. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1aba280272da45d916b7043b97b6b871bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Labeled_mesh_domain_3</definition>
        <argsstring>(Labeling_function f, const Bbox_3 &amp;bbox, const FT &amp;relative_error_bound=FT(1e-3))</argsstring>
        <name>Labeled_mesh_domain_3</name>
        <param>
          <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a3d03d5d05c5fa1dea7525665e979ff04" kindref="member">Labeling_function</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Bbox_3</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref> &amp;</type>
          <declname>relative_error_bound</declname>
          <defval><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref>(1e-3)</defval>
        </param>
        <briefdescription>
<para>Construction from a labeling function, a bounding box and a relative error bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the labeling function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bbox</parametername>
</parameternamelist>
<parameterdescription>
<para>the bounding box of the meshable space. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relative_error_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>is the relative error bound used to compute intersection points between the implicit surface and query segments. The bisection is stopped when the length of the intersected segment is less than the product of <computeroutput>relative_error_bound</computeroutput> by the diagonal of <computeroutput>bounding_box</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This constructor is deprecated since CGAL-4.13, and replaced by the constructor using the <emphasis>Boost Parameter Library</emphasis>. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Labeled__mesh__domain__3_1a352b8f946102e0072ddb310543021e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Labeled_mesh_domain_3&lt; BGT &gt;::Labeled_mesh_domain_3</definition>
        <argsstring>(Labeling_function f, const Iso_cuboid_3 &amp;bbox, const FT &amp;relative_error_bound=FT(1e-3))</argsstring>
        <name>Labeled_mesh_domain_3</name>
        <param>
          <type><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a3d03d5d05c5fa1dea7525665e979ff04" kindref="member">Labeling_function</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a26599b0585d6f01752b666f2ce4c9e79" kindref="member">Iso_cuboid_3</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref> &amp;</type>
          <declname>relative_error_bound</declname>
          <defval><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" kindref="member">FT</ref>(1e-3)</defval>
        </param>
        <briefdescription>
<para>Construction from a function, a bounding <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Iso_cuboid_3</ref> and a relative error bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bbox</parametername>
</parameternamelist>
<parameterdescription>
<para>the bounding box of the meshable space. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relative_error_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>is the relative error bound used to compute intersection points between the implicit surface and query segments. The bisection is stopped when the length of the intersected segment is less than the product of <computeroutput>relative_error_bound</computeroutput> by the diagonal of <computeroutput>bounding_box</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This constructor is deprecated since CGAL-4.13, and replaced by the constructor using the <emphasis>Boost Parameter Library</emphasis>. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Labeled_mesh_domain_3.h" line="300" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput> implements indexed domains. </para>    </briefdescription>
    <detaileddescription>
<para>This class is a model of concept <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput>.</para><para>Any boundary facet is labeled &lt;a,b&gt;, with a&lt;b, where a and b are the tags of its incident subdomains. Thus, a boundary facet of the domain is labeled &lt;0,b&gt;, where b!=0.</para><para>This class includes a <emphasis>labeling function</emphasis> that provides the index of the subdomain in which any query point lies. An intersection between a segment and bounding surfaces is detected when both segment endpoints are associated with different values of subdomain indices. The intersection is then constructed by bisection. The bisection stops when the query segment is shorter than an error bound <computeroutput>e</computeroutput> given by the product of the length of the diagonal of the bounding box (in world coordinates), or the radius of the bounding sphere, and a relative error bound passed as argument to the constructor of <computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput>.</para><para>This class has a constructor taking a labeling function. It has also three static template member functions that act as named constructors: <itemizedlist>
<listitem>
<para><computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1ab7746c99b2eff13b7f70d2f3d6a831eb" kindref="member">create_gray_image_mesh_domain()</ref></computeroutput>, to create a domain from a 3D gray image, </para></listitem>
<listitem>
<para><computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1a2d77aff36bbb720190b01e3d36f76a67" kindref="member">create_labeled_image_mesh_domain()</ref></computeroutput>, to create a domain from a 3D labeled image, and </para></listitem>
<listitem>
<para><computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3_1ae236ca7246ca4eb186c4146981be7212" kindref="member">create_implicit_mesh_domain()</ref></computeroutput>, to create a domain from an implicit function. </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>BGT</parametername>
</parameternamelist>
<parameterdescription>
<para>is a geometric traits class that provides the basic operations to implement intersection tests and intersection computations through a bisection method. This parameter must be instantiated with a model of the concept <computeroutput><ref refid="classBisectionGeometricTraits__3" kindref="compound">BisectionGeometricTraits_3</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Labeling function</bold><linebreak/>
</para><para>A labeling function <computeroutput>f</computeroutput> must return <computeroutput>0</computeroutput> if the point isn&apos;t located in any subdomain. The return type of labeling functions is an integer.</para><para>Let <computeroutput>p</computeroutput> be a Point. <itemizedlist>
<listitem>
<para><computeroutput>f(p)=0</computeroutput> means that <computeroutput>p</computeroutput> is outside domain. </para></listitem>
<listitem>
<para><computeroutput>f(p)=a</computeroutput>, <computeroutput>a!=0</computeroutput> means that <computeroutput>p</computeroutput> is inside subdomain <computeroutput>a</computeroutput>. </para></listitem>
</itemizedlist>
<computeroutput><ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper" kindref="compound">CGAL::Implicit_multi_domain_to_labeling_function_wrapper</ref></computeroutput> is a good candidate for this template parameter if there are several components to mesh.</para><para>The function type can be any model of the concept <computeroutput><ref refid="classCallable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Callable</ref></computeroutput> compatible with the signature <computeroutput>Subdomain_index(const Point_3&amp;)</computeroutput>: it can be a function, a function object, a lambda expression... that takes a <computeroutput>Point_3</computeroutput> as argument, and returns a type convertible to <computeroutput>Subdomain_index</computeroutput>.</para><para><xrefsect id="models_1_models000005"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper" kindref="compound">Implicit_multi_domain_to_labeling_function_wrapper</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh__3Functions_1ga1ee73dc372985c6aeef85f2415fac0ba" kindref="member">CGAL::make_mesh_3()</ref></computeroutput>. </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Labeled_mesh_domain_3.h" line="59" column="1" bodyfile="CGAL/Labeled_mesh_domain_3.h" bodystart="58" bodyend="306"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1ab7746c99b2eff13b7f70d2f3d6a831eb" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>create_gray_image_mesh_domain</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1ae236ca7246ca4eb186c4146981be7212" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>create_implicit_mesh_domain</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a2d77aff36bbb720190b01e3d36f76a67" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>create_labeled_image_mesh_domain</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a939f728402ff3c4e05efb262970a8129" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a26599b0585d6f01752b666f2ce4c9e79" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1acf7298ad8f5efefdb73693acd1fb850e" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Labeled_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a53af430b878490d22dbff765c50bceee" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Labeled_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1aba280272da45d916b7043b97b6b871bf" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Labeled_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a352b8f946102e0072ddb310543021e02" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Labeled_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a3d03d5d05c5fa1dea7525665e979ff04" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Labeling_function</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1ae6d31a712e0eb0870d8855f716595229" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a75196b9f4f5be2f049decf3affe11560" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Sphere_3</name></member>
      <member refid="classCGAL_1_1Labeled__mesh__domain__3_1a4a65f0465ed14559b2f9e32673227a01" prot="public" virt="non-virtual"><scope>CGAL::Labeled_mesh_domain_3</scope><name>Subdomain_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
