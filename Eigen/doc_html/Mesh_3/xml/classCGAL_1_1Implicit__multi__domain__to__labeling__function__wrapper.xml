<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</compoundname>
    <includes local="no">CGAL/Implicit_to_labeling_function_wrapper.h</includes>
    <templateparamlist>
      <param>
        <type>class Function</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a4eaa03744d8325d02c242d3de1a88afa" prot="public" static="no">
        <type>std::vector&lt; Function * &gt;</type>
        <definition>typedef std::vector&lt;Function*&gt; CGAL::Implicit_multi_domain_to_labeling_function_wrapper&lt; Function &gt;::Function_vector</definition>
        <argsstring></argsstring>
        <name>Function_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="31" column="1" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a756adb3d320b37aa29ec358bb5a7c641" prot="public" static="no">
        <type>Function::Point</type>
        <definition>typedef Function::Point CGAL::Implicit_multi_domain_to_labeling_function_wrapper&lt; Function &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="33" column="1" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a2774fcc5804ceda753f3de7feec1096e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Implicit_multi_domain_to_labeling_function_wrapper&lt; Function &gt;::Implicit_multi_domain_to_labeling_function_wrapper</definition>
        <argsstring>(const Function_vector &amp;implicit_functions)</argsstring>
        <name>Implicit_multi_domain_to_labeling_function_wrapper</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a4eaa03744d8325d02c242d3de1a88afa" kindref="member">Function_vector</ref> &amp;</type>
          <declname>implicit_functions</declname>
        </param>
        <briefdescription>
<para>Construction from a vector of implicit functions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implicit_functions</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of implicit functions.</para></parameterdescription>
</parameteritem>
</parameterlist>
Position vectors are built automatically so that the union of components equals the union of the functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1aa29af1b60ab31299e8bda6a9d0c124b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Implicit_multi_domain_to_labeling_function_wrapper&lt; Function &gt;::Implicit_multi_domain_to_labeling_function_wrapper</definition>
        <argsstring>(const Function_vector &amp;implicit_functions, const std::vector&lt; std::vector&lt; Sign &gt; &gt; &amp;position_vectors)</argsstring>
        <name>Implicit_multi_domain_to_labeling_function_wrapper</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a4eaa03744d8325d02c242d3de1a88afa" kindref="member">Function_vector</ref> &amp;</type>
          <declname>implicit_functions</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Sign</ref> &gt; &gt; &amp;</type>
          <declname>position_vectors</declname>
        </param>
        <briefdescription>
<para>Construction from a vector of implicit functions and a vector of vector of signs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implicit_functions</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of implicit functions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_vectors</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of vector of signs. Each vector of positions describes a component. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Sign</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a964b449d65e6c37dfa41a59251b48802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Implicit_multi_domain_to_labeling_function_wrapper&lt; Function &gt;::Implicit_multi_domain_to_labeling_function_wrapper</definition>
        <argsstring>(const Function_vector &amp;implicit_functions, const std::vector&lt; std::string &gt; &amp;position_strings)</argsstring>
        <name>Implicit_multi_domain_to_labeling_function_wrapper</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a4eaa03744d8325d02c242d3de1a88afa" kindref="member">Function_vector</ref> &amp;</type>
          <declname>implicit_functions</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>position_strings</declname>
        </param>
        <briefdescription>
<para>Construction from a vector of implicit functions and a vector of strings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implicit_functions</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of implicit functions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_strings</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of strings. The strings contained in this vector must contain &apos;+&apos; or &apos;-&apos; only. Each string (vector of positions) describes a component. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper" kindref="compound">Implicit_multi_domain_to_labeling_function_wrapper</ref></computeroutput> is a helping class to get a function with integer values labeling the components of a multi-domain. </para>    </briefdescription>
    <detaileddescription>
<para>The multidomain is described through a set of functions {fi(p), i=1, ...n}. Each component corresponds to a sign vector [s1, s2, ..., sn] where si is the sign of the function fi(p) at a point p of the component. This wrapper class can be passed to <computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput> as first template parameter.</para><para><simplesect kind="par"><title>Example</title><para>For example, the multidomain described by the three functions [f1,f2,f3] and the two sign vectors [-,-,+] and [+,-,+] includes two components.<linebreak/>
 The first one matches the locus of points satisfying f1(p)&lt;0 and f2(p)&lt;0 and f3(p)&gt;0.<linebreak/>
 The second one matches the locus of points satisfying f1(p)&gt;0 and f2(p)&lt;0 and f3(p)&gt;0.<linebreak/>
</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Function</parametername>
</parameternamelist>
<parameterdescription>
<para>provides the definition of the function. This parameter stands for a model of the concept <ref refid="classImplicitFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Surface_mesher.tag">ImplicitFunction</ref> described in the surface mesh generation package. The number types Function::FT and BGT::FT are required to match.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput>. </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="26" column="1" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="25" bodyend="64"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a4eaa03744d8325d02c242d3de1a88afa" prot="public" virt="non-virtual"><scope>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</scope><name>Function_vector</name></member>
      <member refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a2774fcc5804ceda753f3de7feec1096e" prot="public" virt="non-virtual"><scope>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</scope><name>Implicit_multi_domain_to_labeling_function_wrapper</name></member>
      <member refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1aa29af1b60ab31299e8bda6a9d0c124b0" prot="public" virt="non-virtual"><scope>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</scope><name>Implicit_multi_domain_to_labeling_function_wrapper</name></member>
      <member refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a964b449d65e6c37dfa41a59251b48802" prot="public" virt="non-virtual"><scope>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</scope><name>Implicit_multi_domain_to_labeling_function_wrapper</name></member>
      <member refid="classCGAL_1_1Implicit__multi__domain__to__labeling__function__wrapper_1a756adb3d320b37aa29ec358bb5a7c641" prot="public" virt="non-virtual"><scope>CGAL::Implicit_multi_domain_to_labeling_function_wrapper</scope><name>Point_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
