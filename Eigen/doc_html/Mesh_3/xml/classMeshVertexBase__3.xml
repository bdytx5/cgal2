<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classMeshVertexBase__3" kind="class" language="C++" prot="public">
    <compoundname>MeshVertexBase_3</compoundname>
    <includes local="no">Concepts/MeshVertexBase_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classMeshVertexBase__3_1ada1fae2eb2df88340d0bba8a55259660" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshVertexBase_3::Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <briefdescription>
<para><ref refid="classIndex" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Index</ref> type. </para>        </briefdescription>
        <detaileddescription>
<para>Must match the type <computeroutput><ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">MeshDomain_3::Index</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="42" column="1" bodyfile="Concepts/MeshVertexBase_3.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshVertexBase__3_1ad0e4036ea609a9551899278d0487df8e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshVertexBase_3::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Numerical type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="47" column="1" bodyfile="Concepts/MeshVertexBase_3.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classMeshVertexBase__3_1a5c4fa12df2d69be97747830b823e19b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MeshVertexBase_3::in_dimension</definition>
        <argsstring>() const</argsstring>
        <name>in_dimension</name>
        <briefdescription>
<para>Returns the dimension of the lowest dimensional face of the input 3D complex that contains the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a9fe48efb87f7ee8fe294f2053be1eb26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_dimension</definition>
        <argsstring>(int)</argsstring>
        <name>set_dimension</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Sets the dimension of the lowest dimensional face of the input 3D complex that contains the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1abebd1b0f3f700fe57a704928ace7defa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshVertexBase__3_1ada1fae2eb2df88340d0bba8a55259660" kindref="member">Index</ref></type>
        <definition>Index MeshVertexBase_3::index</definition>
        <argsstring>()</argsstring>
        <name>index</name>
        <briefdescription>
<para>Returns the index of the lowest dimensional face of the input 3D complex that contains the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a3604c8c08cbb9d0b1f02dc53901fbd63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_index</definition>
        <argsstring>(Index)</argsstring>
        <name>set_index</name>
        <param>
          <type><ref refid="classMeshVertexBase__3_1ada1fae2eb2df88340d0bba8a55259660" kindref="member">Index</ref></type>
        </param>
        <briefdescription>
<para>Sets the index of the lowest dimensional face of the input 3D complex that contains the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="72" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Internal</header>
      <description><para>These functions are used internally.</para><para>The user is not encouraged to use them directly as they may change in the future. </para></description>
      <memberdef kind="function" id="classMeshVertexBase__3_1acf93d7be2b44bd02fa14f1c25c5a9fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MeshVertexBase_3::is_special</definition>
        <argsstring>()</argsstring>
        <name>is_special</name>
        <briefdescription>
<para>Returns a boolean, used for feature edges protection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a6148b21c4599c439b85e16405a1f6ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_special</definition>
        <argsstring>(bool)</argsstring>
        <name>set_special</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Sets the special aspect of the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a7ca709d26d942509094f91bfe82b6e9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshVertexBase__3_1ad0e4036ea609a9551899278d0487df8e" kindref="member">FT</ref></type>
        <definition>FT MeshVertexBase_3::meshing_info</definition>
        <argsstring>() const</argsstring>
        <name>meshing_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a6af96724c173eae92f5a05fe60149de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_meshing_info</definition>
        <argsstring>(FT)</argsstring>
        <name>set_meshing_info</name>
        <param>
          <type><ref refid="classMeshVertexBase__3_1ad0e4036ea609a9551899278d0487df8e" kindref="member">FT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a2618b5f06435baf578f3020ed4328c07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle MeshVertexBase_3::next_intrusive</definition>
        <argsstring>() const</argsstring>
        <name>next_intrusive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a78e47af6e63c1e69367f29ba9800cc47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_next_intrusive</definition>
        <argsstring>(Vertex_handle)</argsstring>
        <name>set_next_intrusive</name>
        <param>
          <type>Vertex_handle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a543f343c70e58d584f7228d54b92bf85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle MeshVertexBase_3::previous_intrusive</definition>
        <argsstring>() const</argsstring>
        <name>previous_intrusive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a58d19d7e99731d7e605c75f3f7c82b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_previous_intrusive</definition>
        <argsstring>(Vertex_handle)</argsstring>
        <name>set_previous_intrusive</name>
        <param>
          <type>Vertex_handle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1ad055e6af4f3156284d7cdbaf9b7b7537" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MeshVertexBase_3::erase_counter</definition>
        <argsstring>() const</argsstring>
        <name>erase_counter</name>
        <briefdescription>
<para>Get the erase counter. </para>        </briefdescription>
        <detaileddescription>
<para>Only required by the parallel algorithms. See <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Compact_container</ref></computeroutput> for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a8b614f58cca0341bf2fdb9e4d6fdcbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::set_erase_counter</definition>
        <argsstring>(unsigned int c)</argsstring>
        <name>set_erase_counter</name>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Sets the erase counter. </para>        </briefdescription>
        <detaileddescription>
<para>Only required by the parallel algorithms. See <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Compact_container</ref></computeroutput> for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classMeshVertexBase__3_1a585bdb0eafea242296d7c4401e348372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MeshVertexBase_3::increment_erase_counter</definition>
        <argsstring>()</argsstring>
        <name>increment_erase_counter</name>
        <briefdescription>
<para>Increments the erase counter. </para>        </briefdescription>
        <detaileddescription>
<para>Only required by the parallel algorithms. See <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Compact_container</ref></computeroutput> for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshVertexBase_3.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound">MeshVertexBase_3</ref></computeroutput> describes the requirements for the <computeroutput>Vertex</computeroutput> type of the triangulation used by a 3D mesh generation process. The type <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound">MeshVertexBase_3</ref></computeroutput> refines both the concept <computeroutput><ref refid="classRegularTriangulationVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">RegularTriangulationVertexBase_3</ref></computeroutput> and the concept <computeroutput><ref refid="classSurfaceMeshVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Surface_mesher.tag">SurfaceMeshVertexBase_3</ref></computeroutput>. It provides additional members to store and retrieve information about the location of the vertex with respect to the input domain describing the domain to be discretized. More specifically, the concept <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound">MeshVertexBase_3</ref></computeroutput> provides read-write access to an integer representing the dimension of the lowest dimensional face of the input 3D complex on which the vertex lies, and to an index characteristic of this face. The concept <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound">MeshVertexBase_3</ref></computeroutput> provides storage and read-write access to a boolean, a <computeroutput>FT</computeroutput> value, and two <computeroutput>Vertex_handle</computeroutput> called &apos;intrusive&apos;. </para>    </briefdescription>
    <detaileddescription>
<para> The parallel algorithms require an erase counter in each cell (see below).</para><para><xrefsect id="refines_1_refines000006"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classRegularTriangulationVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_3.tag">RegularTriangulationVertexBase_3</ref></computeroutput> </para><para><computeroutput><ref refid="classSurfaceMeshVertexBase__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Surface_mesher.tag">SurfaceMeshVertexBase_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000016"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Mesh__vertex__base__3" kindref="compound">CGAL::Mesh_vertex_base_3</ref>&lt;Gt,MD,Vb&gt;</computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh__3Functions_1ga1ee73dc372985c6aeef85f2415fac0ba" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh__3Functions_1gac5a80764f9615b55c9dc60ab055e06ba" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/MeshVertexBase_3.h" line="33" column="1" bodyfile="Concepts/MeshVertexBase_3.h" bodystart="33" bodyend="138"/>
    <listofallmembers>
      <member refid="classMeshVertexBase__3_1ad055e6af4f3156284d7cdbaf9b7b7537" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>erase_counter</name></member>
      <member refid="classMeshVertexBase__3_1ad0e4036ea609a9551899278d0487df8e" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>FT</name></member>
      <member refid="classMeshVertexBase__3_1a5c4fa12df2d69be97747830b823e19b7" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>in_dimension</name></member>
      <member refid="classMeshVertexBase__3_1a585bdb0eafea242296d7c4401e348372" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>increment_erase_counter</name></member>
      <member refid="classMeshVertexBase__3_1ada1fae2eb2df88340d0bba8a55259660" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>Index</name></member>
      <member refid="classMeshVertexBase__3_1abebd1b0f3f700fe57a704928ace7defa" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>index</name></member>
      <member refid="classMeshVertexBase__3_1acf93d7be2b44bd02fa14f1c25c5a9fe4" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>is_special</name></member>
      <member refid="classMeshVertexBase__3_1a7ca709d26d942509094f91bfe82b6e9f" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>meshing_info</name></member>
      <member refid="classMeshVertexBase__3_1a2618b5f06435baf578f3020ed4328c07" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>next_intrusive</name></member>
      <member refid="classMeshVertexBase__3_1a543f343c70e58d584f7228d54b92bf85" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>previous_intrusive</name></member>
      <member refid="classMeshVertexBase__3_1a9fe48efb87f7ee8fe294f2053be1eb26" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_dimension</name></member>
      <member refid="classMeshVertexBase__3_1a8b614f58cca0341bf2fdb9e4d6fdcbdc" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_erase_counter</name></member>
      <member refid="classMeshVertexBase__3_1a3604c8c08cbb9d0b1f02dc53901fbd63" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_index</name></member>
      <member refid="classMeshVertexBase__3_1a6af96724c173eae92f5a05fe60149de1" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_meshing_info</name></member>
      <member refid="classMeshVertexBase__3_1a78e47af6e63c1e69367f29ba9800cc47" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_next_intrusive</name></member>
      <member refid="classMeshVertexBase__3_1a58d19d7e99731d7e605c75f3f7c82b78" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_previous_intrusive</name></member>
      <member refid="classMeshVertexBase__3_1a6148b21c4599c439b85e16405a1f6ad8" prot="public" virt="non-virtual"><scope>MeshVertexBase_3</scope><name>set_special</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
