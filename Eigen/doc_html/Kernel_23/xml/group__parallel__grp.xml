<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__parallel__grp" kind="group">
    <compoundname>parallel_grp</compoundname>
    <title>CGAL::parallel()</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__parallel__grp_1gaf8b045ed5b2d7e892f6371ff6093ce5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga40204dc3851914ada523ba7a02033ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_2&lt; Kernel &gt; &amp;r1, const CGAL::Ray_2&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>r1</computeroutput> and <computeroutput>r2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae0d355e2a6bfdabee4f756eb8ba6b99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gaeb6bfe961d6a3c29470b828000437695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_3&lt; Kernel &gt; &amp;l1, const CGAL::Line_3&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga55cbad9fbbb52748d75a1272184207b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae16f0e8fffcdff942d0a2e8a8fda7d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_3&lt; Kernel &gt; &amp;r1, const CGAL::Ray_3&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>r1</computeroutput> and <computeroutput>r2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga99661a71ebf67dc44fdbd2011177ae01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s1, const CGAL::Segment_3&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2385" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
