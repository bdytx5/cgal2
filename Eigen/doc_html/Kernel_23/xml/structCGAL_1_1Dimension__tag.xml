<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Dimension__tag" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Dimension_tag</compoundname>
    <includes local="no">CGAL/Dimension.h</includes>
    <templateparamlist>
      <param>
        <type>typename int</type>
        <declname>dim</declname>
        <defname>dim</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constants</header>
      <memberdef kind="variable" id="structCGAL_1_1Dimension__tag_1a331a1ccd2e5c6b003b2efcf753b2efe6" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CGAL::Dimension_tag&lt; dim &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The value of the <computeroutput>dim</computeroutput> parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Dimension.h" line="94" column="1" bodyfile="CGAL/Dimension.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound">Dimension_tag</ref></computeroutput> is an empty object which can be used for dispatching functions based on the dimension of an object, as provided by the <computeroutput>dim</computeroutput> parameter. </para>    </briefdescription>
    <detaileddescription>
<para>It is useful in cases where it is not more practical to pass the dimension as a template parameter directly.</para><para><bold>Example</bold><linebreak/>
</para><para>The following code declares two functions constructing two points at the origin, either in 2D or in 3D.</para><para><programlisting><codeline><highlight class="normal">Point_2&lt;K&gt;<sp/>get_origin(Dimension_tag&lt;2&gt;)<sp/>{<sp/>return<sp/>Point_2&lt;K&gt;(ORIGIN);<sp/>}<sp/></highlight></codeline>
<codeline><highlight class="normal">Point_3&lt;K&gt;<sp/>get_origin(Dimension_tag&lt;3&gt;)<sp/>{<sp/>return<sp/>Point_3&lt;K&gt;(ORIGIN);<sp/>}<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>get_origin(Dimension_tag&lt;2&gt;()))<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Ambient__dimension" kindref="compound">CGAL::Ambient_dimension</ref>&lt;T, K&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Feature__dimension" kindref="compound">CGAL::Feature_dimension</ref>&lt;T, K&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Dynamic__dimension__tag" kindref="compound">CGAL::Dynamic_dimension_tag</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Dimension.h" line="86" column="1" bodyfile="CGAL/Dimension.h" bodystart="86" bodyend="98"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Dimension__tag_1a331a1ccd2e5c6b003b2efcf753b2efe6" prot="public" virt="non-virtual"><scope>CGAL::Dimension_tag</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
