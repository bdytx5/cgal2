<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classKernel_1_1Orientation__2" kind="class" language="C++" prot="public">
    <compoundname>Kernel::Orientation_2</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classKernel_1_1Orientation__2_1a799f18593a893371fdd03b5cb4825dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1ac3987564bd4891820ba667615d59090b" kindref="member">Orientation</ref></type>
        <definition>Orientation Kernel::Orientation_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Point_2 &amp;q, const Kernel::Point_2 &amp;r)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>returns <ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member">CGAL::LEFT_TURN</ref>, if <computeroutput>r</computeroutput> lies to the left of the oriented line <computeroutput>l</computeroutput> defined by <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>, returns <ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member">CGAL::RIGHT_TURN</ref> if <computeroutput>r</computeroutput> lies to the right of <computeroutput>l</computeroutput>, and returns <ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref> if <computeroutput>r</computeroutput> lies on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="9062" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Orientation__2_1a4d04415f403bd39bd881d4febebd05ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1ac3987564bd4891820ba667615d59090b" kindref="member">Orientation</ref></type>
        <definition>Orientation Kernel::Orientation_2::operator()</definition>
        <argsstring>(const Kernel::Vector_2 &amp;u, const Kernel::Vector_2 &amp;v)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ac99a26c147a66317cc6afcaf27b091e2" kindref="member">Kernel::Vector_2</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ac99a26c147a66317cc6afcaf27b091e2" kindref="member">Kernel::Vector_2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns <ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member">CGAL::LEFT_TURN</ref> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> form a left turn, returns <ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member">CGAL::RIGHT_TURN</ref> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> form a right turn, and returns <ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> are collinear. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="9071" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000251"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> (with three arguments) </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__orientation__grp" kindref="compound">CGAL::orientation()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="9049" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="9049" bodyend="9077"/>
    <listofallmembers>
      <member refid="classKernel_1_1Orientation__2_1a799f18593a893371fdd03b5cb4825dc2" prot="public" virt="non-virtual"><scope>Kernel::Orientation_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Orientation__2_1a4d04415f403bd39bd881d4febebd05ad" prot="public" virt="non-virtual"><scope>Kernel::Orientation_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
