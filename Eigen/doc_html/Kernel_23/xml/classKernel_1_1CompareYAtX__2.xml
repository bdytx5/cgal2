<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classKernel_1_1CompareYAtX__2" kind="class" language="C++" prot="public">
    <compoundname>Kernel::CompareYAtX_2</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1a18c0ef789b19738972dd0bac6d039bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Line_2 &amp;h)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>compares the <formula id="55">$ y$</formula>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>See Figure <ref refid="classKernel_1_1CompareYAtX__2_1fig-compare2" kindref="member">fig-compare2</ref> (e). <simplesect kind="pre"><para><computeroutput>h</computeroutput> is not vertical. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1a63ab598617c0997eaf50e615c6218f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Line_2 &amp;h1, const Kernel::Line_2 &amp;h2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>This function compares the <computeroutput>y</computeroutput>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h1</computeroutput> and on <computeroutput>h2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>See Figure <ref refid="classKernel_1_1CompareYAtX__2_1fig-compare2" kindref="member">fig-compare2</ref> (e). <simplesect kind="pre"><para><computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are not vertical. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1a9ead49e798d4a802e30a6374db304439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Line_2 &amp;l1, const Kernel::Line_2 &amp;l2, const Kernel::Line_2 &amp;h)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Let <computeroutput>p</computeroutput> be the intersection of lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This function compares the <formula id="55">$ y$</formula>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h</computeroutput>. See (Figure <ref refid="classKernel_1_1CompareYAtX__2_1fig-compare2" kindref="member">fig-compare2</ref> (f)). <simplesect kind="pre"><para><computeroutput>l1</computeroutput>, <computeroutput>l2</computeroutput> intersect and <computeroutput>h</computeroutput> is not vertical. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1a27b7944ceab26bf24186e5bb1a808d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Line_2 &amp;l1, const Kernel::Line_2 &amp;l2, const Kernel::Line_2 &amp;h1, const Kernel::Line_2 &amp;h2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1add6b18567776ee7e80dfdfa44c304772" kindref="member">Kernel::Line_2</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>Let <computeroutput>p</computeroutput> be the intersection of lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This function compares the <computeroutput>y</computeroutput>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h1</computeroutput> and on <computeroutput>h2</computeroutput>. See (Figure <ref refid="classKernel_1_1CompareYAtX__2_1fig-compare2" kindref="member">fig-compare2</ref> (g)). <simplesect kind="pre"><para><computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> intersect; <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are not vertical. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1aee5b8d6c0f38a7326eb3ee7a5ad0f996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Segment_2 &amp;s)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aa6d2526f8d1571f4a38aa8a6d9a02c2b" kindref="member">Kernel::Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>compares the <computeroutput>y</computeroutput>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is vertical, then return <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" kindref="member">CGAL::EQUAL</ref> when <computeroutput>p</computeroutput> lies on <computeroutput>s</computeroutput>, <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" kindref="member">CGAL::SMALLER</ref> when <computeroutput>p</computeroutput> lies under s, and <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" kindref="member">CGAL::LARGER</ref> otherwise.</para><para><simplesect kind="pre"><para><computeroutput>p</computeroutput> is within the x range of <computeroutput>s</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1CompareYAtX__2_1aec05d3911f4f01cd8c52765b7f4d597d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1affdddb2220b43be2336136caf7162362" kindref="member">Comparison_result</ref></type>
        <definition>Comparison_result Kernel::CompareYAtX_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Segment_2 &amp;s1, const Kernel::Segment_2 &amp;s2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ada7ccf9efead4df158c2317406e5fa6c" kindref="member">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aa6d2526f8d1571f4a38aa8a6d9a02c2b" kindref="member">Kernel::Segment_2</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aa6d2526f8d1571f4a38aa8a6d9a02c2b" kindref="member">Kernel::Segment_2</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>This function compares the <formula id="55">$ y$</formula>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>s1</computeroutput> and on <computeroutput>s2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s1</computeroutput> or <computeroutput>s2</computeroutput> is vertical, then return <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" kindref="member">CGAL::EQUAL</ref> if they intersect, otherwise return <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" kindref="member">CGAL::SMALLER</ref> if <computeroutput>s1</computeroutput> lies below <computeroutput>s2</computeroutput>, and return <ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" kindref="member">CGAL::LARGER</ref> otherwise.</para><para><simplesect kind="pre"><para><computeroutput>p</computeroutput> is within the x range of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="1543" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="compare2.png"></image>
 <image type="latex" name="compare2.png"></image>
</para><para><xrefsect id="refines_1_refines000037"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> (with three arguments) </para></xrefdescription></xrefsect></para><para><anchor id="classKernel_1_1CompareYAtX__2_1fig-compare2"/><simplesect kind="see"><para><computeroutput><ref refid="group__compare__y__at__x__grp" kindref="compound">CGAL::compare_y_at_x()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="1474" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="1474" bodyend="1549"/>
    <listofallmembers>
      <member refid="classKernel_1_1CompareYAtX__2_1a18c0ef789b19738972dd0bac6d039bbb" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1CompareYAtX__2_1a63ab598617c0997eaf50e615c6218f33" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1CompareYAtX__2_1a9ead49e798d4a802e30a6374db304439" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1CompareYAtX__2_1a27b7944ceab26bf24186e5bb1a808d47" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1CompareYAtX__2_1aee5b8d6c0f38a7326eb3ee7a5ad0f996" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1CompareYAtX__2_1aec05d3911f4f01cd8c52765b7f4d597d" prot="public" virt="non-virtual"><scope>Kernel::CompareYAtX_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
