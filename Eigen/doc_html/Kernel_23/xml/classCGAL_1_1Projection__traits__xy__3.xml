<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Projection__traits__xy__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Projection_traits_xy_3</compoundname>
    <includes local="no">CGAL/Projection_traits_xy_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename K</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Projection__traits__xy__3_1a9fe40e48e720b29aefe68b3cf8f2de97" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; K &gt;</type>
        <definition>typedef Point_3&lt;K&gt; CGAL::Projection_traits_xy_3&lt; K &gt;::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="45" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Projection__traits__xy__3_1a3b0041f57bdb5a7cd0b9d104534d7449" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; K &gt;</type>
        <definition>typedef Segment_3&lt;K&gt; CGAL::Projection_traits_xy_3&lt; K &gt;::Segment_2</definition>
        <argsstring></argsstring>
        <name>Segment_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="50" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Projection__traits__xy__3_1a61c6c86f02eb7c23d8c5ef010f3a7783" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt; K &gt;</type>
        <definition>typedef Triangle_3&lt;K&gt; CGAL::Projection_traits_xy_3&lt; K &gt;::Triangle_2</definition>
        <argsstring></argsstring>
        <name>Triangle_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="55" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Projection__traits__xy__3_1a31ab599719e8521c5206553ac8c5d869" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; K &gt;</type>
        <definition>typedef Line_3&lt;K&gt; CGAL::Projection_traits_xy_3&lt; K &gt;::Line_2</definition>
        <argsstring></argsstring>
        <name>Line_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="60" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors</header>
      <description><para>The functors provided by this class are those listed in the concepts, except that it does not provide the type and constructors required to build the dual Voronoi diagram.</para><para>The functors operate on the 2D projection of their arguments. They come with preconditions that projections of the arguments are non-degenerate, eg. a line segment does not project on a single point, two points do not project on the same point, etc. In the following, we specify the choice of the <computeroutput>z</computeroutput>-coordinate in case a new point is constructed. </para></description>
      <memberdef kind="typedef" id="classCGAL_1_1Projection__traits__xy__3_1a19eb806102fe9dc3df9fa6e9d469c0ba" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Projection_traits_xy_3&lt; K &gt;::Intersect_2</definition>
        <argsstring></argsstring>
        <name>Intersect_2</name>
        <briefdescription>
<para>A construction object. </para>        </briefdescription>
        <detaileddescription>
<para>Provides the operator :</para><para><computeroutput>Object_2 operator()(Segment_2 s1, Segment_2 s2);</computeroutput> which returns a 3D object whose projection on the xy-plane is the intersection of the projections of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. If non empty, the returned object is either a segment or a point. Its embedding in 3D is computed as the interpolation between <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>, meaning that any point <computeroutput>p</computeroutput> of the returned object is the midpoint of segment <computeroutput>p1p2</computeroutput> where <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput> are the two points of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> respectively, both projecting on <computeroutput>p</computeroutput>. <simplesect kind="pre"><para>The projection of <computeroutput>s1</computeroutput> and the projection of <computeroutput>s2</computeroutput> are non-degenerate <computeroutput>2D</computeroutput> segments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="91" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Projection__traits__xy__3_1a1e522c66615577e3583f35ae38a13d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Projection_traits_xy_3&lt; K &gt;::Projection_traits_xy_3</definition>
        <argsstring>()</argsstring>
        <name>Projection_traits_xy_3</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Projection__traits__xy__3_1a215240717d5998098c46c60ed0527d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Projection_traits_xy_3&lt; K &gt;::Projection_traits_xy_3</definition>
        <argsstring>(Projection_traits_xy_3 tr)</argsstring>
        <name>Projection_traits_xy_3</name>
        <param>
          <type><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound">Projection_traits_xy_3</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Projection__traits__xy__3_1a352ad551d86a14b72180b393daebc728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound">Projection_traits_xy_3</ref></type>
        <definition>Projection_traits_xy_3 CGAL::Projection_traits_xy_3&lt; K &gt;::operator=</definition>
        <argsstring>(Projection_traits_xy_3 tr)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound">Projection_traits_xy_3</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Projection_traits_xy_3.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound">Projection_traits_xy_3</ref></computeroutput> is an adapter to apply 2D algorithms to the projections of 3D data on the <computeroutput>xy</computeroutput>-plane. </para>    </briefdescription>
    <detaileddescription>
<para>CGAL provides also predefined geometric traits classes <computeroutput><ref refid="classCGAL_1_1Projection__traits__yz__3" kindref="compound">Projection_traits_yz_3</ref>&lt;K&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Projection__traits__xz__3" kindref="compound">Projection_traits_xz_3</ref>&lt;K&gt;</computeroutput> to deal with projections on the <computeroutput>zx</computeroutput>- and the <computeroutput>zy</computeroutput>-plane, respectively.</para><para><bold>Parameters</bold><linebreak/>
</para><para>The template parameter <computeroutput>K</computeroutput> has to be instantiated by a model of the <computeroutput><ref refid="classKernel" kindref="compound">Kernel</ref></computeroutput> concept. <computeroutput><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound">Projection_traits_xy_3</ref></computeroutput> uses types and predicates defined in <computeroutput>K</computeroutput>.</para><para><xrefsect id="models_1_models000021"><xreftitle>Is Model Of</xreftitle><xrefdescription><para>The class is a model of several 2D triangulation traits class concepts, except that it does not provide the type and constructors required to build the dual Voronoi diagram. </para><para><computeroutput><ref refid="classPolygonTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">PolygonTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classConvexHullTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Convex_hull_2.tag">ConvexHullTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">TriangulationTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classDelaunayTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">DelaunayTriangulationTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classConstrainedTriangulationTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">ConstrainedTriangulationTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classConvexHullTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Convex_hull_2.tag">ConvexHullTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Mesh_2.tag">DelaunayMeshTraits_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Projection_traits_xy_3.h" line="36" column="1" bodyfile="CGAL/Projection_traits_xy_3.h" bodystart="36" bodyend="117"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a19eb806102fe9dc3df9fa6e9d469c0ba" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Intersect_2</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a31ab599719e8521c5206553ac8c5d869" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Line_2</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a352ad551d86a14b72180b393daebc728" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a9fe40e48e720b29aefe68b3cf8f2de97" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a1e522c66615577e3583f35ae38a13d59" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Projection_traits_xy_3</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a215240717d5998098c46c60ed0527d05" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Projection_traits_xy_3</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a3b0041f57bdb5a7cd0b9d104534d7449" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Segment_2</name></member>
      <member refid="classCGAL_1_1Projection__traits__xy__3_1a61c6c86f02eb7c23d8c5ef010f3a7783" prot="public" virt="non-virtual"><scope>CGAL::Projection_traits_xy_3</scope><name>Triangle_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
