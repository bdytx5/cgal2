<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Tetrahedron__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Tetrahedron_3</compoundname>
    <includes local="no">CGAL/Tetrahedron_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1ada967f8a0fbb0fd8539991512fa6155b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Tetrahedron_3&lt; Kernel &gt;::Tetrahedron_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p0, const Point_3&lt; Kernel &gt; &amp;p1, const Point_3&lt; Kernel &gt; &amp;p2, const Point_3&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>Tetrahedron_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
<para>introduces a tetrahedron <computeroutput>t</computeroutput> with vertices <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput> and <computeroutput>p3</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="33" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a15d31ed2f49dcf90fd67716a0cfddcf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Tetrahedron_3&lt; Kernel &gt; &amp;t2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Test for equality: two tetrahedra <computeroutput>t</computeroutput> and <computeroutput>t2</computeroutput> are equal, iff <computeroutput>t</computeroutput> and <computeroutput>t2</computeroutput> have the same orientation and their sets (not sequences) of vertices are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a2ad1172420c2e5a83b91440698ba5cae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Tetrahedron_3&lt; Kernel &gt; &amp;t2) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a7a0fb6b59391b69a3591b273a8db2ec2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Tetrahedron_3&lt; Kernel &gt;::vertex</definition>
        <argsstring>(int i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th vertex modulo 4 of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a3f959331c48ec2802446c92984861cac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Tetrahedron_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(int i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1ac4b53263b3552d972bb2e0538e34fe9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para>Tetrahedron <computeroutput>t</computeroutput> is degenerate, if the vertices are coplanar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1abfae4f8209a06342ccc8aa9f83e2661a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member">Orientation</ref></type>
        <definition>Orientation CGAL::Tetrahedron_3&lt; Kernel &gt;::orientation</definition>
        <argsstring>() const</argsstring>
        <name>orientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a2552ae8d2679851625760c58f9b08601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::Tetrahedron_3&lt; Kernel &gt;::oriented_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t</computeroutput> is not degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a4bee1e1f8e41347ecfef763c733addf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::Tetrahedron_3&lt; Kernel &gt;::bounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t</computeroutput> is not degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convencience Boolean Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a1f1bea031cbd712a8d628846de0c29a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::has_on_positive_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_positive_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1acd3e3d1368a9b106c88c93326ddb68df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::has_on_negative_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_negative_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a97251dcb34a634986d2ea2f60adef97e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::has_on_boundary</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_boundary</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a213ed000e8b7b7d4b2cd4c55b3f918d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::has_on_bounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a9eb82b5ab1dcad86cc19bc512637c53f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Tetrahedron_3&lt; Kernel &gt;::has_on_unbounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_unbounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a19ca0997025c6f7f721b0d12b1c9df72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Tetrahedron_3&lt; Kernel &gt;::volume</definition>
        <argsstring>() const</argsstring>
        <name>volume</name>
        <briefdescription>
<para>returns the signed volume of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1ae418873464cc2faffb1b9c09ab31eda2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Tetrahedron_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Tetrahedron__3_1a52988c33ed9a0a7e083914c642e4f4ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Tetrahedron_3&lt;Kernel&gt; CGAL::Tetrahedron_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;at) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>at</declname>
        </param>
        <briefdescription>
<para>returns the tetrahedron obtained by applying <computeroutput>at</computeroutput> on the three vertices of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Tetrahedron_3.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>t</computeroutput> of the class <computeroutput><ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">Tetrahedron_3</ref></computeroutput> is an oriented tetrahedron in the three-dimensional Euclidean space <formula id="33">$ \E^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>It is defined by four vertices <formula id="94">$ p_0$</formula>, <formula id="95">$ p_1$</formula>, <formula id="96">$ p_2$</formula> and <formula id="97">$ p_3$</formula>. The orientation of a tetrahedron is the orientation of its four vertices. That means it is positive when <formula id="97">$ p_3$</formula> is on the positive side of the plane defined by <formula id="94">$ p_0$</formula>, <formula id="95">$ p_1$</formula> and <formula id="96">$ p_2$</formula>.</para><para>The tetrahedron itself splits the space <formula id="33">$ \E^3$</formula> in a <emphasis>positive</emphasis> and a <emphasis>negative</emphasis> side.</para><para>The boundary of a tetrahedron splits the space in two open regions, a bounded one and an unbounded one.</para><para><xrefsect id="models_1_models000029"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Tetrahedron__3" kindref="compound">Kernel::Tetrahedron_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Tetrahedron_3.h" line="24" column="1" bodyfile="CGAL/Tetrahedron_3.h" bodystart="24" bodyend="143"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Tetrahedron__3_1ae418873464cc2faffb1b9c09ab31eda2" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a4bee1e1f8e41347ecfef763c733addf2" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>bounded_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a97251dcb34a634986d2ea2f60adef97e" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>has_on_boundary</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a213ed000e8b7b7d4b2cd4c55b3f918d6" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>has_on_bounded_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1acd3e3d1368a9b106c88c93326ddb68df" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>has_on_negative_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a1f1bea031cbd712a8d628846de0c29a1" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>has_on_positive_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a9eb82b5ab1dcad86cc19bc512637c53f" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>has_on_unbounded_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1ac4b53263b3552d972bb2e0538e34fe9a" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a2ad1172420c2e5a83b91440698ba5cae" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a15d31ed2f49dcf90fd67716a0cfddcf6" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a3f959331c48ec2802446c92984861cac" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1abfae4f8209a06342ccc8aa9f83e2661a" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>orientation</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a2552ae8d2679851625760c58f9b08601" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1ada967f8a0fbb0fd8539991512fa6155b" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>Tetrahedron_3</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a52988c33ed9a0a7e083914c642e4f4ec" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a7a0fb6b59391b69a3591b273a8db2ec2" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>vertex</name></member>
      <member refid="classCGAL_1_1Tetrahedron__3_1a19ca0997025c6f7f721b0d12b1c9df72" prot="public" virt="non-virtual"><scope>CGAL::Tetrahedron_3</scope><name>volume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
