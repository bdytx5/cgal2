<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classKernel_1_1Equal__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::Equal_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide the following operations.</para><para>For each of them, it returns <computeroutput>true</computeroutput> iff <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> are equal. </para></description>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1aafbf1f4bd80c09ba88e0763e2df72fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;x, const Kernel::Point_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ae82b7f4be77dd5b8819ebe419e4ae753" kindref="member">Kernel::Point_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ae82b7f4be77dd5b8819ebe419e4ae753" kindref="member">Kernel::Point_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a27dca9791b2203867b041d134013264a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Vector_3 &amp;x, const Kernel::Vector_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a39fb0222695ae5e7e32f4e570ea28225" kindref="member">Kernel::Vector_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a39fb0222695ae5e7e32f4e570ea28225" kindref="member">Kernel::Vector_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7696" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a2d13a9e2babf9d82db3aeef3c3e0d9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Direction_3 &amp;x, const Kernel::Direction_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a1fe229171fb316bd3c2cb6b7fff0caa4" kindref="member">Kernel::Direction_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a1fe229171fb316bd3c2cb6b7fff0caa4" kindref="member">Kernel::Direction_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a39fe241fc6ba392575b26dbc41347fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Line_3 &amp;x, const Kernel::Line_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a6601ab0cd26186d77d45dd745bb41f14" kindref="member">Kernel::Line_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a6601ab0cd26186d77d45dd745bb41f14" kindref="member">Kernel::Line_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a8ed86933b6fdb296329dacff56b22bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;x, const Kernel::Plane_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ac027cb2dbfb711e19826dc83b957033f" kindref="member">Kernel::Plane_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ac027cb2dbfb711e19826dc83b957033f" kindref="member">Kernel::Plane_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a674eba752bf2db04e2c3d0d5d6b34e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Ray_3 &amp;x, const Kernel::Ray_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a93cd09369856a7f4b8b19b94b6554027" kindref="member">Kernel::Ray_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a93cd09369856a7f4b8b19b94b6554027" kindref="member">Kernel::Ray_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1af376958033b636928fb920a15ba5975f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Segment_3 &amp;x, const Kernel::Segment_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1aa43a461b2027ef7d99b776a7b03ef230" kindref="member">Kernel::Segment_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aa43a461b2027ef7d99b776a7b03ef230" kindref="member">Kernel::Segment_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a1748db160ba97d513319b539677d4b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Circle_3 &amp;x, const Kernel::Circle_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ae0a697c5087cd758d527834d2d9db2a6" kindref="member">Kernel::Circle_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ae0a697c5087cd758d527834d2d9db2a6" kindref="member">Kernel::Circle_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a3744b1d15cf3768f9b550f47cddd7bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Sphere_3 &amp;x, const Kernel::Sphere_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a601207c3e7157f868a2e473791bf38c5" kindref="member">Kernel::Sphere_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a601207c3e7157f868a2e473791bf38c5" kindref="member">Kernel::Sphere_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a566bcceff1a016f6095ebfab46aa76b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Triangle_3 &amp;x, const Kernel::Triangle_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1abb5c0e1064f61672b5a4b95d39ba1583" kindref="member">Kernel::Triangle_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1abb5c0e1064f61672b5a4b95d39ba1583" kindref="member">Kernel::Triangle_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7744" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a740a5fd5f47aea2b0a7613c8fca16c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Tetrahedron_3 &amp;x, const Kernel::Tetrahedron_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1aad6b946fde186c084cd49dd7684aefe1" kindref="member">Kernel::Tetrahedron_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aad6b946fde186c084cd49dd7684aefe1" kindref="member">Kernel::Tetrahedron_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__3_1a4f19cf5f905179f0af11a87f997f0fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_3::operator()</definition>
        <argsstring>(const Kernel::Iso_cuboid_3 &amp;x, const Kernel::Iso_cuboid_3 &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1af4995844c84fe8c84df2db6660682c4e" kindref="member">Kernel::Iso_cuboid_3</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1af4995844c84fe8c84df2db6660682c4e" kindref="member">Kernel::Iso_cuboid_3</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7756" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000218"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> (with two arguments) </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Direction__3" kindref="compound">CGAL::Direction_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">CGAL::Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound">CGAL::Line_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">CGAL::Ray_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound">CGAL::Segment_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">CGAL::Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">CGAL::Tetrahedron_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound">CGAL::Triangle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Vector__3" kindref="compound">CGAL::Vector_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="7678" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="7678" bodyend="7761"/>
    <listofallmembers>
      <member refid="classKernel_1_1Equal__3_1aafbf1f4bd80c09ba88e0763e2df72fe9" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a27dca9791b2203867b041d134013264a" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a2d13a9e2babf9d82db3aeef3c3e0d9f1" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a39fe241fc6ba392575b26dbc41347fa7" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a8ed86933b6fdb296329dacff56b22bd5" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a674eba752bf2db04e2c3d0d5d6b34e48" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1af376958033b636928fb920a15ba5975f" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a1748db160ba97d513319b539677d4b81" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a3744b1d15cf3768f9b550f47cddd7bfb" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a566bcceff1a016f6095ebfab46aa76b8" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a740a5fd5f47aea2b0a7613c8fca16c2e" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__3_1a4f19cf5f905179f0af11a87f997f0fcd" prot="public" virt="non-virtual"><scope>Kernel::Equal_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
