<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Feature__dimension" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Feature_dimension</compoundname>
    <includes local="no">CGAL/Dimension.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename K</type>
        <defval>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound">Kernel_traits</ref>&lt;T&gt;::<ref refid="classKernel" kindref="compound">Kernel</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constants</header>
      <memberdef kind="variable" id="structCGAL_1_1Feature__dimension_1aa55bb82b0304952e09760c5d168fa104" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CGAL::Feature_dimension&lt; T, K &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The dimension value as a compile-time integral constant. </para>        </briefdescription>
        <detaileddescription>
<para>It is implemented as <computeroutput>K::Feature_dimension&lt;T&gt;::type::value</computeroutput>. It exists only when the dimension is a compile-time constant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Dimension.h" line="168" column="1" bodyfile="CGAL/Dimension.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Feature__dimension_1acbcab3f12b823bc16fbc636a867661e8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Feature_dimension&lt; T, K &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Either <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound">Dimension_tag</ref>&lt;dim&gt;</computeroutput> if the dimension is a compile-time constant of value <computeroutput>dim</computeroutput>, or <computeroutput><ref refid="structCGAL_1_1Dynamic__dimension__tag" kindref="compound">Dynamic_dimension_tag</ref></computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>It is implemented as <computeroutput>K::Feature_dimension&lt;T&gt;::type</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Dimension.h" line="180" column="1" bodyfile="CGAL/Dimension.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Feature__dimension" kindref="compound">Feature_dimension</ref></computeroutput> allows to retrieve the geometric dimension of a type <computeroutput>T</computeroutput> in a kernel <computeroutput>K</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para><bold>Parameters</bold><linebreak/>
</para><para>The parameter <computeroutput>K</computeroutput> has the default value <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound">Kernel_traits</ref>&lt;T&gt;<ref refid="classKernel" kindref="compound">Kernel</ref></computeroutput>.</para><para><bold>Example</bold><linebreak/>
</para><para>The following retrieves the dimension of a point type.</para><para><programlisting><codeline><highlight class="normal">typedef<sp/>K::Point_2<sp/>Point;<sp/></highlight></codeline>
<codeline><highlight class="normal">int<sp/>dimension<sp/>=<sp/>Feature_dimension&lt;Point,<sp/>K&gt;::value;<sp/></highlight></codeline>
<codeline><highlight class="normal">assert(dimension<sp/>==<sp/>0);<sp/></highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound">CGAL::Dimension_tag</ref>&lt;int dim&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Dynamic__dimension__tag" kindref="compound">CGAL::Dynamic_dimension_tag</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Ambient__dimension" kindref="compound">CGAL::Ambient_dimension</ref>&lt;T, K&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Dimension.h" line="158" column="1" bodyfile="CGAL/Dimension.h" bodystart="158" bodyend="184"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Feature__dimension_1acbcab3f12b823bc16fbc636a867661e8" prot="public" virt="non-virtual"><scope>CGAL::Feature_dimension</scope><name>type</name></member>
      <member refid="structCGAL_1_1Feature__dimension_1aa55bb82b0304952e09760c5d168fa104" prot="public" virt="non-virtual"><scope>CGAL::Feature_dimension</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
