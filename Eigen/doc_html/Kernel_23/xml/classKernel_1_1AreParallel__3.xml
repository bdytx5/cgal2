<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classKernel_1_1AreParallel__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::AreParallel_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classKernel_1_1AreParallel__3_1a36548de4a1d83772b01829b491d06dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::AreParallel_3::operator()</definition>
        <argsstring>(const Kernel::Line_3 &amp;l1, const Kernel::Line_3 &amp;l2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a6601ab0cd26186d77d45dd745bb41f14" kindref="member">Kernel::Line_3</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a6601ab0cd26186d77d45dd745bb41f14" kindref="member">Kernel::Line_3</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1AreParallel__3_1a00ecef03cd35745248d2769ee3d711ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::AreParallel_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;h1, const Kernel::Plane_3 &amp;h2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1ac027cb2dbfb711e19826dc83b957033f" kindref="member">Kernel::Plane_3</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1ac027cb2dbfb711e19826dc83b957033f" kindref="member">Kernel::Plane_3</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1AreParallel__3_1a23ec56d66f53ebcac1b9e385dea36602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::AreParallel_3::operator()</definition>
        <argsstring>(const Kernel::Ray_3 &amp;r1, const Kernel::Ray_3 &amp;r2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1a93cd09369856a7f4b8b19b94b6554027" kindref="member">Kernel::Ray_3</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a93cd09369856a7f4b8b19b94b6554027" kindref="member">Kernel::Ray_3</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>r1</computeroutput> and <computeroutput>r2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1AreParallel__3_1a7eff828ac900e9f28ef3104089dafb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::AreParallel_3::operator()</definition>
        <argsstring>(const Kernel::Segment_3 &amp;s1, const Kernel::Segment_3 &amp;s2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classKernel_1aa43a461b2027ef7d99b776a7b03ef230" kindref="member">Kernel::Segment_3</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aa43a461b2027ef7d99b776a7b03ef230" kindref="member">Kernel::Segment_3</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, if <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> are parallel or if one of those (or both) is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="244" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000004"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> (with two arguments) </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__parallel__grp" kindref="compound">CGAL::parallel()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="212" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="212" bodyend="250"/>
    <listofallmembers>
      <member refid="classKernel_1_1AreParallel__3_1a36548de4a1d83772b01829b491d06dbb" prot="public" virt="non-virtual"><scope>Kernel::AreParallel_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1AreParallel__3_1a00ecef03cd35745248d2769ee3d711ad" prot="public" virt="non-virtual"><scope>Kernel::AreParallel_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1AreParallel__3_1a23ec56d66f53ebcac1b9e385dea36602" prot="public" virt="non-virtual"><scope>Kernel::AreParallel_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1AreParallel__3_1a7eff828ac900e9f28ef3104089dafb32" prot="public" virt="non-virtual"><scope>Kernel::AreParallel_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
