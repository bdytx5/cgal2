<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Segment__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Segment_3</compoundname>
    <includes local="no">CGAL/Segment_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1aff6ed6df35e451f8341b697e2ff395b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Segment_3&lt; Kernel &gt;::Segment_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>Segment_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a segment <computeroutput>s</computeroutput> with source <computeroutput>p</computeroutput> and target <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is directed from the source towards the target. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="32" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a8112f4621b334b119b1176241397a21c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Segment_3&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for equality: Two segments are equal, iff their sources and targets are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1aa4e1d8e0e5c088c5bf6769341bfb0188" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Segment_3&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1af2fa3e7b097e3556facea777dc287fc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::source</definition>
        <argsstring>() const</argsstring>
        <name>source</name>
        <briefdescription>
<para>returns the source of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a7b88caa9f865e521f2fd8b4ad370a6c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::target</definition>
        <argsstring>() const</argsstring>
        <name>target</name>
        <briefdescription>
<para>returns the target of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a284669999a3715b688ec164c95f8bb49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <briefdescription>
<para>returns the point of <computeroutput>s</computeroutput> with smallest coordinate (lexicographically). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a2224b8cd29ffa8c1459a59e96ca6dee6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <briefdescription>
<para>returns the point of <computeroutput>s</computeroutput> with largest coordinate (lexicographically). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1adeb507a48f558295b0baa80c3b2cadd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::vertex</definition>
        <argsstring>(int i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns source or target of <computeroutput>s</computeroutput>: <computeroutput>vertex(0)</computeroutput> returns the source, <computeroutput>vertex(1)</computeroutput> returns the target. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter <computeroutput>i</computeroutput> is taken modulo 2, which gives easy access to the other vertex. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a9147023f96c66323f721b66406684842" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::point</definition>
        <argsstring>(int i) const</argsstring>
        <name>point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1acefa12e0e7b3166975dad2ea1cba6977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a6537e55b5ea951df2e233334efa03eeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Segment_3&lt; Kernel &gt;::squared_length</definition>
        <argsstring>() const</argsstring>
        <name>squared_length</name>
        <briefdescription>
<para>returns the squared length of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1af55a24ae3c9713f18239e1ce475e2bec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::to_vector</definition>
        <argsstring>() const</argsstring>
        <name>to_vector</name>
        <briefdescription>
<para>returns the vector <computeroutput>s.target()</computeroutput> - <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="classCGAL_1_1Segment__3_1af2fa3e7b097e3556facea777dc287fc2" kindref="member">source()</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a4f81d975e938b6af9fb14dec6d824b55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction from source to target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a02b79d8f7cd178bfa29a0d4a9e237f06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Segment_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::opposite</definition>
        <argsstring>() const</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns a segment with source and target interchanged. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a4b135781282d45c4b7d96a04c7c6aaec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Line_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::supporting_line</definition>
        <argsstring>() const</argsstring>
        <name>supporting_line</name>
        <briefdescription>
<para>returns the line <computeroutput>l</computeroutput> passing through <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Line <computeroutput>l</computeroutput> has the same orientation as segment <computeroutput>s</computeroutput>, that is from the source to the target of <computeroutput>s</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1ab87b7db9297627c745d1c06cb3492672" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para>segment <computeroutput>s</computeroutput> is degenerate, if source and target fall together. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1aa3ed985e2addf919f6eeba1c929fd40b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_3&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>A point is on <computeroutput>s</computeroutput>, iff it is equal to the source or target of <computeroutput>s</computeroutput>, or if it is in the interior of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1ad320c22d1172fbe38c544cdddbce5258" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Segment_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__3_1a43813f3543150b7dd11f53973ca48a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Segment_3&lt;Kernel&gt; CGAL::Segment_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the segment obtained by applying <computeroutput>t</computeroutput> on the source and the target of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Segment_3.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>s</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref></computeroutput> is a directed straight line segment in the three-dimensional Euclidean space <formula id="33">$ \E^3$</formula>, that is a straight line segment <formula id="91">$ [p,q]$</formula> connecting two points <formula id="93">$ p,q \in \R^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>The segment is topologically closed, i.e. the end points belong to it. Point <computeroutput>p</computeroutput> is called the <emphasis>source</emphasis> and <computeroutput>q</computeroutput> is called the <emphasis>target</emphasis> of <computeroutput>s</computeroutput>. The length of <computeroutput>s</computeroutput> is the Euclidean distance between <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. Note that there is only a function to compute the square of the length, because otherwise we had to perform a square root operation which is not defined for all number types, which is expensive, and may not be exact.</para><para><xrefsect id="models_1_models000025"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Segment__3" kindref="compound">Kernel::Segment_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Segment_3.h" line="21" column="1" bodyfile="CGAL/Segment_3.h" bodystart="21" bodyend="139"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Segment__3_1ad320c22d1172fbe38c544cdddbce5258" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Segment__3_1a4f81d975e938b6af9fb14dec6d824b55" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Segment__3_1aa3ed985e2addf919f6eeba1c929fd40b" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Segment__3_1ab87b7db9297627c745d1c06cb3492672" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Segment__3_1a2224b8cd29ffa8c1459a59e96ca6dee6" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>max</name></member>
      <member refid="classCGAL_1_1Segment__3_1a284669999a3715b688ec164c95f8bb49" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>min</name></member>
      <member refid="classCGAL_1_1Segment__3_1aa4e1d8e0e5c088c5bf6769341bfb0188" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Segment__3_1a8112f4621b334b119b1176241397a21c" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Segment__3_1acefa12e0e7b3166975dad2ea1cba6977" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Segment__3_1a02b79d8f7cd178bfa29a0d4a9e237f06" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Segment__3_1a9147023f96c66323f721b66406684842" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>point</name></member>
      <member refid="classCGAL_1_1Segment__3_1aff6ed6df35e451f8341b697e2ff395b6" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>Segment_3</name></member>
      <member refid="classCGAL_1_1Segment__3_1af2fa3e7b097e3556facea777dc287fc2" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>source</name></member>
      <member refid="classCGAL_1_1Segment__3_1a6537e55b5ea951df2e233334efa03eeb" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>squared_length</name></member>
      <member refid="classCGAL_1_1Segment__3_1a4b135781282d45c4b7d96a04c7c6aaec" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>supporting_line</name></member>
      <member refid="classCGAL_1_1Segment__3_1a7b88caa9f865e521f2fd8b4ad370a6c9" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>target</name></member>
      <member refid="classCGAL_1_1Segment__3_1af55a24ae3c9713f18239e1ce475e2bec" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>to_vector</name></member>
      <member refid="classCGAL_1_1Segment__3_1a43813f3543150b7dd11f53973ca48a39" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Segment__3_1adeb507a48f558295b0baa80c3b2cadd8" prot="public" virt="non-virtual"><scope>CGAL::Segment_3</scope><name>vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
