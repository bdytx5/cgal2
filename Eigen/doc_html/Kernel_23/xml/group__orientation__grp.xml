<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__orientation__grp" kind="group">
    <compoundname>orientation_grp</compoundname>
    <title>CGAL::orientation()</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__orientation__grp_1ga91d9866cfde916ba70e5dbc596176d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput><ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member">CGAL::LEFT_TURN</ref></computeroutput>, if <computeroutput>r</computeroutput> lies to the left of the oriented line <computeroutput>l</computeroutput> defined by <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>, returns <computeroutput><ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member">CGAL::RIGHT_TURN</ref></computeroutput> if <computeroutput>r</computeroutput> lies to the right of <computeroutput>l</computeroutput>, and returns <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput> if <computeroutput>r</computeroutput> lies on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1gaecb33819c6e8259cec78c457a7650383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput><ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member">CGAL::LEFT_TURN</ref></computeroutput> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> form a left turn, returns <computeroutput><ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member">CGAL::RIGHT_TURN</ref></computeroutput> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> form a right turn, and returns <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput> if <computeroutput>u</computeroutput> and <computeroutput>v</computeroutput> are collinear. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga0a65d09ea2af5f9bcfececb9aba9ca35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" kindref="member">CGAL::POSITIVE</ref></computeroutput>, if <computeroutput>s</computeroutput> lies on the positive side of the oriented plane <computeroutput>h</computeroutput> defined by <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput>, returns <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" kindref="member">CGAL::NEGATIVE</ref></computeroutput> if <computeroutput>s</computeroutput> lies on the negative side of <computeroutput>h</computeroutput>, and returns <computeroutput><ref refid="group__kernel__enums_1ga56587f3c15032c9127a9fe81c038b0d7" kindref="member">CGAL::COPLANAR</ref></computeroutput> if <computeroutput>s</computeroutput> lies on <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga565faf2582847419e36f177af821011e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v, const CGAL::Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" kindref="member">CGAL::NEGATIVE</ref></computeroutput> if <computeroutput>u</computeroutput>, <computeroutput>v</computeroutput> and <computeroutput>w</computeroutput> are negatively oriented, <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" kindref="member">CGAL::POSITIVE</ref></computeroutput> if <computeroutput>u</computeroutput>, <computeroutput>v</computeroutput> and <computeroutput>w</computeroutput> are positively oriented, and <computeroutput><ref refid="group__kernel__enums_1ga56587f3c15032c9127a9fe81c038b0d7" kindref="member">CGAL::COPLANAR</ref></computeroutput> if <computeroutput>u</computeroutput>, <computeroutput>v</computeroutput> and <computeroutput>w</computeroutput> are coplanar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="2295" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__collinear__grp" kindref="compound">CGAL::collinear()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__left__turn__grp" kindref="compound">CGAL::left_turn()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__right__turn__grp" kindref="compound">CGAL::right_turn()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
