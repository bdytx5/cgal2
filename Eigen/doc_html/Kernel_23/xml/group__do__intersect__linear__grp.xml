<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__do__intersect__linear__grp" kind="group">
    <compoundname>do_intersect_linear_grp</compoundname>
    <title>CGAL::do_intersect() (2D/3D Linear Kernel)</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__do__intersect__linear__grp_1ga9514a218a097ac392d21775368d3dd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
<para>checks whether <computeroutput>obj1</computeroutput> and <computeroutput>obj2</computeroutput> intersect. </para>        </briefdescription>
        <detaileddescription>
<para>Two objects <computeroutput>obj1</computeroutput> and <computeroutput>obj2</computeroutput> intersect if there is a point <computeroutput>p</computeroutput> that is part of both <computeroutput>obj1</computeroutput> and <computeroutput>obj2</computeroutput>. The intersection region of those two objects is defined as the set of all points <computeroutput>p</computeroutput> that are part of both <computeroutput>obj1</computeroutput> and <computeroutput>obj2</computeroutput>. Note that for objects like triangles and polygons that enclose a bounded region, this region is part of the object.</para><para>The types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> can be any of the following:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Segment__2" kindref="compound">Segment_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Triangle__2" kindref="compound">Triangle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound">Iso_rectangle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem></itemizedlist>
</para><para>Also, <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> can be both of type</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound">Circle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem></itemizedlist>
</para><para>In three-dimensional space, the types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> can be any of the following:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput>.</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></computeroutput>.</para></listitem></itemizedlist>
</para><para>Also, <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> can be respectively of types</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">Tetrahedron_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> (or the contrary)</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/intersections.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__do__intersect__circular__grp" kindref="compound">CGAL::do_intersect() (2D Circular Kernel)</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__do__intersect__spherical__grp" kindref="compound">CGAL::do_intersect() (3D Spherical Kernel)</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__intersection__grp" kindref="compound">CGAL::intersection()</ref></computeroutput></para></simplesect>
See Chapter <ref refid="index_1chapterkernel23" kindref="member">2D and 3D Geometry Kernel</ref> for details on a linear kernel instantiation. </para>    </detaileddescription>
  </compounddef>
</doxygen>
