<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Ray__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Ray_2</compoundname>
    <includes local="no">CGAL/Ray_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a01c6b5d3f0e223fefa896d4c8406ddbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_2&lt; Kernel &gt;::Ray_2</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>Ray_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> with source <computeroutput>p</computeroutput> and passing through point <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a438e5423ac125f2a6f636989ff46b6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_2&lt; Kernel &gt;::Ray_2</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Direction_2&lt; Kernel &gt; &amp;d)</argsstring>
        <name>Ray_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Direction__2" kindref="compound">Direction_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> starting at source <computeroutput>p</computeroutput> with direction <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1af05a0a7b9c421e1fea00421acc0fad0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_2&lt; Kernel &gt;::Ray_2</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>Ray_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> starting at source <computeroutput>p</computeroutput> with the direction of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a5eb1f7f4592cf3b135472916a984eeaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_2&lt; Kernel &gt;::Ray_2</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Line_2&lt; Kernel &gt; &amp;l)</argsstring>
        <name>Ray_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> starting at source <computeroutput>p</computeroutput> with the same direction as <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a682abff02cf74bc364022c715454a2c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Ray_2&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for equality: two rays are equal, iff they have the same source and the same direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1af897f164ef72c9aa864406f1c62a8d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Ray_2&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a85dc480e12b13f49e2dd2848630cd092" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::source</definition>
        <argsstring>() const</argsstring>
        <name>source</name>
        <briefdescription>
<para>returns the source of <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1af19c7faec342cc1b58ec880ee0722a90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::point</definition>
        <argsstring>(int i) const</argsstring>
        <name>point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns a point on <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>point(0)</computeroutput> is the source, <computeroutput>point(i)</computeroutput>, with <computeroutput>i&gt;0</computeroutput>, is different from the source. <simplesect kind="pre"><para><formula id="90">$ i \geq0$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a6aba4a17365714c0c819cf196819df06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__2" kindref="compound">Direction_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction of <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1ab3d89dd4a52484ee7f72ecb5989dcacf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::to_vector</definition>
        <argsstring>() const</argsstring>
        <name>to_vector</name>
        <briefdescription>
<para>returns a vector giving the direction of <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a16ffa3ef7547dc913ec615ec6d813942" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Line_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::supporting_line</definition>
        <argsstring>() const</argsstring>
        <name>supporting_line</name>
        <briefdescription>
<para>returns the line supporting <computeroutput>r</computeroutput> which has the same direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1aef273b3865dabe564aa019d4cc956cd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Ray_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::opposite</definition>
        <argsstring>() const</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns the ray with the same source and the opposite direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a63b77c6bb2994ca418cfd0087b90d807" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para>ray <computeroutput>r</computeroutput> is degenerate, if the source and the second defining point fall together (that is if the direction is degenerate). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1ae2473d152571e13daabdad4c787a085e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::is_horizontal</definition>
        <argsstring>() const</argsstring>
        <name>is_horizontal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1ab57b58ce052a0d585090c077ebc334b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::is_vertical</definition>
        <argsstring>() const</argsstring>
        <name>is_vertical</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1afa01be9f470d364059c27c2e2c813369" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>A point is on <computeroutput>r</computeroutput>, iff it is equal to the source of <computeroutput>r</computeroutput>, or if it is in the interior of <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a8c43b53bdaece6927d91dcf86b0b423c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_2&lt; Kernel &gt;::collinear_has_on</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>collinear_has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>checks if point <computeroutput>p</computeroutput> is on <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This function is faster than function <computeroutput><ref refid="classCGAL_1_1Ray__2_1afa01be9f470d364059c27c2e2c813369" kindref="member">has_on()</ref></computeroutput> if the precondition checking is disabled. <simplesect kind="pre"><para><computeroutput>p</computeroutput> is on the supporting line of <computeroutput>r</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="125" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__2_1a5144701f90eaa4a47f98393cf6c1e157" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Ray_2&lt;Kernel&gt; CGAL::Ray_2&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_2&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__2" kindref="compound">Aff_transformation_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the ray obtained by applying <computeroutput>t</computeroutput> on the source and on the direction of <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_2.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>r</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref></computeroutput> is a directed straight ray in the two-dimensional Euclidean plane <formula id="29">$ \E^2$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>It starts in a point called the <emphasis>source</emphasis> of <computeroutput>r</computeroutput> and goes to infinity.</para><para><xrefsect id="models_1_models000022"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Ray__2" kindref="compound">Kernel::Ray_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Ray_2.h" line="14" column="1" bodyfile="CGAL/Ray_2.h" bodystart="14" bodyend="140"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Ray__2_1a8c43b53bdaece6927d91dcf86b0b423c" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>collinear_has_on</name></member>
      <member refid="classCGAL_1_1Ray__2_1a6aba4a17365714c0c819cf196819df06" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Ray__2_1afa01be9f470d364059c27c2e2c813369" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Ray__2_1a63b77c6bb2994ca418cfd0087b90d807" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Ray__2_1ae2473d152571e13daabdad4c787a085e" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>is_horizontal</name></member>
      <member refid="classCGAL_1_1Ray__2_1ab57b58ce052a0d585090c077ebc334b5" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>is_vertical</name></member>
      <member refid="classCGAL_1_1Ray__2_1af897f164ef72c9aa864406f1c62a8d44" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Ray__2_1a682abff02cf74bc364022c715454a2c6" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Ray__2_1aef273b3865dabe564aa019d4cc956cd5" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Ray__2_1af19c7faec342cc1b58ec880ee0722a90" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>point</name></member>
      <member refid="classCGAL_1_1Ray__2_1a01c6b5d3f0e223fefa896d4c8406ddbf" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>Ray_2</name></member>
      <member refid="classCGAL_1_1Ray__2_1a438e5423ac125f2a6f636989ff46b6b8" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>Ray_2</name></member>
      <member refid="classCGAL_1_1Ray__2_1af05a0a7b9c421e1fea00421acc0fad0a" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>Ray_2</name></member>
      <member refid="classCGAL_1_1Ray__2_1a5eb1f7f4592cf3b135472916a984eeaa" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>Ray_2</name></member>
      <member refid="classCGAL_1_1Ray__2_1a85dc480e12b13f49e2dd2848630cd092" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>source</name></member>
      <member refid="classCGAL_1_1Ray__2_1a16ffa3ef7547dc913ec615ec6d813942" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>supporting_line</name></member>
      <member refid="classCGAL_1_1Ray__2_1ab3d89dd4a52484ee7f72ecb5989dcacf" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>to_vector</name></member>
      <member refid="classCGAL_1_1Ray__2_1a5144701f90eaa4a47f98393cf6c1e157" prot="public" virt="non-virtual"><scope>CGAL::Ray_2</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
