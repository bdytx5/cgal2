<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__coplanar__orientation__grp" kind="group">
    <compoundname>coplanar_orientation_grp</compoundname>
    <title>CGAL::coplanar_orientation()</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gaf6fa77ad91160fdbe406db839e87f543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar_orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Let <computeroutput>P</computeroutput> be the plane defined by the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the order defines the orientation of <computeroutput>P</computeroutput>. The function computes the orientation of points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>s</computeroutput> in <computeroutput>P</computeroutput>: Iff <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>s</computeroutput> are collinear, <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput> is returned. Iff <computeroutput>P</computeroutput> and the plane defined by <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>s</computeroutput> have the same orientation, <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" kindref="member">CGAL::POSITIVE</ref></computeroutput> is returned; otherwise <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" kindref="member">CGAL::NEGATIVE</ref></computeroutput> is returned. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput>, and <computeroutput>s</computeroutput> are coplanar and <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gae6eea9e4c75a610511866cf3eb4ae139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Orientation</type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>coplanar_orientation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>If <computeroutput>p,q,r</computeroutput> are collinear, then <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput> is returned. </para>        </briefdescription>
        <detaileddescription>
<para>If not, then <computeroutput>p,q,r</computeroutput> define a plane <computeroutput>p</computeroutput>. The return value in this case is either <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" kindref="member">CGAL::POSITIVE</ref></computeroutput> or <computeroutput><ref refid="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" kindref="member">CGAL::NEGATIVE</ref></computeroutput>, but we don&apos;t specify it explicitly. However, we guarantee that all calls to this predicate over 3 points in <computeroutput>p</computeroutput> will return a coherent orientation if considered a 2D orientation in <computeroutput>p</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1687" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__coplanar__grp" kindref="compound">CGAL::coplanar()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__coplanar__side__of__bounded__circle__grp" kindref="compound">CGAL::coplanar_side_of_bounded_circle()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__orientation__grp" kindref="compound">CGAL::orientation()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
