<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Filtered__kernel__adaptor" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Filtered_kernel_adaptor</compoundname>
    <includes local="no">CGAL/Filtered_kernel.h</includes>
    <templateparamlist>
      <param>
        <type>typename CK</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para><computeroutput><ref refid="structCGAL_1_1Filtered__kernel__adaptor" kindref="compound">Filtered_kernel_adaptor</ref></computeroutput> is a kernel that uses a filtering technique to obtain a kernel with exact and efficient predicate functors. </para>    </briefdescription>
    <detaileddescription>
<para>The geometric constructions are exactly those of the kernel <computeroutput>CK</computeroutput>, which means that they are not necessarily exact. More details about the filtering technique can be found in <ref refid="citelist_1CITEREF_cgal:bbp-iayed-01" kindref="member">[1]</ref>.</para><para>In contrast to <computeroutput><ref refid="structCGAL_1_1Filtered__kernel" kindref="compound">Filtered_kernel</ref></computeroutput>, the global functions are those of <computeroutput>CK</computeroutput>.</para><para><xrefsect id="models_1_models000011"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel" kindref="compound">Kernel</ref></computeroutput></para></xrefdescription></xrefsect></para><para><bold>Example</bold><linebreak/>
</para><para>The following example shows how to produce a kernel whose geometric objects and constructions are those of <computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">Simple_cartesian</ref>&lt;double&gt;</computeroutput> The predicate functors of the kernel are exact, the global functions are not.</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;CGAL/Simple_cartesian.h&gt;<sp/></highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;CGAL/Filtered_kernel.h&gt;<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>CGAL::Simple_cartesian&lt;double&gt;<sp/>CK;<sp/></highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>CGAL::Filtered_kernel_adaptor&lt;CK&gt;<sp/>K;<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>K::Point_2<sp/>p(0,0),<sp/>q(1,1),<sp/>r(1,5);<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CGAL::orientation(p,q,r);<sp/>//<sp/>not<sp/>exact<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>K::Orientation_2<sp/>orientation;<sp/></highlight></codeline>
<codeline><highlight class="normal">orientation(p,q,r);<sp/>//<sp/>exact<sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="CGAL/Filtered_kernel.h" line="43" column="1" bodyfile="CGAL/Filtered_kernel.h" bodystart="43" bodyend="47"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
