<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Point__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Point_3</compoundname>
    <includes local="no">CGAL/Point_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__plus_1gaf99f17941c49620a9c11c1da0ca6f814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; operator+</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by translating <computeroutput>p</computeroutput> by the vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="253" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__minus_1gabd87b0cfe45c01a1455da4d992cc44c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; operator-</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by translating <computeroutput>p</computeroutput> by the vector -<computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="267" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Point__3_1a785cb395833f0ecfb191539a32e96412" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Point_3&lt; Kernel &gt;::Cartesian_const_iterator</definition>
        <argsstring></argsstring>
        <name>Cartesian_const_iterator</name>
        <briefdescription>
<para>An iterator for enumerating the Cartesian coordinates of a point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="33" column="1" bodyfile="CGAL/Point_3.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a32adf515d5c4b934097f3a7c3dab903f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(const Origin &amp;ORIGIN)</argsstring>
        <name>Point_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Origin" kindref="compound">Origin</ref> &amp;</type>
          <declname>ORIGIN</declname>
        </param>
        <briefdescription>
<para>introduces a point with Cartesian coordinates <formula id="85">$ (0,0,0)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a726b462d3b0099876d60eaf32b18bfbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(int x, int y, int z)</argsstring>
        <name>Point_3</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y,z)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1adfccd08ff48024da2e379da8f16e32dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(double x, double y, double z)</argsstring>
        <name>Point_3</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y,z)</computeroutput> provided <computeroutput>RT</computeroutput> supports it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a7e8f76f245d376b8ae5296999d5c45ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(const Kernel::RT &amp;hx, const Kernel::RT &amp;hy, const Kernel::RT &amp;hz, const Kernel::RT &amp;hw=RT(1))</argsstring>
        <name>Point_3</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hz</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hw</declname>
          <defval>RT(1)</defval>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(hx/hw,hy/hw, hz/hw)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>hw</computeroutput> <formula id="41">$ \neq$</formula> 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a0b950997d4dfb65950e417ba447c5bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(const Kernel::FT &amp;x, const Kernel::FT &amp;y, const Kernel::FT &amp;z)</argsstring>
        <name>Point_3</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y,z)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a31fffdf44263f2b57a621daba5df0fd0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_3&lt; Kernel &gt;::Point_3</definition>
        <argsstring>(const Kernel::Weighted_point_3 &amp;wp)</argsstring>
        <name>Point_3</name>
        <param>
          <type>const <ref refid="classKernel_1a9048cf2dfda25db2f1bcd7f66b5585b1" kindref="member">Kernel::Weighted_point_3</ref> &amp;</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
<para>introduces a point from a weighted point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>The <computeroutput>explicit</computeroutput> keyword is used to avoid accidental implicit conversions between <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref> and <ref refid="classCGAL_1_1Weighted__point__3" kindref="compound">Weighted_point_3</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a5abb4f4a28fbb14fb4701b20498495ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Point_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for equality: Two points are equal, iff their <formula id="49">$ x$</formula>, <formula id="55">$ y$</formula> and <formula id="56">$ z$</formula> coordinates are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a4822d1d38f976157518fc74f748f6918" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Point_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a3321547185ac02a523ff4b0d6d4d87f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Point_3&lt;Kernel&gt;&amp; CGAL::Point_3&lt; Kernel &gt;::operator+=</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>translates the point by the vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1aaa67b5c609074f31146466c1af147658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Point_3&lt;Kernel&gt;&amp; CGAL::Point_3&lt; Kernel &gt;::operator-=</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>translates the point by the vector -<computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate Access</header>
      <description><para>There are two sets of coordinate access functions, namely to the homogeneous and to the Cartesian coordinates.</para><para>They can be used independently from the chosen kernel model. Note that you do not lose information with the homogeneous representation, because the <ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref> is a quotient. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a479b3235110cb03da01b7326db870bfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_3&lt; Kernel &gt;::hx</definition>
        <argsstring>() const</argsstring>
        <name>hx</name>
        <briefdescription>
<para>returns the homogeneous <formula id="49">$ x$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a82dac5b8e2a728e8c3025b9b66915a37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_3&lt; Kernel &gt;::hy</definition>
        <argsstring>() const</argsstring>
        <name>hy</name>
        <briefdescription>
<para>returns the homogeneous <formula id="55">$ y$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a299cb52192bf759338d6582457bd138e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_3&lt; Kernel &gt;::hz</definition>
        <argsstring>() const</argsstring>
        <name>hz</name>
        <briefdescription>
<para>returns the homogeneous <formula id="56">$ z$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a76acc74680b6019d2066de3a1512e67c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_3&lt; Kernel &gt;::hw</definition>
        <argsstring>() const</argsstring>
        <name>hw</name>
        <briefdescription>
<para>returns the homogenizing coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a49bb8a0c6391066bd91302b20e16eca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_3&lt; Kernel &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>returns the Cartesian <formula id="49">$ x$</formula> coordinate, that is <computeroutput><ref refid="classCGAL_1_1Point__3_1a479b3235110cb03da01b7326db870bfe" kindref="member">hx()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Point__3_1a76acc74680b6019d2066de3a1512e67c" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1ac50814bb14217280097ebedad0f92586" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_3&lt; Kernel &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>returns the Cartesian <formula id="55">$ y$</formula> coordinate, that is <computeroutput><ref refid="classCGAL_1_1Point__3_1a82dac5b8e2a728e8c3025b9b66915a37" kindref="member">hy()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Point__3_1a76acc74680b6019d2066de3a1512e67c" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1aa7b6371efb3e7aa179bcfa14c2667f87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_3&lt; Kernel &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
<para>returns the Cartesian <formula id="56">$ z$</formula> coordinate, that is <computeroutput><ref refid="classCGAL_1_1Point__3_1a299cb52192bf759338d6582457bd138e" kindref="member">hz()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Point__3_1a76acc74680b6019d2066de3a1512e67c" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="144" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convenience Operators</header>
      <description><para>The following operations are for convenience and for compatibility with code for higher dimensional points.</para><para>Again they come in a Cartesian and in a homogeneous flavor. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a18f9a257fa4fa7b31bd2354e05170eaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_3&lt; Kernel &gt;::homogeneous</definition>
        <argsstring>(int i) const</argsstring>
        <name>homogeneous</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th homogeneous coordinate of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="86">$ 0\leq i \leq3$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a89c276a64d4189eeb3b26c485525b758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_3&lt; Kernel &gt;::cartesian</definition>
        <argsstring>(int i) const</argsstring>
        <name>cartesian</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th Cartesian coordinate of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1adcfceb25aacdb8c3986d3d6654e45271" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>cartesian(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a0839f8701cfaa2c50c0a7b53c50d41d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3_1a785cb395833f0ecfb191539a32e96412" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Point_3&lt; Kernel &gt;::cartesian_begin</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_begin</name>
        <briefdescription>
<para>returns an iterator to the Cartesian coordinates of <computeroutput>p</computeroutput>, starting with the 0th coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a301c37e21da819ae48a6643e431002a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3_1a785cb395833f0ecfb191539a32e96412" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Point_3&lt; Kernel &gt;::cartesian_end</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_end</name>
        <briefdescription>
<para>returns an off the end iterator to the Cartesian coordinates of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1ae8448565628b97209fe01c9b83b2a4e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Point_3&lt; Kernel &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension (the constant 3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a65e69167ea5d1a0d5cd1b44bc6b7bc00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Point_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1aa1745c4c13706274c445a9d3de29a966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Point_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by applying <computeroutput>t</computeroutput> on <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="197" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Point__3_1aecef3b4737ea139a4b1c03686dfb88d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically smaller than <computeroutput>q</computeroutput> (the lexicographical order being defined on the Cartesian coordinates). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a42ede0762a8ba7de50f5411548aa3dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically greater than <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a98f6af3334f3450a44343f4768810a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically smaller or equal to <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1aaf0005006e31be506a4b6f818fcaba5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically greater or equal to <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__3_1a13fbe61503fadf1ea7f66d34652353d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator-</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the difference vector between <computeroutput>q</computeroutput> and <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>You can substitute <computeroutput>ORIGIN</computeroutput> for either <computeroutput>p</computeroutput> or <computeroutput>q</computeroutput>, but not for both. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_3.h" line="241" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref></computeroutput> is a point in the three-dimensional Euclidean space <formula id="33">$ \E^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>Remember that <computeroutput><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></computeroutput> and <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></computeroutput> denote a <computeroutput><ref refid="classRingNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref></computeroutput> and a <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput>, respectively. For the kernel model <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref>&lt;NT&gt;</computeroutput>, the two types are the same. For the kernel model <computeroutput><ref refid="structCGAL_1_1Homogeneous" kindref="compound">Homogeneous</ref>&lt;NT&gt;</computeroutput>, <computeroutput><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></computeroutput> is equal to <computeroutput>NT</computeroutput>, and <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></computeroutput> is equal to <computeroutput><ref refid="classCGAL_1_1Quotient" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">Quotient</ref>&lt;NT&gt;</computeroutput>.</para><para><bold>Operators</bold><linebreak/>
</para><para>The following operations can be applied on points:</para><para><xrefsect id="models_1_models000020"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Point_3.h" line="23" column="1" bodyfile="CGAL/Point_3.h" bodystart="23" bodyend="201"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Point__3_1a65e69167ea5d1a0d5cd1b44bc6b7bc00" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Point__3_1a89c276a64d4189eeb3b26c485525b758" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>cartesian</name></member>
      <member refid="classCGAL_1_1Point__3_1a0839f8701cfaa2c50c0a7b53c50d41d8" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>cartesian_begin</name></member>
      <member refid="classCGAL_1_1Point__3_1a785cb395833f0ecfb191539a32e96412" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Cartesian_const_iterator</name></member>
      <member refid="classCGAL_1_1Point__3_1a301c37e21da819ae48a6643e431002a8" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>cartesian_end</name></member>
      <member refid="classCGAL_1_1Point__3_1ae8448565628b97209fe01c9b83b2a4e2" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Point__3_1a18f9a257fa4fa7b31bd2354e05170eaf" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>homogeneous</name></member>
      <member refid="classCGAL_1_1Point__3_1a76acc74680b6019d2066de3a1512e67c" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>hw</name></member>
      <member refid="classCGAL_1_1Point__3_1a479b3235110cb03da01b7326db870bfe" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>hx</name></member>
      <member refid="classCGAL_1_1Point__3_1a82dac5b8e2a728e8c3025b9b66915a37" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>hy</name></member>
      <member refid="classCGAL_1_1Point__3_1a299cb52192bf759338d6582457bd138e" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>hz</name></member>
      <member refid="classCGAL_1_1Point__3_1a4822d1d38f976157518fc74f748f6918" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator!=</name></member>
      <member refid="group__Kernel__operator__plus_1gaf99f17941c49620a9c11c1da0ca6f814" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Point__3_1a3321547185ac02a523ff4b0d6d4d87f3" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Point__3_1a13fbe61503fadf1ea7f66d34652353d1" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator-</name></member>
      <member refid="group__Kernel__operator__minus_1gabd87b0cfe45c01a1455da4d992cc44c4" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Point__3_1aaa67b5c609074f31146466c1af147658" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator-=</name></member>
      <member refid="classCGAL_1_1Point__3_1aecef3b4737ea139a4b1c03686dfb88d1" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator&lt;</name></member>
      <member refid="classCGAL_1_1Point__3_1a98f6af3334f3450a44343f4768810a20" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator&lt;=</name></member>
      <member refid="classCGAL_1_1Point__3_1a5abb4f4a28fbb14fb4701b20498495ca" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Point__3_1a42ede0762a8ba7de50f5411548aa3dea" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator&gt;</name></member>
      <member refid="classCGAL_1_1Point__3_1aaf0005006e31be506a4b6f818fcaba5b" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator&gt;=</name></member>
      <member refid="classCGAL_1_1Point__3_1adcfceb25aacdb8c3986d3d6654e45271" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Point__3_1a32adf515d5c4b934097f3a7c3dab903f" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1a726b462d3b0099876d60eaf32b18bfbe" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1adfccd08ff48024da2e379da8f16e32dc" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1a7e8f76f245d376b8ae5296999d5c45ae" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1a0b950997d4dfb65950e417ba447c5bf1" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1a31fffdf44263f2b57a621daba5df0fd0" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Point__3_1aa1745c4c13706274c445a9d3de29a966" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Point__3_1a49bb8a0c6391066bd91302b20e16eca7" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>x</name></member>
      <member refid="classCGAL_1_1Point__3_1ac50814bb14217280097ebedad0f92586" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>y</name></member>
      <member refid="classCGAL_1_1Point__3_1aa7b6371efb3e7aa179bcfa14c2667f87" prot="public" virt="non-virtual"><scope>CGAL::Point_3</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
