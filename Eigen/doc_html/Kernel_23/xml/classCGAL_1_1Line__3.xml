<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Line__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Line_3</compoundname>
    <includes local="no">CGAL/Line_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a1542d153be7231ce25a1a8551b2943ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_3&lt; Kernel &gt;::Line_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>Line_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a line <computeroutput>l</computeroutput> passing through the points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Line <computeroutput>l</computeroutput> is directed from <computeroutput>p</computeroutput> to <computeroutput>q</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1ac7ab2d5eaa9ff0fff4f510f82da89be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_3&lt; Kernel &gt;::Line_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Direction_3&lt; Kernel &gt; &amp;d)</argsstring>
        <name>Line_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces a line <computeroutput>l</computeroutput> passing through point <computeroutput>p</computeroutput> with direction <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a73a4a02de85f7d4c9c6f18e867b539a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_3&lt; Kernel &gt;::Line_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>Line_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>introduces a line <computeroutput>l</computeroutput> passing through point <computeroutput>p</computeroutput> and oriented by <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a4ec54cb066d0c9175c00b025295b3cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_3&lt; Kernel &gt;::Line_3</definition>
        <argsstring>(const Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>Line_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the line supporting the segment <computeroutput>s</computeroutput>, oriented from source to target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a6264a716f4106e6b0ad2882f85ea7f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_3&lt; Kernel &gt;::Line_3</definition>
        <argsstring>(const Ray_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>Line_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>returns the line supporting the ray <computeroutput>r</computeroutput>, with the same orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a211538bafc8ddf783904fa8a185f558e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Line_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Line_3&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for equality: two lines are equal, iff they have a non empty intersection and the same direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1aa65a460a63d094c659b96245a7f2c132" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Line_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Line_3&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a312ff6b205f0cd0aaf203520d91480a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::projection</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>projection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the orthogonal projection of <computeroutput>p</computeroutput> on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a4607ede16748d5bd0f8df71a11fffb6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::point</definition>
        <argsstring>(int i) const</argsstring>
        <name>point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns an arbitrary point on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It holds <computeroutput>point(i) = point(j)</computeroutput>, iff <computeroutput>i=j</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a4352767646919fa252b930f53d4d0405" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Line_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff line <computeroutput>l</computeroutput> is degenerated to a point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1aaedd8bfff064ff433efa791a8437a3e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Line_3&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <computeroutput>p</computeroutput> lies on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a003af954f99b21926b37502ce93e628f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Plane_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::perpendicular_plane</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>perpendicular_plane</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the plane perpendicular to <computeroutput>l</computeroutput> passing through <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1afca81474d42a9e918812e5e905ae6376" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Line_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::opposite</definition>
        <argsstring>() const</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns the line with opposite direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a47f30f7fbbcdc0b5d1c00d09110fe226" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::to_vector</definition>
        <argsstring>() const</argsstring>
        <name>to_vector</name>
        <briefdescription>
<para>returns a vector having the same direction as <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1ac42686d505190741e75c5fe43e5797bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction of <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__3_1a764462b1336a4dbe2599ebaa07d60a84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Line_3&lt;Kernel&gt; CGAL::Line_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the line obtained by applying <computeroutput>t</computeroutput> on a point on <computeroutput>l</computeroutput> and the direction of <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Line_3.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>l</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref></computeroutput> is a directed straight line in the three-dimensional Euclidean space <formula id="33">$ \E^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="models_1_models000017"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Line__3" kindref="compound">Kernel::Line_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Line_3.h" line="13" column="1" bodyfile="CGAL/Line_3.h" bodystart="13" bodyend="124"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Line__3_1ac42686d505190741e75c5fe43e5797bc" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Line__3_1aaedd8bfff064ff433efa791a8437a3e9" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Line__3_1a4352767646919fa252b930f53d4d0405" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Line__3_1a1542d153be7231ce25a1a8551b2943ef" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>Line_3</name></member>
      <member refid="classCGAL_1_1Line__3_1ac7ab2d5eaa9ff0fff4f510f82da89be1" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>Line_3</name></member>
      <member refid="classCGAL_1_1Line__3_1a73a4a02de85f7d4c9c6f18e867b539a5" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>Line_3</name></member>
      <member refid="classCGAL_1_1Line__3_1a4ec54cb066d0c9175c00b025295b3cdf" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>Line_3</name></member>
      <member refid="classCGAL_1_1Line__3_1a6264a716f4106e6b0ad2882f85ea7f78" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>Line_3</name></member>
      <member refid="classCGAL_1_1Line__3_1aa65a460a63d094c659b96245a7f2c132" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Line__3_1a211538bafc8ddf783904fa8a185f558e" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Line__3_1afca81474d42a9e918812e5e905ae6376" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Line__3_1a003af954f99b21926b37502ce93e628f" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>perpendicular_plane</name></member>
      <member refid="classCGAL_1_1Line__3_1a4607ede16748d5bd0f8df71a11fffb6b" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>point</name></member>
      <member refid="classCGAL_1_1Line__3_1a312ff6b205f0cd0aaf203520d91480a4" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>projection</name></member>
      <member refid="classCGAL_1_1Line__3_1a47f30f7fbbcdc0b5d1c00d09110fe226" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>to_vector</name></member>
      <member refid="classCGAL_1_1Line__3_1a764462b1336a4dbe2599ebaa07d60a84" prot="public" virt="non-virtual"><scope>CGAL::Line_3</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
