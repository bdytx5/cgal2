<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__intersection__grp" kind="group">
    <compoundname>intersection_grp</compoundname>
    <title>CGAL::intersection()</title>
    <innergroup refid="group__intersection__linear__grp">CGAL::intersection() (2D/3D Linear Kernel)</innergroup>
    <innergroup refid="group__intersection__circular__grp">CGAL::intersection() (2D Circular Kernel)</innergroup>
    <innergroup refid="group__intersection__spherical__grp">CGAL::intersection() (3D Spherical Kernel)</innergroup>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__intersection__grp_1ga66850ea839dafff504fbd39e141fcc79" prot="public" static="no">
        <name>CGAL_INTERSECTION_VERSION</name>
        <briefdescription>
<para>The macro <computeroutput>CGAL_INTERSECTION_VERSION</computeroutput> can be used to configure which version of the <ref refid="group__intersection__grp" kindref="compound">CGAL::intersection()</ref> function should be used and enables the corresponding APIs in other CGAL packages. </para>        </briefdescription>
        <detaileddescription>
<para>It should be defined before any CGAL header is included.</para><para><itemizedlist>
<listitem><para><computeroutput>CGAL_INTERSECTION_VERSION == 1</computeroutput> <ref refid="group__intersection__grp" kindref="compound">CGAL::intersection()</ref> uses <computeroutput>Object</computeroutput></para></listitem><listitem><para><computeroutput>CGAL_INTERSECTION_VERSION == 2</computeroutput> <ref refid="group__intersection__grp" kindref="compound">CGAL::intersection()</ref> uses <computeroutput>boost::optional&lt; boost::variant&lt; T... &gt; &gt;</computeroutput> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/intersections.h" line="17" column="9" bodyfile="CGAL/intersections.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Depending on which CGAL kernel is used, different overloads of this global function are available.</para><para><bold>Notes on Backward Compatibility</bold><linebreak/>
</para><para>The <ref refid="group__intersection__grp" kindref="compound">CGAL::intersection()</ref> function used to return an <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Object</ref></computeroutput>, but starting with CGAL 4.2 the return type is determined by a metafunction defined by the kernel. To preserve backward compatibility <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Object</ref></computeroutput> can be constructed from the new return types implicitly, but switching to the new style is recommended. To enable the old style without any overhead, the macro <ref refid="group__intersection__grp_1ga66850ea839dafff504fbd39e141fcc79" kindref="member"><computeroutput>CGAL_INTERSECTION_VERSION</computeroutput> </ref> must be defined to <computeroutput>1</computeroutput> before any CGAL header is included.</para><para><simplesect kind="see"><para><ref refid="upgrading_object" kindref="compound">Upgrading from CGAL::Object to boost::variant</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__do__intersect__grp" kindref="compound">CGAL::do_intersect()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__intersection__grp_1ga66850ea839dafff504fbd39e141fcc79" kindref="member">CGAL_INTERSECTION_VERSION</ref> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
