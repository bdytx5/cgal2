<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__intersection__circular__grp" kind="group">
    <compoundname>intersection_circular_grp</compoundname>
    <title>CGAL::intersection() (2D Circular Kernel)</title>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__intersection__circular__grp_1ga45cfe651177ee2011c12d055a893fbc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type1</type>
          </param>
          <param>
            <type>typename Type2</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
<para>Constructs the intersection elements between the two input objects and stores them in the <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> in lexicographic order, where both, <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput>, can be either. </para>        </briefdescription>
        <detaileddescription>
<para>See Chapter <ref refid="index_1Chapter_2D_Circular_Geometry_Kernel" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Chapter_2D_Circular_Geometry_Kernel</ref> for details on a circular kernel instantiation.</para><para>When using a circular kernel, in addition to the function overloads documented <ref refid="group__intersection__linear__grp" kindref="compound">here</ref>, the following function overloads are also available.</para><para>The iterator versions of those functions can be used in conjunction with <computeroutput><ref refid="classCGAL_1_1Dispatch__output__iterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Dispatch_output_iterator</ref></computeroutput>.</para><para>Since both the number of intersections, if any, and their types, depend on the arguments, the function expects an output iterator on <computeroutput><ref refid="structCGAL_1_1cpp11_1_1result__of" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">cpp11::result_of</ref>&lt;K::Intersect_2(Type1, Type2)&gt;::type</computeroutput>, as presented below.</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> or</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__arc__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Line_arc_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> or</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound">Circle_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> or</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circular__arc__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Circular_arc_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput></para></listitem></itemizedlist>
</para><para>Depending on the types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput>, these elements can be assigned to</para><para><itemizedlist>
<listitem><para><computeroutput>std::pair&lt;<ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Circular_arc_point_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;, unsigned&gt;</computeroutput>, where the unsigned integer is the multiplicity of the corresponding intersection point between <computeroutput>obj1</computeroutput> and <computeroutput>obj2</computeroutput>,</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circular__arc__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Circular_arc_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> in case of an overlap of two circular arcs,</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__arc__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">Line_arc_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> in case of an overlap of two line segments or</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> or <computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound">Circle_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref>&gt;</computeroutput> in case of two equal input lines or circles. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_kernel_intersections.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
