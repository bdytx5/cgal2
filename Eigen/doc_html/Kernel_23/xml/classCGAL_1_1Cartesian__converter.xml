<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Cartesian__converter" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Cartesian_converter</compoundname>
    <includes local="no">CGAL/Cartesian_converter.h</includes>
    <templateparamlist>
      <param>
        <type>typename K1</type>
      </param>
      <param>
        <type>typename K2</type>
      </param>
      <param>
        <type>typename NTConverter</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Cartesian__converter_1ab2bf2cbceb3cd24913d4845fbaf3831d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Cartesian_converter&lt; K1, K2, NTConverter &gt;::Cartesian_converter</definition>
        <argsstring>()</argsstring>
        <name>Cartesian_converter</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Cartesian_converter.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>Similar operators are defined for the other kernel traits types <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref></computeroutput>... </para></description>
      <memberdef kind="function" id="classCGAL_1_1Cartesian__converter_1a11e13ef15381e0e07d1c75262006c429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>K2::Point_2</type>
        <definition>K2::Point_2 CGAL::Cartesian_converter&lt; K1, K2, NTConverter &gt;::operator()</definition>
        <argsstring>(const K1::Point_2 &amp;p)</argsstring>
        <name>operator()</name>
        <param>
          <type>const K1::Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns a <computeroutput>K2::Point_2</computeroutput> which coordinates are those of <computeroutput>p</computeroutput>, converted by <computeroutput>NTConverter</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Cartesian_converter.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound">Cartesian_converter</ref></computeroutput> converts objects from the kernel traits <computeroutput>K1</computeroutput> to the kernel traits <computeroutput>K2</computeroutput> using <computeroutput>NTConverter</computeroutput> to do the conversion. </para>    </briefdescription>
    <detaileddescription>
<para>Those traits must be of the form <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref>&lt;FT1&gt;</computeroutput> and <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref>&lt;FT2&gt;</computeroutput> (or the equivalent with <computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">Simple_cartesian</ref></computeroutput>). It then provides the following operators to convert objects from <computeroutput>K1</computeroutput> to <computeroutput>K2</computeroutput>.</para><para>The third template parameter <computeroutput>NTConverter</computeroutput> is a function object that must provide <computeroutput>K2::FT operator()(K1::FT n)</computeroutput> that converts <computeroutput>n</computeroutput> to an <computeroutput>K2::FT</computeroutput> which has the same value.</para><para>The default value of this parameter is <computeroutput><ref refid="structCGAL_1_1NT__converter" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">CGAL::NT_converter</ref>&lt;K1::FT, K2::FT&gt;</computeroutput>.</para><para><bold>Example</bold><linebreak/>
</para><para>In the following example, we compute exactly the intersection point between a line and a triangle, and we then create a double approximation of this point.</para><para><linebreak/>
<bold>File</bold> <ref refid="Kernel_23_2cartesian_converter_8cpp-example" kindref="compound">Kernel_23/cartesian_converter.cpp</ref> <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Simple_cartesian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Quotient_8h" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">CGAL/Quotient.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MP__Float_8h" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">CGAL/MP_Float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Cartesian_converter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">CGAL::Simple_cartesian&lt;double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IK;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">CGAL::Simple_cartesian&lt;CGAL::Quotient&lt;CGAL::MP_Float&gt;</ref><sp/>&gt;<sp/><sp/>EK;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound">CGAL::Cartesian_converter&lt;IK,EK&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IK_to_EK;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound">CGAL::Cartesian_converter&lt;EK,IK&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EK_to_IK;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IK::Triangle_3<sp/>t1(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IK::Point_3(0.,0.,0.),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IK::Point_3(1.,0.,-1.),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IK::Point_3(0.,1.,3.)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IK::Line_3<sp/>l1(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IK::Point_3(0.2,0.25,-7),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IK::Point_3(0.25,0.3,4)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IK_to_EK<sp/>to_exact;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>EK::Triangle_3<sp/>t2=to_exact(t1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>EK::Line_3<sp/><sp/><sp/><sp/><sp/>l2=to_exact(l1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CGAL::cpp11::result_of&lt;EK::Intersect_3(EK::Triangle_3, EK::Line_3)&gt;::type</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>inter<sp/>=<sp/><ref refid="group__PkgKernelDFunctions_1ga0aa3e8b6bdf1bff509f8e2672ef194d1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">CGAL::intersection</ref>(t2,l2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>we<sp/>are<sp/>sure<sp/>that<sp/>there<sp/>IS<sp/>an<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>that<sp/>the<sp/>intersection<sp/>IS<sp/>a<sp/>point<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>not<sp/>have<sp/>to<sp/>check<sp/>for<sp/>this,<sp/>or<sp/>put<sp/>it<sp/>in<sp/>a<sp/>try/catch</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EK::Point_3&amp;<sp/>exact_pt<sp/>=<sp/>boost::get&lt;EK::Point_3&gt;(*inter);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>EK_to_IK<sp/>to_inexact;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IK::Point_3<sp/>inexact_pt<sp/>=<sp/>to_inexact(exact_pt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>inexact_pt<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound">CGAL::Cartesian</ref>&lt;<ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">CGAL::Simple_cartesian</ref>&lt;<ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Cartesian_converter.h" line="33" column="1" bodyfile="CGAL/Cartesian_converter.h" bodystart="33" bodyend="58"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Cartesian__converter_1ab2bf2cbceb3cd24913d4845fbaf3831d" prot="public" virt="non-virtual"><scope>CGAL::Cartesian_converter</scope><name>Cartesian_converter</name></member>
      <member refid="classCGAL_1_1Cartesian__converter_1a11e13ef15381e0e07d1c75262006c429" prot="public" virt="non-virtual"><scope>CGAL::Cartesian_converter</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
