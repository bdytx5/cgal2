<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Circle__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Circle_3</compoundname>
    <includes local="no">CGAL/Circle_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a0cd4d6bc664480266f32e01702396938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;center, const Kernel::FT &amp;sq_r, const Plane_3&lt; Kernel &gt; &amp;plane)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>sq_r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle of center <computeroutput>center</computeroutput> and squared radius <computeroutput>sq_r</computeroutput> in plane <computeroutput>plane</computeroutput>. <simplesect kind="pre"><para><computeroutput>center</computeroutput> lies in <computeroutput>plane</computeroutput> and <computeroutput>sq_r</computeroutput> <formula id="42">$ \geq$</formula> 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1aabd7fd3cd82c8662b06216519177e09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;center, const Kernel::FT &amp;sq_r, const Vector_3&lt; Kernel &gt; &amp;n)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>sq_r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle of center <computeroutput>center</computeroutput> and squared radius <computeroutput>sq_r</computeroutput> in a plane normal to the vector <computeroutput>n</computeroutput>. <simplesect kind="pre"><para><computeroutput>sq_r</computeroutput> <formula id="42">$ \geq$</formula> 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a628a1abf985776416995ea8a70820b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q, const Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle passing through the three points. <simplesect kind="pre"><para>The three points are not collinear. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a6cc99798ef4652e9abe5771dd1056706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(const Sphere_3&lt; Kernel &gt; &amp;sphere1, const Sphere_3&lt; Kernel &gt; &amp;sphere2)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>sphere1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>sphere2</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle along which the two spheres intersect. <simplesect kind="pre"><para>The two spheres intersect along a circle. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a471604ced233a3b67304d21eaae0ec81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(constSphere_3&lt; Kernel &gt; &amp;sphere, const Plane_3&lt; Kernel &gt; &amp;plane)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>constSphere_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle along which the sphere and the plane intersect. <simplesect kind="pre"><para>The sphere and the plane intersect along a circle. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a806a827bff86590da42d656361fa7f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circle_3&lt; Kernel &gt;::Circle_3</definition>
        <argsstring>(const Plane_3&lt; Kernel &gt; &amp;plane, const Sphere_3&lt; Kernel &gt; &amp;sphere)</argsstring>
        <name>Circle_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle along which the sphere and the plane intersect. <simplesect kind="pre"><para>The sphere and the plane intersect along a circle. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="72" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a7e4947af04bb8c599088594410192963" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>const Point_3&lt;Kernel&gt;&amp; CGAL::Circle_3&lt; Kernel &gt;::center</definition>
        <argsstring>() const</argsstring>
        <name>center</name>
        <briefdescription>
<para>returns the center of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a2eb1384bdb8d63cdfbc7646033072834" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
        <definition>const Kernel::FT&amp; CGAL::Circle_3&lt; Kernel &gt;::squared_radius</definition>
        <argsstring>() const</argsstring>
        <name>squared_radius</name>
        <briefdescription>
<para>returns the squared radius of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a44943e82c8e87ec11b2f18aadefc994d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>const Plane_3&lt;Kernel&gt;&amp; CGAL::Circle_3&lt; Kernel &gt;::supporting_plane</definition>
        <argsstring>() const</argsstring>
        <name>supporting_plane</name>
        <briefdescription>
<para>returns the supporting plane of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a9a070a6379d03fefe05496cf74c2e24f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound">Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>const Sphere_3&lt;Kernel&gt;&amp; CGAL::Circle_3&lt; Kernel &gt;::diametral_sphere</definition>
        <argsstring>() const</argsstring>
        <name>diametral_sphere</name>
        <briefdescription>
<para>returns the diametral sphere of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a46204777a591f9c52917d54554bc0e77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> const  &amp;</type>
        <definition>Kernel::FT const&amp; CGAL::Circle_3&lt; Kernel &gt;::area_divided_by_pi</definition>
        <argsstring>() const</argsstring>
        <name>area_divided_by_pi</name>
        <briefdescription>
<para>returns the area of <computeroutput>c</computeroutput>, divided by <formula id="45">$ \pi$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a9978d715c99e17691bf18d288538518c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Circle_3&lt; Kernel &gt;::approximate_area</definition>
        <argsstring>() const</argsstring>
        <name>approximate_area</name>
        <briefdescription>
<para>returns an approximation of the area of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a76c7c6bce3c8ba764998573a5dbe1ff5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Circle_3&lt; Kernel &gt;::squared_length_divided_by_pi_square</definition>
        <argsstring>() const</argsstring>
        <name>squared_length_divided_by_pi_square</name>
        <briefdescription>
<para>returns the squared length of <computeroutput>c</computeroutput>, divided by <formula id="46">$ \pi^2$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a0fcaf1b03b57f332ffa3064ba4f849cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Circle_3&lt; Kernel &gt;::approximate_squared_length</definition>
        <argsstring>() const</argsstring>
        <name>approximate_squared_length</name>
        <briefdescription>
<para>returns an approximation of the squared length (i.e. perimeter) of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="126" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a8c7bf1d288a484b562ef0ecfc26f1ac3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Circle_3&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1af16e2a5b6a40221f8f6979cd1b4d92b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Circle_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="147" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1a505f603bd66859d13800dee107cdab40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Circle_3&lt; Kernel &gt; &amp;c1, Circle_3&lt; Kernel &gt; const &amp;c2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; const &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput>, iff <computeroutput>c1</computeroutput> and <computeroutput>c2</computeroutput> are equal, i.e. if they have the same center, the same squared radius and the same supporting plane. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circle__3_1acb73994d5bba1e2c44d92c2c9fadb2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Circle_3&lt; Kernel &gt; &amp;c1, Circle_3&lt; Kernel &gt; const &amp;c2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; const &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circle_3.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">Circle_3</ref></computeroutput> is a circle in the three-dimensional Euclidean space <formula id="33">$ \E^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>Note that the circle can be degenerate, i.e. the squared radius may be zero.</para><para><xrefsect id="models_1_models000003"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Circle__3" kindref="compound">Kernel::Circle_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Circle_3.h" line="14" column="1" bodyfile="CGAL/Circle_3.h" bodystart="14" bodyend="151"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Circle__3_1a9978d715c99e17691bf18d288538518c" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>approximate_area</name></member>
      <member refid="classCGAL_1_1Circle__3_1a0fcaf1b03b57f332ffa3064ba4f849cc" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>approximate_squared_length</name></member>
      <member refid="classCGAL_1_1Circle__3_1a46204777a591f9c52917d54554bc0e77" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>area_divided_by_pi</name></member>
      <member refid="classCGAL_1_1Circle__3_1af16e2a5b6a40221f8f6979cd1b4d92b1" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Circle__3_1a7e4947af04bb8c599088594410192963" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>center</name></member>
      <member refid="classCGAL_1_1Circle__3_1a0cd4d6bc664480266f32e01702396938" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1aabd7fd3cd82c8662b06216519177e09b" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1a628a1abf985776416995ea8a70820b8d" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1a6cc99798ef4652e9abe5771dd1056706" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1a471604ced233a3b67304d21eaae0ec81" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1a806a827bff86590da42d656361fa7f72" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>Circle_3</name></member>
      <member refid="classCGAL_1_1Circle__3_1a9a070a6379d03fefe05496cf74c2e24f" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>diametral_sphere</name></member>
      <member refid="classCGAL_1_1Circle__3_1a8c7bf1d288a484b562ef0ecfc26f1ac3" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Circle__3_1acb73994d5bba1e2c44d92c2c9fadb2c7" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Circle__3_1a505f603bd66859d13800dee107cdab40" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Circle__3_1a76c7c6bce3c8ba764998573a5dbe1ff5" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>squared_length_divided_by_pi_square</name></member>
      <member refid="classCGAL_1_1Circle__3_1a2eb1384bdb8d63cdfbc7646033072834" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>squared_radius</name></member>
      <member refid="classCGAL_1_1Circle__3_1a44943e82c8e87ec11b2f18aadefc994d" prot="public" virt="non-virtual"><scope>CGAL::Circle_3</scope><name>supporting_plane</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
