<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Vector__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Vector_2</compoundname>
    <includes local="no">CGAL/Vector_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v, const Kernel::RT &amp;s)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v, const Kernel::FT &amp;s)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gab523b5c6e606c7cd706bc0c7c1da1c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::RT &amp;s, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gab523b5c6e606c7cd706bc0c7c1da1c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::FT &amp;s, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="280" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Vector__2_1ac8bb98b8148145650c0dad170432ffab" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Vector_2&lt; Kernel &gt;::Cartesian_const_iterator</definition>
        <argsstring></argsstring>
        <name>Cartesian_const_iterator</name>
        <briefdescription>
<para>An iterator for enumerating the <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> coordinates of a vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="29" column="1" bodyfile="CGAL/Vector_2.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a8e6f70be0b637e3d48ac09d726131a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;a, const Point_2&lt; Kernel &gt; &amp;b)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>introduces the vector <computeroutput>b-a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aebcebae934ac4df4c294ae9f3edd3781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>introduces the vector <computeroutput>s.target()-s.source()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1ab0dd4c8a0652d07faa433d9a5a0ba1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Ray_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound">Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces the vector having the same direction as <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a2ed2b91eafa908fc04ca125ff2c70c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Line_2&lt; Kernel &gt; &amp;l)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>introduces the vector having the same direction as <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aa871a51210f3aba8ec6fcd0487a32f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Null_vector &amp;NULL_VECTOR)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Null__vector" kindref="compound">Null_vector</ref> &amp;</type>
          <declname>NULL_VECTOR</declname>
        </param>
        <briefdescription>
<para>introduces a null vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aef9325ee952418e4726386c84a55a52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1ac8392b783343936c470302f04385d2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aacc5925b8451b6b08b8390973dbd5d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Kernel::RT &amp;hx, const Kernel::RT &amp;hy, const Kernel::RT &amp;hw=RT(1))</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hw</declname>
          <defval>RT(1)</defval>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(hx/hw,hy/hw)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="99">$ hw\neq0$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a30ac62640004a5bb224abdf481c4ddbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_2&lt; Kernel &gt;::Vector_2</definition>
        <argsstring>(const Kernel::FT &amp;x, const Kernel::FT &amp;y)</argsstring>
        <name>Vector_2</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate Access</header>
      <description><para>There are two sets of coordinate access functions, namely to the homogeneous and to the Cartesian coordinates.</para><para>They can be used independently from the chosen kernel model. Note that you do not loose information with the homogeneous representation, because the <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput> is a quotient. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1af306085432d357cf6cff2cfb9d280988" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_2&lt; Kernel &gt;::hx</definition>
        <argsstring>() const</argsstring>
        <name>hx</name>
        <briefdescription>
<para>returns the homogeneous <formula id="49">$ x$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a10fecdda840f5a0032b57ef30ae513a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_2&lt; Kernel &gt;::hy</definition>
        <argsstring>() const</argsstring>
        <name>hy</name>
        <briefdescription>
<para>returns the homogeneous <formula id="55">$ y$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aafb986d44aaead43877ea15a69564845" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_2&lt; Kernel &gt;::hw</definition>
        <argsstring>() const</argsstring>
        <name>hw</name>
        <briefdescription>
<para>returns the homogenizing coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1ad97eee1b0dc6b2213e48f978245c52b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>returns the <computeroutput>x</computeroutput>-coordinate of <computeroutput>v</computeroutput>, that is <computeroutput><ref refid="classCGAL_1_1Vector__2_1af306085432d357cf6cff2cfb9d280988" kindref="member">hx()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Vector__2_1aafb986d44aaead43877ea15a69564845" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1af80f00a30c6ce2cfa1eff0153a9afc39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>returns the <computeroutput>y</computeroutput>-coordinate of <computeroutput>v</computeroutput>, that is <computeroutput><ref refid="classCGAL_1_1Vector__2_1a10fecdda840f5a0032b57ef30ae513a3" kindref="member">hy()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Vector__2_1aafb986d44aaead43877ea15a69564845" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convenience Operators</header>
      <description><para>The following operations are for convenience and for compatibility with higher dimensional vectors.</para><para>Again they come in a <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> and homogeneous flavor. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1abb1bbea0dab4a62f7b7ea9aca83d904e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_2&lt; Kernel &gt;::homogeneous</definition>
        <argsstring>(int i) const</argsstring>
        <name>homogeneous</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th homogeneous coordinate of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a64736becdc8a65a1cc4077489c0277b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::cartesian</definition>
        <argsstring>(int i) const</argsstring>
        <name>cartesian</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> coordinate of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="84">$ 0\leq i \leq1$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a5fdbdc4dc17194b1d73bad9c8d6c3c59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>cartesian(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="84">$ 0\leq i \leq1$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a0432d81e1fc635ff38354675a48cb402" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2_1ac8bb98b8148145650c0dad170432ffab" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Vector_2&lt; Kernel &gt;::cartesian_begin</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_begin</name>
        <briefdescription>
<para>returns an iterator to the <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> coordinates of <computeroutput>v</computeroutput>, starting with the 0th coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a8425627a75d54fba85a17ff841fe8095" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2_1ac8bb98b8148145650c0dad170432ffab" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Vector_2&lt; Kernel &gt;::cartesian_end</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_end</name>
        <briefdescription>
<para>returns an off the end iterator to the <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> coordinates of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1af50ebb82b84f8e1575e928a3a26243f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Vector_2&lt; Kernel &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension (the constant 2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a5a6c283535d18475faf2940394ba6636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__2" kindref="compound">Direction_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction which passes through <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1aec3a2f4abfb72537668804b872c103cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_2&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__2" kindref="compound">Aff_transformation_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the vector obtained by applying <computeroutput>t</computeroutput> on <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a5013ccfcf6e980cf826d0ebb3af507d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::perpendicular</definition>
        <argsstring>(const Orientation &amp;o) const</argsstring>
        <name>perpendicular</name>
        <param>
          <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member">Orientation</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>returns the vector perpendicular to <computeroutput>v</computeroutput> in clockwise or counterclockwise orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a28f375e58ab4a0134a865309d95d3043" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Vector_2&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Test for equality: two vectors are equal, iff their <formula id="49">$ x$</formula> and <formula id="55">$ y$</formula> coordinates are equal. </para>        </briefdescription>
        <detaileddescription>
<para>You can compare a vector with the <computeroutput>NULL_VECTOR</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1af8eb9102431b6844c48f370fa7c0b84c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Vector_2&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
<para>You can compare a vector with the <computeroutput>NULL_VECTOR</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1abdbc4168f273a4d66c298f10315265ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::operator+</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a052207479cd962b475b751d1a2274b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_2&lt;Kernel&gt;&amp; CGAL::Vector_2&lt; Kernel &gt;::operator+=</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1ab6075f03a6e60a3204d01ea0c3db925a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::operator-</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a989beafb9c537629de2633d99b3ff39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_2&lt;Kernel&gt;&amp; CGAL::Vector_2&lt; Kernel &gt;::operator-=</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a8f1c0f1ae48417956bd7782754100ec8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>returns the opposite vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a7ac072157a6ff71740e14c4c5b389b2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::operator*</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>returns the scalar product (= inner product) of the two vectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1ac58019f6f2e0b96e2eb4bb975c9a10ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt;Kernel&gt; CGAL::Vector_2&lt; Kernel &gt;::operator/</definition>
        <argsstring>(const Kernel::RT &amp;s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a067f0f91a64feecb507b4eced18ce776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_2&lt;Kernel&gt;&amp; CGAL::Vector_2&lt; Kernel &gt;::operator/=</definition>
        <argsstring>(const Kernel::RT &amp;s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a823bc10a23cfb20b24b3b497e1b845e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_2&lt;Kernel&gt;&amp; CGAL::Vector_2&lt; Kernel &gt;::operator*=</definition>
        <argsstring>(const Kernel::RT &amp;s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="239" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Vector__2_1a6b0631b5834ca922ae0621c4c25efea4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_2&lt; Kernel &gt;::squared_length</definition>
        <argsstring>() const</argsstring>
        <name>squared_length</name>
        <briefdescription>
<para>returns the squared length of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="246" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>v</computeroutput> of the class <computeroutput><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref></computeroutput> is a vector in the two-dimensional vector space <formula id="47">$ \mathbb{R}^2$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>Geometrically spoken, a vector is the difference of two points <formula id="96">$ p_2$</formula>, <formula id="95">$ p_1$</formula> and denotes the direction and the distance from <formula id="95">$ p_1$</formula> to <formula id="96">$ p_2$</formula>.</para><para>CGAL defines a symbolic constant <ref refid="group__kernel__enums_1ga4a98ec6bd9dfd8fe8c46fea553b5d238" kindref="member">NULL_VECTOR</ref>. We will explicitly state where you can pass this constant as an argument instead of a vector initialized with zeros.</para><para><xrefsect id="models_1_models000032"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Vector__2" kindref="compound">Kernel::Vector_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Vector_2.h" line="19" column="1" bodyfile="CGAL/Vector_2.h" bodystart="19" bodyend="248"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Vector__2_1a64736becdc8a65a1cc4077489c0277b9" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>cartesian</name></member>
      <member refid="classCGAL_1_1Vector__2_1a0432d81e1fc635ff38354675a48cb402" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>cartesian_begin</name></member>
      <member refid="classCGAL_1_1Vector__2_1ac8bb98b8148145650c0dad170432ffab" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Cartesian_const_iterator</name></member>
      <member refid="classCGAL_1_1Vector__2_1a8425627a75d54fba85a17ff841fe8095" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>cartesian_end</name></member>
      <member refid="classCGAL_1_1Vector__2_1af50ebb82b84f8e1575e928a3a26243f8" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Vector__2_1a5a6c283535d18475faf2940394ba6636" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Vector__2_1abb1bbea0dab4a62f7b7ea9aca83d904e" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>homogeneous</name></member>
      <member refid="classCGAL_1_1Vector__2_1aafb986d44aaead43877ea15a69564845" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>hw</name></member>
      <member refid="classCGAL_1_1Vector__2_1af306085432d357cf6cff2cfb9d280988" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>hx</name></member>
      <member refid="classCGAL_1_1Vector__2_1a10fecdda840f5a0032b57ef30ae513a3" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>hy</name></member>
      <member refid="classCGAL_1_1Vector__2_1af8eb9102431b6844c48f370fa7c0b84c" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Vector__2_1a7ac072157a6ff71740e14c4c5b389b2f" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1gab523b5c6e606c7cd706bc0c7c1da1c37" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1gab523b5c6e606c7cd706bc0c7c1da1c37" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*</name></member>
      <member refid="classCGAL_1_1Vector__2_1a823bc10a23cfb20b24b3b497e1b845e0" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator*=</name></member>
      <member refid="classCGAL_1_1Vector__2_1abdbc4168f273a4d66c298f10315265ac" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Vector__2_1a052207479cd962b475b751d1a2274b64" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Vector__2_1ab6075f03a6e60a3204d01ea0c3db925a" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Vector__2_1a8f1c0f1ae48417956bd7782754100ec8" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Vector__2_1a989beafb9c537629de2633d99b3ff39a" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator-=</name></member>
      <member refid="classCGAL_1_1Vector__2_1ac58019f6f2e0b96e2eb4bb975c9a10ae" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator/</name></member>
      <member refid="classCGAL_1_1Vector__2_1a067f0f91a64feecb507b4eced18ce776" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator/=</name></member>
      <member refid="classCGAL_1_1Vector__2_1a28f375e58ab4a0134a865309d95d3043" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Vector__2_1a5fdbdc4dc17194b1d73bad9c8d6c3c59" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Vector__2_1a5013ccfcf6e980cf826d0ebb3af507d9" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>perpendicular</name></member>
      <member refid="classCGAL_1_1Vector__2_1a6b0631b5834ca922ae0621c4c25efea4" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>squared_length</name></member>
      <member refid="classCGAL_1_1Vector__2_1aec3a2f4abfb72537668804b872c103cf" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Vector__2_1a8e6f70be0b637e3d48ac09d726131a56" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1aebcebae934ac4df4c294ae9f3edd3781" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1ab0dd4c8a0652d07faa433d9a5a0ba1d3" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1a2ed2b91eafa908fc04ca125ff2c70c6f" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1aa871a51210f3aba8ec6fcd0487a32f41" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1aef9325ee952418e4726386c84a55a52c" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1ac8392b783343936c470302f04385d2a6" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1aacc5925b8451b6b08b8390973dbd5d45" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1a30ac62640004a5bb224abdf481c4ddbc" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>Vector_2</name></member>
      <member refid="classCGAL_1_1Vector__2_1ad97eee1b0dc6b2213e48f978245c52b6" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>x</name></member>
      <member refid="classCGAL_1_1Vector__2_1af80f00a30c6ce2cfa1eff0153a9afc39" prot="public" virt="non-virtual"><scope>CGAL::Vector_2</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
