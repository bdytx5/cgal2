<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Iso__cuboid__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Iso_cuboid_3</compoundname>
    <includes local="no">CGAL/Iso_cuboid_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a869572a36c26e30f6adf41c803c7ada7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iso_cuboid_3&lt; Kernel &gt;::Iso_cuboid_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>Iso_cuboid_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid <computeroutput>c</computeroutput> with diagonal opposite vertices <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the object is brought in the canonical form. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1af5fa5ab21de62a1dd41b3e18f223ec8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iso_cuboid_3&lt; Kernel &gt;::Iso_cuboid_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q, int)</argsstring>
        <name>Iso_cuboid_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid <computeroutput>c</computeroutput> with diagonal opposite vertices <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>int</computeroutput> argument value is only used to distinguish the two overloaded functions. <simplesect kind="pre"><para><computeroutput>p.x()&lt;=q.x()</computeroutput>, <computeroutput>p.y()&lt;=q.y()</computeroutput>and <computeroutput>p.z()&lt;=q.z()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1af7ed29ca29bdea72383911157c7be1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iso_cuboid_3&lt; Kernel &gt;::Iso_cuboid_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;left, const Point_3&lt; Kernel &gt; &amp;right, const Point_3&lt; Kernel &gt; &amp;bottom, const Point_3&lt; Kernel &gt; &amp;top, const Point_3&lt; Kernel &gt; &amp;far, const Point_3&lt; Kernel &gt; &amp;close)</argsstring>
        <name>Iso_cuboid_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>far</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>close</declname>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid <computeroutput>c</computeroutput> whose minimal <formula id="49">$ x$</formula> coordinate is the one of <computeroutput>left</computeroutput>, the maximal <formula id="49">$ x$</formula> coordinate is the one of <computeroutput>right</computeroutput>, the minimal <formula id="55">$ y$</formula> coordinate is the one of <computeroutput>bottom</computeroutput>, the maximal <formula id="55">$ y$</formula> coordinate is the one of <computeroutput>top</computeroutput>, the minimal <formula id="56">$ z$</formula> coordinate is the one of <computeroutput>far</computeroutput>, the maximal <formula id="56">$ z$</formula> coordinate is the one of <computeroutput>close</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1aefd1b29f6441877fee68befc8871205c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iso_cuboid_3&lt; Kernel &gt;::Iso_cuboid_3</definition>
        <argsstring>(const Kernel::RT &amp;min_hx, const Kernel::RT &amp;min_hy, const Kernel::RT &amp;min_hz, const Kernel::RT &amp;max_hx, const Kernel::RT &amp;max_hy, const Kernel::RT &amp;max_hz, const Kernel::RT &amp;hw=RT(1))</argsstring>
        <name>Iso_cuboid_3</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>min_hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>min_hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>min_hz</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>max_hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>max_hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>max_hz</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hw</declname>
          <defval>RT(1)</defval>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid <computeroutput>c</computeroutput> with diagonal opposite vertices (<computeroutput>min_hx/hw</computeroutput>, <computeroutput>min_hy/hw</computeroutput>, <computeroutput>min_hz/hw</computeroutput>) and (<computeroutput>max_hx/hw</computeroutput>, <computeroutput>max_hy/hw</computeroutput>, <computeroutput>max_hz/hw</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>hw</computeroutput> <formula id="41">$ \neq$</formula> 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a7e2ba8aca0bb6a8e13dab91cf790df1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iso_cuboid_3&lt; Kernel &gt;::Iso_cuboid_3</definition>
        <argsstring>(const Bbox_3 &amp;bbox)</argsstring>
        <name>Iso_cuboid_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
<para>If <computeroutput><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></computeroutput> is constructible from double, introduces an iso-oriented cuboid from <computeroutput>bbox</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1abb73f9592a7ec439095b9fc074b18982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Iso_cuboid_3&lt; Kernel &gt; &amp;c2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>Test for equality: two iso-oriented cuboid are equal, iff their lower left and their upper right vertices are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a84393d44bcfc61cd9b9176072c17dc75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Iso_cuboid_3&lt; Kernel &gt; &amp;c2) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a1c070cd98044f55a10584482c32493df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Iso_cuboid_3&lt; Kernel &gt;::vertex</definition>
        <argsstring>(int i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th vertex modulo 8 of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>starting with the lower left vertex. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a48f499351f3ef6d80751115372489729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Iso_cuboid_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(i)</computeroutput>, as indicated in the figure below: </para>        </briefdescription>
        <detaileddescription>
<para><image type="html" name="IsoCuboid.png"></image>
 <image type="latex" name="IsoCuboid.png"></image>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1ac8e358024debb7c4dabdd04e6e25e877" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Iso_cuboid_3&lt; Kernel &gt;::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <briefdescription>
<para>returns the smallest vertex of <computeroutput>c</computeroutput> (= <computeroutput>vertex(0)</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1adfee61f2beb468e52ea1c32abcb9fe0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt;Kernel&gt; CGAL::Iso_cuboid_3&lt; Kernel &gt;::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <briefdescription>
<para>returns the largest vertex of <computeroutput>c</computeroutput> (= <computeroutput>vertex(7)</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1acbd1215e4c1076219e559ed27fa99cfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::xmin</definition>
        <argsstring>() const</argsstring>
        <name>xmin</name>
        <briefdescription>
<para>returns smallest Cartesian <formula id="49">$ x$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a40e43f5d0d58fa4d98069adec93b7f06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::ymin</definition>
        <argsstring>() const</argsstring>
        <name>ymin</name>
        <briefdescription>
<para>returns smallest Cartesian <formula id="55">$ y$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a11230b4e96237a117f285199467b7f66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::zmin</definition>
        <argsstring>() const</argsstring>
        <name>zmin</name>
        <briefdescription>
<para>returns smallest Cartesian <formula id="56">$ z$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a30983fe26addccdb42bbcbcb46bb7384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::xmax</definition>
        <argsstring>() const</argsstring>
        <name>xmax</name>
        <briefdescription>
<para>returns largest Cartesian <formula id="49">$ x$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1aef75ce5e4cf75fa0e625ef6ddb7ac23a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::ymax</definition>
        <argsstring>() const</argsstring>
        <name>ymax</name>
        <briefdescription>
<para>returns largest Cartesian <formula id="55">$ y$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1aadb7ae0ec452f77931ecbd6c1924f75a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::zmax</definition>
        <argsstring>() const</argsstring>
        <name>zmax</name>
        <briefdescription>
<para>returns largest Cartesian <formula id="56">$ z$</formula>-coordinate in <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a967d3fc5d0befaae18608cf957ba233c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::min_coord</definition>
        <argsstring>(int i) const</argsstring>
        <name>min_coord</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>i</computeroutput>-th Cartesian coordinate of the smallest vertex of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="53">$ 0 \leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1aa6da9e4f9ec5a9d3bf1f9f1b3b06dfdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::max_coord</definition>
        <argsstring>(int i) const</argsstring>
        <name>max_coord</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>i</computeroutput>-th Cartesian coordinate of the largest vertex of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="53">$ 0 \leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="167" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a264eedc4b1ef9e4d109aebfb03b7d8f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para><computeroutput>c</computeroutput> is degenerate, if all vertices are coplanar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a6b1c54b6a907a4ad9ca4b9d7692252ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::Iso_cuboid_3&lt; Kernel &gt;::bounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns either <ref refid="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a3a96e6da84164cc8300c9e130be23f71" kindref="member">ON_UNBOUNDED_SIDE</ref>, <ref refid="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111ad8333d35d4801c08b3a5ae9e94d7cabe" kindref="member">ON_BOUNDED_SIDE</ref>, or the constant <ref refid="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a060193157c0875fb2e6445a648f3ac1f" kindref="member">ON_BOUNDARY</ref>, depending on where point <computeroutput>p</computeroutput> is. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1ad4ac68a8945d829b2f6745d7ffcd40fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::has_on_boundary</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_boundary</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a74153da56a7bbf586348dca842f09907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::has_on_bounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_bounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1aedc1436fdf3bd6b6a5c99209a8ab9af6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Iso_cuboid_3&lt; Kernel &gt;::has_on_unbounded_side</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on_unbounded_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="201" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1a316029c1f67be20558331ffad17a3482" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Iso_cuboid_3&lt; Kernel &gt;::volume</definition>
        <argsstring>() const</argsstring>
        <name>volume</name>
        <briefdescription>
<para>returns the volume of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1ac700512815bc067d3eca71a852b34878" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Iso_cuboid_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iso__cuboid__3_1adfb810769b1c0c68d17db6a563bb5650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Iso_cuboid_3&lt;Kernel&gt; CGAL::Iso_cuboid_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the iso-oriented cuboid obtained by applying <computeroutput>t</computeroutput> on the smallest and the largest of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The angle at a rotation must be a multiple of <formula id="58">$ \pi/2$</formula>, otherwise the resulting cuboid does not have the same size. Note that rotating about an arbitrary angle can even result in a degenerate iso-oriented cuboid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iso_cuboid_3.h" line="223" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>c</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">Iso_cuboid_3</ref></computeroutput> is a cuboid in the Euclidean space <formula id="33">$ \E^3$</formula> with edges parallel to the <formula id="49">$ x$</formula>, <formula id="55">$ y$</formula> and <formula id="56">$ z$</formula> axis of the coordinate system. </para>    </briefdescription>
    <detaileddescription>
<para>Although they are represented in a canonical form by only two vertices, namely the lexicographically smallest and largest vertex with respect to Cartesian <formula id="57">$ xyz$</formula> coordinates, we provide functions for &quot;accessing&quot; the other vertices as well.</para><para>Iso-oriented cuboids and bounding boxes are quite similar. The difference however is that bounding boxes have always double coordinates, whereas the coordinate type of an iso-oriented cuboid is chosen by the user.</para><para><xrefsect id="models_1_models000014"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1IsoCuboid__3" kindref="compound">Kernel::IsoCuboid_3</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Iso_cuboid_3.h" line="23" column="1" bodyfile="CGAL/Iso_cuboid_3.h" bodystart="23" bodyend="227"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Iso__cuboid__3_1ac700512815bc067d3eca71a852b34878" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a6b1c54b6a907a4ad9ca4b9d7692252ac" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>bounded_side</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1ad4ac68a8945d829b2f6745d7ffcd40fd" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>has_on_boundary</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a74153da56a7bbf586348dca842f09907" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>has_on_bounded_side</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1aedc1436fdf3bd6b6a5c99209a8ab9af6" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>has_on_unbounded_side</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a264eedc4b1ef9e4d109aebfb03b7d8f9" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a869572a36c26e30f6adf41c803c7ada7" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1af5fa5ab21de62a1dd41b3e18f223ec8f" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1af7ed29ca29bdea72383911157c7be1db" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1aefd1b29f6441877fee68befc8871205c" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a7e2ba8aca0bb6a8e13dab91cf790df1e" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1adfee61f2beb468e52ea1c32abcb9fe0f" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>max</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1aa6da9e4f9ec5a9d3bf1f9f1b3b06dfdd" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>max_coord</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1ac8e358024debb7c4dabdd04e6e25e877" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>min</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a967d3fc5d0befaae18608cf957ba233c" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>min_coord</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a84393d44bcfc61cd9b9176072c17dc75" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1abb73f9592a7ec439095b9fc074b18982" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a48f499351f3ef6d80751115372489729" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1adfb810769b1c0c68d17db6a563bb5650" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a1c070cd98044f55a10584482c32493df" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>vertex</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a316029c1f67be20558331ffad17a3482" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>volume</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a30983fe26addccdb42bbcbcb46bb7384" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>xmax</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1acbd1215e4c1076219e559ed27fa99cfd" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>xmin</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1aef75ce5e4cf75fa0e625ef6ddb7ac23a" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>ymax</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a40e43f5d0d58fa4d98069adec93b7f06" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>ymin</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1aadb7ae0ec452f77931ecbd6c1924f75a" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>zmax</name></member>
      <member refid="classCGAL_1_1Iso__cuboid__3_1a11230b4e96237a117f285199467b7f66" prot="public" virt="non-virtual"><scope>CGAL::Iso_cuboid_3</scope><name>zmin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
