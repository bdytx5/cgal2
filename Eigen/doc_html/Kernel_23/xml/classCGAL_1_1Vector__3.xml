<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Vector__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Vector_3</compoundname>
    <includes local="no">CGAL/Vector_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga7a0a1c5cadcf1957129f3af57b8ad0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v, const Kernel::RT &amp;s)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga7a0a1c5cadcf1957129f3af57b8ad0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v, const Kernel::FT &amp;s)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gaa09a2f90ca10bea6e225c3a6f2f3f6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::RT &amp;s, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gaa09a2f90ca10bea6e225c3a6f2f3f6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::FT &amp;s, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="283" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Vector__3_1a18250e85f4a6e3f530bdc5e2ce8faaab" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Vector_3&lt; Kernel &gt;::Cartesian_const_iterator</definition>
        <argsstring></argsstring>
        <name>Cartesian_const_iterator</name>
        <briefdescription>
<para>An iterator for enumerating the Cartesian coordinates of a vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="32" column="1" bodyfile="CGAL/Vector_3.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a7847f1afb918e3f45f79032ae67f49cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;a, const Point_3&lt; Kernel &gt; &amp;b)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>introduces the vector <computeroutput>b-a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a5c8ea293bcca4479e7425f93ed8c687c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound">Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>introduces the vector <computeroutput>s.target()-s.source()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a7efaded0de78d319f0eddfb844f35eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Ray_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces a vector having the same direction as <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ac552c4322f4d680b6af3bf3024aa0021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Line_3&lt; Kernel &gt; &amp;l)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>introduces a vector having the same direction as <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ab2e0bb10be345d03fb9d50e891e27ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Null_vector &amp;NULL_VECTOR)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Null__vector" kindref="compound">Null_vector</ref> &amp;</type>
          <declname>NULL_VECTOR</declname>
        </param>
        <briefdescription>
<para>introduces a null vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a2cf106559e91de597ef2f7c345d8fe35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(int x, int y, int z)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(x, y, z)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ae2ac5be9ac9f893d6e4f197842482210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(double x, double y, double z)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to `(x, y, z). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ab767ede0eced6a090c20160939267ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Kernel::RT &amp;hx, const Kernel::RT &amp;hy, const Kernel::RT &amp;hz, const Kernel::RT &amp;hw=RT(1))</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hz</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hw</declname>
          <defval>RT(1)</defval>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to `(hx/hw, hy/hw, hz/hw). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a0e4d1f3955c8010bcfc8bb2993f9aeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Vector_3&lt; Kernel &gt;::Vector_3</definition>
        <argsstring>(const Kernel::FT &amp;x, const Kernel::FT &amp;y, const Kernel::FT &amp;z)</argsstring>
        <name>Vector_3</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>introduces a vector <computeroutput>v</computeroutput> initialized to <computeroutput>(x, y, z)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate Access</header>
      <description><para>There are two sets of coordinate access functions, namely to the homogeneous and to the Cartesian coordinates.</para><para>They can be used independently from the chosen kernel model. Note that you do not loose information with the homogeneous representation, because the <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput> is a quotient. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a1e32afdea3bacdf938380a825089e335" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_3&lt; Kernel &gt;::hx</definition>
        <argsstring>() const</argsstring>
        <name>hx</name>
        <briefdescription>
<para>returns the homogeneous <formula id="49">$ x$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1afb487cc50d61554b992c6d792497126f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_3&lt; Kernel &gt;::hy</definition>
        <argsstring>() const</argsstring>
        <name>hy</name>
        <briefdescription>
<para>returns the homogeneous <formula id="55">$ y$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a5a508d16e207433116656468dc5bb406" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_3&lt; Kernel &gt;::hz</definition>
        <argsstring>() const</argsstring>
        <name>hz</name>
        <briefdescription>
<para>returns the homogeneous <formula id="56">$ z$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a506763717c95b3a3b58e03f72ae4121a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_3&lt; Kernel &gt;::hw</definition>
        <argsstring>() const</argsstring>
        <name>hw</name>
        <briefdescription>
<para>returns the homogenizing coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ad03593bd198ae08203c10f83363948f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>returns the <computeroutput>x</computeroutput>-coordinate of <computeroutput>v</computeroutput>, that is <computeroutput><ref refid="classCGAL_1_1Vector__3_1a1e32afdea3bacdf938380a825089e335" kindref="member">hx()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Vector__3_1a506763717c95b3a3b58e03f72ae4121a" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a1119ad34b73433b6f06402686da47c92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>returns the <computeroutput>y</computeroutput>-coordinate of <computeroutput>v</computeroutput>, that is <computeroutput><ref refid="classCGAL_1_1Vector__3_1afb487cc50d61554b992c6d792497126f" kindref="member">hy()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Vector__3_1a506763717c95b3a3b58e03f72ae4121a" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a32c741c5eecba04835cb0f1a357d8b04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
<para>returns the <computeroutput>z</computeroutput> coordinate of <computeroutput>v</computeroutput>, that is <computeroutput><ref refid="classCGAL_1_1Vector__3_1a5a508d16e207433116656468dc5bb406" kindref="member">hz()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Vector__3_1a506763717c95b3a3b58e03f72ae4121a" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convenience Operations</header>
      <description><para>The following operations are for convenience and for compatibility with higher dimensional vectors.</para><para>Again they come in a Cartesian and homogeneous flavor. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a240817ab55ea65123f3afd9f29532299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Vector_3&lt; Kernel &gt;::homogeneous</definition>
        <argsstring>(int i) const</argsstring>
        <name>homogeneous</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th homogeneous coordinate of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="86">$ 0\leq i \leq3$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a5543aeb3b847342c0ba6a2a600d3eb87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::cartesian</definition>
        <argsstring>(int i) const</argsstring>
        <name>cartesian</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th Cartesian coordinate of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a290e453e8b1e4f010d9e8eaa7bb7b59a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>cartesian(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ac7436015d2a39d8b23f4b138d5e0dbea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3_1a18250e85f4a6e3f530bdc5e2ce8faaab" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Vector_3&lt; Kernel &gt;::cartesian_begin</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_begin</name>
        <briefdescription>
<para>returns an iterator to the Cartesian coordinates of <computeroutput>v</computeroutput>, starting with the 0th coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a7ef5d0986e595425ce057a51cd0b77e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3_1a18250e85f4a6e3f530bdc5e2ce8faaab" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Vector_3&lt; Kernel &gt;::cartesian_end</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_end</name>
        <briefdescription>
<para>returns an off the end iterator to the Cartesian coordinates of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a34403fbfdbdcf7763f8870eace5de74a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Vector_3&lt; Kernel &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension (the constant 3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a13ca57357eeb23206416941eafce68c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the vector obtained by applying <computeroutput>t</computeroutput> on <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1aed264d7c789ca70597b97a6b0b475d26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="180" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a2e146ae3dd0af3b59ea0ce5f109508ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Vector_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Test for equality: two vectors are equal, iff their <formula id="49">$ x$</formula>, <formula id="55">$ y$</formula> and <formula id="56">$ z$</formula> coordinates are equal. </para>        </briefdescription>
        <detaileddescription>
<para>You can compare a vector with the <computeroutput>NULL_VECTOR</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a9f79abd0a0ec888a17f4781ca7356803" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Vector_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
<para>You can compare a vector with the <computeroutput>NULL_VECTOR</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a8c53022a2413ba313bf155cb4d34a9cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::operator+</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a6836c9e716a2db452ed373e1e3ec2ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_3&lt;Kernel&gt;&amp; CGAL::Vector_3&lt; Kernel &gt;::operator+=</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1abcd0b2d896eb35c5deae47e2a2fee8a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::operator-</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a5a493322ec575eeb13e06e953e300a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_3&lt;Kernel&gt;&amp; CGAL::Vector_3&lt; Kernel &gt;::operator-=</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1ac20d08cf12b25054b271fdb9521c353e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Returns the opposite vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a007e0570382adbfa814f6ad281d43c3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt;Kernel&gt; CGAL::Vector_3&lt; Kernel &gt;::operator/</definition>
        <argsstring>(const Kernel::RT &amp;s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a0043969e31804a8f7afd52f73f543f35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_3&lt;Kernel&gt;&amp; CGAL::Vector_3&lt; Kernel &gt;::operator/=</definition>
        <argsstring>(const Kernel::RT &amp;s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a5f8242b5e51eb8d21552427e262c02d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::operator*</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;w) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>returns the scalar product (= inner product) of the two vectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1a2f59d201e25d0a4ce74363f387dce125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Vector_3&lt;Kernel&gt;&amp; CGAL::Vector_3&lt; Kernel &gt;::operator*=</definition>
        <argsstring>(const Kernel::FT &amp;s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="243" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Vector__3_1aaa8a02645a895f1cd7250e560ce73f4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Vector_3&lt; Kernel &gt;::squared_length</definition>
        <argsstring>() const</argsstring>
        <name>squared_length</name>
        <briefdescription>
<para>returns the squared length of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="250" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref></computeroutput> is a vector in the three-dimensional vector space <formula id="51">$ \mathbb{R}^3$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>Geometrically spoken a vector is the difference of two points <formula id="96">$ p_2$</formula>, <formula id="95">$ p_1$</formula> and denotes the direction and the distance from <formula id="95">$ p_1$</formula> to <formula id="96">$ p_2$</formula>.</para><para>CGAL defines a symbolic constant <ref refid="group__kernel__enums_1ga4a98ec6bd9dfd8fe8c46fea553b5d238" kindref="member">NULL_VECTOR</ref>. We will explicitly state where you can pass this constant as an argument instead of a vector initialized with zeros.</para><para><xrefsect id="models_1_models000033"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Vector__3" kindref="compound">Kernel::Vector_3</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__cross__product__grp" kindref="compound">CGAL::cross_product()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__determinant__grp" kindref="compound">CGAL::determinant()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Vector_3.h" line="22" column="1" bodyfile="CGAL/Vector_3.h" bodystart="22" bodyend="252"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Vector__3_1a5543aeb3b847342c0ba6a2a600d3eb87" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>cartesian</name></member>
      <member refid="classCGAL_1_1Vector__3_1ac7436015d2a39d8b23f4b138d5e0dbea" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>cartesian_begin</name></member>
      <member refid="classCGAL_1_1Vector__3_1a18250e85f4a6e3f530bdc5e2ce8faaab" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Cartesian_const_iterator</name></member>
      <member refid="classCGAL_1_1Vector__3_1a7ef5d0986e595425ce057a51cd0b77e9" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>cartesian_end</name></member>
      <member refid="classCGAL_1_1Vector__3_1a34403fbfdbdcf7763f8870eace5de74a" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Vector__3_1aed264d7c789ca70597b97a6b0b475d26" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Vector__3_1a240817ab55ea65123f3afd9f29532299" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>homogeneous</name></member>
      <member refid="classCGAL_1_1Vector__3_1a506763717c95b3a3b58e03f72ae4121a" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>hw</name></member>
      <member refid="classCGAL_1_1Vector__3_1a1e32afdea3bacdf938380a825089e335" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>hx</name></member>
      <member refid="classCGAL_1_1Vector__3_1afb487cc50d61554b992c6d792497126f" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>hy</name></member>
      <member refid="classCGAL_1_1Vector__3_1a5a508d16e207433116656468dc5bb406" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>hz</name></member>
      <member refid="classCGAL_1_1Vector__3_1a9f79abd0a0ec888a17f4781ca7356803" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Vector__3_1a5f8242b5e51eb8d21552427e262c02d3" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1ga7a0a1c5cadcf1957129f3af57b8ad0cf" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1ga7a0a1c5cadcf1957129f3af57b8ad0cf" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1gaa09a2f90ca10bea6e225c3a6f2f3f6e7" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*</name></member>
      <member refid="group__Kernel__operator__prod_1gaa09a2f90ca10bea6e225c3a6f2f3f6e7" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*</name></member>
      <member refid="classCGAL_1_1Vector__3_1a2f59d201e25d0a4ce74363f387dce125" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator*=</name></member>
      <member refid="classCGAL_1_1Vector__3_1a8c53022a2413ba313bf155cb4d34a9cd" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Vector__3_1a6836c9e716a2db452ed373e1e3ec2ded" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Vector__3_1abcd0b2d896eb35c5deae47e2a2fee8a9" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Vector__3_1ac20d08cf12b25054b271fdb9521c353e" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Vector__3_1a5a493322ec575eeb13e06e953e300a1d" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator-=</name></member>
      <member refid="classCGAL_1_1Vector__3_1a007e0570382adbfa814f6ad281d43c3e" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator/</name></member>
      <member refid="classCGAL_1_1Vector__3_1a0043969e31804a8f7afd52f73f543f35" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator/=</name></member>
      <member refid="classCGAL_1_1Vector__3_1a2e146ae3dd0af3b59ea0ce5f109508ef" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Vector__3_1a290e453e8b1e4f010d9e8eaa7bb7b59a" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Vector__3_1aaa8a02645a895f1cd7250e560ce73f4f" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>squared_length</name></member>
      <member refid="classCGAL_1_1Vector__3_1a13ca57357eeb23206416941eafce68c7" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Vector__3_1a7847f1afb918e3f45f79032ae67f49cc" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1a5c8ea293bcca4479e7425f93ed8c687c" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1a7efaded0de78d319f0eddfb844f35eaa" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1ac552c4322f4d680b6af3bf3024aa0021" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1ab2e0bb10be345d03fb9d50e891e27ad5" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1a2cf106559e91de597ef2f7c345d8fe35" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1ae2ac5be9ac9f893d6e4f197842482210" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1ab767ede0eced6a090c20160939267ecf" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1a0e4d1f3955c8010bcfc8bb2993f9aeea" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>Vector_3</name></member>
      <member refid="classCGAL_1_1Vector__3_1ad03593bd198ae08203c10f83363948f6" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>x</name></member>
      <member refid="classCGAL_1_1Vector__3_1a1119ad34b73433b6f06402686da47c92" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>y</name></member>
      <member refid="classCGAL_1_1Vector__3_1a32c741c5eecba04835cb0f1a357d8b04" prot="public" virt="non-virtual"><scope>CGAL::Vector_3</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
