<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Point__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Point_2</compoundname>
    <includes local="no">CGAL/Point_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__plus_1ga7be1ffd6b3e12cbe03575d932420c672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_2&lt; Kernel &gt; operator+</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by translating <computeroutput>p</computeroutput> by the vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="261" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__minus_1gaf6b6f30efbc1bbca5d00c8e8b33a3fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_2&lt; Kernel &gt; operator-</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by translating <computeroutput>p</computeroutput> by the vector -<computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="274" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Point__2_1abd267a9e192755c434fdca0e684a985d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Point_2&lt; Kernel &gt;::Cartesian_const_iterator</definition>
        <argsstring></argsstring>
        <name>Cartesian_const_iterator</name>
        <briefdescription>
<para>An iterator for enumerating the Cartesian coordinates of a point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="51" column="1" bodyfile="CGAL/Point_2.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a361f8abdb70edd957f965f9e5e876af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(const Origin &amp;ORIGIN)</argsstring>
        <name>Point_2</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Origin" kindref="compound">Origin</ref> &amp;</type>
          <declname>ORIGIN</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>p</computeroutput> with Cartesian coordinates <formula id="82">$ (0,0)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a08b3e53d4272b0b87418c95eccaf8984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>Point_2</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1af37827b476db6a63cd095ed0a89af57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>Point_2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y)</computeroutput> provided <computeroutput>RT</computeroutput> supports construction from <computeroutput>double</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1aac7161df759fa58f4b1c8cd336f9d44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(const Kernel::RT &amp;hx, const Kernel::RT &amp;hy, const Kernel::RT &amp;hw=RT(1))</argsstring>
        <name>Point_2</name>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hy</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref> &amp;</type>
          <declname>hw</declname>
          <defval>RT(1)</defval>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(hx/hw,hy/hw)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>hw</computeroutput> <formula id="41">$ \neq$</formula> <computeroutput>Kernel::RT(0)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1ae86ad08ceefb6b2d9aac560c7ddc34ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(const Kernel::FT &amp;x, const Kernel::FT &amp;y)</argsstring>
        <name>Point_2</name>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>introduces a point <computeroutput>p</computeroutput> initialized to <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1aae8dd158f6d63eb1a612a0068864e3f1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Point_2&lt; Kernel &gt;::Point_2</definition>
        <argsstring>(const Kernel::Weighted_point_2 &amp;wp)</argsstring>
        <name>Point_2</name>
        <param>
          <type>const <ref refid="classKernel_1a0840945f50320f998ee74f212ecaf082" kindref="member">Kernel::Weighted_point_2</ref> &amp;</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
<para>introduces a point from a weighted point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>The <computeroutput>explicit</computeroutput> keyword is used to avoid accidental implicit conversions between <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref> and <ref refid="classCGAL_1_1Weighted__point__2" kindref="compound">Weighted_point_2</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a9aef233897ead320f39ce6739a5482d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Point_2&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two points are equal, iff their <formula id="49">$ x$</formula> and <formula id="55">$ y$</formula> coordinates are equal. The point can be compared with <computeroutput>ORIGIN</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a2b2542b533541a4575225cc25865e9b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Point_2&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;q) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>        </briefdescription>
        <detaileddescription>
<para>The point can be compared with <computeroutput>ORIGIN</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1aadd905a74bcbdc9734eece6bed589776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Point_2&lt;Kernel&gt;&amp; CGAL::Point_2&lt; Kernel &gt;::operator+=</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>translates the point by the vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a963907c037943c7e716941ce83fa84e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
        <definition>Point_2&lt;Kernel&gt;&amp; CGAL::Point_2&lt; Kernel &gt;::operator-=</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>translates the point by the vector -<computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Coordinate Access</header>
      <description><para>There are two sets of coordinate access functions, namely to the homogeneous and to the Cartesian coordinates.</para><para>They can be used independently from the chosen kernel model. Note that you do not lose information with the homogeneous representation, because the <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput> is a quotient. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a7b738e73d56c94d74ae77207eed88c4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_2&lt; Kernel &gt;::hx</definition>
        <argsstring>() const</argsstring>
        <name>hx</name>
        <briefdescription>
<para>returns the homogeneous <formula id="49">$ x$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a70c1aeead596d438247b9f5f583584ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_2&lt; Kernel &gt;::hy</definition>
        <argsstring>() const</argsstring>
        <name>hy</name>
        <briefdescription>
<para>returns the homogeneous <formula id="55">$ y$</formula> coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1ab878c738c78d66cb19047f558c4daaee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_2&lt; Kernel &gt;::hw</definition>
        <argsstring>() const</argsstring>
        <name>hw</name>
        <briefdescription>
<para>returns the homogenizing coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a2d77e6a2b4ae36169e0cf4e2e9c35378" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_2&lt; Kernel &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>returns the Cartesian <formula id="49">$ x$</formula> coordinate, that is <computeroutput><ref refid="classCGAL_1_1Point__2_1a7b738e73d56c94d74ae77207eed88c4f" kindref="member">hx()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Point__2_1ab878c738c78d66cb19047f558c4daaee" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1ac844c95dbfc2e70e82dc6ee1095871f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_2&lt; Kernel &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>returns the Cartesian <formula id="55">$ y$</formula> coordinate, that is <computeroutput><ref refid="classCGAL_1_1Point__2_1a70c1aeead596d438247b9f5f583584ea" kindref="member">hy()</ref></computeroutput>/<computeroutput><ref refid="classCGAL_1_1Point__2_1ab878c738c78d66cb19047f558c4daaee" kindref="member">hw()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Convenience Operations</header>
      <description><para>The following operations are for convenience and for compatibility with higher dimensional points.</para><para>Again they come in a Cartesian and in a homogeneous flavor. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a97e9d520869b12caa7edab8a7f97a932" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></type>
        <definition>Kernel::RT CGAL::Point_2&lt; Kernel &gt;::homogeneous</definition>
        <argsstring>(int i) const</argsstring>
        <name>homogeneous</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th homogeneous coordinate of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="83">$ 0\leq i \leq2$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1aad9e9d84474250ad0984762fc8d180c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_2&lt; Kernel &gt;::cartesian</definition>
        <argsstring>(int i) const</argsstring>
        <name>cartesian</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th Cartesian coordinate of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="84">$ 0\leq i \leq1$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a7edf8f8333bd3f8b1cd0c0335dbbe929" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></type>
        <definition>Kernel::FT CGAL::Point_2&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>cartesian(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="84">$ 0\leq i \leq1$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a163ff0e42a0726d8275af15d0f4b2968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2_1abd267a9e192755c434fdca0e684a985d" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Point_2&lt; Kernel &gt;::cartesian_begin</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_begin</name>
        <briefdescription>
<para>returns an iterator to the Cartesian coordinates of <computeroutput>p</computeroutput>, starting with the 0th coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a6d8d28a004d9c08cd23957fc3af89c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2_1abd267a9e192755c434fdca0e684a985d" kindref="member">Cartesian_const_iterator</ref></type>
        <definition>Cartesian_const_iterator CGAL::Point_2&lt; Kernel &gt;::cartesian_end</definition>
        <argsstring>() const</argsstring>
        <name>cartesian_end</name>
        <briefdescription>
<para>returns an off the end iterator to the <ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref> coordinates of <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a6694a2aa77151abae4672d34ba252db7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Point_2&lt; Kernel &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension (the constant 2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a808350922ee124a5ee2c8f2691311d2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__2" kindref="compound">Bbox_2</ref></type>
        <definition>Bbox_2 CGAL::Point_2&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a3e3a953c66d09054bb69c06b833450fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_2&lt;Kernel&gt; CGAL::Point_2&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_2&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__2" kindref="compound">Aff_transformation_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the point obtained by applying <computeroutput>t</computeroutput> on <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="206" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Point__2_1ab95ced18112a90aba4b88a5180dd4f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically smaller than <computeroutput>q</computeroutput>, i.e. either if <computeroutput>p.x() &lt; q.x()</computeroutput> or if <computeroutput>p.x() == q.x()</computeroutput> and <computeroutput>p.y() &lt; q.y()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1ac0cb9a24bbd0d9353768f1e17b7b0702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically greater than <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a1c1498fc0e1b7309920830542f8536ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically smaller or equal to <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a54d75f0356d4a3681e53098ccfdc96ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> is lexicographically greater or equal to <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__2_1a84b6abfccf34b2ac0b07063c12c7d336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__2" kindref="compound">Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator-</definition>
        <argsstring>(const Point_2&lt; Kernel &gt; &amp;p, const Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the difference vector between <computeroutput>q</computeroutput> and <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>You can substitute <computeroutput>ORIGIN</computeroutput> for either <computeroutput>p</computeroutput> or <computeroutput>q</computeroutput>, but not for both. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_2.h" line="249" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>p</computeroutput> of the class <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound">Point_2</ref></computeroutput> is a point in the two-dimensional Euclidean plane <formula id="29">$ \E^2$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>Remember that <computeroutput><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></computeroutput> and <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></computeroutput> denote a <computeroutput><ref refid="classRingNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref></computeroutput> and a <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput>, respectively. For the kernel model <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound">Cartesian</ref>&lt;NT&gt;</computeroutput>, the two types are the same. For the kernel model <computeroutput><ref refid="structCGAL_1_1Homogeneous" kindref="compound">Homogeneous</ref>&lt;NT&gt;</computeroutput>, <computeroutput><ref refid="classKernel_1aacd6ff704fc864440c40993a40210f6b" kindref="member">Kernel::RT</ref></computeroutput> is equal to <computeroutput>NT</computeroutput>, and <computeroutput><ref refid="classKernel_1a55e83f5a9f8ca43588b02ae8256a8fbd" kindref="member">Kernel::FT</ref></computeroutput> is equal to <computeroutput><ref refid="classCGAL_1_1Quotient" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Number_types.tag">Quotient</ref>&lt;NT&gt;</computeroutput>.</para><para><bold>Operators</bold><linebreak/>
</para><para>The following operations can be applied on points:</para><para><bold>Example</bold><linebreak/>
</para><para>The following declaration creates two points with Cartesian double coordinates.</para><para><programlisting><codeline><highlight class="normal">Point_2&lt;<sp/>Cartesian&lt;double&gt;<sp/>&gt;<sp/>p,<sp/>q(1.0,<sp/>2.0);</highlight></codeline>
</programlisting></para><para>The variable <computeroutput>p</computeroutput> is uninitialized and should first be used on the left hand side of an assignment.</para><para><programlisting><codeline><highlight class="normal">p<sp/>=<sp/>q;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>p.x()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>p.y()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
</programlisting></para><para><xrefsect id="models_1_models000019"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Point_2.h" line="41" column="1" bodyfile="CGAL/Point_2.h" bodystart="41" bodyend="210"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Point__2_1a808350922ee124a5ee2c8f2691311d2f" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Point__2_1aad9e9d84474250ad0984762fc8d180c0" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>cartesian</name></member>
      <member refid="classCGAL_1_1Point__2_1a163ff0e42a0726d8275af15d0f4b2968" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>cartesian_begin</name></member>
      <member refid="classCGAL_1_1Point__2_1abd267a9e192755c434fdca0e684a985d" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Cartesian_const_iterator</name></member>
      <member refid="classCGAL_1_1Point__2_1a6d8d28a004d9c08cd23957fc3af89c8b" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>cartesian_end</name></member>
      <member refid="classCGAL_1_1Point__2_1a6694a2aa77151abae4672d34ba252db7" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Point__2_1a97e9d520869b12caa7edab8a7f97a932" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>homogeneous</name></member>
      <member refid="classCGAL_1_1Point__2_1ab878c738c78d66cb19047f558c4daaee" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>hw</name></member>
      <member refid="classCGAL_1_1Point__2_1a7b738e73d56c94d74ae77207eed88c4f" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>hx</name></member>
      <member refid="classCGAL_1_1Point__2_1a70c1aeead596d438247b9f5f583584ea" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>hy</name></member>
      <member refid="classCGAL_1_1Point__2_1a2b2542b533541a4575225cc25865e9b0" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator!=</name></member>
      <member refid="group__Kernel__operator__plus_1ga7be1ffd6b3e12cbe03575d932420c672" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Point__2_1aadd905a74bcbdc9734eece6bed589776" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Point__2_1a84b6abfccf34b2ac0b07063c12c7d336" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator-</name></member>
      <member refid="group__Kernel__operator__minus_1gaf6b6f30efbc1bbca5d00c8e8b33a3fb2" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator-</name></member>
      <member refid="classCGAL_1_1Point__2_1a963907c037943c7e716941ce83fa84e0" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator-=</name></member>
      <member refid="classCGAL_1_1Point__2_1ab95ced18112a90aba4b88a5180dd4f68" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator&lt;</name></member>
      <member refid="classCGAL_1_1Point__2_1a1c1498fc0e1b7309920830542f8536ea" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator&lt;=</name></member>
      <member refid="classCGAL_1_1Point__2_1a9aef233897ead320f39ce6739a5482d8" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Point__2_1ac0cb9a24bbd0d9353768f1e17b7b0702" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator&gt;</name></member>
      <member refid="classCGAL_1_1Point__2_1a54d75f0356d4a3681e53098ccfdc96ab" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator&gt;=</name></member>
      <member refid="classCGAL_1_1Point__2_1a7edf8f8333bd3f8b1cd0c0335dbbe929" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Point__2_1a361f8abdb70edd957f965f9e5e876af7" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1a08b3e53d4272b0b87418c95eccaf8984" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1af37827b476db6a63cd095ed0a89af57f" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1aac7161df759fa58f4b1c8cd336f9d44d" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1ae86ad08ceefb6b2d9aac560c7ddc34ef" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1aae8dd158f6d63eb1a612a0068864e3f1" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__2_1a3e3a953c66d09054bb69c06b833450fc" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Point__2_1a2d77e6a2b4ae36169e0cf4e2e9c35378" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>x</name></member>
      <member refid="classCGAL_1_1Point__2_1ac844c95dbfc2e70e82dc6ee1095871f4" prot="public" virt="non-virtual"><scope>CGAL::Point_2</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
