<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classExtendedKernelTraits__2" kind="class" language="C++" prot="public">
    <compoundname>ExtendedKernelTraits_2</compoundname>
    <includes local="no">Concepts/ExtendedKernelTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Affine kernel types</header>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a09b55fb74ee7be83c64a61c8a8a8e8b1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_kernel</definition>
        <argsstring></argsstring>
        <name>Standard_kernel</name>
        <briefdescription>
<para>the standard affine kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="57" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a2027e288e30d467cefa4d58236c470cc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_RT</definition>
        <argsstring></argsstring>
        <name>Standard_RT</name>
        <briefdescription>
<para>the standard ring type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="63" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_point_2</definition>
        <argsstring></argsstring>
        <name>Standard_point_2</name>
        <briefdescription>
<para>standard points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="69" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a022e8a611d5392cb953d6a0993bbff56" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_segment_2</definition>
        <argsstring></argsstring>
        <name>Standard_segment_2</name>
        <briefdescription>
<para>standard segments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="75" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a899b55c9adb59e4eaeaeb52d1d62eb73" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_line_2</definition>
        <argsstring></argsstring>
        <name>Standard_line_2</name>
        <briefdescription>
<para>standard oriented lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="81" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1ab81f06a171cff91761177c10012e638a" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_direction_2</definition>
        <argsstring></argsstring>
        <name>Standard_direction_2</name>
        <briefdescription>
<para>standard directions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="87" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a5dc380d1e7518193c5bf1311b14a6680" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_ray_2</definition>
        <argsstring></argsstring>
        <name>Standard_ray_2</name>
        <briefdescription>
<para>standard rays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="93" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a8fec0d05ab4a076c652ca7833b4ffabb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Standard_aff_transformation_2</definition>
        <argsstring></argsstring>
        <name>Standard_aff_transformation_2</name>
        <briefdescription>
<para>standard affine transformations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="99" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Extended kernel types</header>
      <memberdef kind="enum" id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cc" prot="public" static="no">
        <name>Point_type</name>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9ccaa1d4c1543ac1a3826f658d396f026131" prot="public">
          <name>SWCORNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca571e8a45e7d6379a459286a21ee384d3" prot="public">
          <name>LEFTFRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca815c1bf793c732a575ffed47e1bacf4d" prot="public">
          <name>NWCORNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca8f3aa56f2ef3dfbc621ab573fd4036c6" prot="public">
          <name>BOTTOMFRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca066d1cbf9decf4f608364ff0b4200352" prot="public">
          <name>STANDARD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca526b600f9de699ed29ad163db2d3d664" prot="public">
          <name>TOPFRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca0f66e0a17cbad4aca34ba95bee6da9e0" prot="public">
          <name>SECORNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca13f8e228ad83819a9a9218a5de857fad" prot="public">
          <name>RIGHTFRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca817c4b3a5bf04e644b0f58890b71d5df" prot="public">
          <name>NECORNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>a type descriptor for extended points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="134" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1adeb54c4ac5638c0f1f3f4ec45880f3cd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
<para>the ring type of our extended kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="110" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>extended points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="116" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Segment_2</definition>
        <argsstring></argsstring>
        <name>Segment_2</name>
        <briefdescription>
<para>extended segments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="122" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtendedKernelTraits_2::Direction_2</definition>
        <argsstring></argsstring>
        <name>Direction_2</name>
        <briefdescription>
<para>extended directions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="128" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Interfacing the affine kernel types</header>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1ae3ca828db56956a7c5014d09bdd2cd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::construct_point</definition>
        <argsstring>(const Standard_point_2 &amp;p)</argsstring>
        <name>construct_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" kindref="member">Standard_point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>creates an extended point and initializes it to the standard point <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1af5101db9fea33c1593e62836fcc47d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::construct_point</definition>
        <argsstring>(const Standard_line_2 &amp;l)</argsstring>
        <name>construct_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a899b55c9adb59e4eaeaeb52d1d62eb73" kindref="member">Standard_line_2</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>creates an extended point and initializes it to the equivalence class of all the rays underlying the oriented line <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a71b235e02a24b4bd4d5e19b71fe8c374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::construct_point</definition>
        <argsstring>(const Standard_point_2 &amp;p1, const Standard_point_2 &amp;p2)</argsstring>
        <name>construct_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" kindref="member">Standard_point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" kindref="member">Standard_point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>creates an extended point and initializes it to the equivalence class of all the rays underlying the oriented line <computeroutput>l(p1,p2)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a1d2ac9db2812f535c1273ddcb90a88b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::construct_point</definition>
        <argsstring>(const Standard_point_2 &amp;p, const Standard_direction_2 &amp;d)</argsstring>
        <name>construct_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" kindref="member">Standard_point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1ab81f06a171cff91761177c10012e638a" kindref="member">Standard_direction_2</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>creates an extended point and initializes it to the equivalence class of all the rays underlying the ray starting in <computeroutput>p</computeroutput> in direction <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1ae9e25e71b5f91de78377cd4cfb303b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::construct_opposite_point</definition>
        <argsstring>(const Standard_line_2 &amp;l)</argsstring>
        <name>construct_opposite_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a899b55c9adb59e4eaeaeb52d1d62eb73" kindref="member">Standard_line_2</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>creates an extended point and initializes it to the equivalence class of all the rays underlying the oriented line opposite to <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a74a8c071a8103148fed01caa3c2176a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cc" kindref="member">Point_type</ref></type>
        <definition>Point_type ExtendedKernelTraits_2::type</definition>
        <argsstring>(const Point_2 &amp;p)</argsstring>
        <name>type</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>determines the type of <computeroutput>p</computeroutput> and returns it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a9aa9e91e7473e5ea4ebd5eca689acf42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::is_standard</definition>
        <argsstring>(const Point_2 &amp;p)</argsstring>
        <name>is_standard</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <computeroutput>p</computeroutput> is a standard point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1adf64a385f74129b572aa25214d1295ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" kindref="member">Standard_point_2</ref></type>
        <definition>Standard_point_2 ExtendedKernelTraits_2::standard_point</definition>
        <argsstring>(const Point_2 &amp;p)</argsstring>
        <name>standard_point</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the standard point represented by <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>K.is_standard(p)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a1c7192f66a6b414714370edfc2489573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a899b55c9adb59e4eaeaeb52d1d62eb73" kindref="member">Standard_line_2</ref></type>
        <definition>Standard_line_2 ExtendedKernelTraits_2::standard_line</definition>
        <argsstring>(const Point_2 &amp;p)</argsstring>
        <name>standard_line</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the oriented line representing the bundle of rays defining <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>!K.is_standard(p)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a33451e6cf3d11ec2e3e756736cfeb4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a5dc380d1e7518193c5bf1311b14a6680" kindref="member">Standard_ray_2</ref></type>
        <definition>Standard_ray_2 ExtendedKernelTraits_2::standard_ray</definition>
        <argsstring>(const Point_2 &amp;p)</argsstring>
        <name>standard_ray</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>a ray defining <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>!K.is_standard(p)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1aded648ddd4ab6cc0cf7c10be19b23f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::NE</definition>
        <argsstring>()</argsstring>
        <name>NE</name>
        <briefdescription>
<para>returns the point on the northeast frame corner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a7d7f26bf36a6a12ef2e26723d3da3fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::SE</definition>
        <argsstring>()</argsstring>
        <name>SE</name>
        <briefdescription>
<para>returns the point on the southeast frame corner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1aa9200fe65c4a0920e2e4b575ff741171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::NW</definition>
        <argsstring>()</argsstring>
        <name>NW</name>
        <briefdescription>
<para>returns the point on the northwest frame corner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a4ee2c04b0e4c56177602b44d6b121044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::SW</definition>
        <argsstring>()</argsstring>
        <name>SW</name>
        <briefdescription>
<para>returns the point on the southwest frame corner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="232" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Geometric kernel calls</header>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1aedf5e1f4fd0edf2bc379bbf055419906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::source</definition>
        <argsstring>(const Segment_2 &amp;s)</argsstring>
        <name>source</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the source point of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a0dadc2c1419687d17835d8e87dabf9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::target</definition>
        <argsstring>(const Segment_2 &amp;s)</argsstring>
        <name>target</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the target point of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a4e7ae8eb263daaa118cd2a2ef6ad74ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref></type>
        <definition>Segment_2 ExtendedKernelTraits_2::construct_segment</definition>
        <argsstring>(const Point_2 &amp;p, const Point_2 &amp;q)</argsstring>
        <name>construct_segment</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>constructs a segment <computeroutput>pq</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1aa72509daff29289c08946330e965a67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtendedKernelTraits_2::orientation</definition>
        <argsstring>(const Segment_2 &amp;s, const Point_2 &amp;p)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the orientation of <computeroutput>p</computeroutput> with respect to the line through <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1af3c7d52ec8c2a4df6ee321931626f9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtendedKernelTraits_2::orientation</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2, const Point_2 &amp;p3)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
<para>returns the orientation of <computeroutput>p3</computeroutput> with respect to the line through <computeroutput>p1p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1af3415dee2bee734b181727a02f9bdc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::left_turn</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2, const Point_2 &amp;p3)</argsstring>
        <name>left_turn</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
<para>return true iff the <computeroutput>p3</computeroutput> is left of the line through <computeroutput>p1p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a2874dfc9ba4d32c1c363cd65d7a05a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::is_degenerate</definition>
        <argsstring>(const Segment_2 &amp;s)</argsstring>
        <name>is_degenerate</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>return true iff <computeroutput>s</computeroutput> is degenerate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a0b6db75c9758461215c6576bb74c805b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtendedKernelTraits_2::compare_xy</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2)</argsstring>
        <name>compare_xy</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>returns the lexicographic order of <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a47bdf406a91604ce98fdf955b2eff355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtendedKernelTraits_2::compare_x</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2)</argsstring>
        <name>compare_x</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>returns the order on the <formula id="34">$ x$</formula>-coordinates of <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a09311cff653d94c00aee504fe24b694a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtendedKernelTraits_2::compare_y</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2)</argsstring>
        <name>compare_y</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>returns the order on the <formula id="35">$ y$</formula>-coordinates of <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a3a3e7ea99467f8ac3416b75e183410f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref></type>
        <definition>Point_2 ExtendedKernelTraits_2::intersection</definition>
        <argsstring>(const Segment_2 &amp;s1, const Segment_2 &amp;s2)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>returns the point of intersection of the lines supported by <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The intersection point exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1ae9a90aa71edef9d72fcdf711a2d63cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" kindref="member">Direction_2</ref></type>
        <definition>Direction_2 ExtendedKernelTraits_2::construct_direction</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2)</argsstring>
        <name>construct_direction</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>returns the direction of the vector <computeroutput>p2</computeroutput> - <computeroutput>p1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a795200871060939984ddab0889f6409d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::strictly_ordered_ccw</definition>
        <argsstring>(const Direction_2 &amp;d1, const Direction_2 &amp;d2, const Direction_2 &amp;d3)</argsstring>
        <name>strictly_ordered_ccw</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" kindref="member">Direction_2</ref> &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" kindref="member">Direction_2</ref> &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" kindref="member">Direction_2</ref> &amp;</type>
          <declname>d3</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <computeroutput>d2</computeroutput> is in the interior of the counterclockwise angular sector between <computeroutput>d1</computeroutput> and <computeroutput>d3</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1ab7f0954fa12e7f5c54fa525dbfbff262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::strictly_ordered_along_line</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2, const Point_2 &amp;p3)</argsstring>
        <name>strictly_ordered_along_line</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <computeroutput>p2</computeroutput> is in the relative interior of the segment <computeroutput>p1p3</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a2a9d715d7a850d346e1fb4f4e44e727a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::contains</definition>
        <argsstring>(const Segment_2 &amp;s, const Point_2 &amp;p)</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" kindref="member">Segment_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>s</computeroutput> contains <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a89cd9335577bcd0705fd7c14ba788d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExtendedKernelTraits_2::first_pair_closer_than_second</definition>
        <argsstring>(const Point_2 &amp;p1, const Point_2 &amp;p2, const Point_2 &amp;p3, const Point_2 &amp;p4)</argsstring>
        <name>first_pair_closer_than_second</name>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" kindref="member">Point_2</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
<para>returns true iff <formula id="36">$ \|p1-p2\| &lt; \|p3-p4\|$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classExtendedKernelTraits__2_1a65304c8a73a500a68367fd4a56d49a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ExtendedKernelTraits_2::output_identifier</definition>
        <argsstring>()</argsstring>
        <name>output_identifier</name>
        <briefdescription>
<para>returns a unique identifier for kernel object Input/Output. </para>        </briefdescription>
        <detaileddescription>
<para>Usually this should be the name of the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtendedKernelTraits_2.h" line="351" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classExtendedKernelTraits__2" kindref="compound">ExtendedKernelTraits_2</ref></computeroutput> is a kernel concept providing extended geometryIt is called extended geometry for simplicity, though it is not a real geometry in the classical sense. Let <computeroutput>K</computeroutput> be an instance of the data type <computeroutput><ref refid="classExtendedKernelTraits__2" kindref="compound">ExtendedKernelTraits_2</ref></computeroutput>. The central notion of extended geometry are extended points. An extended point represents either a standard affine point of the Cartesian plane or a non-standard point representing the equivalence class of rays where two rays are equivalent if one is contained in the other. </para>    </briefdescription>
    <detaileddescription>
<para> Let <formula id="18">$ R$</formula> be an infinimaximal numberA finite but very large number., <formula id="19">$ F$</formula> be the square box with corners <formula id="20">$ NW(-R,R)$</formula>, <formula id="21">$ NE(R,R)$</formula>, <formula id="22">$ SE(R,-R)$</formula>, and <formula id="23">$ SW(-R,-R)$</formula>. Let <formula id="24">$ p$</formula> be a non-standard point and let <formula id="25">$ r$</formula> be a ray defining it. If the frame <formula id="19">$ F$</formula> contains the source point of <formula id="25">$ r$</formula> then let <formula id="26">$ p(R)$</formula> be the intersection of <formula id="25">$ r$</formula> with the frame <formula id="19">$ F$</formula>, if <formula id="19">$ F$</formula> does not contain the source of <formula id="25">$ r$</formula> then <formula id="26">$ p(R)$</formula> is undefined. For a standard point let <formula id="26">$ p(R)$</formula> be equal to <formula id="24">$ p$</formula> if <formula id="24">$ p$</formula> is contained in the frame <formula id="19">$ F$</formula> and let <formula id="26">$ p(R)$</formula> be undefined otherwise. Clearly, for any standard or non-standard point <formula id="24">$ p$</formula>, <formula id="26">$ p(R)$</formula> is defined for any sufficiently large <formula id="18">$ R$</formula>. Let <formula id="27">$ f$</formula> be any function on standard points, say with <formula id="28">$ k$</formula> arguments. We call <formula id="27">$ f$</formula> <emphasis>extensible</emphasis> if for any <formula id="28">$ k$</formula> points <formula id="29">$ p_1$</formula>, <formula id="30">$ \ldots$</formula> , <formula id="31">$ p_k$</formula> the function value <formula id="32">$ f(p_1(R),\ldots,p_k(R))$</formula> is constant for all sufficiently large <formula id="18">$ R$</formula>. We define this value as <formula id="33">$ f(p_1,\ldots,p_k)$</formula>. Predicates like lexicographic order of points, orientation, and incircle tests are extensible.</para><para>An extended segment is defined by two extended points such that it is either an affine segment, an affine ray, an affine line, or a segment that is part of the square box. Extended directions extend the affine notion of direction to extended objects.</para><para>This extended geometry concept serves two purposes. It offers functionality for changing between standard affine and extended geometry. At the same time it provides extensible geometric primitives on the extended geometric objects.</para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Extended__cartesian" kindref="compound">CGAL::Extended_cartesian</ref>&lt;FT&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Extended__homogeneous" kindref="compound">CGAL::Extended_homogeneous</ref>&lt;RT&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Filtered__extended__homogeneous" kindref="compound">CGAL::Filtered_extended_homogeneous</ref>&lt;RT&gt;</computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/ExtendedKernelTraits_2.h" line="47" column="1" bodyfile="Concepts/ExtendedKernelTraits_2.h" bodystart="47" bodyend="355"/>
    <listofallmembers>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca8f3aa56f2ef3dfbc621ab573fd4036c6" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>BOTTOMFRAME</name></member>
      <member refid="classExtendedKernelTraits__2_1a47bdf406a91604ce98fdf955b2eff355" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>compare_x</name></member>
      <member refid="classExtendedKernelTraits__2_1a0b6db75c9758461215c6576bb74c805b" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>compare_xy</name></member>
      <member refid="classExtendedKernelTraits__2_1a09311cff653d94c00aee504fe24b694a" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>compare_y</name></member>
      <member refid="classExtendedKernelTraits__2_1ae9a90aa71edef9d72fcdf711a2d63cd4" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_direction</name></member>
      <member refid="classExtendedKernelTraits__2_1ae9e25e71b5f91de78377cd4cfb303b57" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_opposite_point</name></member>
      <member refid="classExtendedKernelTraits__2_1ae3ca828db56956a7c5014d09bdd2cd04" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_point</name></member>
      <member refid="classExtendedKernelTraits__2_1af5101db9fea33c1593e62836fcc47d83" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_point</name></member>
      <member refid="classExtendedKernelTraits__2_1a71b235e02a24b4bd4d5e19b71fe8c374" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_point</name></member>
      <member refid="classExtendedKernelTraits__2_1a1d2ac9db2812f535c1273ddcb90a88b6" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_point</name></member>
      <member refid="classExtendedKernelTraits__2_1a4e7ae8eb263daaa118cd2a2ef6ad74ef" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>construct_segment</name></member>
      <member refid="classExtendedKernelTraits__2_1a2a9d715d7a850d346e1fb4f4e44e727a" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>contains</name></member>
      <member refid="classExtendedKernelTraits__2_1aa583df01caaf667b1d52aff8159fbeff" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Direction_2</name></member>
      <member refid="classExtendedKernelTraits__2_1a89cd9335577bcd0705fd7c14ba788d14" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>first_pair_closer_than_second</name></member>
      <member refid="classExtendedKernelTraits__2_1a3a3e7ea99467f8ac3416b75e183410f7" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>intersection</name></member>
      <member refid="classExtendedKernelTraits__2_1a2874dfc9ba4d32c1c363cd65d7a05a1a" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>is_degenerate</name></member>
      <member refid="classExtendedKernelTraits__2_1a9aa9e91e7473e5ea4ebd5eca689acf42" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>is_standard</name></member>
      <member refid="classExtendedKernelTraits__2_1af3415dee2bee734b181727a02f9bdc7b" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>left_turn</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca571e8a45e7d6379a459286a21ee384d3" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>LEFTFRAME</name></member>
      <member refid="classExtendedKernelTraits__2_1aded648ddd4ab6cc0cf7c10be19b23f68" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>NE</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca817c4b3a5bf04e644b0f58890b71d5df" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>NECORNER</name></member>
      <member refid="classExtendedKernelTraits__2_1aa9200fe65c4a0920e2e4b575ff741171" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>NW</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca815c1bf793c732a575ffed47e1bacf4d" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>NWCORNER</name></member>
      <member refid="classExtendedKernelTraits__2_1aa72509daff29289c08946330e965a67e" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>orientation</name></member>
      <member refid="classExtendedKernelTraits__2_1af3c7d52ec8c2a4df6ee321931626f9ff" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>orientation</name></member>
      <member refid="classExtendedKernelTraits__2_1a65304c8a73a500a68367fd4a56d49a31" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>output_identifier</name></member>
      <member refid="classExtendedKernelTraits__2_1a937118befe22217040a00d04f3a94ebf" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Point_2</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cc" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Point_type</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca13f8e228ad83819a9a9218a5de857fad" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>RIGHTFRAME</name></member>
      <member refid="classExtendedKernelTraits__2_1adeb54c4ac5638c0f1f3f4ec45880f3cd" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>RT</name></member>
      <member refid="classExtendedKernelTraits__2_1a7d7f26bf36a6a12ef2e26723d3da3fe3" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>SE</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca0f66e0a17cbad4aca34ba95bee6da9e0" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>SECORNER</name></member>
      <member refid="classExtendedKernelTraits__2_1a70c3013ee3b55cd5961ab37da7d25b73" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Segment_2</name></member>
      <member refid="classExtendedKernelTraits__2_1aedf5e1f4fd0edf2bc379bbf055419906" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>source</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca066d1cbf9decf4f608364ff0b4200352" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>STANDARD</name></member>
      <member refid="classExtendedKernelTraits__2_1a8fec0d05ab4a076c652ca7833b4ffabb" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_aff_transformation_2</name></member>
      <member refid="classExtendedKernelTraits__2_1ab81f06a171cff91761177c10012e638a" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_direction_2</name></member>
      <member refid="classExtendedKernelTraits__2_1a09b55fb74ee7be83c64a61c8a8a8e8b1" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_kernel</name></member>
      <member refid="classExtendedKernelTraits__2_1a1c7192f66a6b414714370edfc2489573" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>standard_line</name></member>
      <member refid="classExtendedKernelTraits__2_1a899b55c9adb59e4eaeaeb52d1d62eb73" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_line_2</name></member>
      <member refid="classExtendedKernelTraits__2_1adf64a385f74129b572aa25214d1295ac" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>standard_point</name></member>
      <member refid="classExtendedKernelTraits__2_1a3ef0b203b6ad3a4433519320e868717f" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_point_2</name></member>
      <member refid="classExtendedKernelTraits__2_1a33451e6cf3d11ec2e3e756736cfeb4fb" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>standard_ray</name></member>
      <member refid="classExtendedKernelTraits__2_1a5dc380d1e7518193c5bf1311b14a6680" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_ray_2</name></member>
      <member refid="classExtendedKernelTraits__2_1a2027e288e30d467cefa4d58236c470cc" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_RT</name></member>
      <member refid="classExtendedKernelTraits__2_1a022e8a611d5392cb953d6a0993bbff56" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>Standard_segment_2</name></member>
      <member refid="classExtendedKernelTraits__2_1ab7f0954fa12e7f5c54fa525dbfbff262" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>strictly_ordered_along_line</name></member>
      <member refid="classExtendedKernelTraits__2_1a795200871060939984ddab0889f6409d" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>strictly_ordered_ccw</name></member>
      <member refid="classExtendedKernelTraits__2_1a4ee2c04b0e4c56177602b44d6b121044" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>SW</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9ccaa1d4c1543ac1a3826f658d396f026131" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>SWCORNER</name></member>
      <member refid="classExtendedKernelTraits__2_1a0dadc2c1419687d17835d8e87dabf9be" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>target</name></member>
      <member refid="classExtendedKernelTraits__2_1a2877caaf9a92e39e3d4d86b54d87e9cca526b600f9de699ed29ad163db2d3d664" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>TOPFRAME</name></member>
      <member refid="classExtendedKernelTraits__2_1a74a8c071a8103148fed01caa3c2176a6" prot="public" virt="non-virtual"><scope>ExtendedKernelTraits_2</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
