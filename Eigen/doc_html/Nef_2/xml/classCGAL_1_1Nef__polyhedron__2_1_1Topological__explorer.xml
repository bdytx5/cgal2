<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Nef_polyhedron_2::Topological_explorer</compoundname>
    <derivedcompoundref refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer" prot="public" virt="non-virtual">CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer</derivedcompoundref>
    <includes local="no">CGAL/Nef_polyhedron_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1abab9b23b8cd49905df2f86d587c7047a" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Plane_map</definition>
        <argsstring></argsstring>
        <name>Plane_map</name>
        <briefdescription>
<para>The underlying plane map type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="345" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b8b294561b30ba955e5da673b832a66" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>The point type of vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="350" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Mark</definition>
        <argsstring></argsstring>
        <name>Mark</name>
        <briefdescription>
<para>All objects (vertices, edges, faces) are attributed by a <computeroutput>Mark</computeroutput> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="356" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Size_type</definition>
        <argsstring></argsstring>
        <name>Size_type</name>
        <briefdescription>
<para>The size type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="361" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Circulators</header>
      <description><para>Local types are handles, iterators and circulators of the following kind: <computeroutput>Vertex_const_handle</computeroutput>, <computeroutput>Vertex_const_iterator</computeroutput>, <computeroutput>Halfedge_const_handle</computeroutput>, <computeroutput>Halfedge_const_iterator</computeroutput>, <computeroutput>Face_const_handle</computeroutput>, <computeroutput>Face_const_iterator</computeroutput>.</para><para>Additionally the following circulators are defined. </para></description>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa6e9ad3f6a1f4b942521defecf131ecc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Halfedge_around_vertex_const_circulator</definition>
        <argsstring></argsstring>
        <name>Halfedge_around_vertex_const_circulator</name>
        <briefdescription>
<para>circulating the outgoing halfedges in <formula id="16">$ A(v)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="377" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3d91599845191e23b857636b90205901" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Halfedge_around_face_const_circulator</definition>
        <argsstring></argsstring>
        <name>Halfedge_around_face_const_circulator</name>
        <briefdescription>
<para>circulating the halfedges in the face cycle of a face <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="384" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa98d28ac00f9737daa2f6f31b5d93b76" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Hole_const_iterator</definition>
        <argsstring></argsstring>
        <name>Hole_const_iterator</name>
        <briefdescription>
<para>iterating all holes of a face <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The type is convertible to <computeroutput>Halfedge_const_handle</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="392" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae70494c101218e03667b280a2716caa5" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::Isolated_vertex_const_iterator</definition>
        <argsstring></argsstring>
        <name>Isolated_vertex_const_iterator</name>
        <briefdescription>
<para>iterating all isolated vertices of a face <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The type generalizes <computeroutput>Vertex_const_handle</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="400" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa5fa0f1f1f776119ec0bf846eb9221db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_const_handle</type>
        <definition>Vertex_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::source</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>source</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the source of <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e8e59558528450d58b0722990fbc3cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_const_handle</type>
        <definition>Vertex_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::target</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>target</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the target of <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4d947b1cd5d82b500a9a5fd6d50dd908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::twin</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>twin</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the twin of <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e911d8f84babfdaae4273499c62c792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::is_isolated</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>is_isolated</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <formula id="17">$ A(v) = \emptyset$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afadd9bb47ec1288d30f1d70f6b4da32e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::first_out_edge</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>first_out_edge</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns one halfedge with source <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s the starting point for the circular iteration over the halfedges with source <computeroutput>v</computeroutput>. <simplesect kind="pre"><para><computeroutput>!is_isolated(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac67872a8717d99a457f140be71dbd5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::last_out_edge</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>last_out_edge</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the halfedge with source <computeroutput>v</computeroutput> that is the last in the circular iteration before encountering <computeroutput>first_out_edge(v)</computeroutput> again. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>!is_isolated(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aafbb03fdd865ef605b2db27d0ca3acf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::cyclic_adj_succ</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>cyclic_adj_succ</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the edge after <computeroutput>e</computeroutput> in the cyclic ordered adjacency list of <computeroutput>source(e)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6e1e557802ab55942df3e3055136a053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::cyclic_adj_pred</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>cyclic_adj_pred</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the edge before <computeroutput>e</computeroutput> in the cyclic ordered adjacency list of <computeroutput>source(e)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4723a70ebbe2377cc027bf4b5a2937ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::next</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>next</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the next edge in the face cycle containing <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ace5fa684156afa58b25ddbece1098977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::previous</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>previous</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the previous edge in the face cycle containing <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a2358b27ad254251fc31e296fdfe5d419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Face_const_handle</type>
        <definition>Face_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::face</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>face</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the face incident to <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a9b920d31bf43c6c904db5455e37efbfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Face_const_handle</type>
        <definition>Face_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::face</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>face</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the face incident to <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>is_isolated(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a8a7c3d09bf639c6edba3aab3b5212164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_handle</type>
        <definition>Halfedge_const_handle CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::halfedge</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>halfedge</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns a halfedge in the bounding face cycle of <computeroutput>f</computeroutput> (<computeroutput>Halfedge_const_handle()</computeroutput> if there is no bounding face cycle). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="495" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b63cd235f06f5d1f55c3e91f29bb1de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::vertices_begin</definition>
        <argsstring>()</argsstring>
        <name>vertices_begin</name>
        <briefdescription>
<para>iterator over vertices of the map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a45e030bdaa0a09e4ccec3474dbb21f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_const_iterator</type>
        <definition>Vertex_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::vertices_end</definition>
        <argsstring>()</argsstring>
        <name>vertices_end</name>
        <briefdescription>
<para>past-the-end iterator for vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ad73871d78bfe1e4e5b72585964715fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_iterator</type>
        <definition>Halfedge_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::halfedges_begin</definition>
        <argsstring>()</argsstring>
        <name>halfedges_begin</name>
        <briefdescription>
<para>iterator over halfedges of the map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4600e41006af71fd70d01a7f87710a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge_const_iterator</type>
        <definition>Halfedge_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::halfedges_end</definition>
        <argsstring>()</argsstring>
        <name>halfedges_end</name>
        <briefdescription>
<para>past-the-end iterator for halfedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaf2d8f8ab3be8fd8e18c1cac52a759da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Face_const_iterator</type>
        <definition>Face_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::faces_begin</definition>
        <argsstring>()</argsstring>
        <name>faces_begin</name>
        <briefdescription>
<para>iterator over faces of the map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acec5c364e27fe70974b590e2980b20e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Face_const_iterator</type>
        <definition>Face_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::faces_end</definition>
        <argsstring>()</argsstring>
        <name>faces_end</name>
        <briefdescription>
<para>past-the-end iterator for faces </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac80a554295d47ba89588bc7504914adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa6e9ad3f6a1f4b942521defecf131ecc" kindref="member">Halfedge_around_vertex_const_circulator</ref></type>
        <definition>Halfedge_around_vertex_const_circulator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::out_edges</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>out_edges</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns a circulator for the cyclic adjacency list of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aecb68b9f586e1c6cd28aab92eee16118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3d91599845191e23b857636b90205901" kindref="member">Halfedge_around_face_const_circulator</ref></type>
        <definition>Halfedge_around_face_const_circulator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::face_cycle</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>face_cycle</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns a circulator for the outer face cycle of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3cf9b254ef4179ac4c4819c71999622a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa98d28ac00f9737daa2f6f31b5d93b76" kindref="member">Hole_const_iterator</ref></type>
        <definition>Hole_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::holes_begin</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>holes_begin</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns an iterator for all holes in the interior of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>A <computeroutput>Hole_iterator</computeroutput> can be assigned to a <computeroutput>Halfedge_around_face_const_circulator</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a24e388badee0e933d0c60589a591dc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa98d28ac00f9737daa2f6f31b5d93b76" kindref="member">Hole_const_iterator</ref></type>
        <definition>Hole_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::holes_end</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>holes_end</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the past-the-end iterator of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a004e8710a276682cb6324e0241fdc577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae70494c101218e03667b280a2716caa5" kindref="member">Isolated_vertex_const_iterator</ref></type>
        <definition>Isolated_vertex_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::isolated_vertices_begin</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>isolated_vertices_begin</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns an iterator for all isolated vertices in the interior of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab1fec0a1ddc1b841cec1b38705bf5fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae70494c101218e03667b280a2716caa5" kindref="member">Isolated_vertex_const_iterator</ref></type>
        <definition>Isolated_vertex_const_iterator CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::isolated_vertices_end</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>isolated_vertices_end</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the past the end iterator of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="572" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Associated Information</header>
      <description><para>The type <computeroutput>Mark</computeroutput> is the general attribute of an object. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acd1ce058d8a326a437463210b1088231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b8b294561b30ba955e5da673b832a66" kindref="member">Point</ref> &amp;</type>
        <definition>const Point&amp; CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::point</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>point</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the embedding of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae87b8d48eb9c4ec0d6537b08ccb2e688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" kindref="member">Mark</ref> &amp;</type>
        <definition>const Mark&amp; CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::mark</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>mark</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the mark of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a7a0eb4a3679d29256aca17d712775138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" kindref="member">Mark</ref> &amp;</type>
        <definition>const Mark&amp; CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::mark</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>mark</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns the mark of <computeroutput>e</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a38509dd5320957f5441d374528a3e78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" kindref="member">Mark</ref> &amp;</type>
        <definition>const Mark&amp; CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::mark</definition>
        <argsstring>(Face_const_handle f)</argsstring>
        <name>mark</name>
        <param>
          <type>Face_const_handle</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>returns the mark of <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="603" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Statistics and Integrity</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a1c6b0ba373b73d72d4be6eaa9424e10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_vertices</definition>
        <argsstring>()</argsstring>
        <name>number_of_vertices</name>
        <briefdescription>
<para>returns the number of vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a91d520c495d3bf2b14a5f206753eacf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_halfedges</definition>
        <argsstring>()</argsstring>
        <name>number_of_halfedges</name>
        <briefdescription>
<para>returns the number of halfedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaadbdb973504c741a13667efff8e5774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_edges</definition>
        <argsstring>()</argsstring>
        <name>number_of_edges</name>
        <briefdescription>
<para>returns the number of halfedge pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a290e02ff14aebbf8ff48295bedbbcd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_faces</definition>
        <argsstring>()</argsstring>
        <name>number_of_faces</name>
        <briefdescription>
<para>returns the number of faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="632" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6a67d0fb0d7301a975cf1c1bdd0e2afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_face_cycles</definition>
        <argsstring>()</argsstring>
        <name>number_of_face_cycles</name>
        <briefdescription>
<para>returns the number of face cycles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="638" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa4aa21d6219a42e2516f6bfb31335bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" kindref="member">Size_type</ref></type>
        <definition>Size_type CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::number_of_connected_components</definition>
        <argsstring>()</argsstring>
        <name>number_of_connected_components</name>
        <briefdescription>
<para>calculates the number of connected components of <computeroutput>P</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0f1ca70f56988702a5c8c2a5b567c5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::print_statistics</definition>
        <argsstring>(std::ostream &amp;os=std::cout)</argsstring>
        <name>print_statistics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
          <defval>std::cout</defval>
        </param>
        <briefdescription>
<para>print the statistics of <computeroutput>P</computeroutput>: the number of vertices, edges, and faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afb7f9daf17bd42853ac4586196ed4ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer::check_integrity_and_topological_planarity</definition>
        <argsstring>(bool faces=true)</argsstring>
        <name>check_integrity_and_topological_planarity</name>
        <param>
          <type>bool</type>
          <declname>faces</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>checks the link structure and the genus of <computeroutput>P</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="657" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance <computeroutput>D</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer" kindref="compound">Topological_explorer</ref></computeroutput> is a decorator for interfacing the topological structure of a plane map <computeroutput>P</computeroutput> (read-only). </para>    </briefdescription>
    <detaileddescription>
<para>A plane map <computeroutput>P</computeroutput> consists of a triple <formula id="8">$ (V, E, F)$</formula> of vertices, edges, and faces. We collectively call them objects. An edge <computeroutput>e</computeroutput> is a pair of vertices <computeroutput>(v,w)</computeroutput> with incidence operations <computeroutput>v = source(e)</computeroutput>, <computeroutput>w = target(e)</computeroutput>. The list of all edges with source <computeroutput>v</computeroutput> is called the adjacency list <computeroutput>A(v)</computeroutput>.</para><para>Edges are paired into twins. For each edge <computeroutput>e = (v,w)</computeroutput> there&apos;s an edge <computeroutput>twin(e) = (w,v)</computeroutput> and <computeroutput>twin(twin(e)) == e</computeroutput>The existence of the edge pairs makes <computeroutput>P</computeroutput> a bidirected graph, the <computeroutput>twin</computeroutput> links make <computeroutput>P</computeroutput> a map..</para><para>An edge <computeroutput>e = (v,w)</computeroutput> knows two adjacent edges <computeroutput>en = next(e)</computeroutput> and <computeroutput>ep = previous(e)</computeroutput> where <computeroutput>source(en) = w</computeroutput>, <computeroutput>previous(en) = e</computeroutput> and <computeroutput>target(ep) = v</computeroutput> and <computeroutput>next(ep) = e</computeroutput>. By this symmetric <computeroutput>previous-next</computeroutput> relationship all edges are partitioned into face cycles. Two edges <formula id="9">$ e$</formula> and <formula id="10">$ e&apos;$</formula> are in the same face cycle if <formula id="11">$ e = next^*(e&apos;)$</formula>. All edges <computeroutput>e</computeroutput> in the same face cycle have the same incident face <formula id="12">$ f = face(e)$</formula>. The cyclic order on the adjacency list of a vertex <computeroutput>v = source(e)</computeroutput> is given by <computeroutput>cyclic_adj_succ(e) = twin(previous(e))</computeroutput> and <computeroutput>cyclic_adj_pred(e) = next(twin(e))</computeroutput>.</para><para>A vertex <computeroutput>v</computeroutput> is embedded via coordinates <computeroutput>point(v)</computeroutput>. By the embedding of its source and target an edge corresponds to a segment. <computeroutput>P</computeroutput> has the property that the embedding is always <emphasis>order-preserving</emphasis>. This means a ray fixed in <computeroutput>point(v)</computeroutput> of a vertex <computeroutput>v</computeroutput> and swept around counterclockwise meets the embeddings of <computeroutput>target(e)</computeroutput> ( <formula id="13">$ e \in A(v)$</formula>) in the cyclic order defined by the list order of <computeroutput>A</computeroutput>.</para><para>The embedded face cycles partition the plane into maximal connected subsets of points. Each such set corresponds to a face. A face is bounded by its incident face cycles. For all the edges in the non-trivial face cycles it holds that the face is left of the edges. There can also be trivial face cycles in form of isolated vertices in the interior of a face. Each such vertex <computeroutput>v</computeroutput> knows its surrounding face <computeroutput>f = face(v)</computeroutput>.</para><para>Plane maps are attributed, for each object <formula id="14">$ u \in V \cup E \cup F$</formula> we attribute an information <computeroutput>mark(u)</computeroutput> of type <computeroutput>Mark</computeroutput>. <computeroutput>Mark</computeroutput> fits the concepts assignable, default-constructible, and equal-comparable. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer"/>
      </node>
    </inheritancegraph>
    <location file="CGAL/Nef_polyhedron_2.h" line="335" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="335" bodyend="661"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afb7f9daf17bd42853ac4586196ed4ec4" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>check_integrity_and_topological_planarity</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6e1e557802ab55942df3e3055136a053" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>cyclic_adj_pred</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aafbb03fdd865ef605b2db27d0ca3acf8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>cyclic_adj_succ</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a2358b27ad254251fc31e296fdfe5d419" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>face</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a9b920d31bf43c6c904db5455e37efbfd" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>face</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aecb68b9f586e1c6cd28aab92eee16118" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>face_cycle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaf2d8f8ab3be8fd8e18c1cac52a759da" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>faces_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acec5c364e27fe70974b590e2980b20e8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>faces_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afadd9bb47ec1288d30f1d70f6b4da32e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>first_out_edge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a8a7c3d09bf639c6edba3aab3b5212164" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>halfedge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3d91599845191e23b857636b90205901" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Halfedge_around_face_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa6e9ad3f6a1f4b942521defecf131ecc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Halfedge_around_vertex_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ad73871d78bfe1e4e5b72585964715fda" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>halfedges_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4600e41006af71fd70d01a7f87710a33" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>halfedges_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa98d28ac00f9737daa2f6f31b5d93b76" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Hole_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3cf9b254ef4179ac4c4819c71999622a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>holes_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a24e388badee0e933d0c60589a591dc7a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>holes_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e911d8f84babfdaae4273499c62c792" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>is_isolated</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae70494c101218e03667b280a2716caa5" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Isolated_vertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a004e8710a276682cb6324e0241fdc577" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>isolated_vertices_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab1fec0a1ddc1b841cec1b38705bf5fa4" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>isolated_vertices_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac67872a8717d99a457f140be71dbd5cb" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>last_out_edge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae87b8d48eb9c4ec0d6537b08ccb2e688" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a7a0eb4a3679d29256aca17d712775138" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a38509dd5320957f5441d374528a3e78e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4723a70ebbe2377cc027bf4b5a2937ed" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>next</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa4aa21d6219a42e2516f6bfb31335bdc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_connected_components</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaadbdb973504c741a13667efff8e5774" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_edges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6a67d0fb0d7301a975cf1c1bdd0e2afd" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_face_cycles</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a290e02ff14aebbf8ff48295bedbbcd74" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_faces</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a91d520c495d3bf2b14a5f206753eacf8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_halfedges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a1c6b0ba373b73d72d4be6eaa9424e10f" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac80a554295d47ba89588bc7504914adf" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>out_edges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1abab9b23b8cd49905df2f86d587c7047a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Plane_map</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b8b294561b30ba955e5da673b832a66" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acd1ce058d8a326a437463210b1088231" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>point</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ace5fa684156afa58b25ddbece1098977" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>previous</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0f1ca70f56988702a5c8c2a5b567c5ea" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>print_statistics</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>Size_type</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa5fa0f1f1f776119ec0bf846eb9221db" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>source</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e8e59558528450d58b0722990fbc3cc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>target</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4d947b1cd5d82b500a9a5fd6d50dd908" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>twin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b63cd235f06f5d1f55c3e91f29bb1de" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>vertices_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a45e030bdaa0a09e4ccec3474dbb21f1c" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Topological_explorer</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
