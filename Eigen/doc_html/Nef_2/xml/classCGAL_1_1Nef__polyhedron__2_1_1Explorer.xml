<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Nef_polyhedron_2::Explorer</compoundname>
    <basecompoundref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer" prot="public" virt="non-virtual">CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer</basecompoundref>
    <includes local="no">CGAL/Nef_polyhedron_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>Iterators, handles, and circulators are inherited from <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer" kindref="compound">Topological_explorer</ref></computeroutput>. </para></description>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a4c071b62dc69909b967d78b38730b061" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>the point type of finite vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="715" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a52c0b5ab73356ed694f18353f6129855" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::Ray</definition>
        <argsstring></argsstring>
        <name>Ray</name>
        <briefdescription>
<para>the ray type of vertices on the frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="721" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1ae9e9ce49f9aed3a634c0adca2fc25268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::is_standard</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>is_standard</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>v</computeroutput>&apos;s position is a standard point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1af13f09b7bb5e67dcf92a7ad55aba82bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b8b294561b30ba955e5da673b832a66" kindref="member">Point</ref></type>
        <definition>Point CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::point</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>point</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the standard point that is the embedding of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>E.is_standard(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a0f76bb79a851ef64a69406c2fc8b54db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a52c0b5ab73356ed694f18353f6129855" kindref="member">Ray</ref></type>
        <definition>Ray CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::ray</definition>
        <argsstring>(Vertex_const_handle v)</argsstring>
        <name>ray</name>
        <param>
          <type>Vertex_const_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the ray defining the non-standard point on the frame. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>!E.is_standard(v)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="744" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a458086c5948d8a192b805ecdfd0712e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer::is_frame_edge</definition>
        <argsstring>(Halfedge_const_handle e)</argsstring>
        <name>is_frame_edge</name>
        <param>
          <type>Halfedge_const_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>e</computeroutput> is part of the infinimaximal frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_2.h" line="750" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a decorator to examine the underlying plane map. </para>    </briefdescription>
    <detaileddescription>
<para>An instance <computeroutput>E</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer" kindref="compound">Explorer</ref></computeroutput> is a decorator to explore the structure of the plane map underlying the Nef polyhedron. It inherits all topological adjacency exploration operations from <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer" kindref="compound">Topological_explorer</ref></computeroutput>. <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer" kindref="compound">Explorer</ref></computeroutput> additionally allows one to explore the geometric embedding.</para><para>The position of each vertex is given by a so-called extended point, which is either a standard affine point or the tip of a ray touching an infinimaximal square frame centered at the origin. A vertex <computeroutput>v</computeroutput> is called a <emphasis>standard</emphasis> vertex if its embedding is a <emphasis>standard</emphasis> point and <emphasis>non-standard</emphasis> if its embedding is a <emphasis>non-standard</emphasis> point. By the straightline embedding of their source and target vertices, edges correspond to either affine segments, rays or lines or are part of the bounding frame.</para><para><anchor id="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1extsegs"/> <image type="html" name="extsegs.png"></image>
 <image type="latex" name="extsegs.png"></image>
 <center><bold> Extended geometry: standard vertices are marked by S, non-standard vertices are marked by N. <bold>A</bold>: The possible embeddings of edges: an affine segment s1, an affine ray s2, an affine line s3. <bold>B</bold>: A plane map embedded by extended geometry: note that the frame is arbitrarily large, the 6 vertices on the frame are at infinity, the two faces represent a geometrically unbounded area, however they are topologically closed by the frame edges. No standard point can be placed outside the frame. </bold></center></para><para><bold>Creation</bold><linebreak/>
</para><para><computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer" kindref="compound">Explorer</ref></computeroutput> is copy constructable and assignable. An object can be obtained via the <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2_1a067bf42f1a6b9b13a6fcc45baa30299b" kindref="member">Nef_polyhedron_2::explorer()</ref></computeroutput> method of <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__2" kindref="compound">Nef_polyhedron_2</ref></computeroutput>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>CGAL::Nef_polyhedron_2&lt; T &gt;::Topological_explorer</label>
        <link refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer"/>
      </node>
    </collaborationgraph>
    <location file="CGAL/Nef_polyhedron_2.h" line="704" column="1" bodyfile="CGAL/Nef_polyhedron_2.h" bodystart="704" bodyend="754"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afb7f9daf17bd42853ac4586196ed4ec4" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>check_integrity_and_topological_planarity</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6e1e557802ab55942df3e3055136a053" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>cyclic_adj_pred</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aafbb03fdd865ef605b2db27d0ca3acf8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>cyclic_adj_succ</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a2358b27ad254251fc31e296fdfe5d419" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>face</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a9b920d31bf43c6c904db5455e37efbfd" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>face</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aecb68b9f586e1c6cd28aab92eee16118" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>face_cycle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaf2d8f8ab3be8fd8e18c1cac52a759da" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>faces_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acec5c364e27fe70974b590e2980b20e8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>faces_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1afadd9bb47ec1288d30f1d70f6b4da32e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>first_out_edge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a8a7c3d09bf639c6edba3aab3b5212164" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>halfedge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3d91599845191e23b857636b90205901" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Halfedge_around_face_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa6e9ad3f6a1f4b942521defecf131ecc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Halfedge_around_vertex_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ad73871d78bfe1e4e5b72585964715fda" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>halfedges_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4600e41006af71fd70d01a7f87710a33" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>halfedges_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa98d28ac00f9737daa2f6f31b5d93b76" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Hole_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a3cf9b254ef4179ac4c4819c71999622a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>holes_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a24e388badee0e933d0c60589a591dc7a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>holes_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a458086c5948d8a192b805ecdfd0712e2" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>is_frame_edge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e911d8f84babfdaae4273499c62c792" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>is_isolated</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1ae9e9ce49f9aed3a634c0adca2fc25268" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>is_standard</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae70494c101218e03667b280a2716caa5" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Isolated_vertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a004e8710a276682cb6324e0241fdc577" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>isolated_vertices_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab1fec0a1ddc1b841cec1b38705bf5fa4" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>isolated_vertices_end</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac67872a8717d99a457f140be71dbd5cb" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>last_out_edge</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ae87b8d48eb9c4ec0d6537b08ccb2e688" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a7a0eb4a3679d29256aca17d712775138" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a38509dd5320957f5441d374528a3e78e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ab9c3cb93281bfc404d85509588283b95" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4723a70ebbe2377cc027bf4b5a2937ed" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>next</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa4aa21d6219a42e2516f6bfb31335bdc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_connected_components</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aaadbdb973504c741a13667efff8e5774" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_edges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a6a67d0fb0d7301a975cf1c1bdd0e2afd" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_face_cycles</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a290e02ff14aebbf8ff48295bedbbcd74" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_faces</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a91d520c495d3bf2b14a5f206753eacf8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_halfedges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a1c6b0ba373b73d72d4be6eaa9424e10f" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ac80a554295d47ba89588bc7504914adf" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>out_edges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1abab9b23b8cd49905df2f86d587c7047a" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Plane_map</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1af13f09b7bb5e67dcf92a7ad55aba82bb" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>point</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a4c071b62dc69909b967d78b38730b061" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1ace5fa684156afa58b25ddbece1098977" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>previous</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0f1ca70f56988702a5c8c2a5b567c5ea" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>print_statistics</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a0f76bb79a851ef64a69406c2fc8b54db" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>ray</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Explorer_1a52c0b5ab73356ed694f18353f6129855" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Ray</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1acb8098727c4c74aeed246539241dcc9e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>Size_type</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1aa5fa0f1f1f776119ec0bf846eb9221db" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>source</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0e8e59558528450d58b0722990fbc3cc" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>target</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a4d947b1cd5d82b500a9a5fd6d50dd908" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>twin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a0b63cd235f06f5d1f55c3e91f29bb1de" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>vertices_begin</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__2_1_1Topological__explorer_1a45e030bdaa0a09e4ccec3474dbb21f1c" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_2::Explorer</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
