<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Counting__iterator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Counting_iterator</compoundname>
    <includes local="no">CGAL/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref></type>
      </param>
      <param>
        <type>typename Value</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Counting__iterator_1af29e29d080343a05ee7870830bda4382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Counting_iterator&lt; Iterator, Value &gt;::Counting_iterator</definition>
        <argsstring>(std::size_t n=0)</argsstring>
        <name>Counting_iterator</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>initializes the internal counter to <computeroutput>n</computeroutput> and <computeroutput>i</computeroutput> has a singular value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Counting__iterator_1a46405391bafa08eaf2a145e93535cdf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Counting_iterator&lt; Iterator, Value &gt;::Counting_iterator</definition>
        <argsstring>(Iterator j, std::size_t n=0)</argsstring>
        <name>Counting_iterator</name>
        <param>
          <type><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>initializes the internal counter to <computeroutput>n</computeroutput> and <computeroutput>i</computeroutput> to <computeroutput>j</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The iterator adaptor <computeroutput><ref refid="classCGAL_1_1Counting__iterator" kindref="compound">Counting_iterator</ref></computeroutput> adds a counter to the internal iterator of type <computeroutput><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref></computeroutput> and defines equality of two instances in terms of this counter. </para>    </briefdescription>
    <detaileddescription>
<para>It can be used to create finite sequences of possibly infinite sequences of values from input iterators.</para><para><xrefsect id="models_1_models000018"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput></para></xrefdescription></xrefsect></para><para><bold>Requirements</bold><linebreak/>
</para><para><computeroutput><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref></computeroutput> is a model for <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>.</para><para><simplesect kind="see"><para><computeroutput><ref refid="group__STLAlgos_1gacb8df77d1d07b9cfff3fdd2f5d9c4fda" kindref="member">CGAL::copy_n()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/iterator.h" line="69" column="1" bodyfile="CGAL/iterator.h" bodystart="69" bodyend="99"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Counting__iterator_1af29e29d080343a05ee7870830bda4382" prot="public" virt="non-virtual"><scope>CGAL::Counting_iterator</scope><name>Counting_iterator</name></member>
      <member refid="classCGAL_1_1Counting__iterator_1a46405391bafa08eaf2a145e93535cdf5" prot="public" virt="non-virtual"><scope>CGAL::Counting_iterator</scope><name>Counting_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
