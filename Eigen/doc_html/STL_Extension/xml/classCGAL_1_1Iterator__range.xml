<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Iterator__range" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Iterator_range</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::pair&lt; I, I &gt;</basecompoundref>
    <includes local="no">CGAL/Iterator_range.h</includes>
    <templateparamlist>
      <param>
        <type>typename I</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Iterator__range_1a5bbe592d52ddc8d0b0ec9c7901af77d0" prot="private" static="no">
        <type>std::pair&lt; I, I &gt;</type>
        <definition>typedef std::pair&lt;I,I&gt; CGAL::Iterator_range&lt; I &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="39" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Iterator__range_1a1d3ce46c713f038f903619aff460f828" prot="public" static="no">
        <type>I</type>
        <definition>typedef I CGAL::Iterator_range&lt; I &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="43" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Iterator__range_1a6d5ad538cdf4ee8f9cd20e9cf91cf70e" prot="public" static="no">
        <type>I</type>
        <definition>typedef I CGAL::Iterator_range&lt; I &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="44" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Iterator__range_1a4f5e940bbd1688c4aa956faf09635454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iterator_range&lt; I &gt;::Iterator_range</definition>
        <argsstring>(I b, I e)</argsstring>
        <name>Iterator_range</name>
        <param>
          <type>I</type>
          <declname>b</declname>
        </param>
        <param>
          <type>I</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="46" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iterator__range_1a33880adc640e2f369f8942337ce511a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Iterator_range&lt; I &gt;::Iterator_range</definition>
        <argsstring>(const std::pair&lt; I, I &gt; &amp;ip)</argsstring>
        <name>Iterator_range</name>
        <param>
          <type>const std::pair&lt; I, I &gt; &amp;</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="50" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iterator__range_1a0116f9093996423a60a0ce5149cdc622" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>I</type>
        <definition>I CGAL::Iterator_range&lt; I &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="55" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iterator__range_1a5588a84c1250c2089c94982274355cae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>I</type>
        <definition>I CGAL::Iterator_range&lt; I &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="60" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Iterator__range_1a6f296fb4eea45b4eee22b662455f4095" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Iterator_range&lt; I &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>returns <computeroutput>std::distance(<ref refid="classCGAL_1_1Iterator__range_1a0116f9093996423a60a0ce5149cdc622" kindref="member">begin()</ref>, <ref refid="classCGAL_1_1Iterator__range_1a5588a84c1250c2089c94982274355cae" kindref="member">end()</ref>)</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Iterator_range.h" line="67" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classCGAL_1_1Iterator__range" kindref="compound">CGAL::Iterator_range</ref></computeroutput> encapsulates two iterators so they fulfill the <computeroutput><ref refid="classForwardRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardRange</ref></computeroutput> concept. </para>    </briefdescription>
    <detaileddescription>
<para>The class is essentially a clone of <ulink url="https://www.boost.org/doc/libs/1_55_0/libs/range/doc/html/range/reference/utilities/iterator_range.html"><computeroutput>boost::iterator_range</computeroutput></ulink>, and it additionally is derived from <computeroutput>std::pair</computeroutput>, so that one can apply <computeroutput>boost::tie</computeroutput>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="104">
        <label>std::pair&lt; I, I &gt;</label>
      </node>
      <node id="103">
        <label>CGAL::Iterator_range&lt; I &gt;</label>
        <link refid="classCGAL_1_1Iterator__range"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="106">
        <label>std::pair&lt; I, I &gt;</label>
      </node>
      <node id="105">
        <label>CGAL::Iterator_range&lt; I &gt;</label>
        <link refid="classCGAL_1_1Iterator__range"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Iterator_range.h" line="37" column="1" bodyfile="CGAL/Iterator_range.h" bodystart="36" bodyend="71"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Iterator__range_1a5bbe592d52ddc8d0b0ec9c7901af77d0" prot="private" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a0116f9093996423a60a0ce5149cdc622" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a6d5ad538cdf4ee8f9cd20e9cf91cf70e" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>const_iterator</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a5588a84c1250c2089c94982274355cae" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>end</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a1d3ce46c713f038f903619aff460f828" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a4f5e940bbd1688c4aa956faf09635454" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>Iterator_range</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a33880adc640e2f369f8942337ce511a7" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>Iterator_range</name></member>
      <member refid="classCGAL_1_1Iterator__range_1a6f296fb4eea45b4eee22b662455f4095" prot="public" virt="non-virtual"><scope>CGAL::Iterator_range</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
