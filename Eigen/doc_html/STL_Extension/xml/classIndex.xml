<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classIndex" kind="class" language="C++" prot="public">
    <compoundname>Index</compoundname>
    <includes local="no">Concepts/Index.h</includes>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classIndex" kindref="compound">Index</ref></computeroutput> is a refinement of <computeroutput><ref refid="classDescriptor" kindref="compound">Descriptor</ref></computeroutput> which must be convertible from and to <computeroutput>std::size_t</computeroutput>, and must be incrementable and decrementable. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classDescriptor" kindref="compound">Descriptor</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para>int </para><para>size_t</para></xrefdescription></xrefsect></para><para><bold>Notation</bold><linebreak/>
</para><para><variablelist>
<varlistentry><term><computeroutput>I</computeroutput> </term></varlistentry>
<listitem><para>Object of type <ref refid="classIndex" kindref="compound">Index</ref>. </para></listitem>
<varlistentry><term><computeroutput>n</computeroutput> </term></varlistentry>
<listitem><para>Object of type <computeroutput>std::size_t</computeroutput>. </para></listitem>
</variablelist>
</para><para><bold>Valid Expressions</bold><linebreak/>
</para><para><table rows="7" cols="3"><row>
<entry thead="yes"><para>Expression </para></entry><entry thead="yes"><para>Returns </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para><computeroutput><ref refid="classIndex" kindref="compound">Index</ref> I(n)</computeroutput> </para></entry><entry thead="no"><para>- </para></entry><entry thead="no"><para>Creates an index <computeroutput>I</computeroutput> from a <computeroutput>std::size_t</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>(std::size_t)I</computeroutput> </para></entry><entry thead="no"><para><computeroutput>std::size_t</computeroutput> </para></entry><entry thead="no"><para>Converts <computeroutput>I</computeroutput> into a <computeroutput>std::size_t</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>++I</computeroutput> </para></entry><entry thead="no"><para><computeroutput><ref refid="classIndex" kindref="compound">Index</ref>&amp;</computeroutput> </para></entry><entry thead="no"><para>Pre-increments <computeroutput>I</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>I++</computeroutput> </para></entry><entry thead="no"><para><computeroutput><ref refid="classIndex" kindref="compound">Index</ref></computeroutput> </para></entry><entry thead="no"><para>Post-increments <computeroutput>I</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>--I</computeroutput> </para></entry><entry thead="no"><para><computeroutput><ref refid="classIndex" kindref="compound">Index</ref>&amp;</computeroutput> </para></entry><entry thead="no"><para>Pre-decrements <computeroutput>I</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>I--</computeroutput> </para></entry><entry thead="no"><para><computeroutput><ref refid="classIndex" kindref="compound">Index</ref></computeroutput> </para></entry><entry thead="no"><para>Post-decrements <computeroutput>I</computeroutput>. </para></entry></row>
</table>
</para>    </detaileddescription>
    <location file="Concepts/Index.h" line="31" column="1" bodyfile="Concepts/Index.h" bodystart="31" bodyend="31"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
