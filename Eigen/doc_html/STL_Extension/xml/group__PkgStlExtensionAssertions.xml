<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgStlExtensionAssertions" kind="group">
    <compoundname>PkgStlExtensionAssertions</compoundname>
    <title>Assertions and Failure Behaviour</title>
      <sectiondef kind="user-defined">
      <memberdef kind="enum" id="group__PkgStlExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" prot="public" static="no">
        <name>Failure_behaviour</name>
        <enumvalue id="group__PkgStlExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeafd47edae67791f804b5f1b616f2782ff" prot="public">
          <name>ABORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgStlExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea03e7a9436476c257881f8ce46db26f7d" prot="public">
          <name>EXIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgStlExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeaf7034bd0320b9bca60e23c0be889d728" prot="public">
          <name>EXIT_WITH_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgStlExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea697442e04c769afa5f8506d7dd378ed4" prot="public">
          <name>CONTINUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgStlExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea47ef91f2d5d0efcdc748c65519d3532d" prot="public">
          <name>THROW_EXCEPTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="12" column="1" bodyfile="CGAL/assertions_behaviour.h" bodystart="12" bodyend="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgStlExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* CGAL::Failure_function) (const char *type, const char *expression, const char *file, int line, const char *explanation)</definition>
        <argsstring>)(const char *type, const char *expression, const char *file, int line, const char *explanation)</argsstring>
        <name>Failure_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>is a string that contains one of the words precondition, postcondition, assertion or warning. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the expression that was violated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>contain the place where the check was made. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>explanation</parametername>
</parameternamelist>
<parameterdescription>
<para>contains an explanation of what was checked. It can be <computeroutput>NULL</computeroutput>, in which case the expression is thought to be descriptive enough. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="26" column="1" bodyfile="CGAL/assertions_behaviour.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStlExtensionAssertions_1gaf17f67aed4fb6c658ec7cb3f96f9d838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Failure_function</type>
        <definition>Failure_function CGAL::set_error_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type>Failure_function</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>This function is not thread safe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStlExtensionAssertions_1ga7bf05b83505d915fb23cb23337b34c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Failure_function</type>
        <definition>Failure_function CGAL::set_warning_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_warning_handler</name>
        <param>
          <type>Failure_function</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>This function is not thread safe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStlExtensionAssertions_1ga57511207f5935f17b3264e2d03124027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Failure_behaviour</type>
        <definition>Failure_behaviour CGAL::set_error_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_error_behaviour</name>
        <param>
          <type>Failure_behaviour</type>
          <declname>eb</declname>
        </param>
        <briefdescription>
<para>This function is not thread safe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStlExtensionAssertions_1gaeb4e85bca7bfc12e7fd086bf36a39a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Failure_behaviour</type>
        <definition>Failure_behaviour CGAL::set_warning_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_warning_behaviour</name>
        <param>
          <type>Failure_behaviour</type>
          <declname>eb</declname>
        </param>
        <briefdescription>
<para>This function is not thread safe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/assertions_behaviour.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
