<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1In__place__list" kind="class" language="C++" prot="public">
    <compoundname>CGAL::In_place_list</compoundname>
    <includes local="no">CGAL/In_place_list.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>bool</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="112" column="1" bodyfile="CGAL/In_place_list.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1ab451b7d69a8f057c2d78256dd49322a8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="121" column="1" bodyfile="CGAL/In_place_list.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a165ec79fe613cfefc66c56b858ae11c9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="130" column="1" bodyfile="CGAL/In_place_list.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a23201798c2b8ce57837d44b20505259e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="139" column="1" bodyfile="CGAL/In_place_list.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a084cfc0f7a1dd6f5e677bbf625e120eb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="148" column="1" bodyfile="CGAL/In_place_list.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="157" column="1" bodyfile="CGAL/In_place_list.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1aad669124c085377bd6bc61db34633c79" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="166" column="1" bodyfile="CGAL/In_place_list.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1aebcae5562acedef495f1b3c794894c46" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="175" column="1" bodyfile="CGAL/In_place_list.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1a88ce4e790bd8395eb16d38876855600e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="184" column="1" bodyfile="CGAL/In_place_list.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1In__place__list_1aa56c60cb7b6d1b68cacd3de7732e8dbd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::In_place_list&lt; T, bool &gt;::allocator_type</definition>
        <argsstring></argsstring>
        <name>allocator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="193" column="1" bodyfile="CGAL/In_place_list.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Comparison Operations</header>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a1c33123f319c06404cc4e2868a9e663f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::In_place_list&lt; T, bool &gt;::operator==</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt; &amp;ipl2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>test for equality: Two lists are equal, iff they have the same size and if their corresponding elements are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1abb37d65597ae3b156578f1950a7dcc59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::In_place_list&lt; T, bool &gt;::operator&lt;</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt; &amp;ipl2) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>compares in lexicographical order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="279" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Member Functions</header>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a7094ecad5bb64f636d719e4939df644e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::In_place_list&lt; T, bool &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns a mutable iterator referring to the first element in <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ac74606699fc5baaa1d9a92205ba12bef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1ab451b7d69a8f057c2d78256dd49322a8" kindref="member">const_iterator</ref></type>
        <definition>const_iterator CGAL::In_place_list&lt; T, bool &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns a constant iterator referring to the first element in <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a572f57e661ff03f448caccd65c6e7765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::In_place_list&lt; T, bool &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>returns a mutable iterator which is the past-end-value of <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a552494a73a48e7954880509c0ef790a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1ab451b7d69a8f057c2d78256dd49322a8" kindref="member">const_iterator</ref></type>
        <definition>const_iterator CGAL::In_place_list&lt; T, bool &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>returns a constant iterator which is the past-end-value of <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1aca41da92682452de28e57b6d645036f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::In_place_list&lt; T, bool &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <computeroutput>ipl</computeroutput> is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a97c93f8171103c454f34e1adb3ff21a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::In_place_list&lt; T, bool &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>returns the number of items in list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a850f87343b63655fe497c29669fc6afb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::In_place_list&lt; T, bool &gt;::max_size</definition>
        <argsstring>() const</argsstring>
        <name>max_size</name>
        <briefdescription>
<para>returns the maximum possible size of the list <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a99b177c5512f847e9c7a379aa63c7999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; CGAL::In_place_list&lt; T, bool &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
<para>returns the first item in list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ae67a991a7c6ceef657f857e4213b6fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; CGAL::In_place_list&lt; T, bool &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
<para>returns the last item in list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ad3a8643e29de7e30793960c4f1c79c59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1aa56c60cb7b6d1b68cacd3de7732e8dbd" kindref="member">allocator_type</ref></type>
        <definition>allocator_type CGAL::In_place_list&lt; T, bool &gt;::get_allocator</definition>
        <argsstring>() const</argsstring>
        <name>get_allocator</name>
        <briefdescription>
<para>returns the allocator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="408" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insertion</header>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a745ad871c28e1f9609db5c383375ad59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::push_front</definition>
        <argsstring>(T &amp;)</argsstring>
        <name>push_front</name>
        <param>
          <type>T &amp;</type>
        </param>
        <briefdescription>
<para>inserts an item in front of list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a7a112af8a02e086ed22ef69d310e13f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::push_back</definition>
        <argsstring>(T &amp;)</argsstring>
        <name>push_back</name>
        <param>
          <type>T &amp;</type>
        </param>
        <briefdescription>
<para>inserts an item at the back of list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a891b08c58ae1f21820c906d159dd5d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(iterator pos, T &amp;t)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>inserts <computeroutput>t</computeroutput> in front of <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The return value points to the inserted item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ae5673358a422716c3148c10a2ea3349c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(T *pos, T &amp;t)</argsstring>
        <name>insert</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>inserts <computeroutput>t</computeroutput> in front of <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The return value points to the inserted item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ae8475a18ad2d53355b4bbe4c76525d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(iterator pos, size_type n, const T &amp;t=T())</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
<para>inserts <formula id="5">$ n$</formula> copies of <computeroutput>t</computeroutput> in front of <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a66f350821f5151e961801b8a35a26b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(T *pos, size_type n, const T &amp;t=T())</argsstring>
        <name>insert</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
<para>inserts <formula id="5">$ n$</formula> copies of <computeroutput>t</computeroutput> in front of <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a22151a0bc0d239e9e6d06e1b9413a893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(iterator pos, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts the range [<computeroutput>first, last</computeroutput>) in front of iterator <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a46c31263f10b60a03f14c4f2e17f0766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::insert</definition>
        <argsstring>(T *pos, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts the range [<computeroutput>first, last</computeroutput>) in front of iterator <computeroutput>pos</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="516" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Removal</header>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a609ef678dba9971568c663bb4c48718c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::pop_front</definition>
        <argsstring>()</argsstring>
        <name>pop_front</name>
        <briefdescription>
<para>removes the first item from list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a64beaf549c57f160ae9228b1f3373364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
<para>removes the last item from list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a365ec80543f1958082a2a6c22633bcc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::erase</definition>
        <argsstring>(iterator pos)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>removes the item from list <computeroutput>ipl</computeroutput>, where <computeroutput>pos</computeroutput> refers to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a3e8a627d11818cf0a5b2c9ee2121085f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::erase</definition>
        <argsstring>(T *pos)</argsstring>
        <name>erase</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>removes the item from list <computeroutput>ipl</computeroutput>, where <computeroutput>pos</computeroutput> refers to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a153f9b5754b36ace2bb8b2cb8bd3acf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::erase</definition>
        <argsstring>(iterator first, iterator last)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a962764f279bd35a7cf9a979d2dec35f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::erase</definition>
        <argsstring>(T *first, T *last)</argsstring>
        <name>erase</name>
        <param>
          <type>T *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>removes the items in the range [<computeroutput>first, last</computeroutput>) from <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="594" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Special List Operations</header>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a97e45605c3493ed824c2b67f96ee81f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(iterator pos, In_place_list&lt; T, bool &gt; &amp;x)</argsstring>
        <name>splice</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a3d5dc4edd23ddcd2054bbdc207c89990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(T *pos, In_place_list&lt; T, bool &gt; &amp;ipl2)</argsstring>
        <name>splice</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>inserts the list <computeroutput>ipl2</computeroutput> before position <computeroutput>pos</computeroutput> and <computeroutput>ipl2</computeroutput> becomes empty. </para>        </briefdescription>
        <detaileddescription>
<para>It takes constant time.</para><para><simplesect kind="pre"><para><computeroutput>(&amp; ipl) != (&amp; ipl2)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a99832cfa4ee42c6fe37ddd381bc6099e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(iterator pos, In_place_list&lt; T, bool &gt; &amp;ipl2, iterator i)</argsstring>
        <name>splice</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>inserts the list <computeroutput>ipl2</computeroutput> before position <computeroutput>pos</computeroutput> and <computeroutput>ipl2</computeroutput> becomes empty. </para>        </briefdescription>
        <detaileddescription>
<para>It takes constant time.</para><para><simplesect kind="pre"><para><computeroutput>(&amp; ipl) != (&amp; ipl2)</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1ac03ad030202e4d4ee47a8bb7c1f85974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(T *pos, In_place_list&lt; T, bool &gt; &amp;ipl2, T *i)</argsstring>
        <name>splice</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>inserts an element pointed to by <computeroutput>i</computeroutput> from list <computeroutput>ipl2</computeroutput> before position <computeroutput>pos</computeroutput> and removes the element from <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It takes constant time. <computeroutput>i</computeroutput> is a valid dereferenceable iterator of <computeroutput>ipl2</computeroutput>. The result is unchanged if <computeroutput>pos == i</computeroutput> or <computeroutput>pos == ++i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a3f684d1aa131e216f309c34783b99747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(iterator pos, In_place_list&lt; T, bool &gt; &amp;x, iterator first, iterator last)</argsstring>
        <name>splice</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts an element pointed to by <computeroutput>i</computeroutput> from list <computeroutput>ipl2</computeroutput> before position <computeroutput>pos</computeroutput> and removes the element from <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It takes constant time. <computeroutput>i</computeroutput> is a valid dereferenceable iterator of <computeroutput>ipl2</computeroutput>. The result is unchanged if <computeroutput>pos == i</computeroutput> or <computeroutput>pos == ++i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1aeb306af944ee7a8f624ba45ea12274e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::splice</definition>
        <argsstring>(T *pos, In_place_list&lt; T, bool &gt; &amp;x, T *first, T *last)</argsstring>
        <name>splice</name>
        <param>
          <type>T *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts elements in the range [<computeroutput>first, last</computeroutput>) before position <computeroutput>pos</computeroutput> and removes the elements from <formula id="6">$ x$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>It takes constant time if <computeroutput>&amp;x == &amp;</computeroutput><computeroutput>l</computeroutput>; otherwise, it takes linear time. [<computeroutput>first, last</computeroutput>) is a valid range in <formula id="6">$ x$</formula>. <simplesect kind="pre"><para><computeroutput>pos</computeroutput> is not in the range [<computeroutput>first, last</computeroutput>). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a51617fad1d71370e24c37877edefef86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::remove</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>remove</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>erases all elements <formula id="7">$ e$</formula> in the list <computeroutput>ipl</computeroutput> for which <computeroutput>e == value</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is stable. <simplesect kind="pre"><para>a suitable <computeroutput>operator==</computeroutput> for the type <computeroutput>T</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a4f4042410631db7d000b276e687491ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::unique</definition>
        <argsstring>()</argsstring>
        <name>unique</name>
        <briefdescription>
<para>erases all but the first element from every consecutive group of equal elements in the list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>a suitable <computeroutput>operator==</computeroutput> for the type <computeroutput>T</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a29832705e7493b8fa2a22eece607ab0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::merge</definition>
        <argsstring>(In_place_list&lt; T, bool &gt; &amp;ipl2)</argsstring>
        <name>merge</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>merges the list <computeroutput>ipl2</computeroutput> into the list <computeroutput>ipl</computeroutput> and <computeroutput>ipl2</computeroutput> becomes empty. </para>        </briefdescription>
        <detaileddescription>
<para>It is stable. <simplesect kind="pre"><para>Both lists are increasingly sorted. A suitable <computeroutput>operator&lt;</computeroutput> for the type <computeroutput>T</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="728" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a615b9b1c09e2032c5e3dfb2623d26102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::reverse</definition>
        <argsstring>()</argsstring>
        <name>reverse</name>
        <briefdescription>
<para>reverses the order of the elements in <computeroutput>ipl</computeroutput> in linear time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="741" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1abfd10922e734e52f408faf8662121e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::sort</definition>
        <argsstring>()</argsstring>
        <name>sort</name>
        <briefdescription>
<para>sorts the list <computeroutput>ipl</computeroutput> according to the <computeroutput>operator&lt;</computeroutput> in time <formula id="8">$ O(n \log n)$</formula> where <computeroutput>n = <ref refid="classCGAL_1_1In__place__list_1a97c93f8171103c454f34e1adb3ff21a6" kindref="member">size()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is stable. <simplesect kind="pre"><para>a suitable <computeroutput>operator&lt;</computeroutput> for the type <computeroutput>T</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="756" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1af3eb52511aae38b2935d30e13eb2da92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::In_place_list&lt; T, bool &gt;::In_place_list</definition>
        <argsstring>()</argsstring>
        <name>In_place_list</name>
        <briefdescription>
<para>introduces an empty list <computeroutput>ipl</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a13d537c321074856961b3cdecb9a1fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::In_place_list&lt; T, bool &gt;::In_place_list</definition>
        <argsstring>(const list&lt; T &gt; &amp;l1)</argsstring>
        <name>In_place_list</name>
        <param>
          <type>const list&lt; T &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <briefdescription>
<para>copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Each item in <computeroutput>l1</computeroutput> is copied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a84e762b57963d4c4bff6399c4a19fabd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::In_place_list&lt; T, bool &gt;::In_place_list</definition>
        <argsstring>(size_type n, const T &amp;t=T())</argsstring>
        <name>In_place_list</name>
        <param>
          <type><ref refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
<para>introduces a list <computeroutput>ipl</computeroutput> with <computeroutput>n</computeroutput> items, all initialized with copies of <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a3399ba05c7490b25d023624b05e47e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::In_place_list&lt; T, bool &gt;::In_place_list</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>In_place_list</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>introduces a list <computeroutput>ipl</computeroutput> with copies from the range [<computeroutput>first,last</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a95b913172ca02a5b6173a5774fea1bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::In_place_list&lt; T, bool &gt;::In_place_list</definition>
        <argsstring>(const T *first, const T *last)</argsstring>
        <name>In_place_list</name>
        <param>
          <type>const T *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>introduces a list <computeroutput>ipl</computeroutput> with copies from the range [<computeroutput>first,last</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a01f6c280c3c92bd9b00d36b5a5d72e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
        <definition>In_place_list&lt;T,bool&gt;&amp; CGAL::In_place_list&lt; T, bool &gt;::operator=</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt; &amp;ipl2)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>assignment. </para>        </briefdescription>
        <detaileddescription>
<para>Each item in <computeroutput>ipl2</computeroutput> is copied. Each item in <computeroutput>ipl</computeroutput> is deleted if the <computeroutput>bool</computeroutput> parameter is <computeroutput>true</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a552ec80fb1d71d3ba5fcace3b3af9246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::swap</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt; &amp;ipl2)</argsstring>
        <name>swap</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt; &amp;</type>
          <declname>ipl2</declname>
        </param>
        <briefdescription>
<para>swaps the contents of <computeroutput>ipl</computeroutput> with <computeroutput>ipl2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a8844ff8ec566b2bbac8219cdebbcb147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::In_place_list&lt; T, bool &gt;::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>all items in <computeroutput>ipl</computeroutput> are deleted regardless of the <computeroutput>bool</computeroutput> parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="257" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1a3fdba6b63a10dfdfb6e1581e5384a2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>bool</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t hash_value</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt;::iterator i)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt;::<ref refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns a hash value for the pointee of <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1In__place__list_1afc12b54e149d47497f278fb811272675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class bool</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t hash_value</definition>
        <argsstring>(const In_place_list&lt; T, bool &gt;::const_iterator i)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt; T, bool &gt;::<ref refid="classCGAL_1_1In__place__list_1ab451b7d69a8f057c2d78256dd49322a8" kindref="member">const_iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns a hash value for the pointee of <computeroutput>i</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/In_place_list.h" line="780" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref></computeroutput> represents a sequence of items of type <computeroutput>T</computeroutput> that supports bidirectional iterators and allows constant time insert and erase operations anywhere within the sequence. </para>    </briefdescription>
    <detaileddescription>
<para>The functionality is similar to the <computeroutput>std::list&lt;T&gt;</computeroutput> in the STL.</para><para>The <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref></computeroutput> manages the items in place, i.e., inserted items are not copied. Two pointers of type <computeroutput>T*</computeroutput> are expected to be reserved in <computeroutput>T</computeroutput> for the list management. The base class <computeroutput><ref refid="classCGAL_1_1In__place__list__base" kindref="compound">In_place_list_base</ref>&lt;T&gt;</computeroutput> can be used to obtain such pointers.</para><para>The <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref></computeroutput> does not copy element items during insertion (unless otherwise stated for a function). On removal of an item or destruction of the list the items are not deleted by default. The second template parameter <computeroutput>bool</computeroutput> is set to <computeroutput>false</computeroutput> in this case. If the <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref></computeroutput> should take the responsibility for the stored objects the <computeroutput>bool</computeroutput> parameter could be set to <computeroutput>true</computeroutput>, in which case the list will delete removed items and will delete all remaining items on destruction. In any case, the <computeroutput><ref refid="classCGAL_1_1In__place__list_1a8844ff8ec566b2bbac8219cdebbcb147" kindref="member">destroy()</ref></computeroutput> member function deletes all items. Note that these two possible versions of <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref></computeroutput> are not assignable to each other to avoid confusions between the different storage responsibilities.</para><para><bold>Parameters</bold><linebreak/>
</para><para>The full class name is <computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">In_place_list</ref>&lt;T, bool managed = false, class Alloc = <ref refid="group__PkgStlExtension_1ga859086d0e8d189c8c967229e024e5e82" kindref="member">CGAL_ALLOCATOR(T)</ref>&gt;</computeroutput>.</para><para>The parameter <computeroutput>T</computeroutput> is supposed to have a default constructor, a copy constructor and an assignment operator. The copy constructor and the assignment may copy the pointers in <computeroutput>T</computeroutput> for the list management, but they do not have to. The equality test and the relational order require the operators <computeroutput>==</computeroutput> and <computeroutput>&lt;</computeroutput> for <computeroutput>T</computeroutput> respectively. These operators must not compare the pointers in <computeroutput>T</computeroutput>.</para><para><bold>Example</bold><linebreak/>
</para><para><linebreak/>
<bold>File</bold> <ref refid="STL_Extension_2in_place_list_prog_8cpp-example" kindref="compound">STL_Extension/in_place_list_prog.cpp</ref> <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/In_place_list.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1In__place__list__base" kindref="compound">CGAL::In_place_list_base</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">item<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>In_place_list_base&lt;item&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>item()<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>item(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item&amp;<sp/>i)<sp/>:<sp/>In_place_list_base&lt;item&gt;(i),<sp/>key(i.key)<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>item(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>:<sp/>key(i)<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1In__place__list_1a1c33123f319c06404cc4e2868a9e663f" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>==<sp/>i.key;}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>i);}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1In__place__list_1a1c33123f319c06404cc4e2868a9e663f" kindref="member">operator== </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>==<sp/>i;}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>i);}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1In__place__list_1abb37d65597ae3b156578f1950a7dcc59" kindref="member">operator&lt;  </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>&lt;<sp/>i.key;}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1In__place__list" kindref="compound">CGAL::In_place_list&lt;item,true&gt;</ref><sp/>List;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>l;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>item*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.push_back(*p);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.push_back(*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(2));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.push_front(*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(3));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.push_front(*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(4));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.push_front(*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(2));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>List::iterator<sp/>i<sp/>=<sp/>l.begin();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.insert(i,<sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.insert(p,<sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>item(5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a[7]<sp/>=<sp/>{2,5,4,3,5,1,2};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>std::equal(l.begin(),<sp/>l.end(),<sp/>a);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.sort();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>l.unique();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(l.size()<sp/>==<sp/>5);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b[5]<sp/>=<sp/>{1,2,3,4,5};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>std::equal(l.begin(),<sp/>l.end(),<sp/>b);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="CGAL/In_place_list.h" line="103" column="1" bodyfile="CGAL/In_place_list.h" bodystart="103" bodyend="764"/>
    <listofallmembers>
      <member refid="classCGAL_1_1In__place__list_1aa56c60cb7b6d1b68cacd3de7732e8dbd" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>allocator_type</name></member>
      <member refid="classCGAL_1_1In__place__list_1ae67a991a7c6ceef657f857e4213b6fff" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>back</name></member>
      <member refid="classCGAL_1_1In__place__list_1a7094ecad5bb64f636d719e4939df644e" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>begin</name></member>
      <member refid="classCGAL_1_1In__place__list_1ac74606699fc5baaa1d9a92205ba12bef" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>begin</name></member>
      <member refid="classCGAL_1_1In__place__list_1ab451b7d69a8f057c2d78256dd49322a8" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>const_iterator</name></member>
      <member refid="classCGAL_1_1In__place__list_1a084cfc0f7a1dd6f5e677bbf625e120eb" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>const_reference</name></member>
      <member refid="classCGAL_1_1In__place__list_1a88ce4e790bd8395eb16d38876855600e" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>const_reverse_iterator</name></member>
      <member refid="classCGAL_1_1In__place__list_1a8844ff8ec566b2bbac8219cdebbcb147" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>destroy</name></member>
      <member refid="classCGAL_1_1In__place__list_1aad669124c085377bd6bc61db34633c79" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>difference_type</name></member>
      <member refid="classCGAL_1_1In__place__list_1aca41da92682452de28e57b6d645036f7" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>empty</name></member>
      <member refid="classCGAL_1_1In__place__list_1a572f57e661ff03f448caccd65c6e7765" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>end</name></member>
      <member refid="classCGAL_1_1In__place__list_1a552494a73a48e7954880509c0ef790a1" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>end</name></member>
      <member refid="classCGAL_1_1In__place__list_1a365ec80543f1958082a2a6c22633bcc9" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>erase</name></member>
      <member refid="classCGAL_1_1In__place__list_1a3e8a627d11818cf0a5b2c9ee2121085f" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>erase</name></member>
      <member refid="classCGAL_1_1In__place__list_1a153f9b5754b36ace2bb8b2cb8bd3acf7" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>erase</name></member>
      <member refid="classCGAL_1_1In__place__list_1a962764f279bd35a7cf9a979d2dec35f7" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>erase</name></member>
      <member refid="classCGAL_1_1In__place__list_1a99b177c5512f847e9c7a379aa63c7999" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>front</name></member>
      <member refid="classCGAL_1_1In__place__list_1ad3a8643e29de7e30793960c4f1c79c59" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>get_allocator</name></member>
      <member refid="classCGAL_1_1In__place__list_1a3fdba6b63a10dfdfb6e1581e5384a2fb" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>hash_value</name></member>
      <member refid="classCGAL_1_1In__place__list_1afc12b54e149d47497f278fb811272675" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>hash_value</name></member>
      <member refid="classCGAL_1_1In__place__list_1af3eb52511aae38b2935d30e13eb2da92" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>In_place_list</name></member>
      <member refid="classCGAL_1_1In__place__list_1a13d537c321074856961b3cdecb9a1fcf" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>In_place_list</name></member>
      <member refid="classCGAL_1_1In__place__list_1a84e762b57963d4c4bff6399c4a19fabd" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>In_place_list</name></member>
      <member refid="classCGAL_1_1In__place__list_1a3399ba05c7490b25d023624b05e47e4f" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>In_place_list</name></member>
      <member refid="classCGAL_1_1In__place__list_1a95b913172ca02a5b6173a5774fea1bdb" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>In_place_list</name></member>
      <member refid="classCGAL_1_1In__place__list_1a891b08c58ae1f21820c906d159dd5d60" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1ae5673358a422716c3148c10a2ea3349c" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1ae8475a18ad2d53355b4bbe4c76525d4b" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1a66f350821f5151e961801b8a35a26b8b" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1a22151a0bc0d239e9e6d06e1b9413a893" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1a46c31263f10b60a03f14c4f2e17f0766" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>insert</name></member>
      <member refid="classCGAL_1_1In__place__list_1a5281a5a43c026175267e41e41aa38b72" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1In__place__list_1a850f87343b63655fe497c29669fc6afb" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>max_size</name></member>
      <member refid="classCGAL_1_1In__place__list_1a29832705e7493b8fa2a22eece607ab0c" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>merge</name></member>
      <member refid="classCGAL_1_1In__place__list_1abb37d65597ae3b156578f1950a7dcc59" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>operator&lt;</name></member>
      <member refid="classCGAL_1_1In__place__list_1a01f6c280c3c92bd9b00d36b5a5d72e31" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1In__place__list_1a1c33123f319c06404cc4e2868a9e663f" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1In__place__list_1a64beaf549c57f160ae9228b1f3373364" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>pop_back</name></member>
      <member refid="classCGAL_1_1In__place__list_1a609ef678dba9971568c663bb4c48718c" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>pop_front</name></member>
      <member refid="classCGAL_1_1In__place__list_1a7a112af8a02e086ed22ef69d310e13f5" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1In__place__list_1a745ad871c28e1f9609db5c383375ad59" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>push_front</name></member>
      <member refid="classCGAL_1_1In__place__list_1a23201798c2b8ce57837d44b20505259e" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>reference</name></member>
      <member refid="classCGAL_1_1In__place__list_1a51617fad1d71370e24c37877edefef86" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>remove</name></member>
      <member refid="classCGAL_1_1In__place__list_1a615b9b1c09e2032c5e3dfb2623d26102" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>reverse</name></member>
      <member refid="classCGAL_1_1In__place__list_1aebcae5562acedef495f1b3c794894c46" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>reverse_iterator</name></member>
      <member refid="classCGAL_1_1In__place__list_1a97c93f8171103c454f34e1adb3ff21a6" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>size</name></member>
      <member refid="classCGAL_1_1In__place__list_1a6d92a22111835f0db5e4388fc3e9b9a6" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1In__place__list_1abfd10922e734e52f408faf8662121e0b" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>sort</name></member>
      <member refid="classCGAL_1_1In__place__list_1a97e45605c3493ed824c2b67f96ee81f0" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1a3d5dc4edd23ddcd2054bbdc207c89990" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1a99832cfa4ee42c6fe37ddd381bc6099e" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1ac03ad030202e4d4ee47a8bb7c1f85974" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1a3f684d1aa131e216f309c34783b99747" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1aeb306af944ee7a8f624ba45ea12274e0" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>splice</name></member>
      <member refid="classCGAL_1_1In__place__list_1a552ec80fb1d71d3ba5fcace3b3af9246" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>swap</name></member>
      <member refid="classCGAL_1_1In__place__list_1a4f4042410631db7d000b276e687491ea" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>unique</name></member>
      <member refid="classCGAL_1_1In__place__list_1a165ec79fe613cfefc66c56b858ae11c9" prot="public" virt="non-virtual"><scope>CGAL::In_place_list</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
