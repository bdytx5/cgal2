<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Dispatch__or__drop__output__iterator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Dispatch_or_drop_output_iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">O</basecompoundref>
    <includes local="no">CGAL/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename V</type>
      </param>
      <param>
        <type>typename O</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Dispatch__or__drop__output__iterator_1acc665cf7fddedf3f769062e6440e8178" prot="public" static="no">
        <type>V</type>
        <definition>typedef V CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;::Value_type_tuple</definition>
        <argsstring></argsstring>
        <name>Value_type_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="136" column="1" bodyfile="CGAL/iterator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Dispatch__or__drop__output__iterator_1ac130c1a0215d45bd695af39867195125" prot="public" static="no">
        <type>O</type>
        <definition>typedef O CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;::Iterator_tuple</definition>
        <argsstring></argsstring>
        <name>Iterator_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="148" column="1" bodyfile="CGAL/iterator.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Dispatch__or__drop__output__iterator_1a99697aae77311d5d08f9fb2bfb87662c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;::Dispatch_or_drop_output_iterator</definition>
        <argsstring>(I...o)</argsstring>
        <name>Dispatch_or_drop_output_iterator</name>
        <param>
          <type>I...</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Constructor taking all the output iterators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Dispatch__or__drop__output__iterator_1a3db48073f7d8515be087182e3de0be5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1ac130c1a0215d45bd695af39867195125" kindref="member">Iterator_tuple</ref> &amp;</type>
        <definition>const Iterator_tuple&amp; CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;::get_iterator_tuple</definition>
        <argsstring>() const</argsstring>
        <name>get_iterator_tuple</name>
        <briefdescription>
<para>returns a reference to the tuple of output iterators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="170" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Dispatch__or__drop__output__iterator_1a68ab12106e931cea9275fb0e7f9133f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>O</declname>
            <defname>O</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Dispatch__or__drop__output__iterator" kindref="compound">Dispatch_or_drop_output_iterator</ref>&lt; tuple&lt; V... &gt;, tuple&lt; O... &gt; &gt;</type>
        <definition>Dispatch_or_drop_output_iterator&lt; tuple&lt; V... &gt;, tuple&lt; O... &gt; &gt; dispatch_or_drop_output</definition>
        <argsstring>(O... o)</argsstring>
        <name>dispatch_or_drop_output</name>
        <param>
          <type>O...</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <computeroutput><ref refid="classCGAL_1_1Dispatch__or__drop__output__iterator" kindref="compound">Dispatch_or_drop_output_iterator</ref></computeroutput> constructed from the arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="184" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Dispatch__or__drop__output__iterator" kindref="compound">Dispatch_or_drop_output_iterator</ref></computeroutput> defines an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that contains a tuple of output iterators, and dispatches among those based on the type of the value type which is put in it. </para>    </briefdescription>
    <detaileddescription>
<para>Besides defining assignment for all parameters of <computeroutput>V</computeroutput> and for a tuple of type <computeroutput>V</computeroutput>, it is also defined for the types <computeroutput>boost::variant&lt;T...&gt;</computeroutput> and <computeroutput>boost::optional&lt;boost::variant&lt;T...&gt; &gt;</computeroutput>, where <computeroutput>T...</computeroutput> must be a subset of the parameters of <computeroutput>V</computeroutput>. Should the <computeroutput>boost::optional</computeroutput> be empty, it will be discarded.</para><para><bold>Parameters</bold><linebreak/>
</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound">CGAL::cpp11::tuple</ref>&lt;...&gt;</computeroutput> of the types of values to be accepted and dispatched. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>O</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classCGAL_1_1cpp11_1_1tuple" kindref="compound">CGAL::cpp11::tuple</ref>&lt;...&gt;</computeroutput> of the types of corresponding output iterators.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000019"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput></para></xrefdescription></xrefsect></para><para>cgalExample{STL_Extension/Dispatch_output_iterator.cpp}</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Dispatch__output__iterator" kindref="compound">CGAL::Dispatch_output_iterator</ref>&lt;V,O&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="75">
        <label>O</label>
      </node>
      <node id="74">
        <label>CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;</label>
        <link refid="classCGAL_1_1Dispatch__or__drop__output__iterator"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="77">
        <label>O</label>
      </node>
      <node id="76">
        <label>CGAL::Dispatch_or_drop_output_iterator&lt; V, O &gt;</label>
        <link refid="classCGAL_1_1Dispatch__or__drop__output__iterator"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/iterator.h" line="128" column="1" bodyfile="CGAL/iterator.h" bodystart="128" bodyend="176"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1a68ab12106e931cea9275fb0e7f9133f1" prot="public" virt="non-virtual"><scope>CGAL::Dispatch_or_drop_output_iterator</scope><name>dispatch_or_drop_output</name></member>
      <member refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1a99697aae77311d5d08f9fb2bfb87662c" prot="public" virt="non-virtual"><scope>CGAL::Dispatch_or_drop_output_iterator</scope><name>Dispatch_or_drop_output_iterator</name></member>
      <member refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1a3db48073f7d8515be087182e3de0be5e" prot="public" virt="non-virtual"><scope>CGAL::Dispatch_or_drop_output_iterator</scope><name>get_iterator_tuple</name></member>
      <member refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1ac130c1a0215d45bd695af39867195125" prot="public" virt="non-virtual"><scope>CGAL::Dispatch_or_drop_output_iterator</scope><name>Iterator_tuple</name></member>
      <member refid="classCGAL_1_1Dispatch__or__drop__output__iterator_1acc665cf7fddedf3f769062e6440e8178" prot="public" virt="non-virtual"><scope>CGAL::Dispatch_or_drop_output_iterator</scope><name>Value_type_tuple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
