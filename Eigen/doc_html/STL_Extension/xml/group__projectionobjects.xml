<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__projectionobjects" kind="group">
    <compoundname>projectionobjects</compoundname>
    <title>Projection Function Objects</title>
    <innerclass refid="structCGAL_1_1Cast__function__object" prot="public">CGAL::Cast_function_object</innerclass>
    <innerclass refid="classCGAL_1_1Compare__to__less" prot="public">CGAL::Compare_to_less</innerclass>
    <innerclass refid="structCGAL_1_1Dereference" prot="public">CGAL::Dereference</innerclass>
    <innerclass refid="structCGAL_1_1Get__address" prot="public">CGAL::Get_address</innerclass>
    <innerclass refid="structCGAL_1_1Identity" prot="public">CGAL::Identity</innerclass>
    <innerclass refid="structCGAL_1_1Project__facet" prot="public">CGAL::Project_facet</innerclass>
    <innerclass refid="structCGAL_1_1Project__next" prot="public">CGAL::Project_next</innerclass>
    <innerclass refid="structCGAL_1_1Project__next__opposite" prot="public">CGAL::Project_next_opposite</innerclass>
    <innerclass refid="structCGAL_1_1Project__normal" prot="public">CGAL::Project_normal</innerclass>
    <innerclass refid="structCGAL_1_1Project__opposite__prev" prot="public">CGAL::Project_opposite_prev</innerclass>
    <innerclass refid="structCGAL_1_1Project__plane" prot="public">CGAL::Project_plane</innerclass>
    <innerclass refid="structCGAL_1_1Project__point" prot="public">CGAL::Project_point</innerclass>
    <innerclass refid="structCGAL_1_1Project__prev" prot="public">CGAL::Project_prev</innerclass>
    <innerclass refid="structCGAL_1_1Project__vertex" prot="public">CGAL::Project_vertex</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__projectionobjects_1gaa343b4e41668290985efff5def93ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>Compare_to_less&lt; F &gt;</type>
        <definition>Compare_to_less&lt; F &gt; CGAL::compare_to_less</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>compare_to_less</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Changes a functor returning a <computeroutput>Comparison_result</computeroutput> to one which returns a bool. </para>        </briefdescription>
        <detaileddescription>
<para>The returned functor will return <computeroutput>true</computeroutput> iff the original one returns <computeroutput>SMALLER</computeroutput>.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Compare__to__less" kindref="compound">CGAL::Compare_to_less</ref>&lt;F&gt;</computeroutput></para></simplesect>
returns a functor equivalent to <computeroutput>f</computeroutput>, but which returns a bool instead of a <computeroutput>Comparison_result</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/function_objects.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
