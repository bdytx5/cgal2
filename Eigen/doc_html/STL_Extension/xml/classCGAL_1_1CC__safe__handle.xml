<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1CC__safe__handle" kind="class" language="C++" prot="public">
    <compoundname>CGAL::CC_safe_handle</compoundname>
    <includes local="no">CGAL/CC_safe_handle.h</includes>
    <templateparamlist>
      <param>
        <type>typename CC_iterator</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1CC__safe__handle_1a7713a519d0e44862bb938d2dcbf4b93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::CC_safe_handle&lt; CC_iterator &gt;::CC_safe_handle</definition>
        <argsstring>(CC_iterator iterator)</argsstring>
        <name>CC_safe_handle</name>
        <param>
          <type>CC_iterator</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
<para>Introduces a safe handle from a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/CC_safe_handle.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Member Functions</header>
      <memberdef kind="function" id="classCGAL_1_1CC__safe__handle_1acdca359430b5b2530a4fc8ba9a32356b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::CC_safe_handle&lt; CC_iterator &gt;::is_zombie</definition>
        <argsstring>() const</argsstring>
        <name>is_zombie</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the pointee has been erased, i.e. if the iterator points to a freed object or to another object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/CC_safe_handle.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1CC__safe__handle_1a38f4c42d324f886a60528bfeb3f477da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>CC_iterator</type>
        <definition>CC_iterator CGAL::CC_safe_handle&lt; CC_iterator &gt;::cc_iterator</definition>
        <argsstring>() const</argsstring>
        <name>cc_iterator</name>
        <briefdescription>
<para>Returns the stored <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/CC_safe_handle.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1CC__safe__handle_1af33e987d81b4039f4b54e6b8cbee5439" prot="private" static="no">
        <type>CC_iterator::Strategy</type>
        <definition>typedef CC_iterator::Strategy CGAL::CC_safe_handle&lt; CC_iterator &gt;::Strategy</definition>
        <argsstring></argsstring>
        <name>Strategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/CC_safe_handle.h" line="28" column="1" bodyfile="CGAL/CC_safe_handle.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound">CC_safe_handle</ref></computeroutput> is a helper class that stores an iterator on a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> (or <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound">Concurrent_compact_container</ref></computeroutput>) and is able to know if the pointee has been erased after the creation of the <computeroutput><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound">CC_safe_handle</ref></computeroutput> instance. </para>    </briefdescription>
    <detaileddescription>
<para>It stores the iterator and the erase counter value of the pointee when the <computeroutput><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound">CC_safe_handle</ref></computeroutput> instance was created. It can only be used when the pointee type is a model of the <computeroutput><ref refid="classObjectWithEraseCounter" kindref="compound">ObjectWithEraseCounter</ref></computeroutput> concept.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CC_iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type of the stored iterator (on a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> or a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound">Concurrent_compact_container</ref></computeroutput>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound">Concurrent_compact_container</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/CC_safe_handle.h" line="27" column="1" bodyfile="CGAL/CC_safe_handle.h" bodystart="26" bodyend="50"/>
    <listofallmembers>
      <member refid="classCGAL_1_1CC__safe__handle_1a38f4c42d324f886a60528bfeb3f477da" prot="public" virt="non-virtual"><scope>CGAL::CC_safe_handle</scope><name>cc_iterator</name></member>
      <member refid="classCGAL_1_1CC__safe__handle_1a7713a519d0e44862bb938d2dcbf4b93f" prot="public" virt="non-virtual"><scope>CGAL::CC_safe_handle</scope><name>CC_safe_handle</name></member>
      <member refid="classCGAL_1_1CC__safe__handle_1acdca359430b5b2530a4fc8ba9a32356b" prot="public" virt="non-virtual"><scope>CGAL::CC_safe_handle</scope><name>is_zombie</name></member>
      <member refid="classCGAL_1_1CC__safe__handle_1af33e987d81b4039f4b54e6b8cbee5439" prot="private" virt="non-virtual"><scope>CGAL::CC_safe_handle</scope><name>Strategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
