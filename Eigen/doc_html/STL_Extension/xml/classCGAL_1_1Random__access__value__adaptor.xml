<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Random__access__value__adaptor" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Random_access_value_adaptor</compoundname>
    <includes local="no">CGAL/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename IC</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>Creation and operations see <computeroutput><ref refid="classCGAL_1_1Random__access__adaptor" kindref="compound">Random_access_adaptor</ref>&lt;IC&gt;</computeroutput>, with the exception of: </para></description>
      <memberdef kind="function" id="classCGAL_1_1Random__access__value__adaptor_1a5982c25bac0ff04aa4cb34dc0d0c01a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; CGAL::Random_access_value_adaptor&lt; IC, T &gt;::operator[]</definition>
        <argsstring>(size_type n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>returns a reference to the <computeroutput>n</computeroutput>-th item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>n &lt;</computeroutput> number of items in the data-structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="914" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Random__access__value__adaptor" kindref="compound">Random_access_value_adaptor</ref></computeroutput> provides a random access for data structures. </para>    </briefdescription>
    <detaileddescription>
<para>It is derived from <computeroutput><ref refid="classCGAL_1_1Random__access__adaptor" kindref="compound">Random_access_adaptor</ref>&lt;IC&gt;</computeroutput>. Instead of returning iterators from the <computeroutput>operator[]</computeroutput> methods, it returns the dereferenced value of the iterator. The iterator or circulator of the data structure are of type <computeroutput>IC</computeroutput>. Their value type is <computeroutput>T</computeroutput>.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Inverse__index" kindref="compound">CGAL::Inverse_index</ref>&lt;IC&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Random__access__adaptor" kindref="compound">CGAL::Random_access_adaptor</ref>&lt;IC&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/iterator.h" line="903" column="1" bodyfile="CGAL/iterator.h" bodystart="903" bodyend="922"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Random__access__value__adaptor_1a5982c25bac0ff04aa4cb34dc0d0c01a2" prot="public" virt="non-virtual"><scope>CGAL::Random_access_value_adaptor</scope><name>operator[]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
