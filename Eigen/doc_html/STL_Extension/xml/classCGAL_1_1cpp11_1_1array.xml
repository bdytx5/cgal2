<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1cpp11_1_1array" kind="class" language="C++" prot="public">
    <compoundname>CGAL::cpp11::array</compoundname>
    <includes local="no">CGAL/array.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
      </param>
    </templateparamlist>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1cpp11_1_1array_1a7cf419258b0d69d085669b0d26a63d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound">cpp11::array</ref>&lt; T, N &gt;</type>
        <definition>cpp11::array&lt; T, N &gt; make_array</definition>
        <argsstring>(const T &amp;...)</argsstring>
        <name>make_array</name>
        <param>
          <type>const T &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound">cpp11::array</ref>&lt;T, N&gt;</computeroutput> where <computeroutput>N</computeroutput> is the number of arguments given to the function. The position of each argument in the array is the same as its position in the argument list.</para></simplesect>
The maximal number of arguments is <computeroutput>6</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/array.h" line="41" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound">cpp11::array</ref></computeroutput> represents an array of elements of type <computeroutput>T</computeroutput>, the number of which is specified by the second template argument. </para>    </briefdescription>
    <detaileddescription>
<para>There is actually no class in namespace <computeroutput><ref refid="namespaceCGAL_1_1cpp11" kindref="compound">CGAL::cpp11</ref></computeroutput> with this name, but a using declaration which imports a class from another namespace. By order of priority: the one in namespace <computeroutput>std</computeroutput> is used (provided by C++0x), if not found, then the one in namespace <computeroutput>std::tr1</computeroutput> is used (provided by TR1), and finally, the fallback solution is taken from Boost.</para><para><bold>Parameters</bold><linebreak/>
</para><para>The parameter <computeroutput>T</computeroutput> is the value type. The second parameter is the dimension of the array.</para><para><bold>Extensions</bold><linebreak/>
</para><para>CGAL provides a <computeroutput>make_array</computeroutput> function for this purpose, up to a certain number of arguments. </para>    </detaileddescription>
    <location file="CGAL/array.h" line="27" column="1" bodyfile="CGAL/array.h" bodystart="27" bodyend="28"/>
    <listofallmembers>
      <member refid="classCGAL_1_1cpp11_1_1array_1a7cf419258b0d69d085669b0d26a63d34" prot="public" virt="non-virtual"><scope>CGAL::cpp11::array</scope><name>make_array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
