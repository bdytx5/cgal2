<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__CompactContainer" kind="group">
    <compoundname>CompactContainer</compoundname>
    <title>Compact Container</title>
    <innerclass refid="classCGAL_1_1CC__safe__handle" prot="public">CGAL::CC_safe_handle</innerclass>
    <innerclass refid="classCGAL_1_1Compact__container__base" prot="public">CGAL::Compact_container_base</innerclass>
    <innerclass refid="classCGAL_1_1Compact__container" prot="public">CGAL::Compact_container</innerclass>
    <innerclass refid="structCGAL_1_1Compact__container__traits" prot="public">CGAL::Compact_container_traits</innerclass>
    <innerclass refid="structCGAL_1_1Concurrent__compact__container__traits" prot="public">CGAL::Concurrent_compact_container_traits</innerclass>
    <innerclass refid="classCGAL_1_1Concurrent__compact__container" prot="public">CGAL::Concurrent_compact_container</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__CompactContainer_1ga041244256532c067edf94bd31141558d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CC_iterator</type>
          </param>
        </templateparamlist>
        <type>CC_safe_handle&lt; CC_iterator &gt;</type>
        <definition>CC_safe_handle&lt;CC_iterator&gt; CGAL::make_cc_safe_handle</definition>
        <argsstring>(CC_iterator iterator)</argsstring>
        <name>make_cc_safe_handle</name>
        <param>
          <type>CC_iterator</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
<para>The class <computeroutput>make_cc_safe_handle</computeroutput> function allows to build a <computeroutput><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound">CC_safe_handle</ref></computeroutput> from an iterator on a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">Compact_container</ref></computeroutput> (or <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound">Concurrent_compact_container</ref></computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound">CC_safe_handle</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/CC_safe_handle.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
