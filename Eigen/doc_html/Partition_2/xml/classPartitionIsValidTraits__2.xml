<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPartitionIsValidTraits__2" kind="class" language="C++" prot="public">
    <compoundname>PartitionIsValidTraits_2</compoundname>
    <includes local="no">Concepts/PartitionIsValidTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1a2fba59e5170c2dc73e3403cae1ce8462" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>The point type on which the partitioning algorithm operates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="35" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1ac50cc8a49cdd6bb839b037ae8e960846" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Polygon_2</definition>
        <argsstring></argsstring>
        <name>Polygon_2</name>
        <briefdescription>
<para>The polygon type created by the partitioning function. </para>        </briefdescription>
        <detaileddescription>
<para>This type should provide a nested type <computeroutput>Vertex_const_iterator</computeroutput> that is the type of the non-mutable iterator over the polygon vertices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="42" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1a627f5f6e33d8109f09e54255ae0cab83" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Is_valid</definition>
        <argsstring></argsstring>
        <name>Is_valid</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classPolygonIsValid" kindref="compound">PolygonIsValid</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="47" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1af200c68c191506f0109657f7df41e6b0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Less_xy_2</definition>
        <argsstring></argsstring>
        <name>Less_xy_2</name>
        <briefdescription>
<para>Predicate object type that compares <computeroutput>Point_2</computeroutput>s lexicographically. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q)</computeroutput> where <computeroutput>true</computeroutput> is returned iff <formula id="13">$ p &lt;_{xy} q$</formula>. We have <formula id="14">$ p&lt;_{xy}q$</formula>, iff <formula id="15">$ p_x &lt; q_x$</formula> or <formula id="16">$ p_x = q_x$</formula> and <formula id="17">$ p_y &lt; q_y$</formula>, where <formula id="18">$ p_x$</formula> and <formula id="19">$ p_y$</formula> denote the <formula id="20">$ x$</formula> and <formula id="0">$ y$</formula> coordinates of point <formula id="9">$ p$</formula>, respectively. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="59" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1a48e61fccae337b698ad667d5980d11a4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Left_turn_2</definition>
        <argsstring></argsstring>
        <name>Left_turn_2</name>
        <briefdescription>
<para>Predicate object type that provides <computeroutput>bool operator()(Point_2 p,Point_2 q,Point_2 r)</computeroutput>, which returns <computeroutput>true</computeroutput> iff <computeroutput>r</computeroutput> lies to the left of the oriented line through <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="68" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPartitionIsValidTraits__2_1ad907afae5b8cd1104be3ac188662b02f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PartitionIsValidTraits_2::Orientation_2</definition>
        <argsstring></argsstring>
        <name>Orientation_2</name>
        <briefdescription>
<para>Predicate object type that provides <computeroutput><ref refid="group__kernel__enums_1ga1147c0cf556939e71279546b38f2a1c5" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref> operator()(Point_2 p, Point_2 q, Point_2 r)</computeroutput> that returns <computeroutput><ref refid="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::LEFT_TURN</ref></computeroutput>, if <formula id="22">$ r$</formula> lies to the left of the oriented line <formula id="23">$ l$</formula> defined by <formula id="9">$ p$</formula> and <formula id="21">$ q$</formula>, returns <computeroutput><ref refid="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::RIGHT_TURN</ref></computeroutput> if <formula id="22">$ r$</formula> lies to the right of <formula id="23">$ l$</formula>, and returns <computeroutput><ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::COLLINEAR</ref></computeroutput> if <formula id="22">$ r$</formula> lies on <formula id="23">$ l$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="78" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a copy constructor is required. </para></description>
      <memberdef kind="function" id="classPartitionIsValidTraits__2_1a16c3f6515a57c529c2b4b88aeb20b8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PartitionIsValidTraits_2::PartitionIsValidTraits_2</definition>
        <argsstring>(PartitionIsValidTraits_2 tr)</argsstring>
        <name>PartitionIsValidTraits_2</name>
        <param>
          <type><ref refid="classPartitionIsValidTraits__2" kindref="compound">PartitionIsValidTraits_2</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>The following functions that create instances of the above predicate object types must exist. </para></description>
      <memberdef kind="function" id="classPartitionIsValidTraits__2_1a69512323b3065ba68584efb549751967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPartitionIsValidTraits__2_1ad907afae5b8cd1104be3ac188662b02f" kindref="member">Orientation_2</ref></type>
        <definition>Orientation_2 PartitionIsValidTraits_2::is_valid_object</definition>
        <argsstring>()</argsstring>
        <name>is_valid_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPartitionIsValidTraits__2_1af41c79b7f10a47a715b1f949839afafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPartitionIsValidTraits__2_1af200c68c191506f0109657f7df41e6b0" kindref="member">Less_xy_2</ref></type>
        <definition>Less_xy_2 PartitionIsValidTraits_2::less_xy_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_xy_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPartitionIsValidTraits__2_1a10a93d7091e9109d4685caee722a4402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPartitionIsValidTraits__2_1a48e61fccae337b698ad667d5980d11a4" kindref="member">Left_turn_2</ref></type>
        <definition>Left_turn_2 PartitionIsValidTraits_2::left_turn_2_object</definition>
        <argsstring>()</argsstring>
        <name>left_turn_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classPartitionIsValidTraits__2_1a640e4f440bbe57d347c7bbc8865d4868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPartitionIsValidTraits__2_1ad907afae5b8cd1104be3ac188662b02f" kindref="member">Orientation_2</ref></type>
        <definition>Orientation_2 PartitionIsValidTraits_2::orientation_2_object</definition>
        <argsstring>()</argsstring>
        <name>orientation_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PartitionIsValidTraits_2.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Requirements of a traits class that is used by <computeroutput>partition_is_valid_2</computeroutput>, <computeroutput>convex_partition_is_valid_2</computeroutput>, and <computeroutput>y_monotone_partition_is_valid_2</computeroutput> for testing if a given set of polygons are nonoverlapping and if their union is a polygon that is the same as a polygon represented by a given sequence of points. Note that the traits class for <computeroutput>partition_is_valid_2</computeroutput> may have to satisfy additional requirements if each partition polygon is to be tested for having a particular property; see, for example, the descriptions of the function <computeroutput><ref refid="group__PkgPolygon2Functions_1ga1963be778c0ae556273448def847f2c8" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Polygon.tag">is_convex_2()</ref></computeroutput> and the concept <computeroutput><ref refid="classYMonotonePartitionTraits__2" kindref="compound">YMonotonePartitionTraits_2</ref></computeroutput> for the additional requirements for testing for convexity and <formula id="0">$ y$</formula>-monotonicity, respectively. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000004"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Partition__is__valid__traits__2" kindref="compound">CGAL::Partition_is_valid_traits_2</ref>&lt;Traits, <ref refid="classPolygonIsValid" kindref="compound">PolygonIsValid</ref>&gt;</computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1gab9cf8c2b097fd562da09dd23d0c74edf" kindref="member">CGAL::approx_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga68139e1ee98dffa8f72cb295881f4647" kindref="member">CGAL::greene_approx_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga3ca9fb1f363f9f792bfbbeca65ad5cc5" kindref="member">CGAL::optimal_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga35cdd9f604522c2ce4ca97d928a41f38" kindref="member">CGAL::y_monotone_partition_2()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PartitionIsValidTraits_2.h" line="26" column="1" bodyfile="Concepts/PartitionIsValidTraits_2.h" bodystart="26" bodyend="119"/>
    <listofallmembers>
      <member refid="classPartitionIsValidTraits__2_1a627f5f6e33d8109f09e54255ae0cab83" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Is_valid</name></member>
      <member refid="classPartitionIsValidTraits__2_1a69512323b3065ba68584efb549751967" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>is_valid_object</name></member>
      <member refid="classPartitionIsValidTraits__2_1a48e61fccae337b698ad667d5980d11a4" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Left_turn_2</name></member>
      <member refid="classPartitionIsValidTraits__2_1a10a93d7091e9109d4685caee722a4402" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>left_turn_2_object</name></member>
      <member refid="classPartitionIsValidTraits__2_1af200c68c191506f0109657f7df41e6b0" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Less_xy_2</name></member>
      <member refid="classPartitionIsValidTraits__2_1af41c79b7f10a47a715b1f949839afafe" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>less_xy_2_object</name></member>
      <member refid="classPartitionIsValidTraits__2_1ad907afae5b8cd1104be3ac188662b02f" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Orientation_2</name></member>
      <member refid="classPartitionIsValidTraits__2_1a640e4f440bbe57d347c7bbc8865d4868" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>orientation_2_object</name></member>
      <member refid="classPartitionIsValidTraits__2_1a16c3f6515a57c529c2b4b88aeb20b8ca" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>PartitionIsValidTraits_2</name></member>
      <member refid="classPartitionIsValidTraits__2_1a2fba59e5170c2dc73e3403cae1ce8462" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Point_2</name></member>
      <member refid="classPartitionIsValidTraits__2_1ac50cc8a49cdd6bb839b037ae8e960846" prot="public" virt="non-virtual"><scope>PartitionIsValidTraits_2</scope><name>Polygon_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
