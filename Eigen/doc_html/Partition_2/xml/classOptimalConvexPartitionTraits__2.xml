<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classOptimalConvexPartitionTraits__2" kind="class" language="C++" prot="public">
    <compoundname>OptimalConvexPartitionTraits_2</compoundname>
    <includes local="no">Concepts/OptimalConvexPartitionTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>In addition to the types listed with the concept <computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput>, the following types are required: </para></description>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a973497b8e37d1889d5190d30d7fc1ebb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Segment_2</definition>
        <argsstring></argsstring>
        <name>Segment_2</name>
        <briefdescription>
<para>A segment type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="29" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a26330d90af0d3b6e9c845fca52fb6fdf" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Ray_2</definition>
        <argsstring></argsstring>
        <name>Ray_2</name>
        <briefdescription>
<para>A ray type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="34" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1ab18ae8a9a514695f9c46c3b1b76ae22d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Object_2</definition>
        <argsstring></argsstring>
        <name>Object_2</name>
        <briefdescription>
<para>A general object type that can be either a point or a segment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="39" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1aff8052721141982b32fef1c5d8c9e6e1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Construct_segment_2</definition>
        <argsstring></argsstring>
        <name>Construct_segment_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Segment_2 operator()(Point_2 p, Point_2 q)</computeroutput>, which constructs and returns the segment defined by the points <formula id="9">$ p$</formula> and <formula id="21">$ q$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="46" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1ab127cd8c5137b9489616fae98d450526" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Construct_ray_2</definition>
        <argsstring></argsstring>
        <name>Construct_ray_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Ray_2 operator()(Point_2 p, Point_2 q)</computeroutput>, which constructs and returns the ray from point <formula id="9">$ p$</formula> through point <formula id="21">$ q$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="53" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Collinear_are_ordered_along_line_2</definition>
        <argsstring></argsstring>
        <name>Collinear_are_ordered_along_line_2</name>
        <briefdescription>
<para>Predicate object type that determines orderings of <ref refid="classPartitionTraits__2_1a5bd41b29aafb9165cec4d11918e84eed" kindref="member"><computeroutput>Point_2</computeroutput> </ref> &apos;s on a line. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q, Point_2 r)</computeroutput> that returns <computeroutput>true</computeroutput>, iff <computeroutput>q</computeroutput> lies between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput> and <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> satisfy the precondition that they are collinear. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="63" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a2435b1233b83e6b5ec1756155d25aaa8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Are_stritcly_ordered_along_line_2</definition>
        <argsstring></argsstring>
        <name>Are_stritcly_ordered_along_line_2</name>
        <briefdescription>
<para>Predicate object type that determines orderings of <ref refid="classPartitionTraits__2_1a5bd41b29aafb9165cec4d11918e84eed" kindref="member"><computeroutput>Point_2</computeroutput> </ref> &apos;s. </para>        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q, Point_2 r)</computeroutput> that returns <computeroutput>true</computeroutput>, iff the three points are collinear and <computeroutput>q</computeroutput> lies strictly between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>. Note that <computeroutput>false</computeroutput> should be returned if <computeroutput>q==p</computeroutput> or <computeroutput>q==r</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="74" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a78da51823dcced817e1c2e1dc356f798" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Intersect_2</definition>
        <argsstring></argsstring>
        <name>Intersect_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Object_2 operator()(Segment_2 s1, Segment_2 s2)</computeroutput> that returns the intersection of two segments (which may be either a segment or a point). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="82" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1ac37381b1eb3d54d12d23caf9b4f2a0ef" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Assign_2</definition>
        <argsstring></argsstring>
        <name>Assign_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>bool operator()(Segment_2 s1, Object_2 o)</computeroutput> that returns <computeroutput>true</computeroutput> if <computeroutput>o</computeroutput> is a segment and assigns the value of <computeroutput>o</computeroutput> to <computeroutput>s1</computeroutput>; returns <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="90" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a copy constructor is required. </para></description>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1adc0341237509567de1295270332a90cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OptimalConvexPartitionTraits_2::OptimalConvexPartitionTraits_2</definition>
        <argsstring>(OptimalConvexPartitionTraits_2 tr)</argsstring>
        <name>OptimalConvexPartitionTraits_2</name>
        <param>
          <type><ref refid="classOptimalConvexPartitionTraits__2" kindref="compound">OptimalConvexPartitionTraits_2</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="101" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>In addition to the functions required by <computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput>, the following functions that create instances of the above function object types must exist: </para></description>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1af9ef731b161c61e91d5898d2d892a4ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" kindref="member">Collinear_are_ordered_along_line_2</ref></type>
        <definition>Collinear_are_ordered_along_line_2 OptimalConvexPartitionTraits_2::collinear_are_ordered_along_line_2_object</definition>
        <argsstring>() const</argsstring>
        <name>collinear_are_ordered_along_line_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1aafd180f15bbbf8ee41dc51bc1521a0b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOptimalConvexPartitionTraits__2_1aff8052721141982b32fef1c5d8c9e6e1" kindref="member">Construct_segment_2</ref></type>
        <definition>Construct_segment_2 OptimalConvexPartitionTraits_2::construct_segment_2_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_segment_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1aac423b6dee52e8a764941d41ce472143" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOptimalConvexPartitionTraits__2_1ab127cd8c5137b9489616fae98d450526" kindref="member">Construct_ray_2</ref></type>
        <definition>Construct_ray_2 OptimalConvexPartitionTraits_2::construct_ray_2_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_ray_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1afd0940e9cc9745efbbd81d04b44fa179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Are_strictly_ordered_along_line_2</type>
        <definition>Are_strictly_ordered_along_line_2 OptimalConvexPartitionTraits_2::are_strictly_ordered_along_line_2_object</definition>
        <argsstring>() const</argsstring>
        <name>are_strictly_ordered_along_line_2_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Requirements of a traits class to be used with the function <computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga3ca9fb1f363f9f792bfbbeca65ad5cc5" kindref="member">optimal_convex_partition_2()</ref></computeroutput> that computes an optimal convex partition of a polygon. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000001"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Partition__traits__2" kindref="compound">CGAL::Partition_traits_2</ref>&lt;R&gt;</computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga9d234240af69b14694923824fc8fca12" kindref="member">CGAL::convex_partition_is_valid_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Partition__is__valid__traits__2" kindref="compound">CGAL::Partition_is_valid_traits_2</ref>&lt;Traits, <ref refid="classPolygonIsValid" kindref="compound">PolygonIsValid</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="18" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="18" bodyend="134"/>
    <listofallmembers>
      <member refid="classOptimalConvexPartitionTraits__2_1afd0940e9cc9745efbbd81d04b44fa179" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>are_strictly_ordered_along_line_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a2435b1233b83e6b5ec1756155d25aaa8" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Are_stritcly_ordered_along_line_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1ac37381b1eb3d54d12d23caf9b4f2a0ef" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Assign_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Collinear_are_ordered_along_line_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1af9ef731b161c61e91d5898d2d892a4ff" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>collinear_are_ordered_along_line_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1ab127cd8c5137b9489616fae98d450526" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Construct_ray_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1aac423b6dee52e8a764941d41ce472143" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>construct_ray_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1aff8052721141982b32fef1c5d8c9e6e1" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Construct_segment_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1aafd180f15bbbf8ee41dc51bc1521a0b6" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>construct_segment_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a78da51823dcced817e1c2e1dc356f798" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Intersect_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1ab18ae8a9a514695f9c46c3b1b76ae22d" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Object_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1adc0341237509567de1295270332a90cd" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>OptimalConvexPartitionTraits_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a26330d90af0d3b6e9c845fca52fb6fdf" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Ray_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a973497b8e37d1889d5190d30d7fc1ebb" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Segment_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
