<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPolygonIsValid" kind="class" language="C++" prot="public">
    <compoundname>PolygonIsValid</compoundname>
    <includes local="no">Concepts/PolygonIsValid.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classPolygonIsValid_1a6abd71a88e629130c6d84bdebeaa5261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolygonIsValid::PolygonIsValid</definition>
        <argsstring>(const Traits tr)</argsstring>
        <name>PolygonIsValid</name>
        <param>
          <type>const Traits</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para><computeroutput>Traits</computeroutput> is a model of the concept required by the function that checks for validity of the polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolygonIsValid.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPolygonIsValid_1a8d1c591639f611e8a1705daf2663194a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool PolygonIsValid::operator()</definition>
        <argsstring>(InputIterator first, InputIterator beyond)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the points of type <computeroutput>Traits::Point_2</computeroutput> in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>) define a valid polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolygonIsValid.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function object that determines if a sequence of points represents a valid partition polygon or not, where &quot;valid&quot; can assume any of several meanings (e.g., convex or <formula id="0">$ y$</formula>-monotone). </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000006"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Is__convex__2" kindref="compound">CGAL::Is_convex_2</ref>&lt;Traits&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Is__y__monotone__2" kindref="compound">CGAL::Is_y_monotone_2</ref>&lt;Traits&gt;</computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1gab9cf8c2b097fd562da09dd23d0c74edf" kindref="member">CGAL::approx_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga9d234240af69b14694923824fc8fca12" kindref="member">CGAL::convex_partition_is_valid_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga68139e1ee98dffa8f72cb295881f4647" kindref="member">CGAL::greene_approx_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga3ca9fb1f363f9f792bfbbeca65ad5cc5" kindref="member">CGAL::optimal_convex_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1gaa4c7b5c06a64608fca50ddb2af49d498" kindref="member">CGAL::partition_is_valid_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1ga35cdd9f604522c2ce4ca97d928a41f38" kindref="member">CGAL::y_monotone_partition_2()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgPolygonPartitioning2_1gaaf27de7c6e366901d744e6bc32e2a8a1" kindref="member">CGAL::y_monotone_partition_is_valid_2()</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/PolygonIsValid.h" line="22" column="1" bodyfile="Concepts/PolygonIsValid.h" bodystart="22" bodyend="52"/>
    <listofallmembers>
      <member refid="classPolygonIsValid_1a8d1c591639f611e8a1705daf2663194a" prot="public" virt="non-virtual"><scope>PolygonIsValid</scope><name>operator()</name></member>
      <member refid="classPolygonIsValid_1a6abd71a88e629130c6d84bdebeaa5261" prot="public" virt="non-virtual"><scope>PolygonIsValid</scope><name>PolygonIsValid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
