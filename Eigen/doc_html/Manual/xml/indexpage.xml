<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>CGAL 4.13 - Manual</title>
    <innerpage refid="general_intro">Getting Started</innerpage>
    <innerpage refid="tutorials">Tutorials</innerpage>
    <innerpage refid="packages">Package Overview</innerpage>
    <innerpage refid="dev_manual">Developer Manual</innerpage>
    <detaileddescription>
<para>The goal of the CGAL Open Source Project is to provide easy access to efficient and reliable geometric algorithms in the form of a C++ library.The Computational Geometry Algorithms Library offers data structures and algorithms like <ref refid="packages_1PartTriangulationsAndDelaunayTriangulations" kindref="member">triangulations</ref>, <ref refid="packages_1PartVoronoiDiagrams" kindref="member">Voronoi diagrams</ref>, <ref refid="packages_1PartPolygons" kindref="member">Polygons</ref>, <ref refid="packages_1PartPolyhedra" kindref="member">Cell Complexes and Polyhedra</ref>, <ref refid="packages_1PartArrangements" kindref="member">arrangements of curves</ref>, <ref refid="packages_1PartMeshing" kindref="member">mesh generation</ref>, <ref refid="packages_1PartGeometryProcessing" kindref="member">geometry processing</ref>, <ref refid="packages_1PartConvexHullAlgorithms" kindref="member">convex hull algorithms</ref>, to name just a few.</para><para>All these data structures and algorithms operate on geometric objects like points and segments, and perform geometric tests on them. These objects and predicates are regrouped in <ref refid="packages_1PartKernels" kindref="member">CGAL Kernels</ref>.</para><para>Finally, the <ref refid="packages_1PartSupportLibrary" kindref="member">Support Library</ref> offers geometric object generators and spatial sorting functions, as well as a matrix search framework and a solver for linear and quadratic programs. It further offers interfaces to third party software such as the GUI libraries Qt, Geomview, and the Boost Graph Library.</para><para><heading level="1">Demos and Examples </heading>
</para><para>In the distribution of the library you find the two directories <emphasis>demo</emphasis> and <emphasis>examples</emphasis>. They contain subdirectories for the CGAL packages. The demos use third party libraries for the graphical user interface. The examples don&apos;t have this dependency and most examples are refered to in the user manual.</para><para><heading level="1">License </heading>
</para><para>CGAL is distributed under a dual-license scheme. CGAL can be used together with Open Source software free of charge. Using CGAL in other contexts can be done by obtaining a commercial license from <ulink url="http://www.geometryfactory.com">GeometryFactory</ulink>. For more details see the <ref refid="preliminaries_1licenseIssues" kindref="member">License</ref> page.</para><para><heading level="1">Manuals for the Previous Releases </heading>
</para><para>For releases &gt;= 4.2, visit <ulink url="https://doc.cgal.org/4.2">https://doc.cgal.org/X.Y</ulink></para><para>For releases X.Y, with 3.1 &lt;= X.Y &lt;= 4.1 visit <ulink url="https://doc.cgal.org/Manual/3.1/doc_html/cgal_manual/packages.html">https://doc.cgal.org/Manual/X.Y/doc_html/cgal_manual/packages.html</ulink></para><para></para><para><ref refid="general_intro" kindref="compound">Getting Started</ref> <ref refid="tutorials" kindref="compound">Tutorials</ref> <ref refid="packages" kindref="compound">Package Overview</ref> <ref refid="dev_manual" kindref="compound">Developer Manual</ref></para><para> </para>    </detaileddescription>
  </compounddef>
</doxygen>
