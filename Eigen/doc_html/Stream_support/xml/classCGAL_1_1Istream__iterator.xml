<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Istream__iterator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Istream_iterator</compoundname>
    <includes local="no">CGAL/IO/Istream_iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Stream</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Istream__iterator_1aec8a6bd07648449dd5a44ec9a020fca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Istream_iterator&lt; T, Stream &gt;::Istream_iterator</definition>
        <argsstring>()</argsstring>
        <name>Istream_iterator</name>
        <briefdescription>
<para>creates an end-of-stream iterator. </para>        </briefdescription>
        <detaileddescription>
<para>This is a past-the-end iterator, and it is useful when constructing a range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Istream_iterator.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Istream__iterator_1a882bdcc6d98e0180692ab8384a95db7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Istream_iterator&lt; T, Stream &gt;::Istream_iterator</definition>
        <argsstring>(Stream &amp;s)</argsstring>
        <name>Istream_iterator</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>creates an input iterator reading from <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>When <computeroutput>s</computeroutput> reaches end of stream, this iterator will compare equal to an end-of-stream iterator created using the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Istream_iterator.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Istream__iterator" kindref="compound">Istream_iterator</ref></computeroutput> is an input iterator adaptor for the input stream class <computeroutput>Stream</computeroutput> and value type <computeroutput>T</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>It is particularly useful for classes that are similar but not compatible to <computeroutput>std::istream</computeroutput>.</para><para><xrefsect id="models_1_models000001"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/IO/Istream_iterator.h" line="16" column="1" bodyfile="CGAL/IO/Istream_iterator.h" bodystart="16" bodyend="39"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Istream__iterator_1aec8a6bd07648449dd5a44ec9a020fca7" prot="public" virt="non-virtual"><scope>CGAL::Istream_iterator</scope><name>Istream_iterator</name></member>
      <member refid="classCGAL_1_1Istream__iterator_1a882bdcc6d98e0180692ab8384a95db7b" prot="public" virt="non-virtual"><scope>CGAL::Istream_iterator</scope><name>Istream_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
