<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classDelaunayMeshFaceBase__2" kind="class" language="C++" prot="public">
    <compoundname>DelaunayMeshFaceBase_2</compoundname>
    <includes local="no">Concepts/DelaunayMeshFaceBase_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Typedef</header>
      <memberdef kind="typedef" id="classDelaunayMeshFaceBase__2_1a3fa7cd958ea0f60cd5f52c17ac0578f8" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref>, int &gt;</type>
        <definition>typedef std::pair&lt;DelaunayMeshFaceBase_2, int&gt; DelaunayMeshFaceBase_2::Edge</definition>
        <argsstring></argsstring>
        <name>Edge</name>
        <briefdescription>
<para>A typedef to describe an edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="28" column="1" bodyfile="Concepts/DelaunayMeshFaceBase_2.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1a42249ae38c23bf5b6aaf64db9975316c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DelaunayMeshFaceBase_2::is_in_domain</definition>
        <argsstring>() const</argsstring>
        <name>is_in_domain</name>
        <briefdescription>
<para>returns true if this face is in the domain to be refined. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1ac4a80317799961e7830b9690121d6bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DelaunayMeshFaceBase_2::set_in_domain</definition>
        <argsstring>(const bool b)</argsstring>
        <name>set_in_domain</name>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>sets if this face is in the domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1a882afe9a7b4b9f78a963273a755f38b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DelaunayMeshFaceBase_2::is_blind</definition>
        <argsstring>() const</argsstring>
        <name>is_blind</name>
        <briefdescription>
<para>return true if this face has its circumcenter hidden by a constrained edge. </para>        </briefdescription>
        <detaileddescription>
<para>It does not &quot;see&quot; it, following the Constrained Delaunay triangulation visibility criterion. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1abfd34f951ad5116698b37429d5c68c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DelaunayMeshFaceBase_2::set_blind</definition>
        <argsstring>(const bool b)</argsstring>
        <name>set_blind</name>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>sets if this face is blind or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1ab76caf1e5deddbd93141cfb36399c125" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classDelaunayMeshFaceBase__2_1a3fa7cd958ea0f60cd5f52c17ac0578f8" kindref="member">Edge</ref></type>
        <definition>Edge DelaunayMeshFaceBase_2::blinding_constraint</definition>
        <argsstring>() const</argsstring>
        <name>blinding_constraint</name>
        <briefdescription>
<para>If this face is blind, this function returns the first constrained edge that prevents it from &quot;seeing&quot; its circumcenter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classDelaunayMeshFaceBase__2_1a882afe9a7b4b9f78a963273a755f38b7" kindref="member">is_blind()</ref> returns true </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDelaunayMeshFaceBase__2_1a9cb762c05842e0730988fc5b63560a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DelaunayMeshFaceBase_2::set_blinding_constraint</definition>
        <argsstring>(const Egde &amp;e)</argsstring>
        <name>set_blinding_constraint</name>
        <param>
          <type>const Egde &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>sets the edge that makes this face blind. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classDelaunayMeshFaceBase__2_1a882afe9a7b4b9f78a963273a755f38b7" kindref="member">is_blind()</ref> returns true </para></simplesect>
<simplesect kind="pre"><para>e is a constrained edge </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DelaunayMeshFaceBase_2.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput> refines the concept <computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">TriangulationFaceBase_2</ref></computeroutput>. It adds two functions giving access to a Boolean marker, that indicates if the face is in the meshing domain or not. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classConstrainedTriangulationFaceBase__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">ConstrainedTriangulationFaceBase_2</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000002"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Delaunay__mesh__face__base__2" kindref="compound">CGAL::Delaunay_mesh_face_base_2</ref>&lt;Traits, Fb&gt;</computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/DelaunayMeshFaceBase_2.h" line="21" column="1" bodyfile="Concepts/DelaunayMeshFaceBase_2.h" bodystart="21" bodyend="73"/>
    <listofallmembers>
      <member refid="classDelaunayMeshFaceBase__2_1ab76caf1e5deddbd93141cfb36399c125" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>blinding_constraint</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1a3fa7cd958ea0f60cd5f52c17ac0578f8" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>Edge</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1a882afe9a7b4b9f78a963273a755f38b7" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>is_blind</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1a42249ae38c23bf5b6aaf64db9975316c" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>is_in_domain</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1abfd34f951ad5116698b37429d5c68c1f" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>set_blind</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1a9cb762c05842e0730988fc5b63560a6e" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>set_blinding_constraint</name></member>
      <member refid="classDelaunayMeshFaceBase__2_1ac4a80317799961e7830b9690121d6bdc" prot="public" virt="non-virtual"><scope>DelaunayMeshFaceBase_2</scope><name>set_in_domain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
