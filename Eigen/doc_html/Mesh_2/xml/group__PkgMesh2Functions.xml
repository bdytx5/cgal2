<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgMesh2Functions" kind="group">
    <compoundname>PkgMesh2Functions</compoundname>
    <title>Mesh Generation Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgMesh2Functions_1gafd0e61cd3bf931e55298ad9b1523f9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
          <param>
            <type>class Criteria</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::refine_Delaunay_mesh_2</definition>
        <argsstring>(CDT &amp;t, const Criteria &amp;criteria=Criteria())</argsstring>
        <name>refine_Delaunay_mesh_2</name>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const Criteria &amp;</type>
          <declname>criteria</declname>
          <defval>Criteria()</defval>
        </param>
        <briefdescription>
<para>Refines the default domain defined by a constrained Delaunay triangulation without seeds into a mesh satisfying the criteria defined by the traits <computeroutput>criteria</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The domain of the mesh covers all the connected components of the plane defined by the constrained edges of <computeroutput>t</computeroutput>, except for the unbounded component.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound">DelaunayMeshTraits_2</ref></computeroutput>. The face of the constrained Delaunay triangulation must be a model of the concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Criteria</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classMeshingCriteria__2" kindref="compound">MeshingCriteria_2</ref></computeroutput>. <computeroutput>Criteria::Face_handle</computeroutput> must be the same as <computeroutput>CDT::Face_handle</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_mesher_2.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1ga55c3e585b93a0fd91c6094d4763f9c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
          <param>
            <type>class Criteria</type>
          </param>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::refine_Delaunay_mesh_2</definition>
        <argsstring>(CDT &amp;t, InputIterator begin, InputIterator end, const Criteria &amp;criteria=Criteria(), bool mark=false)</argsstring>
        <name>refine_Delaunay_mesh_2</name>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Criteria &amp;</type>
          <declname>criteria</declname>
          <defval>Criteria()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mark</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Refines the default domain defined by a constrained Delaunay triangulation into a mesh satisfying the criteria defined by the traits <computeroutput>criteria</computeroutput>.The sequence <computeroutput>[begin, end)</computeroutput> gives a set of seeds points, that defines the domain to be meshed as follows. </para>        </briefdescription>
        <detaileddescription>
<para>The constrained edges of <computeroutput>t</computeroutput> partition the plane into connected components. If <computeroutput>mark==true</computeroutput>, the mesh domain is the union of the bounded connected components including at least one seed. If <computeroutput>mark==false</computeroutput>, the domain is the union of the bounded components including no seed. Note that the unbounded component of the plane is never meshed.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound">DelaunayMeshTraits_2</ref></computeroutput>. The face of the constrained Delaunay triangulation must be a model of the concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Criteria</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classMeshingCriteria__2" kindref="compound">MeshingCriteria_2</ref></computeroutput>. <computeroutput>Criteria::Face_handle</computeroutput> must be the same as <computeroutput>CDT::Face_handle</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with value type <computeroutput>CDT::Geom_traits::Point_2</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_mesher_2.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CDT</type>
          </param>
          <param>
            <type>typename PointIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" kindref="member">CGAL::Mesh_optimization_return_code</ref></type>
        <definition>CGAL::Mesh_optimization_return_code CGAL::lloyd_optimize_mesh_2</definition>
        <argsstring>(CDT &amp;cdt, double parameters::time_limit=0, std::size_t parameters::max_iteration_number=0, double parameters::convergence=0.001, double parameters::freeze_bound=0.001, PointIterator parameters::seeds_begin=PointIterator(), PointIterator parameters::seeds_end=PointIterator(), bool parameters::mark=false)</argsstring>
        <name>lloyd_optimize_mesh_2</name>
        <param>
          <type>CDT &amp;</type>
          <declname>cdt</declname>
        </param>
        <param>
          <type>double parameters::time_limit</type>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t parameters::max_iteration_number</type>
          <defval>0</defval>
        </param>
        <param>
          <type>double parameters::convergence</type>
          <defval>0.001</defval>
        </param>
        <param>
          <type>double parameters::freeze_bound</type>
          <defval>0.001</defval>
        </param>
        <param>
          <type>PointIterator parameters::seeds_begin</type>
          <defval>PointIterator()</defval>
        </param>
        <param>
          <type>PointIterator parameters::seeds_end</type>
          <defval>PointIterator()</defval>
        </param>
        <param>
          <type>bool parameters::mark</type>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> is a mesh optimization process based on the minimization of a global energy function. </para>        </briefdescription>
        <detaileddescription>
<para>In <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput>, the minimized global energy may be interpreted as the <formula id="12">$ L^1$</formula>-norm of the error achieved when the function <formula id="13">$ x^2$</formula> is interpolated on the mesh domain using a piecewise linear function which is linear in each cell of the Voronoi diagram of the mesh vertices.</para><para>The optimizer <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> works in iterative steps. At each iteration, mesh vertices are moved into positions that bring to zero the energy gradient and the Delaunay triangulation is updated. Vertices on the mesh boundaries are not moved.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>is required to be or derive from <computeroutput><ref refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_Delaunay_triangulation_2</ref></computeroutput>, with vertex base and face base of its underlying <computeroutput>TriangulationDataStructure_2</computeroutput> respectively implementing the concepts <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput> and <computeroutput><ref refid="classDelaunayMeshVertexBase__2" kindref="compound">DelaunayMeshVertexBase_2</ref></computeroutput>. The argument <computeroutput>cdt</computeroutput>, passed by reference, provides the initial mesh and is modified by the algorithm to represent the final optimized mesh.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an iterator with value type <computeroutput>CGAL::Kernel::Point_2</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
The function has several optional parameters which are named parameters (we use the Boost.Parameter library). Therefore, when calling the function, the parameters can be provided in any order provided that the names of the parameters are used (see example at the bottom of this page).</para><para><bold>Named Parameters</bold><linebreak/>
</para><para><itemizedlist>
<listitem><para><bold><computeroutput>parameters::time_limit</computeroutput></bold> is used to set up, in seconds, a CPU time limit after which the optimization process is stopped. This time is measured using <computeroutput>CGAL::Timer</computeroutput>. The default value is 0 and means that there is no time limit. <simplesect kind="pre"><para><computeroutput>time_limit</computeroutput> <formula id="14">$ \geq$</formula> 0</para></simplesect>
</para></listitem><listitem><para><bold><computeroutput>parameters::max_iteration_number</computeroutput></bold> sets a limit on the number of performed iterations. The default value of 0 means that there is no limit on the number of performed iterations. <simplesect kind="pre"><para><computeroutput>max_iteration_number</computeroutput> <formula id="14">$ \geq$</formula> 0</para></simplesect>
</para></listitem><listitem><para><bold><computeroutput>parameters::convergence</computeroutput></bold> is a stopping criterion based on convergence: the optimization process is stopped, when at the last iteration, the displacement of any vertex is less than a given fraction of the length of the shortest edge incident to that vertex. The parameter <computeroutput>convergence</computeroutput> gives the threshold ratio. <simplesect kind="pre"><para>0 <formula id="15">$ \leq$</formula> <computeroutput>convergence</computeroutput> <formula id="15">$ \leq$</formula> 1</para></simplesect>
</para></listitem><listitem><para><bold><computeroutput>parameters::freeze_bound</computeroutput></bold> is designed to reduce running time of each optimization iteration. Any vertex that has a displacement less than a given fraction of the length of its shortest incident edge, is frozen (i.e. is not relocated). The parameter <computeroutput>freeze_bound</computeroutput> gives the threshold ratio. The default value is 0.001. If it is set to 0, freezing of vertices is disabled. <simplesect kind="pre"><para>0 <formula id="15">$ \leq$</formula> <computeroutput>freeze_bound</computeroutput> <formula id="15">$ \leq$</formula> 1</para></simplesect>
</para></listitem><listitem><para><bold><computeroutput>parameters::seeds_begin</computeroutput></bold> and <bold><computeroutput>parameters::seeds_end</computeroutput></bold> are begin and end input iterators to iterate on seed points. The sequence [<computeroutput>parameters::seeds_begin</computeroutput>, <computeroutput>parameters::seeds_end</computeroutput>) defines the domain in which the mesh was generated, and should be optimized.</para></listitem><listitem><para><bold><computeroutput>parameters::mark</computeroutput></bold>. If <computeroutput>mark</computeroutput> is set to true, the mesh domain is the union of the bounded connected components including at least one seed. If <computeroutput>mark</computeroutput> is false, the domain is the union of the bounded components including no seed. Note that the unbounded component of the plane is never optimized. The default value is false.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>The function <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> returns a value of type <computeroutput><ref refid="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" kindref="member">CGAL::Mesh_optimization_return_code</ref></computeroutput> which is: <itemizedlist>
<listitem>
<para><computeroutput><ref refid="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018dae51c3b06e2ee9b31f5b812cc86cbd229" kindref="member">CGAL::TIME_LIMIT_REACHED</ref></computeroutput> when the time limit is reached. </para></listitem>
<listitem>
<para><computeroutput><ref refid="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da058b57a483e13d1ed274217b75ca0afc" kindref="member">CGAL::MAX_ITERATION_NUMBER_REACHED</ref></computeroutput> when <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> stops because it has performed <computeroutput>max_iteration_number</computeroutput> iterations. </para></listitem>
<listitem>
<para><computeroutput><ref refid="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da19d4b9484d2ed90e8fec7e1194d25df2" kindref="member">CGAL::CONVERGENCE_REACHED</ref></computeroutput> when <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> stops because the convergence criterion is met. </para></listitem>
<listitem>
<para><computeroutput><ref refid="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018dab191e538b64f19bb21b00eadae3934b7" kindref="member">CGAL::ALL_VERTICES_FROZEN</ref></computeroutput> when all vertices have been frozen, when the <computeroutput>freeze_bound</computeroutput> parameter is set to a positive value. </para></listitem>
<listitem>
<para><computeroutput><ref refid="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da9c7c2f09314491da054f3f5d7d7ab3b9" kindref="member">CGAL::CANT_IMPROVE_ANYMORE</ref></computeroutput> when <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> stops because most vertices have been frozen, and no better convergence can be reached. </para></listitem>
</itemizedlist>
</para></simplesect>
<bold>Example</bold><linebreak/>
</para><para><programlisting><codeline><highlight class="comment">//<sp/>Lloyd-smoothing<sp/>until<sp/>convergence<sp/>reaches<sp/>0.01,<sp/>freezing<sp/>vertices<sp/>which<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>move<sp/>less<sp/>than<sp/>0.001*shortest_incident_edge_length<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2</ref>(cdt,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters::convergence=0.01,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters::freeze_bound=0.001);<sp/></highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" kindref="member">CGAL::Mesh_optimization_return_code</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh2Functions_1gafd0e61cd3bf931e55298ad9b1523f9a7" kindref="member">CGAL::refine_Delaunay_mesh_2()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/lloyd_optimize_mesh_2.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1gafbe2b6b96e7c8ce9a2816d50cd9bfacf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_conforming_Delaunay_2</definition>
        <argsstring>(CDT &amp;t)</argsstring>
        <name>make_conforming_Delaunay_2</name>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Refines the constrained Delaunay triangulation <computeroutput>t</computeroutput> into a conforming Delaunay triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function, all edges of <computeroutput>t</computeroutput> are Delaunay edges.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classConformingDelaunayTriangulationTraits__2" kindref="compound">ConformingDelaunayTriangulationTraits_2</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_conformer_2.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1ga05bf108ffbea1545b99a8b899ec5e2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_conforming_Gabriel_2</definition>
        <argsstring>(CDT &amp;t)</argsstring>
        <name>make_conforming_Gabriel_2</name>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Refines the constrained Delaunay triangulation <computeroutput>t</computeroutput> into a conforming Gabriel triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function, all constrained edges of <computeroutput>t</computeroutput> have the <emphasis>Gabriel property</emphasis>: the circle that has <formula id="16">$ e$</formula> as diameter does not contain any vertex from the triangulation.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classConformingDelaunayTriangulationTraits__2" kindref="compound">ConformingDelaunayTriangulationTraits_2</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_conformer_2.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main function to generate a mesh is <computeroutput><ref refid="group__PkgMesh2Functions_1gafd0e61cd3bf931e55298ad9b1523f9a7" kindref="member">refine_Delaunay_mesh_2()</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>The function <computeroutput><ref refid="group__PkgMesh2Functions_1ga5903d196ab84ecf1c1596c8892f7a6d4" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> allows to optimize an existing mesh. </para>    </detaileddescription>
  </compounddef>
</doxygen>
