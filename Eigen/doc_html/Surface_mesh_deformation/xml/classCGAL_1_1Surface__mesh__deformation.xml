<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Surface__mesh__deformation" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Surface_mesh_deformation</compoundname>
    <includes local="no">CGAL/Surface_mesh_deformation.h</includes>
    <templateparamlist>
      <param>
        <type>class TM</type>
      </param>
      <param>
        <type>class VIM</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
      <param>
        <type>class HIM</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
      <param>
        <type><ref refid="group__PkgSurfaceMeshDeformation_1gabccf12c64e4e13d82a0b5f5ca17d55f5" kindref="member">Deformation_algorithm_tag</ref></type>
        <declname>TAG</declname>
        <defname>TAG</defname>
        <defval>SPOKES_AND_RIMS</defval>
      </param>
      <param>
        <type>class WC</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
      <param>
        <type>class ST</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
      <param>
        <type>class CR</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
      <param>
        <type>class VPM</type>
        <defval><ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" prot="public" static="no">
        <type>TM</type>
        <definition>typedef TM CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Triangle_mesh</definition>
        <argsstring></argsstring>
        <name>Triangle_mesh</name>
        <briefdescription>
<para>Triangle mesh type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="220" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a3cd6cc7b1e2ca5ab548924563c16ea58" prot="public" static="no">
        <type>VIM</type>
        <definition>typedef VIM CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Vertex_index_map</definition>
        <argsstring></argsstring>
        <name>Vertex_index_map</name>
        <briefdescription>
<para>vertex index map type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="237" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1aab1121fac465f0c152b3cf2313934696" prot="public" static="no">
        <type>HIM</type>
        <definition>typedef HIM CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Hedge_index_map</definition>
        <argsstring></argsstring>
        <name>Hedge_index_map</name>
        <briefdescription>
<para>halfedge index map type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="239" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a2b858773fd7bd89509310889e3d1e55b" prot="public" static="no">
        <type>WC</type>
        <definition>typedef WC CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Weight_calculator</definition>
        <argsstring></argsstring>
        <name>Weight_calculator</name>
        <briefdescription>
<para>weight calculator functor type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="250" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a90b775d031ac06421d51f4481562808c" prot="public" static="no">
        <type>ST</type>
        <definition>typedef ST CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Sparse_linear_solver</definition>
        <argsstring></argsstring>
        <name>Sparse_linear_solver</name>
        <briefdescription>
<para>sparse linear solver type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="268" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1ad581c04c4250754caff3ff6d2519731e" prot="public" static="no">
        <type>CR</type>
        <definition>typedef CR CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Closest_rotation_traits</definition>
        <argsstring></argsstring>
        <name>Closest_rotation_traits</name>
        <briefdescription>
<para>closest rotation traits type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="283" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1acada7c28b0fa40e838ba87e50d012e9e" prot="public" static="no">
        <type>VPM</type>
        <definition>typedef VPM CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Vertex_point_map</definition>
        <argsstring></argsstring>
        <name>Vertex_point_map</name>
        <briefdescription>
<para>vertex point map type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="294" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" prot="public" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::<ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::vertex_descriptor CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::vertex_descriptor</definition>
        <argsstring></argsstring>
        <name>vertex_descriptor</name>
        <briefdescription>
<para>The type for vertex descriptor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="298" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1aea6e91d6579862132123dd764e86dd59" prot="public" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::<ref refid="classCGAL_1_1Surface__mesh__deformation_1aea6e91d6579862132123dd764e86dd59" kindref="member">halfedge_descriptor</ref></type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::halfedge_descriptor CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::halfedge_descriptor</definition>
        <argsstring></argsstring>
        <name>halfedge_descriptor</name>
        <briefdescription>
<para>The type for halfedge descriptor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="300" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" prot="public" static="no">
        <type>boost::property_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1acada7c28b0fa40e838ba87e50d012e9e" kindref="member">Vertex_point_map</ref> &gt;::value_type</type>
        <definition>typedef boost::property_traits&lt;Vertex_point_map&gt;::value_type CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>The 3D point type, model of <computeroutput><ref refid="classRawPoint__3" kindref="compound">RawPoint_3</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="302" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a6c51f1912820f98f1d3ae216cd04d429" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref> &gt;</type>
        <definition>typedef std::vector&lt;vertex_descriptor&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Roi_vertex_range</definition>
        <argsstring></argsstring>
        <name>Roi_vertex_range</name>
        <briefdescription>
<para>A constant iterator range over the vertices of the region-of-interest. </para>        </briefdescription>
        <detaileddescription>
<para>It is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> with <computeroutput>vertex_descriptor</computeroutput> as iterator value type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="305" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Construction</header>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a247c51e05bcd734cfb04d254677ee96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Surface_mesh_deformation</definition>
        <argsstring>(Triangle_mesh &amp;triangle_mesh, Vertex_index_map vertex_index_map=get(boost::vertex_index, triangle_mesh), Hedge_index_map hedge_index_map=get(boost::halfedge_index, triangle_mesh), Vertex_point_map vertex_point_map=get(boost::vertex_point, triangle_mesh), Weight_calculator weight_calculator=Weight_calculator())</argsstring>
        <name>Surface_mesh_deformation</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &amp;</type>
          <declname>triangle_mesh</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1a3cd6cc7b1e2ca5ab548924563c16ea58" kindref="member">Vertex_index_map</ref></type>
          <declname>vertex_index_map</declname>
          <defval>get(boost::vertex_index, <ref refid="classCGAL_1_1Surface__mesh__deformation_1a401fb532192a88a2ce4f99f4e32d2807" kindref="member">triangle_mesh</ref>)</defval>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aab1121fac465f0c152b3cf2313934696" kindref="member">Hedge_index_map</ref></type>
          <declname>hedge_index_map</declname>
          <defval>get(boost::halfedge_index, <ref refid="classCGAL_1_1Surface__mesh__deformation_1a401fb532192a88a2ce4f99f4e32d2807" kindref="member">triangle_mesh</ref>)</defval>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1acada7c28b0fa40e838ba87e50d012e9e" kindref="member">Vertex_point_map</ref></type>
          <declname>vertex_point_map</declname>
          <defval>get(boost::vertex_point, <ref refid="classCGAL_1_1Surface__mesh__deformation_1a401fb532192a88a2ce4f99f4e32d2807" kindref="member">triangle_mesh</ref>)</defval>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2b858773fd7bd89509310889e3d1e55b" kindref="member">Weight_calculator</ref></type>
          <declname>weight_calculator</declname>
          <defval><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2b858773fd7bd89509310889e3d1e55b" kindref="member">Weight_calculator</ref>()</defval>
        </param>
        <briefdescription>
<para>The constructor of a deformation object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>triangle_mesh</computeroutput> consists of only triangular facets </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>triangle_mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>triangulated surface mesh to deform </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_index_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map which associates an id to each vertex, from <computeroutput>0</computeroutput> to <computeroutput>num_vertices(triangle_mesh)-1</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hedge_index_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map which associates an id to each halfedge, from <computeroutput>0</computeroutput> to <computeroutput>2*num_edges(triangle_mesh)-1</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map which associates a point to each vertex of the triangle mesh. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight_calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>function object or pointer for weight calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="461" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Preprocessing</header>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a6380c4df898a5f9e7481d9e623a38f85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::clear_roi_vertices</definition>
        <argsstring>()</argsstring>
        <name>clear_roi_vertices</name>
        <briefdescription>
<para>Erases all the vertices from the region-of-interest (control vertices included). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="491" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="491" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1acdb54b9ef295c70a2aff578ecc6adb8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::clear_control_vertices</definition>
        <argsstring>()</argsstring>
        <name>clear_control_vertices</name>
        <briefdescription>
<para>Erases all the vertices from the set of control vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="503" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a47ebfc7577a5927da00b43bd5e713df4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::insert_control_vertex</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>insert_control_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Inserts a vertex in the set of control vertices. </para>        </briefdescription>
        <detaileddescription>
<para>The vertex is also inserted in the region-of-interest if it is not already in it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>vd</computeroutput> is not already a control vertex. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="514" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="514" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a2b88d97df2591758d56b57f27bc27357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::insert_control_vertices</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>insert_control_vertices</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Inserts a range of vertices in the set of control vertices. </para>        </briefdescription>
        <detaileddescription>
<para>The vertices are also inserted in the region-of-interest if they are not already in it. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>input iterator type with <computeroutput>vertex_descriptor</computeroutput> as value type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>past-the-end iterator of the range of vertices </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="532" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="532" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1aa7c1a7a0e61cd0586779d9acd4de68ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::erase_control_vertex</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>erase_control_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Erases a vertex from the set of control vertices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex to be erased </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>vd</computeroutput> was a control vertex. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="545" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="545" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a10fa68666790d4364e907cf323bf6d72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::insert_roi_vertices</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>insert_roi_vertices</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Inserts a range of vertices in the region-of-interest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>input iterator with <computeroutput>vertex_descriptor</computeroutput> as value type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>past-the-end iterator of the range of vertices </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="561" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="561" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a4a09610a30194d70beed7509acb21374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::insert_roi_vertex</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>insert_roi_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Inserts a vertex in the region-of-interest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>vd</computeroutput> is not already in the region-of-interest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="574" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="574" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a99289fe44079f4bc13b4b7bad32bb96f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::erase_roi_vertex</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>erase_roi_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Erases a vertex from the region-of-interest and the set of control vertices. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>At the next call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" kindref="member">preprocess()</ref></computeroutput>, any vertex that is no longer in the region-of-interest will be assigned to its original position (that is the position of the vertex at the time of construction or after the last call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a3c16fed59b7cf7c65acd4eaa371046f6" kindref="member">overwrite_initial_geometry()</ref></computeroutput>). </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex to be erased </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> <computeroutput>vd</computeroutput> was a vertex from the region-of-interest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="591" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="591" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::preprocess</definition>
        <argsstring>()</argsstring>
        <name>preprocess</name>
        <briefdescription>
<para>Preprocessing function that need to be called each time the region-of-interest or the set of control vertices are changed before calling <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If not already done, <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput> first calls this function. </para><para>Collects the vertices not in the region-of-interest that are adjacent to a vertex from the region-of-interest (these vertices are internally considered as fixed control vertices). Then assembles and factorizes the Laplacian matrix used in the function <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput>.  <simplesect kind="note"><para>A modification of the set of control vertices or the region-of-interest invalidates the preprocessing data. </para></simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if successful. A common reason for failure is that the system is rank deficient, which happens for example when all the vertices are in the region-of-interest and no control vertices are set, or if the weighting scheme used features too many zero and breaks the connectivity information. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="627" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="627" bodyend="632"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Deformation</header>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a609eb0e351b2c2d971df1875d7bc67ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::set_target_position</definition>
        <argsstring>(vertex_descriptor vd, const Point &amp;target_position)</argsstring>
        <name>set_target_position</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
          <declname>target_position</declname>
        </param>
        <briefdescription>
<para>Sets the target position of a control vertex. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the control vertex the target position is set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_position</parametername>
</parameternamelist>
<parameterdescription>
<para>the new target position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="643" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="643" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a70fb5c241b737736495cc4d33aa47bb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Vect</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::translate</definition>
        <argsstring>(vertex_descriptor vd, const Vect &amp;t)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Updates the target position of <computeroutput>vd</computeroutput> by applying a translation of vector <computeroutput>t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Vect</parametername>
</parameternamelist>
<parameterdescription>
<para>is a 3D vector class, with <computeroutput>Vect(double x,double y, double z)</computeroutput> being a constructor from its Cartesian coordinates and <computeroutput>double Vect::operator[](int i)</computeroutput> with i=0,1 or 2 returning its Cartesian coordinates.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>a control vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>translation vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>is_control_vertex(vd)</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="662" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="662" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a5c2e655206fa4a372b9cf0cb3af94f02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class Vect</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::translate</definition>
        <argsstring>(InputIterator begin, InputIterator end, const Vect &amp;t)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Equivalent to calling the overload taking only one control vertex, for each vertex in the range <computeroutput>[begin,end[</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>input iterator type with <computeroutput>vertex_descriptor</computeroutput> as value type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vect</parametername>
</parameternamelist>
<parameterdescription>
<para>is a 3D vector class, with <computeroutput>Vect(double x,double y, double z)</computeroutput> being a constructor from its Cartesian coordinates and <computeroutput>double Vect::operator[](int i)</computeroutput> with i=0,1 or 2 returning its Cartesian coordinates.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>past-the-end iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>translation vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="682" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="682" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a81b0a319c91d8eb9323ee80200d64694" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Quaternion</type>
          </param>
          <param>
            <type>typename Vect</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::rotate</definition>
        <argsstring>(vertex_descriptor vd, const Vect &amp;to_rotation_center, const Quaternion &amp;quat)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>to_rotation_center</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
<para>Updates the target position of <computeroutput>vd</computeroutput> by applying to its last target position a rotation defined by the quaternion <computeroutput>quat</computeroutput>, the center of the rotation being the origin translated by <computeroutput>to_rotation_center</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Quaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>is a quaternion class with <computeroutput>Vect operator*(Quaternion, Vect)</computeroutput> returning the product of a quaternion with a vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vect</parametername>
</parameternamelist>
<parameterdescription>
<para>is a 3D vector class, with <computeroutput>Vect(double x,double y, double z)</computeroutput> being a constructor from its Cartesian coordinates and <computeroutput>double Vect::operator[](int i)</computeroutput> with i=0,1 or 2 returning its Cartesian coordinates.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>a control vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_rotation_center</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to translate the origin to the center of the rotation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quat</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternion of the rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>is_control_vertex(vd)</computeroutput> </para></simplesect>
<simplesect kind="pre"><para><computeroutput>quad</computeroutput> represents a rotation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="708" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="708" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a368741a0372468c105ac117560556559" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>typename Vect</type>
          </param>
          <param>
            <type>typename Quaternion</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::rotate</definition>
        <argsstring>(InputIterator begin, InputIterator end, const Vect &amp;to_rotation_center, const Quaternion &amp;quat)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>to_rotation_center</declname>
        </param>
        <param>
          <type>const Quaternion &amp;</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
<para>Equivalent to calling the overload taking only one control vertex, for each vertex in the range <computeroutput>[begin,end[</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>input iterator type with <computeroutput>vertex_descriptor</computeroutput> as value type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Quaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>is a quaternion class with <computeroutput>Vect operator*(Quaternion, Vect)</computeroutput> returning the product of a quaternion with a vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vect</parametername>
</parameternamelist>
<parameterdescription>
<para>is a 3D vector class, with <computeroutput>Vect(double x,double y, double z)</computeroutput> being a constructor from its Cartesian coordinates and <computeroutput>double Vect::operator[](int i)</computeroutput> with i=0,1 or 2 returning its Cartesian coordinates.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>past-the-end iterator of the range of vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_rotation_center</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to translate the origin to the center of the rotation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quat</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternion of the rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>quad</computeroutput> represents a rotation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="735" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="735" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ab4a22084d6922a89a37927749e5df71c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
        <definition>const Point&amp; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::target_position</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>target_position</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Returns the target position of a control vertex. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>a control vertex </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>is_control_vertex(vd)</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="753" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="753" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::deform</definition>
        <argsstring>()</argsstring>
        <name>deform</name>
        <briefdescription>
<para>Deforms the region-of-interest according to the deformation algorithm, using the target positions of each control vertex set by using <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a81b0a319c91d8eb9323ee80200d64694" kindref="member">rotate()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a70fb5c241b737736495cc4d33aa47bb7" kindref="member">translate()</ref></computeroutput>, or <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a609eb0e351b2c2d971df1875d7bc67ae" kindref="member">set_target_position()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The points associated to each vertex of the input triangle mesh that are inside the region-of-interest are updated. <simplesect kind="note"><para>Nothing happens if <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" kindref="member">preprocess()</ref></computeroutput> returns <computeroutput>false</computeroutput>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classCGAL_1_1Surface__mesh__deformation_1a376a0040d00bed133d2c8e0a4af0de80" kindref="member">set_iterations(unsigned int iterations)</ref>, <ref refid="classCGAL_1_1Surface__mesh__deformation_1a9e3a4ddec33405436becaedc779d3024" kindref="member">set_tolerance(double tolerance)</ref>, <ref refid="classCGAL_1_1Surface__mesh__deformation_1abd05711b5c54679b36e650a9c0a609af" kindref="member">deform(unsigned int iterations, double tolerance)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="767" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="767" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1abd05711b5c54679b36e650a9c0a609af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::deform</definition>
        <argsstring>(unsigned int iterations, double tolerance)</argsstring>
        <name>deform</name>
        <param>
          <type>unsigned int</type>
          <declname>iterations</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Same as <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput> but the number of iterations and the tolerance are one-time parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>number of iterations for optimization procedure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>tolerance of convergence (see explanations <ref refid="classCGAL_1_1Surface__mesh__deformation_1a9e3a4ddec33405436becaedc779d3024" kindref="member">set_tolerance(double tolerance)</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="777" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="777" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1af2d2f969a9a01eb52a6ab3f9ff7f4fe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Resets the points associated to the vertices of the region-of-interest at their initial positions at time of the functor construction or after the last call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a3c16fed59b7cf7c65acd4eaa371046f6" kindref="member">overwrite_initial_geometry()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if the region-of-interest or the set of control vertices have been modified since the last call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" kindref="member">preprocess()</ref></computeroutput>, it will be called prior to the reset. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="829" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="829" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a3c16fed59b7cf7c65acd4eaa371046f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::overwrite_initial_geometry</definition>
        <argsstring>()</argsstring>
        <name>overwrite_initial_geometry</name>
        <briefdescription>
<para>Sets the initial positions of the vertices from the region-of-interest to the current positions. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function has the same effect as creating a new deformation object with the current deformed triangle mesh, keeping the region-of-interest and the set of control vertices. <simplesect kind="note"><para>if the region-of-interest or the set of control vertices have been modified since the last call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" kindref="member">preprocess()</ref></computeroutput>, it will be called prior to the overwrite.</para></simplesect>
</para><para>This function might have a non-negligible effect on the result. The Laplacian matrix of the free vertices and the optimal rotations are computed using the original positions of the points associated to the vertices. Thus, if a deformed version of the surface mesh is used as reference, the surface mesh properties the algorithm tries to preserve are those of an altered version (which are already degraded).  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="861" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="861" bodyend="899"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utilities</header>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1adf6972996aba23b96112a79ba910bd39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::iterations</definition>
        <argsstring>()</argsstring>
        <name>iterations</name>
        <briefdescription>
<para>Gets the default number of iterations (5) or the value passed to the function <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a376a0040d00bed133d2c8e0a4af0de80" kindref="member">set_iterations()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="909" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="909" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1aaa6b118e4a747786ce76b7e4d1bc8151" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::tolerance</definition>
        <argsstring>()</argsstring>
        <name>tolerance</name>
        <briefdescription>
<para>Gets the default tolerance parameter (1e-4) or the value passed to the function <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a9e3a4ddec33405436becaedc779d3024" kindref="member">set_tolerance()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="915" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="915" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a376a0040d00bed133d2c8e0a4af0de80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::set_iterations</definition>
        <argsstring>(unsigned int iterations)</argsstring>
        <name>set_iterations</name>
        <param>
          <type>unsigned int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
<para>Sets the maximum number of iterations ran by <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="921" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="921" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a9e3a4ddec33405436becaedc779d3024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::set_tolerance</definition>
        <argsstring>(double tolerance)</argsstring>
        <name>set_tolerance</name>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Sets the tolerance of the convergence used in <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" kindref="member">deform()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>tolerance==0</computeroutput>, no energy based termination criteria is used (preventing to do the energy computation at each iteration step)</para><para><computeroutput>tolerance &gt;</computeroutput> <formula id="80">$|\mathrm{energy}(m_i) - \mathrm{energy}(m_{i-1})| / \mathrm{energy}(m_i)$</formula> will be used as a termination criterium. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="928" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="928" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1abd6e8bb1c84a7982b9b944de82dd4693" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1a6c51f1912820f98f1d3ae216cd04d429" kindref="member">Roi_vertex_range</ref> &amp;</type>
        <definition>const Roi_vertex_range&amp; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::roi_vertices</definition>
        <argsstring>() const</argsstring>
        <name>roi_vertices</name>
        <briefdescription>
<para>Returns the range of vertices in the region-of-interest. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="934" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="934" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a9748abfa86fb0135df2f7770d6bf2f15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::is_roi_vertex</definition>
        <argsstring>(vertex_descriptor vd) const</argsstring>
        <name>is_roi_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Tests whether a vertex is inside the region-of-interest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the query vertex </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>vd</computeroutput> has been inserted to (and not erased from) the region-of-interest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="944" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="944" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ab3151b6406733980acb0678fa3653cb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::is_control_vertex</definition>
        <argsstring>(vertex_descriptor vd) const</argsstring>
        <name>is_control_vertex</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Tests whether a vertex is a control vertex. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>the query vertex </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>vd</computeroutput> has been inserted to (and not erased from) the set of control vertices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="952" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="952" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a401fb532192a88a2ce4f99f4e32d2807" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &amp;</type>
        <definition>const Triangle_mesh&amp; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::triangle_mesh</definition>
        <argsstring>() const</argsstring>
        <name>triangle_mesh</name>
        <briefdescription>
<para>Provides access to the triangle mesh being deformed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="958" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="958" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1af422652a9e6bc4372020584c9864cfdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::set_sre_arap_alpha</definition>
        <argsstring>(double a)</argsstring>
        <name>set_sre_arap_alpha</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Sets the alpha coefficient that determines the weight of the bending term (rotation smoothness) for the SRE-ARAP deformation technique. </para>        </briefdescription>
        <detaileddescription>
<para>The range of values can be from 0 to infinity. When alpha=0, the method reverts to ARAP. When alpha is increased, neighboring rotations become similar to each other, where alpha=infinity results in a global rigid transformation of the ROI. The value of alpha depends on the surface area and shape. Since alpha is not too sensitive, it can be tweaked in most cases by multiplying it by powers of 10. The default value for alpha is 0.02. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="971" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="971" bodyend="974"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a583fed7251675d4ccb632dd89ddbb795" prot="private" static="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation" kindref="compound">Surface_mesh_deformation</ref>&lt; TM, VIM, HIM, TAG, WC, ST, CR &gt;</type>
        <definition>typedef Surface_mesh_deformation&lt;TM, VIM, HIM, TAG, WC, ST, CR&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Self</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="309" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1ace845880d16b4d3f848757416c9e4d58" prot="private" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::vertex_iterator</type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::vertex_iterator CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::vertex_iterator</definition>
        <argsstring></argsstring>
        <name>vertex_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="311" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a0c91fb4c372627beab9422c6e872f108" prot="private" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::halfedge_iterator</type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::halfedge_iterator CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::halfedge_iterator</definition>
        <argsstring></argsstring>
        <name>halfedge_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="312" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1acd98c9963315c75046fe191cb8119f1e" prot="private" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::in_edge_iterator</type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::in_edge_iterator CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::in_edge_iterator</definition>
        <argsstring></argsstring>
        <name>in_edge_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="313" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a0ebc312324b249e469e33a9c5035de89" prot="private" static="no">
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &gt;::out_edge_iterator</type>
        <definition>typedef boost::graph_traits&lt;Triangle_mesh&gt;::out_edge_iterator CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::out_edge_iterator</definition>
        <argsstring></argsstring>
        <name>out_edge_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="314" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a5136e3fa78d29df7a01f14c7aa7ede49" prot="private" static="no">
        <type>Closest_rotation_traits::Matrix</type>
        <definition>typedef Closest_rotation_traits::Matrix CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::CR_matrix</definition>
        <argsstring></argsstring>
        <name>CR_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="316" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__deformation_1a240caf6c64873cddd2f69e3a92167ec8" prot="private" static="no">
        <type>Closest_rotation_traits::Vector</type>
        <definition>typedef Closest_rotation_traits::Vector CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::CR_vector</definition>
        <argsstring></argsstring>
        <name>CR_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="317" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1aeb5043d5579ee0a83796bb0ecbf79970" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" kindref="member">Triangle_mesh</ref> &amp;</type>
        <definition>Triangle_mesh&amp; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::m_triangle_mesh</definition>
        <argsstring></argsstring>
        <name>m_triangle_mesh</name>
        <briefdescription>
<para>Source triangulated surface mesh for modeling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="320" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a0a60bb646172cf9f81fc85bd9915e7fb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &gt;</type>
        <definition>std::vector&lt;Point&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::original</definition>
        <argsstring></argsstring>
        <name>original</name>
        <briefdescription>
<para>original positions of roi (size: ros + boundary_of_ros) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="322" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1ac0eec0dba0014f286d4df023ae4ae4b4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &gt;</type>
        <definition>std::vector&lt;Point&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::solution</definition>
        <argsstring></argsstring>
        <name>solution</name>
        <briefdescription>
<para>storing position of ros vertices during iterations (size: ros + boundary_of_ros) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="323" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a1a1b28cca77517772d43f569b6bbf5b5" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1a3cd6cc7b1e2ca5ab548924563c16ea58" kindref="member">Vertex_index_map</ref></type>
        <definition>Vertex_index_map CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::vertex_index_map</definition>
        <argsstring></argsstring>
        <name>vertex_index_map</name>
        <briefdescription>
<para>storing indices of all vertices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="325" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a955863b880f42ecf1845354800edba0b" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aab1121fac465f0c152b3cf2313934696" kindref="member">Hedge_index_map</ref></type>
        <definition>Hedge_index_map CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::hedge_index_map</definition>
        <argsstring></argsstring>
        <name>hedge_index_map</name>
        <briefdescription>
<para>storing indices of all halfedges </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="326" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a5a0f40a921db3b929c07870e186db2fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref> &gt;</type>
        <definition>std::vector&lt;vertex_descriptor&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::roi</definition>
        <argsstring></argsstring>
        <name>roi</name>
        <briefdescription>
<para>region of interest </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="328" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a5c2ebff84b25e7044e01c9918c44a0d5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref> &gt;</type>
        <definition>std::vector&lt;vertex_descriptor&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::ros</definition>
        <argsstring></argsstring>
        <name>ros</name>
        <briefdescription>
<para>region of solution, including roi and hard constraints on boundary of roi </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="329" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1ae7cb47992d737bb307b6a5b53fe557a6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::ros_id_map</definition>
        <argsstring></argsstring>
        <name>ros_id_map</name>
        <briefdescription>
<para>(size: num vertices) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="331" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1abc66c1d0fd81f757df9eb016b3564c3b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::is_roi_map</definition>
        <argsstring></argsstring>
        <name>is_roi_map</name>
        <briefdescription>
<para>(size: num vertices) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="332" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1ade423f8424f7be2b366a5cdb3e87e1b6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::is_ctrl_map</definition>
        <argsstring></argsstring>
        <name>is_ctrl_map</name>
        <briefdescription>
<para>(size: num vertices) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="333" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1acc21b3d68fe88a3bb278c25191414936" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::hedge_weight</definition>
        <argsstring></argsstring>
        <name>hedge_weight</name>
        <briefdescription>
<para>all halfedge weights </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="335" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a30e07f6e45bf190890ad5e89d13333ab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; CR_matrix &gt;</type>
        <definition>std::vector&lt;CR_matrix&gt; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::rot_mtr</definition>
        <argsstring></argsstring>
        <name>rot_mtr</name>
        <briefdescription>
<para>rotation matrices of ros vertices (size: ros) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="336" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1ae4162974abe381fe59654e62e24ba785" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1a90b775d031ac06421d51f4481562808c" kindref="member">Sparse_linear_solver</ref></type>
        <definition>Sparse_linear_solver CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::m_solver</definition>
        <argsstring></argsstring>
        <name>m_solver</name>
        <briefdescription>
<para>linear sparse solver </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="338" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1af2c500537b2c5ba401a22b182041390b" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::m_iterations</definition>
        <argsstring></argsstring>
        <name>m_iterations</name>
        <briefdescription>
<para>number of maximal iterations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="339" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1add847ce9bf58e5597b9eece50cd360dc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::m_tolerance</definition>
        <argsstring></argsstring>
        <name>m_tolerance</name>
        <briefdescription>
<para>tolerance of convergence </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="340" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a45d983c0832bad9d10ebae260cdc5367" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::need_preprocess_factorization</definition>
        <argsstring></argsstring>
        <name>need_preprocess_factorization</name>
        <briefdescription>
<para>is there any need to compute L and factorize </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="342" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a4f5a1ab1bcd4244b61e1b852de4a4419" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::need_preprocess_region_of_solution</definition>
        <argsstring></argsstring>
        <name>need_preprocess_region_of_solution</name>
        <briefdescription>
<para>is there any need to compute region of solution </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="343" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a2cf10e8a3d2a4b18bd4a45ca7ab723b2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::last_preprocess_successful</definition>
        <argsstring></argsstring>
        <name>last_preprocess_successful</name>
        <briefdescription>
<para>stores the result of last call to <ref refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" kindref="member">preprocess()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="345" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1aa98974ff2a53b4a5ca0a9bb8ede7ee6b" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1a2b858773fd7bd89509310889e3d1e55b" kindref="member">Weight_calculator</ref></type>
        <definition>Weight_calculator CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::weight_calculator</definition>
        <argsstring></argsstring>
        <name>weight_calculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="347" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a62b588aae4898eaa3e11656f4d046e89" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1acada7c28b0fa40e838ba87e50d012e9e" kindref="member">Vertex_point_map</ref></type>
        <definition>Vertex_point_map CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::vertex_point_map</definition>
        <argsstring></argsstring>
        <name>vertex_point_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="349" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Surface__mesh__deformation_1a3055f990176558a58e5a52fe51983e93" prot="public" static="no" mutable="no">
        <type>internal::Types_selectors&lt; TM, TAG &gt;::ARAP_visitor</type>
        <definition>internal::Types_selectors&lt;TM, TAG&gt;::ARAP_visitor CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::arap_visitor</definition>
        <argsstring></argsstring>
        <name>arap_visitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="352" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ad1dd648ddc6a2ca311a2777eea0f9884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::Surface_mesh_deformation</definition>
        <argsstring>(const Self &amp;)=delete</argsstring>
        <name>Surface_mesh_deformation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation" kindref="compound">Self</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="361" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a4f5196e1fa1a2903e53475eba4a30645" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="471" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="471" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a7fecf50aeab346707d1786474c53e40a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::assign_ros_id_to_one_ring</definition>
        <argsstring>(vertex_descriptor vd, std::size_t &amp;next_id, std::vector&lt; vertex_descriptor &gt; &amp;push_vector)</argsstring>
        <name>assign_ros_id_to_one_ring</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <param>
          <type>std::size_t &amp;</type>
          <declname>next_id</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref> &gt; &amp;</type>
          <declname>push_vector</declname>
        </param>
        <briefdescription>
<para>Assigns id to one ring neighbor of vd, and also push them into push_vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="982" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="982" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ad99b1aa1492b5a5746501cdac8536d1e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::region_of_solution</definition>
        <argsstring>()</argsstring>
        <name>region_of_solution</name>
        <briefdescription>
<para>Find region of solution, including roi and hard constraints, which is the 1-ring vertices out roi Contains four parts: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>if there is any vertex which is no longer roi, set its position back to original position</para></listitem><listitem><para>assign a ros id to vertices inside ros + ros-boundary</para></listitem><listitem><para>reinitialize rotation matrices, if a vertex is previously ros, use its previous matrix, otherwise set zero</para></listitem><listitem><para>reinitialize original, and solution,<itemizedlist>
<listitem><para>if a vertex is previously roi, then use its original position in old_origional, else use point(). In both case we are using &quot;original position&quot; of the vertex.</para></listitem><listitem><para>same for solution (it is required to prevent jumping effects) </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1007" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1007" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ab6e5987de37839dec43f63cd087bd3e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::assemble_laplacian_and_factorize</definition>
        <argsstring>()</argsstring>
        <name>assemble_laplacian_and_factorize</name>
        <briefdescription>
<para>Assemble Laplacian matrix A of linear system A*X=B. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1113" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1113" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1aec60aa719ee1f56b1cb41e726727fbe4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::assemble_laplacian_and_factorize_arap</definition>
        <argsstring>()</argsstring>
        <name>assemble_laplacian_and_factorize_arap</name>
        <briefdescription>
<para>Construct matrix that corresponds to left-hand side of eq:lap_ber in user manual Also constraints are integrated as eq:lap_energy_system in user manual. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>assign cotangent Laplacian to ros vertices </para>        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1126" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1126" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ad6b1860b94bf137aefee7bd4f321fcf0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::assemble_laplacian_and_factorize_spokes_and_rims</definition>
        <argsstring>()</argsstring>
        <name>assemble_laplacian_and_factorize_spokes_and_rims</name>
        <briefdescription>
<para>Construct matrix that corresponds to left-hand side of eq:lap_ber_rims in user manual Also constraints are integrated as eq:lap_energy_system in user manual. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>assign cotangent Laplacian to ros vertices </para>        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1169" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1169" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a6406fcad9145d91dd86191799cccf666" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::optimal_rotations</definition>
        <argsstring>()</argsstring>
        <name>optimal_rotations</name>
        <briefdescription>
<para>Local step of iterations, computing optimal rotation matrices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1225" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1225" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a5ed67c124e0368fa12f186835f63a118" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::optimal_rotations_arap</definition>
        <argsstring>()</argsstring>
        <name>optimal_rotations_arap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1236" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1236" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a5b6c5ac603af429c55e4e87c1434f1ad" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::optimal_rotations_spokes_and_rims</definition>
        <argsstring>()</argsstring>
        <name>optimal_rotations_spokes_and_rims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1272" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1272" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1af868c69c23573f9626303075c987eb55" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::update_solution</definition>
        <argsstring>()</argsstring>
        <name>update_solution</name>
        <briefdescription>
<para>Global step of iterations, updating solution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1346" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1346" bodyend="1356"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ad7186234da9ea5c50ba0798fd1f63d68" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::update_solution_arap</definition>
        <argsstring>()</argsstring>
        <name>update_solution_arap</name>
        <briefdescription>
<para>calculate right-hand side of eq:lap_ber in user manual and solve the system </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1358" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1358" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1afa7c12b5e1fa3672cd6596bc05c2f200" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::update_solution_spokes_and_rims</definition>
        <argsstring>()</argsstring>
        <name>update_solution_spokes_and_rims</name>
        <briefdescription>
<para>calculate right-hand side of eq:lap_ber_rims in user manual and solve the system </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1422" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1422" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1af7034e0abf489bbb0887cd0b13157562" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::assign_solution</definition>
        <argsstring>()</argsstring>
        <name>assign_solution</name>
        <briefdescription>
<para>Assign solution to target surface mesh. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1494" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1494" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a7ebfbc2ae863997fc6e45aa0f9243d02" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::energy</definition>
        <argsstring>() const</argsstring>
        <name>energy</name>
        <briefdescription>
<para>Compute modeling energy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1506" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1506" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a466d35a8e1f5c2bd1977e67634ba91de" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::energy_arap</definition>
        <argsstring>() const</argsstring>
        <name>energy_arap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1517" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1517" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ae3eab1f5df122f6211b4e8ffd91e552b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::energy_spokes_and_rims</definition>
        <argsstring>() const</argsstring>
        <name>energy_spokes_and_rims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1546" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1546" bodyend="1581"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a6aabd25378ebc3b3624dae10c396b74b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::need_preprocess_both</definition>
        <argsstring>()</argsstring>
        <name>need_preprocess_both</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1583" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1583" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a559b7ab9532451253a9fdad32251e1a9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CR_vector</type>
        <definition>CR_vector CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::sub_to_CR_vector</definition>
        <argsstring>(const Point &amp;p1, const Point &amp;p2) const</argsstring>
        <name>sub_to_CR_vector</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>p1 - p2, return CR_vector </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1590" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1590" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a2bfde8a86720206916c2c84d9fd1630f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Vect</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref></type>
        <definition>Point CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::add_to_point</definition>
        <argsstring>(const Point &amp;p, const Vect &amp;v)</argsstring>
        <name>add_to_point</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1596" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1596" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ad3efd037cdd96f99b1a97d3beed16037" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Vect</type>
          </param>
        </templateparamlist>
        <type>Vect</type>
        <definition>Vect CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::sub_to_vect</definition>
        <argsstring>(const Point &amp;p, const Vect &amp;v)</argsstring>
        <name>sub_to_vect</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Vect &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1601" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1601" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1aff81e4f51e53256bbd97a41a1714b541" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::id</definition>
        <argsstring>(vertex_descriptor vd) const</argsstring>
        <name>id</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>shorthand of get(vertex_index_map, v) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1606" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1606" bodyend="1607"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a4f7a1497862d479a878308c5625c2c01" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t &amp;</type>
        <definition>std::size_t&amp; CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::ros_id</definition>
        <argsstring>(vertex_descriptor vd)</argsstring>
        <name>ros_id</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1609" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1609" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1a39501b8e8d04cabe07b1afb523e10c64" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::ros_id</definition>
        <argsstring>(vertex_descriptor vd) const</argsstring>
        <name>ros_id</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">vertex_descriptor</ref></type>
          <declname>vd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1611" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1611" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__deformation_1ab0472cd00a1288d07dcdb7375b883e25" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Surface_mesh_deformation&lt; TM, VIM, HIM, TAG, WC, ST, CR, VPM &gt;::id</definition>
        <argsstring>(halfedge_descriptor e) const</argsstring>
        <name>id</name>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__deformation_1aea6e91d6579862132123dd764e86dd59" kindref="member">halfedge_descriptor</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>shorthand of get(hedge_index_map, e) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_deformation.h" line="1615" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="1615" bodyend="1618"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class providing the functionalities for deforming a triangulated surface mesh. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TM</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">HalfedgeGraph</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VIM</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">Surface_mesh_deformation::vertex_descriptor</ref></computeroutput> as key and <computeroutput>unsigned int</computeroutput> as value type. The default is <computeroutput>boost::property_map&lt;TM, boost::vertex_index_t&gt;::type</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HIM</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1aea6e91d6579862132123dd764e86dd59" kindref="member">Surface_mesh_deformation::halfedge_descriptor</ref></computeroutput> as key and <computeroutput>unsigned int</computeroutput> as value type. The default is <computeroutput>boost::property_map&lt;TM, boost::halfedge_index_t&gt;::type</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TAG</parametername>
</parameternamelist>
<parameterdescription>
<para>tag for selecting the deformation algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WC</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <ref refid="classSurfaceMeshDeformationWeights" kindref="compound">SurfaceMeshDeformationWeights</ref>, with <computeroutput>WC::Triangle_mesh</computeroutput> being <computeroutput>TM</computeroutput>. If <computeroutput>TAG</computeroutput> is <computeroutput>ORIGINAL_ARAP</computeroutput>, the weights must be positive to guarantee a correct energy minimization. The default is the cotangent weighting scheme. In case <computeroutput>TAG</computeroutput> is <computeroutput>ORIGINAL_ARAP</computeroutput>, negative weights are clamped to zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <ref refid="classSparseLinearAlgebraWithFactorTraits__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">SparseLinearAlgebraWithFactorTraits_d</ref>. If <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> 3.2 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined, then an overload of <computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">Eigen_solver_traits</ref></computeroutput> is provided as default parameter.<linebreak/>
 <programlisting><codeline><highlight class="normal">CGAL::Eigen_solver_traits&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::SparseLU&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGAL::Eigen_sparse_matrix&lt;double&gt;::EigenType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::COLAMDOrdering&lt;int&gt;<sp/>&gt;<sp/><sp/>&gt;</highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CR</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <ref refid="classDeformationClosestRotationTraits__3" kindref="compound">DeformationClosestRotationTraits_3</ref>. If <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> 3.1 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined, <computeroutput><ref refid="classCGAL_1_1Deformation__Eigen__polar__closest__rotation__traits__3" kindref="compound">Deformation_Eigen_polar_closest_rotation_traits_3</ref></computeroutput> is provided as default parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VPM</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput><ref refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" kindref="member">Surface_mesh_deformation::vertex_descriptor</ref></computeroutput> as key and a point as value type. The point type must be a model of <computeroutput><ref refid="classRawPoint__3" kindref="compound">RawPoint_3</ref></computeroutput>. The default is <computeroutput>boost::property_map&lt;TM, CGAL::vertex_point_t&gt;::type</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Surface_mesh_deformation.h" line="211" column="1" bodyfile="CGAL/Surface_mesh_deformation.h" bodystart="210" bodyend="1619"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a2bfde8a86720206916c2c84d9fd1630f" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>add_to_point</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a3055f990176558a58e5a52fe51983e93" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>arap_visitor</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ab6e5987de37839dec43f63cd087bd3e3" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>assemble_laplacian_and_factorize</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aec60aa719ee1f56b1cb41e726727fbe4" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>assemble_laplacian_and_factorize_arap</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad6b1860b94bf137aefee7bd4f321fcf0" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>assemble_laplacian_and_factorize_spokes_and_rims</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a7fecf50aeab346707d1786474c53e40a" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>assign_ros_id_to_one_ring</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1af7034e0abf489bbb0887cd0b13157562" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>assign_solution</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1acdb54b9ef295c70a2aff578ecc6adb8f" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>clear_control_vertices</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a6380c4df898a5f9e7481d9e623a38f85" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>clear_roi_vertices</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad581c04c4250754caff3ff6d2519731e" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Closest_rotation_traits</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5136e3fa78d29df7a01f14c7aa7ede49" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>CR_matrix</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a240caf6c64873cddd2f69e3a92167ec8" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>CR_vector</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a07d253510d806605b15740c7d7844bea" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>deform</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1abd05711b5c54679b36e650a9c0a609af" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>deform</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a7ebfbc2ae863997fc6e45aa0f9243d02" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>energy</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a466d35a8e1f5c2bd1977e67634ba91de" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>energy_arap</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ae3eab1f5df122f6211b4e8ffd91e552b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>energy_spokes_and_rims</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aa7c1a7a0e61cd0586779d9acd4de68ae" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>erase_control_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a99289fe44079f4bc13b4b7bad32bb96f" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>erase_roi_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aea6e91d6579862132123dd764e86dd59" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>halfedge_descriptor</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a0c91fb4c372627beab9422c6e872f108" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>halfedge_iterator</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a955863b880f42ecf1845354800edba0b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>hedge_index_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aab1121fac465f0c152b3cf2313934696" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Hedge_index_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1acc21b3d68fe88a3bb278c25191414936" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>hedge_weight</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aff81e4f51e53256bbd97a41a1714b541" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>id</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ab0472cd00a1288d07dcdb7375b883e25" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>id</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1acd98c9963315c75046fe191cb8119f1e" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>in_edge_iterator</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a4f5196e1fa1a2903e53475eba4a30645" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>init</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a47ebfc7577a5927da00b43bd5e713df4" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>insert_control_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a2b88d97df2591758d56b57f27bc27357" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>insert_control_vertices</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a4a09610a30194d70beed7509acb21374" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>insert_roi_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a10fa68666790d4364e907cf323bf6d72" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>insert_roi_vertices</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ab3151b6406733980acb0678fa3653cb8" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>is_control_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ade423f8424f7be2b366a5cdb3e87e1b6" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>is_ctrl_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1abc66c1d0fd81f757df9eb016b3564c3b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>is_roi_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a9748abfa86fb0135df2f7770d6bf2f15" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>is_roi_vertex</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1adf6972996aba23b96112a79ba910bd39" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>iterations</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a2cf10e8a3d2a4b18bd4a45ca7ab723b2" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>last_preprocess_successful</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1af2c500537b2c5ba401a22b182041390b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>m_iterations</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ae4162974abe381fe59654e62e24ba785" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>m_solver</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1add847ce9bf58e5597b9eece50cd360dc" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>m_tolerance</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aeb5043d5579ee0a83796bb0ecbf79970" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>m_triangle_mesh</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a6aabd25378ebc3b3624dae10c396b74b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>need_preprocess_both</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a45d983c0832bad9d10ebae260cdc5367" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>need_preprocess_factorization</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a4f5a1ab1bcd4244b61e1b852de4a4419" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>need_preprocess_region_of_solution</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a6406fcad9145d91dd86191799cccf666" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>optimal_rotations</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5ed67c124e0368fa12f186835f63a118" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>optimal_rotations_arap</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5b6c5ac603af429c55e4e87c1434f1ad" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>optimal_rotations_spokes_and_rims</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a0a60bb646172cf9f81fc85bd9915e7fb" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>original</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a0ebc312324b249e469e33a9c5035de89" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>out_edge_iterator</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a3c16fed59b7cf7c65acd4eaa371046f6" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>overwrite_initial_geometry</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ae675335193892552fa7924289bd1496f" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a2a5d0a54eaa217bc5bb19d96c30abb30" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>preprocess</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad99b1aa1492b5a5746501cdac8536d1e" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>region_of_solution</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1af2d2f969a9a01eb52a6ab3f9ff7f4fe5" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>reset</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5a0f40a921db3b929c07870e186db2fa" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>roi</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a6c51f1912820f98f1d3ae216cd04d429" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Roi_vertex_range</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1abd6e8bb1c84a7982b9b944de82dd4693" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>roi_vertices</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5c2ebff84b25e7044e01c9918c44a0d5" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>ros</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a4f7a1497862d479a878308c5625c2c01" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>ros_id</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a39501b8e8d04cabe07b1afb523e10c64" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>ros_id</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ae7cb47992d737bb307b6a5b53fe557a6" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>ros_id_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a30e07f6e45bf190890ad5e89d13333ab" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>rot_mtr</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a81b0a319c91d8eb9323ee80200d64694" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>rotate</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a368741a0372468c105ac117560556559" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>rotate</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a583fed7251675d4ccb632dd89ddbb795" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Self</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a376a0040d00bed133d2c8e0a4af0de80" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>set_iterations</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1af422652a9e6bc4372020584c9864cfdf" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>set_sre_arap_alpha</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a609eb0e351b2c2d971df1875d7bc67ae" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>set_target_position</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a9e3a4ddec33405436becaedc779d3024" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>set_tolerance</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ac0eec0dba0014f286d4df023ae4ae4b4" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>solution</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a90b775d031ac06421d51f4481562808c" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Sparse_linear_solver</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a559b7ab9532451253a9fdad32251e1a9" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>sub_to_CR_vector</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad3efd037cdd96f99b1a97d3beed16037" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>sub_to_vect</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad1dd648ddc6a2ca311a2777eea0f9884" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Surface_mesh_deformation</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a247c51e05bcd734cfb04d254677ee96c" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Surface_mesh_deformation</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ab4a22084d6922a89a37927749e5df71c" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>target_position</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aaa6b118e4a747786ce76b7e4d1bc8151" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>tolerance</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a70fb5c241b737736495cc4d33aa47bb7" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>translate</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a5c2e655206fa4a372b9cf0cb3af94f02" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>translate</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a401fb532192a88a2ce4f99f4e32d2807" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>triangle_mesh</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ae1b745ec4b05079ce53eb790b93b89c6" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Triangle_mesh</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1af868c69c23573f9626303075c987eb55" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>update_solution</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ad7186234da9ea5c50ba0798fd1f63d68" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>update_solution_arap</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1afa7c12b5e1fa3672cd6596bc05c2f200" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>update_solution_spokes_and_rims</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aeb15b4c2ac40bc17601be7589aeaf9c1" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>vertex_descriptor</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a1a1b28cca77517772d43f569b6bbf5b5" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>vertex_index_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a3cd6cc7b1e2ca5ab548924563c16ea58" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Vertex_index_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1ace845880d16b4d3f848757416c9e4d58" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>vertex_iterator</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a62b588aae4898eaa3e11656f4d046e89" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>vertex_point_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1acada7c28b0fa40e838ba87e50d012e9e" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Vertex_point_map</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1a2b858773fd7bd89509310889e3d1e55b" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>Weight_calculator</name></member>
      <member refid="classCGAL_1_1Surface__mesh__deformation_1aa98974ff2a53b4a5ca0a9bb8ede7ee6b" prot="private" virt="non-virtual"><scope>CGAL::Surface_mesh_deformation</scope><name>weight_calculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
