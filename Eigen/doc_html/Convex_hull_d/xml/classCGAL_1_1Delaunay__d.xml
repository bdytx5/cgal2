<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Delaunay__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Delaunay_d</compoundname>
    <basecompoundref refid="classCGAL_1_1Convex__hull__d" prot="private" virt="non-virtual">CGAL::Convex_hull_d&lt; Lifted_R &gt;</basecompoundref>
    <includes local="no">CGAL/Delaunay_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref></type>
      </param>
      <param>
        <type>typename Lifted_R</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="enum" id="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" prot="public" static="no">
        <name>Delaunay_voronoi_kind</name>
        <enumvalue id="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" prot="public">
          <name>NEAREST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a5e182c331d7e094d3e664f9633bd30ce" prot="public">
          <name>FURTHEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>interface flags </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="177" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Simplex_handle</definition>
        <argsstring></argsstring>
        <name>Simplex_handle</name>
        <briefdescription>
<para>handles to the simplices of the complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="153" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
<para>handles to vertices of the complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="159" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Point_d</definition>
        <argsstring></argsstring>
        <name>Point_d</name>
        <briefdescription>
<para>the point type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="165" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1acd142965a96043e73b5701ab8dc82b75" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Sphere_d</definition>
        <argsstring></argsstring>
        <name>Sphere_d</name>
        <briefdescription>
<para>the sphere type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="171" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1af09ece85020a4c88f4fbb2ec6522c10d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Point_const_iterator</definition>
        <argsstring></argsstring>
        <name>Point_const_iterator</name>
        <briefdescription>
<para>the iterator for points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="183" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1af8ab3b8d42dc687eae121d842d52bc22" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_iterator</name>
        <briefdescription>
<para>the iterator for vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="189" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Delaunay__d_1a769e8d92370dd36ecb168b5a19913fd8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Simplex_iterator</definition>
        <argsstring></argsstring>
        <name>Simplex_iterator</name>
        <briefdescription>
<para>the iterator for simplices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="195" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>The data type <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref></computeroutput> offers neither copy constructor nor assignment operator. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1adf659cdb8b93e273cb0ef7cf8b0f89f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Delaunay_d&lt; R, Lifted_R &gt;::Delaunay_d</definition>
        <argsstring>(int d, R k1=R(), Lifted_R k2=Lifted_R())</argsstring>
        <name>Delaunay_d</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref></type>
          <declname>k1</declname>
          <defval><ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref>()</defval>
        </param>
        <param>
          <type>Lifted_R</type>
          <declname>k2</declname>
          <defval>Lifted_R()</defval>
        </param>
        <briefdescription>
<para>creates an instance <computeroutput>DT</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The dimension of the underlying space is <computeroutput>d</computeroutput> and <computeroutput>S</computeroutput> is initialized to the empty point set. The traits class <computeroutput>R</computeroutput> specifies the models of all types and the implementations of all geometric primitives used by the Delaunay class. The traits class <computeroutput>Lifted_R</computeroutput> specifies the models of all types and the implementations of all geometric primitives used by the base class of <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; R, Lifted_R &gt;</computeroutput>. The second template parameter defaults to the first: <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt;R&gt; = <ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt;R, Lifted_R = R &gt;</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="195" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>All operations below that take a point <computeroutput>x</computeroutput> as an argument have the common precondition that <computeroutput>x.dimension() == DT.dimension()</computeroutput>. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ace10f40e491d9002d93b73ef7c5f1745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Delaunay_d&lt; R, Lifted_R &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension of ambient space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a33cc6f8d1da25970f3c937fc562cdfca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Delaunay_d&lt; R, Lifted_R &gt;::current_dimension</definition>
        <argsstring>()</argsstring>
        <name>current_dimension</name>
        <briefdescription>
<para>returns the affine dimension of the current point set, i.e., <computeroutput>-1</computeroutput> is <formula id="25">$ S$</formula> is empty, <computeroutput>0</computeroutput> if <formula id="25">$ S$</formula> consists of a single point, <computeroutput>1</computeroutput> if all points of <formula id="25">$ S$</formula> lie on a common line, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a0d192a088406d5067dd9f8d90ab7e6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Delaunay_d&lt; R, Lifted_R &gt;::is_simplex_of_nearest</definition>
        <argsstring>(Simplex_handle s)</argsstring>
        <name>is_simplex_of_nearest</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns true if <computeroutput>s</computeroutput> is a simplex of the nearest site triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a5528a2fd1491f33e9b9cb7b493c9e78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Delaunay_d&lt; R, Lifted_R &gt;::is_simplex_of_furthest</definition>
        <argsstring>(Simplex_handle s)</argsstring>
        <name>is_simplex_of_furthest</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns true if <computeroutput>s</computeroutput> is a simplex of the furthest site triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1af5015464122863700d42281bfa654045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::vertex_of_simplex</definition>
        <argsstring>(Simplex_handle s, int i)</argsstring>
        <name>vertex_of_simplex</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the vertex associated with the <computeroutput>i</computeroutput>-th node of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>0 &lt;= i &lt;= dcur</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a470bb7bae2ea5724b41a18c90811a0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref></type>
        <definition>Point_d CGAL::Delaunay_d&lt; R, Lifted_R &gt;::associated_point</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>associated_point</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the point associated with vertex <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ac30b6588a55ebb260083877a7c9f0fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref></type>
        <definition>Point_d CGAL::Delaunay_d&lt; R, Lifted_R &gt;::point_of_simplex</definition>
        <argsstring>(Simplex_handle s, int i)</argsstring>
        <name>point_of_simplex</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the point associated with the <computeroutput>i</computeroutput>-th vertex of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>0 &lt;= i &lt;= dcur</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1afce4afb10a9d592ee6db2499dd96a8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
        <definition>Simplex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::opposite_simplex</definition>
        <argsstring>(Simplex_handle s, int i)</argsstring>
        <name>opposite_simplex</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the simplex opposite to the <computeroutput>i</computeroutput>-th vertex of <computeroutput>s</computeroutput> (<computeroutput><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle()</ref></computeroutput> if there is no such simplex). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>0 &lt;= i &lt;= dcur</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ab306f0f66c117cb21fac2a22293ef0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Delaunay_d&lt; R, Lifted_R &gt;::index_of_vertex_in_opposite_simplex</definition>
        <argsstring>(Simplex_handle s, int i)</argsstring>
        <name>index_of_vertex_in_opposite_simplex</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the index of the vertex opposite to the <computeroutput>i</computeroutput>-th vertex of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>0 &lt;= i &lt;= dcur</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ac64181ae2b2913a7948f5917376fe84b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
        <definition>Simplex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::simplex</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>simplex</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns a simplex of the nearest site triangulation incident to <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a1cdb14f6002dda9096096da2f560bc4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Delaunay_d&lt; R, Lifted_R &gt;::index</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>index</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the index of <computeroutput>v</computeroutput> in <computeroutput>DT.simplex(v)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1adaa30b96ee2f44eddb0ebdcab73d26f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Delaunay_d&lt; R, Lifted_R &gt;::contains</definition>
        <argsstring>(Simplex_handle s, const Point_d &amp;x)</argsstring>
        <name>contains</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns true if <computeroutput>x</computeroutput> is contained in the closure of simplex <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1aae361eba82654a38b5ee0f4d4433b23c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Delaunay_d&lt; R, Lifted_R &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>decides whether <computeroutput>DT</computeroutput> is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a798861780e09fffe9e9d87d1e021a93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Delaunay_d&lt; R, Lifted_R &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>re-initializes <computeroutput>DT</computeroutput> to the empty Delaunay triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a55e9d7f2ca0f09ca068505f9c5162cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::insert</definition>
        <argsstring>(const Point_d &amp;x)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>inserts point <computeroutput>x</computeroutput> into <computeroutput>DT</computeroutput> and returns the corresponding <computeroutput>Vertex_handle</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>More precisely, if there is already a vertex <computeroutput>v</computeroutput> in <computeroutput>DT</computeroutput> positioned at <computeroutput>x</computeroutput> (i.e., <computeroutput>associated_point(v)</computeroutput> is equal to <computeroutput>x</computeroutput>) then <computeroutput>associated_point(v)</computeroutput> is changed to <computeroutput>x</computeroutput> (i.e., <computeroutput>associated_point(v)</computeroutput> is made identical to <computeroutput>x</computeroutput>) and if there is no such vertex then a new vertex <computeroutput>v</computeroutput> with <computeroutput>associated_point(v) = x</computeroutput> is added to <computeroutput>DT</computeroutput>. In either case, <computeroutput>v</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a3abb3f4148fcb85b0dcbb3ef6a6de9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref></type>
        <definition>Simplex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::locate</definition>
        <argsstring>(const Point_d &amp;x)</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns a simplex of the nearest site triangulation containing <computeroutput>x</computeroutput> in its closure (returns <computeroutput><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle()</ref></computeroutput> if <computeroutput>x</computeroutput> lies outside the convex hull of <formula id="25">$ S$</formula>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1aeaa2bf7fccbc63b08a8d161c6665643c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::lookup</definition>
        <argsstring>(const Point_d &amp;x)</argsstring>
        <name>lookup</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>if <computeroutput>DT</computeroutput> contains a vertex <computeroutput>v</computeroutput> with <computeroutput>associated_point(v) = x</computeroutput> the result is <computeroutput>v</computeroutput> otherwise the result is <computeroutput><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1aa5d8057ce00b93a1b497161ec6f38db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Delaunay_d&lt; R, Lifted_R &gt;::nearest_neighbor</definition>
        <argsstring>(const Point_d &amp;x)</argsstring>
        <name>nearest_neighbor</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>computes a vertex <computeroutput>v</computeroutput> of <computeroutput>DT</computeroutput> that is closest to <computeroutput>x</computeroutput>, i.e., <computeroutput>dist(x,associated_point(v)) = min{dist(x, associated_point(u) | u</computeroutput> <formula id="29">$\in S$</formula> <computeroutput>}</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a36cd9207067b6a049abcfa702e618912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref> &gt;</type>
        <definition>std::list&lt;Vertex_handle&gt; CGAL::Delaunay_d&lt; R, Lifted_R &gt;::range_search</definition>
        <argsstring>(const Sphere_d &amp;C)</argsstring>
        <name>range_search</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d_1acd142965a96043e73b5701ab8dc82b75" kindref="member">Sphere_d</ref> &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>returns the list of all vertices contained in the closure of sphere <formula id="3">$ C$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1abb974f17504f7c5fcd820385ade6f5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref> &gt;</type>
        <definition>std::list&lt;Vertex_handle&gt; CGAL::Delaunay_d&lt; R, Lifted_R &gt;::range_search</definition>
        <argsstring>(const std::vector&lt; Point_d &gt; &amp;A)</argsstring>
        <name>range_search</name>
        <param>
          <type>const std::vector&lt; <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>returns the list of all vertices contained in the closure of the simplex whose corners are given by <computeroutput>A</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>A</computeroutput> must consist of <computeroutput>d+1</computeroutput> affinely independent points in base space. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a190050909d7f74cf398d7c3af0ef0735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle</ref> &gt;</type>
        <definition>std::list&lt;Simplex_handle&gt; CGAL::Delaunay_d&lt; R, Lifted_R &gt;::all_simplices</definition>
        <argsstring>(Delaunay_voronoi_kind k=NEAREST)</argsstring>
        <name>all_simplices</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" kindref="member">Delaunay_voronoi_kind</ref></type>
          <declname>k</declname>
          <defval><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" kindref="member">NEAREST</ref></defval>
        </param>
        <briefdescription>
<para>returns a list of all simplices of either the nearest or the furthest site Delaunay triangulation of <computeroutput>S</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a1ceb05689e1965a7a2b038bd64967880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" kindref="member">Vertex_handle</ref> &gt;</type>
        <definition>std::list&lt;Vertex_handle&gt; CGAL::Delaunay_d&lt; R, Lifted_R &gt;::all_vertices</definition>
        <argsstring>(Delaunay_voronoi_kind k=NEAREST)</argsstring>
        <name>all_vertices</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" kindref="member">Delaunay_voronoi_kind</ref></type>
          <declname>k</declname>
          <defval><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" kindref="member">NEAREST</ref></defval>
        </param>
        <briefdescription>
<para>returns a list of all vertices of either the nearest or the furthest site Delaunay triangulation of <computeroutput>S</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1aa38e8f8206ef0bfd9d2289b9dfddeb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref> &gt;</type>
        <definition>std::list&lt;Point_d&gt; CGAL::Delaunay_d&lt; R, Lifted_R &gt;::all_points</definition>
        <argsstring>()</argsstring>
        <name>all_points</name>
        <briefdescription>
<para>returns <formula id="25">$ S$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ae82c713e685cdb8c0d840121a4972ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1af09ece85020a4c88f4fbb2ec6522c10d" kindref="member">Point_const_iterator</ref></type>
        <definition>Point_const_iterator CGAL::Delaunay_d&lt; R, Lifted_R &gt;::points_begin</definition>
        <argsstring>()</argsstring>
        <name>points_begin</name>
        <briefdescription>
<para>returns the start iterator for points in <computeroutput>DT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1acc7e31bc8f740f0a4a07cec7e486e062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1af09ece85020a4c88f4fbb2ec6522c10d" kindref="member">Point_const_iterator</ref></type>
        <definition>Point_const_iterator CGAL::Delaunay_d&lt; R, Lifted_R &gt;::points_end</definition>
        <argsstring>()</argsstring>
        <name>points_end</name>
        <briefdescription>
<para>returns the past the end iterator for points in <computeroutput>DT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1ae76bcc9b7bcedf116d912e62830394f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a769e8d92370dd36ecb168b5a19913fd8" kindref="member">Simplex_iterator</ref></type>
        <definition>Simplex_iterator CGAL::Delaunay_d&lt; R, Lifted_R &gt;::simplices_begin</definition>
        <argsstring>(Delaunay_voronoi_kind k=NEAREST)</argsstring>
        <name>simplices_begin</name>
        <param>
          <type><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" kindref="member">Delaunay_voronoi_kind</ref></type>
          <declname>k</declname>
          <defval><ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" kindref="member">NEAREST</ref></defval>
        </param>
        <briefdescription>
<para>returns the start iterator for simplices of <computeroutput>DT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a5935944d263cf23fe4f46853371f1be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Delaunay__d_1a769e8d92370dd36ecb168b5a19913fd8" kindref="member">Simplex_iterator</ref></type>
        <definition>Simplex_iterator CGAL::Delaunay_d&lt; R, Lifted_R &gt;::simplices_end</definition>
        <argsstring>()</argsstring>
        <name>simplices_end</name>
        <briefdescription>
<para>returns the past the end iterator for simplices of <computeroutput>DT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="410" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Delaunay__d_1a917b305a8711350260956ddf285c7c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref></type>
          </param>
          <param>
            <type>typename Lifted_R</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void d2_map</definition>
        <argsstring>(const Delaunay_d&lt; R, Lifted_R &gt; &amp;D, GRAPH&lt; typename Delaunay_d&lt; R, Lifted_R &gt;::Point_d, int &gt; &amp;DTG, typename Delaunay_d&lt; R, Lifted_R &gt;::Delaunay_voronoi_kind k=Delaunay_d&lt; R, Lifted_R &gt;::NEAREST)</argsstring>
        <name>d2_map</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref>, Lifted_R &gt; &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type>GRAPH&lt; typename <ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref>, Lifted_R &gt;::<ref refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" kindref="member">Point_d</ref>, int &gt; &amp;</type>
          <declname>DTG</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref>, Lifted_R &gt;::<ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" kindref="member">Delaunay_voronoi_kind</ref></type>
          <declname>k</declname>
          <defval><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; <ref refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" kindref="member">R</ref>, Lifted_R &gt;::<ref refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" kindref="member">NEAREST</ref></defval>
        </param>
        <briefdescription>
<para>constructs a LEDA graph representation of the nearest (<computeroutput>kind = NEAREST</computeroutput> or the furthest (<computeroutput>kind = FURTHEST</computeroutput>) site Delaunay triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>dim() == 2</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_d.h" line="426" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This package is deprecated since the version 4.6 of CGAL.</para></xrefdescription></xrefsect>The package <ref refid="packages_1PkgTriangulationsSummary" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">dD Triangulations</ref> should be used instead.</para><para>An instance <computeroutput>DT</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; R, Lifted_R &gt;</computeroutput> is the nearest and furthest site Delaunay triangulation of a set <computeroutput>S</computeroutput> of points in some <computeroutput>d</computeroutput>-dimensional space. We call <computeroutput>S</computeroutput> the underlying point set and <computeroutput>d</computeroutput> or <computeroutput>dim</computeroutput> the dimension of the underlying space. We use <computeroutput>dcur</computeroutput> to denote the affine dimension of <computeroutput>S</computeroutput>. The data type supports incremental construction of Delaunay triangulations and various kind of query operations (in particular, nearest and furthest neighbor queries and range queries with spheres and simplices).</para><para>A Delaunay triangulation is a simplicial complex. All simplices in the Delaunay triangulation have dimension <computeroutput>dcur</computeroutput>. In the nearest site Delaunay triangulation the circumsphere of any simplex in the triangulation contains no point of <formula id="25">$ S$</formula> in its interior. In the furthest site Delaunay triangulation the circumsphere of any simplex contains no point of <formula id="25">$ S$</formula> in its exterior. If the points in <formula id="25">$ S$</formula> are co-circular then any triangulation of <formula id="25">$ S$</formula> is a nearest as well as a furthest site Delaunay triangulation of <formula id="25">$ S$</formula>. If the points in <formula id="25">$ S$</formula> are not co-circular then no simplex can be a simplex of both triangulations. Accordingly, we view <computeroutput>DT</computeroutput> as either one or two collection(s) of simplices. If the points in <formula id="25">$ S$</formula> are co-circular there is just one collection: the set of simplices of some triangulation. If the points in <formula id="25">$ S$</formula> are not co-circular there are two collections. One collection consists of the simplices of a nearest site Delaunay triangulation and the other collection consists of the simplices of a furthest site Delaunay triangulation.</para><para>For each simplex of maximal dimension there is a handle of type <computeroutput>Simplex_handle</computeroutput> and for each vertex of the triangulation there is a handle of type <computeroutput>Vertex_handle</computeroutput>. Each simplex has <computeroutput>1 + dcur</computeroutput> vertices indexed from <computeroutput>0</computeroutput> to <computeroutput>dcur</computeroutput>. For any simplex <computeroutput>s</computeroutput> and any index <computeroutput>i</computeroutput>, <computeroutput>DT.vertex_of(s,i)</computeroutput> returns the <computeroutput>i</computeroutput>-th vertex of <computeroutput>s</computeroutput>. There may or may not be a simplex <computeroutput>t</computeroutput> opposite to the vertex of <computeroutput>s</computeroutput> with index <computeroutput>i</computeroutput>. The function <computeroutput>DT.opposite_simplex(s,i)</computeroutput> returns <computeroutput>t</computeroutput> if it exists and returns <computeroutput><ref refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" kindref="member">Simplex_handle()</ref></computeroutput> otherwise. If <computeroutput>t</computeroutput> exists then <computeroutput>s</computeroutput> and <computeroutput>t</computeroutput> share <computeroutput>dcur</computeroutput> vertices, namely all but the vertex with index <computeroutput>i</computeroutput> of <computeroutput>s</computeroutput> and the vertex with index <computeroutput>DT.index_of_vertex_in_opposite_simplex(s,i)</computeroutput> of <computeroutput>t</computeroutput>. Assume that <computeroutput>t = DT.opposite_simplex(s,i)</computeroutput> exists and let <computeroutput> j = DT.index_of_vertex_in_opposite_simplex(s,i)</computeroutput>. Then <computeroutput>s = DT.opposite_simplex(t,j)</computeroutput> and <computeroutput>i = DT.index_of_vertex_in_opposite_simplex(t,j)</computeroutput>. In general, a vertex belongs to many simplices.</para><para>Any simplex of <computeroutput>DT</computeroutput> belongs either to the nearest or to the furthest site Delaunay triangulation or both. The test <computeroutput>DT.simplex_of_nearest(dt_simplex s)</computeroutput> returns true if <computeroutput>s</computeroutput> belongs to the nearest site triangulation and the test <computeroutput>DT.simplex_of_furthest(dt_simplex s)</computeroutput> returns true if <computeroutput>s</computeroutput> belongs to the furthest site triangulation.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classDelaunayTraits__d" kindref="compound">DelaunayTraits_d</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lifted_R</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classDelaunayLiftedTraits__d" kindref="compound">DelaunayLiftedTraits_d</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>Implementation</bold><linebreak/>
</para><para>The data type is derived from <computeroutput><ref refid="classCGAL_1_1Convex__hull__d" kindref="compound">Convex_hull_d</ref></computeroutput> via the lifting map. For a point <computeroutput>x</computeroutput> in <computeroutput>d</computeroutput>-dimensional space let <computeroutput>lift(x)</computeroutput> be its lifting to the unit paraboloid of revolution. There is an intimate relationship between the Delaunay triangulation of a point set <formula id="25">$ S$</formula> and the convex hull of <computeroutput>lift(S)</computeroutput>: The nearest site Delaunay triangulation is the projection of the lower hull and the furthest site Delaunay triangulation is the upper hull. For implementation details we refer the reader to the implementation report available from the CGAL server.</para><para>The space requirement is the same as for convex hulls. The time requirement for an insert is the time to insert the lifted point into the convex hull of the lifted points.</para><para><bold>Example</bold><linebreak/>
</para><para>The abstract data type <computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref></computeroutput> has a default instantiation by means of the <computeroutput>d</computeroutput>-dimensional geometric kernel.</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;CGAL/Homogeneous_d.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;CGAL/leda_integer.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;CGAL/Delaunay_d.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>leda_integer<sp/>RT;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>CGAL::Homogeneous_d&lt;RT&gt;<sp/>Kernel;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>CGAL::Delaunay_d&lt;Kernel&gt;<sp/>Delaunay_d;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>Delaunay_d::Point_d<sp/>Point;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>Delaunay_d::Simplex_handle<sp/>Simplex_handle;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>Delaunay_d::Vertex_handle<sp/>Vertex_handle;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">Delaunay_d<sp/>T(2);</highlight></codeline>
<codeline><highlight class="normal">Vertex_handle<sp/>v1<sp/>=<sp/>T.insert(Point_d(2,11));</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><bold>Traits Requirements</bold><linebreak/>
</para><para><computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; R, Lifted_R &gt;</computeroutput> requires the following types from the kernel traits <computeroutput>Lifted_R</computeroutput>:</para><para><itemizedlist>
<listitem><para><computeroutput>RT</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Vector__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Vector_d</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Ray__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Ray_d</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Hyperplane_d</ref></computeroutput></para></listitem></itemizedlist>
</para><para>and uses the following function objects from the kernel traits:</para><para><itemizedlist>
<listitem><para><computeroutput>Construct_hyperplane_d</computeroutput></para></listitem><listitem><para><computeroutput>Construct_vector_d</computeroutput></para></listitem><listitem><para><computeroutput>Vector_to_point_d</computeroutput> / <computeroutput>Point_to_vector_d</computeroutput></para></listitem><listitem><para><computeroutput>Orientation_d</computeroutput></para></listitem><listitem><para><computeroutput>Orthogonal_vector_d</computeroutput></para></listitem><listitem><para><computeroutput>Oriented_side_d</computeroutput> / <computeroutput>Has_on_positive_side_d</computeroutput></para></listitem><listitem><para><computeroutput>Affinely_independent_d</computeroutput></para></listitem><listitem><para><computeroutput>Contained_in_simplex_d</computeroutput></para></listitem><listitem><para><computeroutput>Contained_in_affine_hull_d</computeroutput></para></listitem><listitem><para><computeroutput>Intersect_d</computeroutput></para></listitem><listitem><para><computeroutput>Lift_to_paraboloid_d</computeroutput> / <computeroutput>Project_along_d_axis_d</computeroutput></para></listitem><listitem><para><computeroutput>Component_accessor_d</computeroutput></para></listitem></itemizedlist>
</para><para><computeroutput><ref refid="classCGAL_1_1Delaunay__d" kindref="compound">Delaunay_d</ref>&lt; R, Lifted_R &gt;</computeroutput> requires the following types from the kernel traits <computeroutput>R</computeroutput>:</para><para><itemizedlist>
<listitem><para><computeroutput>FT</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Sphere__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Sphere_d</ref></computeroutput></para></listitem><listitem><para><computeroutput>Construct_sphere_d</computeroutput></para></listitem><listitem><para><computeroutput>Squared_distance_d</computeroutput></para></listitem><listitem><para><computeroutput>Point_of_sphere_d</computeroutput></para></listitem><listitem><para><computeroutput>Affinely_independent_d</computeroutput></para></listitem><listitem><para><computeroutput>Contained_in_simplex_d</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>CGAL::Convex_hull_d&lt; R &gt;</label>
        <link refid="classCGAL_1_1Convex__hull__d"/>
      </node>
      <node id="7">
        <label>CGAL::Convex_hull_d&lt; Lifted_R &gt;</label>
        <link refid="classCGAL_1_1Convex__hull__d"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; Lifted_R &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>CGAL::Delaunay_d&lt; R, Lifted_R &gt;</label>
        <link refid="classCGAL_1_1Delaunay__d"/>
        <childnode refid="7" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>CGAL::Convex_hull_d&lt; R &gt;</label>
        <link refid="classCGAL_1_1Convex__hull__d"/>
      </node>
      <node id="10">
        <label>CGAL::Convex_hull_d&lt; Lifted_R &gt;</label>
        <link refid="classCGAL_1_1Convex__hull__d"/>
        <childnode refid="11" relation="template-instance">
          <edgelabel>&lt; Lifted_R &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>CGAL::Delaunay_d&lt; R, Lifted_R &gt;</label>
        <link refid="classCGAL_1_1Delaunay__d"/>
        <childnode refid="10" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Delaunay_d.h" line="141" column="1" bodyfile="CGAL/Delaunay_d.h" bodystart="141" bodyend="414"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Convex__hull__d_1a6feb8b75e5f30552fe936640b93aa78f" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>all_facets</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1aa38e8f8206ef0bfd9d2289b9dfddeb1f" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>all_points</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a190050909d7f74cf398d7c3af0ef0735" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>all_simplices</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a90e0b1df0435098386ec6d854284c9e6" prot="private" virt="non-virtual" ambiguityscope="Convex_hull_d&lt; Lifted_R &gt;::"><scope>CGAL::Delaunay_d</scope><name>all_simplices</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a1ceb05689e1965a7a2b038bd64967880" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>all_vertices</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a4af323e683bf6f76da939dec552f4f60" prot="private" virt="non-virtual" ambiguityscope="Convex_hull_d&lt; Lifted_R &gt;::"><scope>CGAL::Delaunay_d</scope><name>all_vertices</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a470bb7bae2ea5724b41a18c90811a0c3" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>associated_point</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1affa57ae6ec4fd4b91f688d5fb3922a1a" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>bounded_side</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a798861780e09fffe9e9d87d1e021a93e" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a9dba29e4f927a197be41adb242d4a33d" prot="private" virt="non-virtual" ambiguityscope="Convex_hull_d&lt; Lifted_R &gt;::"><scope>CGAL::Delaunay_d</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1adaa30b96ee2f44eddb0ebdcab73d26f0" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>contains</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a9cf97c124cbf52bab38257eab95252e2" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Convex_hull_d</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a018db48a7f7d92111ae03d0d18bf3ece" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>convex_hull_d_to_polyhedron_3</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a33cc6f8d1da25970f3c937fc562cdfca" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>current_dimension</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a917b305a8711350260956ddf285c7c68" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>d2_map</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a133ccb5b098057a96e6f75317c81c4c9" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>d3_surface_map</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1adf659cdb8b93e273cb0ef7cf8b0f89f2" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Delaunay_d</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Delaunay_voronoi_kind</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ace10f40e491d9002d93b73ef7c5f1745" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1aae361eba82654a38b5ee0f4d4433b23c" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>empty</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ab5824a63825a2d3c927da67331437fdc" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Facet_handle</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a208bf25f55de43b6c615df408344541f" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Facet_iterator</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a1f48779ef4a169b7750af660e9a562d9" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>facets_begin</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ae3840f7879becd354bfa411dcba8337f" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>facets_end</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ad315ca5f623ae8a5b4d16b665f4ea7c8" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>facets_visible_from</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a5e182c331d7e094d3e664f9633bd30ce" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>FURTHEST</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1af3a391809dffdfac5a43dfa6e1a55558" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Hull_point_const_iterator</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a5072c4b2f7323bceb49ba732dd2ad11a" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>hull_points_begin</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ad4caae048696beca1796815504fef3c1" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>hull_points_end</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a8a80ec067b0dd4fa61038e0da5d9a1ea" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Hull_vertex_iterator</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ae52601833b4081837c1db6f2b0d5f1c2" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>hull_vertices_begin</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a32d0e9c13932301e1b7cc70a8d83ae58" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>hull_vertices_end</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ae72ac9e247020c16a2cd69dc9187bab6" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a7e116aba96e2a309271175cc929e2790" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>hyperplane_supporting</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a1cdb14f6002dda9096096da2f560bc4a" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>index</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a7e22f117e7f2b5b14bc0d80bbbbff052" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>index_of_vertex_in_opposite_facet</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ab306f0f66c117cb21fac2a22293ef0fc" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>index_of_vertex_in_opposite_simplex</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a55e9d7f2ca0f09ca068505f9c5162cb8" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ac269e134b31c5b7c812a1742b7805db3" prot="private" virt="non-virtual" ambiguityscope="Convex_hull_d&lt; Lifted_R &gt;::"><scope>CGAL::Delaunay_d</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1acfef07e66e4835e3ec47224d622f7285" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>is_dimension_jump</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5528a2fd1491f33e9b9cb7b493c9e78c" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>is_simplex_of_furthest</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a0d192a088406d5067dd9f8d90ab7e6e2" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>is_simplex_of_nearest</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1af73a81800e8d7daf4cae8e96552cefdc" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a3abb3f4148fcb85b0dcbb3ef6a6de9c9" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1aeaa2bf7fccbc63b08a8d161c6665643c" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>lookup</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5dda4e3061b66c31d4597d0eaf5c1666a25753c9936ef7fdc2569b25c3e07b478" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>NEAREST</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1aa5d8057ce00b93a1b497161ec6f38db0" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ade0bee6a1db8b07791bf0be45a90834f" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>number_of_facets</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a6ff9d78d514b86c1b999c4d9b9f91434" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>number_of_simplices</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1af64483a3187d43a0336a2b0b7ea25bb7" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a6b33b7a8463e1faa44bf4c588b9a07c7" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>opposite_facet</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1afce4afb10a9d592ee6db2499dd96a8ec" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>opposite_simplex</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1af09ece85020a4c88f4fbb2ec6522c10d" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Point_const_iterator</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a59805d514204eaca34479cdc1c27a203" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Point_d</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1af0ee46542ee5d9bd175695de7b9c7883" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>point_of_facet</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ac30b6588a55ebb260083877a7c9f0fb3" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>point_of_simplex</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ae82c713e685cdb8c0d840121a4972ebd" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>points_begin</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1acc7e31bc8f740f0a4a07cec7e486e062" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>points_end</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1afeac624dafdd00950ce926027ec7886a" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>print_statistics</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1afc2f767cef8142f3147f33b09912bcf9" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>R</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a36cd9207067b6a049abcfa702e618912" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>range_search</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1abb974f17504f7c5fcd820385ade6f5e2" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>range_search</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ac64181ae2b2913a7948f5917376fe84b" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>simplex</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5fa8cd020307ee39468c82c05d3ccbf1" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Simplex_handle</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a769e8d92370dd36ecb168b5a19913fd8" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Simplex_iterator</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1ae76bcc9b7bcedf116d912e62830394f3" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>simplices_begin</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a03c05b8ab6fb2d0a920f78ea650e602f" prot="private" virt="non-virtual" ambiguityscope="Convex_hull_d&lt; Lifted_R &gt;::"><scope>CGAL::Delaunay_d</scope><name>simplices_begin</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a5935944d263cf23fe4f46853371f1be1" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>simplices_end</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1acd142965a96043e73b5701ab8dc82b75" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Sphere_d</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1a309e3ace0cf19f06e48ab5e9964f8e23" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Vertex_handle</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1af8ab3b8d42dc687eae121d842d52bc22" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>Vertex_iterator</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ac6e6a4c16b06d65f01a38adc58574e6f" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>vertex_of_facet</name></member>
      <member refid="classCGAL_1_1Delaunay__d_1af5015464122863700d42281bfa654045" prot="public" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>vertex_of_simplex</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1ae1b4367940f288092b0064548fde5698" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>vertices_begin</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1a6b8e7096b271216bbe2e088bcdff899e" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>vertices_end</name></member>
      <member refid="classCGAL_1_1Convex__hull__d_1aeacfb8c7e6654dbb3095981ba4da1cc0" prot="private" virt="non-virtual"><scope>CGAL::Delaunay_d</scope><name>visit_all_facets</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
