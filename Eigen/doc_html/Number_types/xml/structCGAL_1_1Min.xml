<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Min" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Min</compoundname>
    <includes local="no">CGAL/utils_classes.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Less</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="structCGAL_1_1Min_1a598671c941b9e0df3c21d419bb0099a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Min&lt; T, Less &gt;::Min</definition>
        <argsstring>()</argsstring>
        <name>Min</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/utils_classes.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Min_1a6d8339082f99366dd6d6896571706744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Min&lt; T, Less &gt;::Min</definition>
        <argsstring>(Less c)</argsstring>
        <name>Min</name>
        <param>
          <type>Less</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>The constructed object will use <computeroutput>c</computeroutput> to compare the arguments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/utils_classes.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="structCGAL_1_1Min_1a8a7d0e0ebcfb4f0a27db38cb4a7ef745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::Min&lt; T, Less &gt;::operator()</definition>
        <argsstring>(const T &amp;x, const T &amp;y)</argsstring>
        <name>operator()</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>returns the larger of <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput>, with respect to the order induced by <computeroutput>Less</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/utils_classes.h" line="121" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function object class <computeroutput><ref refid="structCGAL_1_1Min" kindref="compound">Min</ref></computeroutput> returns the smaller of two values. </para>    </briefdescription>
    <detaileddescription>
<para>The order is induced by the second template argument <computeroutput>Less</computeroutput>. The default value for <computeroutput>Less</computeroutput> is <computeroutput>std::less</computeroutput>.</para><para>Note that <computeroutput>T</computeroutput> must be a model of <computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput> in case <computeroutput>std::less</computeroutput> is used.</para><para><xrefsect id="models_1_models000029"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/utils_classes.h" line="97" column="1" bodyfile="CGAL/utils_classes.h" bodystart="97" bodyend="125"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Min_1a598671c941b9e0df3c21d419bb0099a8" prot="public" virt="non-virtual"><scope>CGAL::Min</scope><name>Min</name></member>
      <member refid="structCGAL_1_1Min_1a6d8339082f99366dd6d6896571706744" prot="public" virt="non-virtual"><scope>CGAL::Min</scope><name>Min</name></member>
      <member refid="structCGAL_1_1Min_1a8a7d0e0ebcfb4f0a27db38cb4a7ef745" prot="public" virt="non-virtual"><scope>CGAL::Min</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
