<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgHandlesAndCirculatorsBaseClasses" kind="group">
    <compoundname>PkgHandlesAndCirculatorsBaseClasses</compoundname>
    <title>Base Classes</title>
    <innerclass refid="structCGAL_1_1Forward__circulator__base" prot="public">CGAL::Forward_circulator_base</innerclass>
    <innerclass refid="structCGAL_1_1Bidirectional__circulator__base" prot="public">CGAL::Bidirectional_circulator_base</innerclass>
    <innerclass refid="structCGAL_1_1Random__access__circulator__base" prot="public">CGAL::Random_access_circulator_base</innerclass>
    <innerclass refid="classCGAL_1_1Forward__circulator__ptrbase" prot="public">CGAL::Forward_circulator_ptrbase</innerclass>
    <innerclass refid="classCGAL_1_1Bidirectional__circulator__ptrbase" prot="public">CGAL::Bidirectional_circulator_ptrbase</innerclass>
    <innerclass refid="classCGAL_1_1Random__access__circulator__ptrbase" prot="public">CGAL::Random_access_circulator_ptrbase</innerclass>
    <briefdescription>
<para><bold>Implementation</bold><linebreak/>
 </para>    </briefdescription>
    <detaileddescription>
<para>Since not all current compilers can eliminate the space needed for the compile time tags even when deriving from them, we implement a variant for each base class that contains a protected <computeroutput>void*</computeroutput> data member called <computeroutput>_ptr</computeroutput>. Here, the allocated space in the derived classes can be reused. </para>    </detaileddescription>
  </compounddef>
</doxygen>
