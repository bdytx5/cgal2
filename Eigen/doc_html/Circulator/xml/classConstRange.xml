<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classConstRange" kind="class" language="C++" prot="public">
    <compoundname>ConstRange</compoundname>
    <includes local="no">Concepts/ConstRange.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classConstRange_1a1ba2b0469f2c4590e6653c99cbb9b0ee" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConstRange::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>The constant iterator type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="25" column="1" bodyfile="Concepts/ConstRange.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classConstRange_1a2bb390cea105a66c62315099f2aa964d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ConstRange::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>An unsigned integral type that can represent the size of a range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="31" column="1" bodyfile="Concepts/ConstRange.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Member functions</header>
      <memberdef kind="function" id="classConstRange_1aad28b4b9701ccdb8983c0d2b4f058291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConstRange_1a1ba2b0469f2c4590e6653c99cbb9b0ee" kindref="member">const_iterator</ref></type>
        <definition>const_iterator ConstRange::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns the const iterator pointing to the first element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConstRange_1ade840de3128f66d3daafe0267a4ff060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConstRange_1a1ba2b0469f2c4590e6653c99cbb9b0ee" kindref="member">const_iterator</ref></type>
        <definition>const_iterator ConstRange::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>returns the past-the-end const iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConstRange_1af07369845eeb7227b035ef65afea76f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classConstRange_1a2bb390cea105a66c62315099f2aa964d" kindref="member">size_type</ref></type>
        <definition>size_type ConstRange::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>returns the size of the range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classConstRange_1aacb948e82e44217ebfa28c639f6e711f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConstRange::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>returns whether the range is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ConstRange.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A constant iterator range. Refer to the <computeroutput><ref refid="classRange" kindref="compound">Range</ref></computeroutput> concept for more details. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para>Boost&apos;s <ref refid="classRange" kindref="compound">Range</ref> concept </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000002"><xreftitle>Has Models</xreftitle><xrefdescription><para>STL containers </para><para><ulink url="http://www.boost.org/libs/range/doc/html/range/reference/utilities/iterator_range.html"><computeroutput>boost::iterator_range</computeroutput></ulink> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classRange" kindref="compound">Range</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ConstRange.h" line="16" column="1" bodyfile="Concepts/ConstRange.h" bodystart="16" bodyend="60"/>
    <listofallmembers>
      <member refid="classConstRange_1aad28b4b9701ccdb8983c0d2b4f058291" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>begin</name></member>
      <member refid="classConstRange_1a1ba2b0469f2c4590e6653c99cbb9b0ee" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>const_iterator</name></member>
      <member refid="classConstRange_1aacb948e82e44217ebfa28c639f6e711f" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>empty</name></member>
      <member refid="classConstRange_1ade840de3128f66d3daafe0267a4ff060" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>end</name></member>
      <member refid="classConstRange_1af07369845eeb7227b035ef65afea76f2" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>size</name></member>
      <member refid="classConstRange_1a2bb390cea105a66c62315099f2aa964d" prot="public" virt="non-virtual"><scope>ConstRange</scope><name>size_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
