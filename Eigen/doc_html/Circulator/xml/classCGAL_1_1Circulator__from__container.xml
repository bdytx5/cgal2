<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Circulator__from__container" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Circulator_from_container</compoundname>
    <includes local="no">CGAL/circulator.h</includes>
    <templateparamlist>
      <param>
        <type>typename C</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Circulator__from__container_1a7d40821048e2ecbe9ed219891e109cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circulator_from_container&lt; C &gt;::Circulator_from_container</definition>
        <argsstring>()</argsstring>
        <name>Circulator_from_container</name>
        <briefdescription>
<para>a circulator <computeroutput>c</computeroutput> on an empty sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circulator__from__container_1a4c23a20487d7ee0806fbb3536f224d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circulator_from_container&lt; C &gt;::Circulator_from_container</definition>
        <argsstring>(C *container)</argsstring>
        <name>Circulator_from_container</name>
        <param>
          <type>C *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>a circulator <computeroutput>c</computeroutput> initialized to refer to the first element in <computeroutput>container</computeroutput>, i.e. <computeroutput>container.begin()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The circulator <computeroutput>c</computeroutput> refers to an empty sequence if the <computeroutput>container</computeroutput> is empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circulator__from__container_1a3eeb1dea9e3e2a9ae003b3cc04d78d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circulator_from_container&lt; C &gt;::Circulator_from_container</definition>
        <argsstring>(C *container, C::iterator i)</argsstring>
        <name>Circulator_from_container</name>
        <param>
          <type>C *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>C::iterator</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>a circulator <computeroutput>c</computeroutput> initialized to refer to the element <computeroutput>*i</computeroutput> in <computeroutput>container</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>*i</computeroutput> is dereferenceable and refers to <computeroutput>container</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The adaptor <computeroutput><ref refid="classCGAL_1_1Circulator__from__container" kindref="compound">Circulator_from_container</ref></computeroutput> provides a circulator for an STL container <computeroutput>C</computeroutput> of equal category as the iterator provided by the container. </para>    </briefdescription>
    <detaileddescription>
<para>The iterator must be at least of the forward iterator category. The corresponding non-mutable circulator is called <computeroutput>Const_circulator_from_container&lt;C&gt;</computeroutput>.</para><para>The container type <computeroutput>C</computeroutput> is supposed to conform to the STL requirements for container (i.e. to have a <computeroutput>begin()</computeroutput> and an <computeroutput>end()</computeroutput> iterator as well as the local types <computeroutput>reference</computeroutput>, <computeroutput>const_reference</computeroutput>, <computeroutput>value_type</computeroutput>, <computeroutput>size_type</computeroutput>, and <computeroutput>difference_type</computeroutput>).</para><para><bold>Types</bold><linebreak/>
</para><para>All types required for circulators are provided.</para><para><bold>Operations</bold><linebreak/>
</para><para>The adaptor conforms to the requirements of the corresponding circulator category. An additional member function <computeroutput>current_iterator()</computeroutput> returns the current iterator pointing to the same position as the circulator does.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Container__from__circulator" kindref="compound">Container_from_circulator</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circulator__from__iterator" kindref="compound">Circulator_from_iterator</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCirculator" kindref="compound">Circulator</ref></computeroutput></para></simplesect>
<bold>Example</bold><linebreak/>
</para><para>The following program composes two adaptors - from a container to a circulator and back to an iterator. It applies an STL sort algorithm on a STL vector with three elements. The resulting vector will be <computeroutput>[2 5 9]</computeroutput> as it is checked by the assertions. The program is part of the CGAL distribution.</para><para><linebreak/>
<bold>File</bold> <ref refid="Circulator_2circulator_prog2_8cpp-example" kindref="compound">Circulator/circulator_prog2.cpp</ref> <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/circulator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Circulator__from__container" kindref="compound">CGAL::Circulator_from_container&lt; std::vector&lt;int&gt;</ref><sp/>&gt;<sp/><sp/>Circulator;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Container__from__circulator" kindref="compound">CGAL::Container_from_circulator&lt;Circulator&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Container;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Container::iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iterator;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>v;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>v.push_back(5);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>v.push_back(2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>v.push_back(9);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Circulator<sp/>c(<sp/>&amp;v);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Container<sp/><sp/>container(<sp/>c);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(<sp/>container.begin(),<sp/>container.end());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/>i<sp/>=<sp/>container.begin();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>*i<sp/>==<sp/>2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>i++;<sp/><sp/><sp/><sp/>assert(<sp/>*i<sp/>==<sp/>5);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>i++;<sp/><sp/><sp/><sp/>assert(<sp/>*i<sp/>==<sp/>9);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>i++;<sp/><sp/><sp/><sp/>assert(<sp/><sp/>i<sp/>==<sp/>container.end());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="CGAL/circulator.h" line="151" column="1" bodyfile="CGAL/circulator.h" bodystart="151" bodyend="180"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Circulator__from__container_1a7d40821048e2ecbe9ed219891e109cbe" prot="public" virt="non-virtual"><scope>CGAL::Circulator_from_container</scope><name>Circulator_from_container</name></member>
      <member refid="classCGAL_1_1Circulator__from__container_1a4c23a20487d7ee0806fbb3536f224d9e" prot="public" virt="non-virtual"><scope>CGAL::Circulator_from_container</scope><name>Circulator_from_container</name></member>
      <member refid="classCGAL_1_1Circulator__from__container_1a3eeb1dea9e3e2a9ae003b3cc04d78d2b" prot="public" virt="non-virtual"><scope>CGAL::Circulator_from_container</scope><name>Circulator_from_container</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
