<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgHandlesAndCirculators" kind="group">
    <compoundname>PkgHandlesAndCirculators</compoundname>
    <title>Handles and Circulators Reference</title>
    <innerclass refid="structCGAL_1_1Circulator__traits" prot="public">CGAL::Circulator_traits</innerclass>
    <innergroup refid="group__PkgHandlesAndCirculatorsConcepts">Concepts</innergroup>
    <innergroup refid="group__PkgHandlesAndCirculatorsAdapter">Adapters for Iterators and Containers</innergroup>
    <innergroup refid="group__PkgHandlesAndCirculatorsFunctions">Functions</innergroup>
    <innergroup refid="group__PkgHandlesAndCirculatorsTags">Compile Time Tags</innergroup>
    <innergroup refid="group__PkgHandlesAndCirculatorsAssert">Assertions</innergroup>
    <innergroup refid="group__PkgHandlesAndCirculatorsBaseClasses">Base Classes</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <image type="html" name="circulator.png"></image>
   Olivier Devillers, Lutz Kettner, Sylvain Pion, Michael Seel, and Mariette Yvinec This package descibes handles and circulators. They are related to iterators. Handles allow to dereference but neither to increment nor to decrement. Circulators have no notion of past-the-end, and they are used in CGAL whenever we have cyclic stuctures.  <linebreak/>
   <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dksy-hc-18b">cgal:dksy-hc-18b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="preliminaries_1licensesLGPL" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LGPL</ref> <linebreak/>
 </para><para>The concept of iterators in the STL is tailored for linear sequences.</para><para>CGAL extends this in several directions. First, it supports the notion of <computeroutput><ref refid="classHandle" kindref="compound">Handle</ref></computeroutput> (also sometimes refered to as the trivial iterator) which is used to document that no traversal operation is needed, only reference to an element. It also uses the <computeroutput><ref refid="classRange" kindref="compound">Range</ref></computeroutput> and <computeroutput><ref refid="classConstRange" kindref="compound">ConstRange</ref></computeroutput> concepts which encapsulates the access to both the first and the past-the-end iterators of an iterator range.</para><para>Besides linear sequences, circular sequences also occur naturally in many combinatorial and geometric structures. Examples are polyhedral surfaces and planar maps, where the edges emanating from a vertex or the edges around a facet form a circular sequence.</para><para>We provide several functions, classes and macros to assist in working with circulators: distance computation, adaptor classes converting between circulators and iterators, base classes to ease the implementation of circulators, and support for generic algorithms that work with circulators as well as with iterators.</para><para></para><para><heading level="2">Concepts</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classHandle" kindref="compound">Handle</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classRange" kindref="compound">Range</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classConstRange" kindref="compound">ConstRange</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCirculator" kindref="compound">Circulator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classForwardCirculator" kindref="compound">ForwardCirculator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classBidirectionalCirculator" kindref="compound">BidirectionalCirculator</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classRandomAccessCirculator" kindref="compound">RandomAccessCirculator</ref></computeroutput></para></listitem></itemizedlist>
</para><para><heading level="2">Classes</heading>
</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Container__from__circulator" kindref="compound">CGAL::Container_from_circulator</ref>&lt;C&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circulator__from__iterator" kindref="compound">CGAL::Circulator_from_iterator</ref>&lt;I&gt;</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Circulator__from__container" kindref="compound">CGAL::Circulator_from_container</ref>&lt;C&gt;</computeroutput></para></listitem><listitem><para><ref refid="classCGAL_1_1Circulator__from__container" kindref="compound"><computeroutput>CGAL::Const_circulator_from_container&lt;C&gt;</computeroutput> </ref></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Circulator__tag" kindref="compound">CGAL::Circulator_tag</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Iterator__tag" kindref="compound">CGAL::Iterator_tag</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Forward__circulator__tag" kindref="compound">CGAL::Forward_circulator_tag</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Bidirectional__circulator__tag" kindref="compound">CGAL::Bidirectional_circulator_tag</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Random__access__circulator__tag" kindref="compound">CGAL::Random_access_circulator_tag</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Circulator__base" kindref="compound">CGAL::Circulator_base</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Forward__circulator__base" kindref="compound">CGAL::Forward_circulator_base</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Bidirectional__circulator__base" kindref="compound">CGAL::Bidirectional_circulator_base</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Random__access__circulator__base" kindref="compound">CGAL::Random_access_circulator_base</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Circulator__traits" kindref="compound">CGAL::Circulator_traits</ref>&lt;C&gt;</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
