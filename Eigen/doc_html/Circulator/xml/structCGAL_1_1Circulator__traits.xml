<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Circulator__traits" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Circulator_traits</compoundname>
    <includes local="no">CGAL/circulator.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>C</declname>
        <defname>C</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Circulator__traits_1ab2e4d7455faba1f9691ff131f9e55122" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Circulator_traits&lt; C &gt;::category</definition>
        <argsstring></argsstring>
        <name>category</name>
        <briefdescription>
<para>either <computeroutput><ref refid="structCGAL_1_1Iterator__tag" kindref="compound">Iterator_tag</ref></computeroutput> or <computeroutput><ref refid="structCGAL_1_1Circulator__tag" kindref="compound">Circulator_tag</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="352" column="1" bodyfile="CGAL/circulator.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Circulator__traits_1ae7831013cf3c859246d2d1268461f5a0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Circulator_traits&lt; C &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
<para>corresponding iterator category for circulators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="358" column="1" bodyfile="CGAL/circulator.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Circulator__traits_1ae2e6fd2d23e124a2c3969d0288d986ea" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Circulator_traits&lt; C &gt;::circulator_category</definition>
        <argsstring></argsstring>
        <name>circulator_category</name>
        <briefdescription>
<para>corresponding circulator category for iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/circulator.h" line="364" column="1" bodyfile="CGAL/circulator.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The circulator traits class distinguishes between circulators and iterators. </para>    </briefdescription>
    <detaileddescription>
<para>It defines a local type <computeroutput>category</computeroutput> that is identical to the type <computeroutput><ref refid="structCGAL_1_1Circulator__tag" kindref="compound">Circulator_tag</ref></computeroutput> if the iterator category of the argument <computeroutput>C</computeroutput> is a circulator category. Otherwise it is identical to the type <computeroutput><ref refid="structCGAL_1_1Iterator__tag" kindref="compound">Iterator_tag</ref></computeroutput>.</para><para>The local type <computeroutput>iterator_category</computeroutput> gives the corresponding iterator category for circulators, i.e. one of <computeroutput>forward_iterator_tag</computeroutput>, <computeroutput>bidirectional_iterator_tag</computeroutput>, or <computeroutput>random_access_iterator_tag</computeroutput>.</para><para>The local type <computeroutput>circulator_category</computeroutput> gives the corresponding circulator category for iterators, i.e. one of <computeroutput><ref refid="structCGAL_1_1Forward__circulator__tag" kindref="compound">Forward_circulator_tag</ref></computeroutput>, <computeroutput><ref refid="structCGAL_1_1Bidirectional__circulator__tag" kindref="compound">Bidirectional_circulator_tag</ref></computeroutput>, or <computeroutput><ref refid="structCGAL_1_1Random__access__circulator__tag" kindref="compound">Random_access_circulator_tag</ref></computeroutput>.</para><para><bold>Example</bold><linebreak/>
</para><para>A generic function <computeroutput>bar()</computeroutput> that distinguishes between a call with a circulator range and a call with an iterator range:</para><para><programlisting><codeline><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bar(<sp/>I<sp/>i,<sp/>I<sp/>j,<sp/><ref refid="structCGAL_1_1Iterator__tag" kindref="compound">CGAL::Iterator_tag</ref>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgHandlesAndCirculatorsAssert_1ga28a51d41a222f90c19b75bc6f5e1155f" kindref="member">CGAL::Assert_iterator</ref>(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>for<sp/>iterator<sp/>ranges<sp/>[i,j).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bar(<sp/>C<sp/>c,<sp/>C<sp/>d,<sp/><ref refid="structCGAL_1_1Circulator__tag" kindref="compound">CGAL::Circulator_tag</ref>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgHandlesAndCirculatorsAssert_1ga7cbd5c6db884f5a4aace399c337d31b9" kindref="member">CGAL::Assert_circulator</ref>(c);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>for<sp/>circulator<sp/>ranges<sp/>[c,d).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IC&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bar(<sp/>IC<sp/>i,<sp/>IC<sp/>j)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>calls<sp/>the<sp/>correct<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bar(<sp/>i,<sp/>j,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">CGAL::Circulator_traits&lt;IC&gt;::category</ref>());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="CGAL/circulator.h" line="343" column="1" bodyfile="CGAL/circulator.h" bodystart="343" bodyend="368"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Circulator__traits_1ab2e4d7455faba1f9691ff131f9e55122" prot="public" virt="non-virtual"><scope>CGAL::Circulator_traits</scope><name>category</name></member>
      <member refid="structCGAL_1_1Circulator__traits_1ae2e6fd2d23e124a2c3969d0288d986ea" prot="public" virt="non-virtual"><scope>CGAL::Circulator_traits</scope><name>circulator_category</name></member>
      <member refid="structCGAL_1_1Circulator__traits_1ae7831013cf3c859246d2d1268461f5a0" prot="public" virt="non-virtual"><scope>CGAL::Circulator_traits</scope><name>iterator_category</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
