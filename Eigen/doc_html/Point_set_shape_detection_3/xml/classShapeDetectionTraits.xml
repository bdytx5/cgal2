<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classShapeDetectionTraits" kind="class" language="C++" prot="public">
    <compoundname>ShapeDetectionTraits</compoundname>
    <includes local="no">Concepts/ShapeDetectionTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1abf965fac8dcfb789747f110bb18c7b6f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
<para>The point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="24" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a473ebe1f0ff9bb63ce8af7be54e20568" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Vector_3</definition>
        <argsstring></argsstring>
        <name>Vector_3</name>
        <briefdescription>
<para>The vector type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="26" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a47684d8c5ad216550615a353d338f434" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Sphere_3</definition>
        <argsstring></argsstring>
        <name>Sphere_3</name>
        <briefdescription>
<para>The sphere type, only required if you want to detect spheres or tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="28" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ac72b445d5b46ea887405c70a5c7e9216" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Line_3</definition>
        <argsstring></argsstring>
        <name>Line_3</name>
        <briefdescription>
<para>The line type, only required if you want to detect cylinders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="30" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ac9294997db7a533b544e87b803c6fc6d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Plane_3</definition>
        <argsstring></argsstring>
        <name>Plane_3</name>
        <briefdescription>
<para>The plane type, only required if you want to detect planes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="32" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1acaaad69da836bccce126a88ab83945a5" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <briefdescription>
<para>The 2D point type, only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="34" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a1f0577b5d4d3dbb055e4bcd8776f0fbb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Circle_2</definition>
        <argsstring></argsstring>
        <name>Circle_2</name>
        <briefdescription>
<para>The circle type, only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="36" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a473ebe1f0ff9bb63ce8af7be54e20568" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Vector_3</definition>
        <argsstring></argsstring>
        <name>Vector_3</name>
        <briefdescription>
<para>The 2D vector type, only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="38" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a60708ad3df321149b26b2d3312da1845" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>The number type of the Cartesian coordinates of types Point_3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="41" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a5df2dcb6c7896a57a0179e5c23c0243b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Input_range</definition>
        <argsstring></argsstring>
        <name>Input_range</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> with random access iterators, providing input points and normals through the two property maps <computeroutput>Point_map</computeroutput> and <computeroutput>Normal_map</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="45" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a00d5850f6bc79bcf51472fcced5c8652" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Point_map</definition>
        <argsstring></argsstring>
        <name>Point_map</name>
        <briefdescription>
<para>A model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>std::iterator_traits&lt;Input_range::iterator&gt;::value_type</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="49" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a56446d1726cfbe9401a175d108ebd16f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Normal_map</definition>
        <argsstring></argsstring>
        <name>Normal_map</name>
        <briefdescription>
<para>A model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>std::iterator_traits&lt;Input_range::iterator&gt;::value_type</computeroutput> as key type and <computeroutput>Vector_3</computeroutput> as value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="53" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a517e4cdfdda3ea5f2fbfc1fffea52ff3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Search_traits</definition>
        <argsstring></argsstring>
        <name>Search_traits</name>
        <briefdescription>
<para>a model of <computeroutput><ref refid="classSearchTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">SearchTraits</ref></computeroutput> where <computeroutput>SearchTraits::point_d</computeroutput> is <computeroutput>Point_3</computeroutput>, <computeroutput><ref refid="classSearchTraits_1a0747aa4e30e20dd0a052d086e981ebe4" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">SearchTraits::Dimension</ref></computeroutput> is <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Dimension_tag</ref>&lt;3&gt;</computeroutput>, and <computeroutput><ref refid="classSearchTraits_1aa4641fbf5d2f1d4a55f2e7fa24c5da23" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">SearchTraits::FT</ref></computeroutput> is <computeroutput>FT</computeroutput>, </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="59" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a1ecc80138521fa8cb5b2290f670dfcee" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_point_3</definition>
        <argsstring></argsstring>
        <name>Construct_point_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Point_3 operator()(Origin p)</computeroutput> returning the point with 0, 0, 0 as Cartesian coordinates and <computeroutput>Point_3 operator()(FT x, FT y, FT z)</computeroutput> returning the point with <computeroutput>x</computeroutput>, <computeroutput>y</computeroutput> and <computeroutput>z</computeroutput> as Cartesian coordinates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="68" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a459a492bfe6be1374acde85c375c6dd6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_vector_3</definition>
        <argsstring></argsstring>
        <name>Construct_vector_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Vector_3 operator()(Point_3 p1, Point_3 p2)</computeroutput> and <computeroutput>Vector_3 operator()(Origin p1, Point_3 p2)</computeroutput> returning the vector <computeroutput>p1p2</computeroutput>, <computeroutput>Vector_3 operator()(NULL_VECTOR)</computeroutput> returning the null vector, and <computeroutput>Vector_3 operator()(Line_3 l)</computeroutput> returning a vector having the same direction as <computeroutput>l</computeroutput> (this last one is only required if you want to detect cylinders). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="79" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a9647838af03e3057c466f607f5778b54" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_sphere_3</definition>
        <argsstring></argsstring>
        <name>Construct_sphere_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Sphere_3 operator()(Point_3 c, FT r)</computeroutput> returning the sphere of center <computeroutput>p</computeroutput> and radius <computeroutput>r</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect spheres or tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="86" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1aa93609cc1a836ccd22feed4fed9102aa" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_line_3</definition>
        <argsstring></argsstring>
        <name>Construct_line_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Line_3 operator()(Point_3 p, Vector_3 d)</computeroutput> returning the line going through <computeroutput>p</computeroutput> in the direction of <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect cylinders. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="93" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a6dcf63dfe463ba5064f09a69f8ef8dcd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_point_on_3</definition>
        <argsstring></argsstring>
        <name>Construct_point_on_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Point_3 operator()(Line_3 l, int i)</computeroutput> returning an arbitrary point on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>i</computeroutput> is not used and can vbe of any value. Only required if you want to detect cylinders. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="102" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a4265dbce278cb0d9ba6b47c1da6ebe9f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_point_2</definition>
        <argsstring></argsstring>
        <name>Construct_point_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Point_2 operator()(FT x, FT y)</computeroutput> returning the 2D point with <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> as Cartesian coordinates. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="110" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a90033fdd326510fd7a266fe481be89b8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_vector_2</definition>
        <argsstring></argsstring>
        <name>Construct_vector_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Vector_2 operator()(Point_2 p1, Point_2 p2)</computeroutput> returning the vector <computeroutput>p1p2</computeroutput>, <computeroutput>Vector_2 operator()(NULL_VECTOR)</computeroutput> returning the null vector. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="119" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1aeb10fc1e976f1ce048582468c75f8bc7" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_circle_2</definition>
        <argsstring></argsstring>
        <name>Construct_circle_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Circle_2 operator()(Point_2 p1, Point_2 p2, Point_2 p3)</computeroutput> returning the circle going through <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput> and <computeroutput>p3</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="127" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a467edb2d9bd20eee24ac7fc1641c51dd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_x_3</definition>
        <argsstring></argsstring>
        <name>Compute_x_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Point_3 p)</computeroutput> and <computeroutput>FT operator()(Vector_3 v)</computeroutput> returning the <computeroutput>x</computeroutput> coordinate of a point and a vector respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="134" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ac9152549fb7ce1471817b5494b75f816" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_y_3</definition>
        <argsstring></argsstring>
        <name>Compute_y_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Point_3 p)</computeroutput> and <computeroutput>FT operator()(Vector_3 v)</computeroutput> returning the <computeroutput>y</computeroutput> coordinate of a point and a vector respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="141" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ad1d00ed53ebe00517e16d7f755ff005f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_z_3</definition>
        <argsstring></argsstring>
        <name>Compute_z_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Point_3 p)</computeroutput> and <computeroutput>FT operator()(Vector_3 v)</computeroutput> returning the <computeroutput>z</computeroutput> coordinate of a point and a vector respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="148" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a17782a4e5a0c14bd7a2519a6a2f901bd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_x_2</definition>
        <argsstring></argsstring>
        <name>Compute_x_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Point_2 p)</computeroutput> and <computeroutput>FT operator()(Vector_2 v)</computeroutput> returning the <computeroutput>x</computeroutput> coordinate of a point and a vector respectively. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="156" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1af189cde632bc972e0ed4b4994479248d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_y_2</definition>
        <argsstring></argsstring>
        <name>Compute_y_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Point_2 p)</computeroutput> and <computeroutput>FT operator()(Vector_2 v)</computeroutput> returning the <computeroutput>y</computeroutput> coordinate of a point and a vector respectively. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="164" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1afa92c211cf2db407caa8c0b50d4c14c6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_squared_length_3</definition>
        <argsstring></argsstring>
        <name>Compute_squared_length_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Vector_3 v)</computeroutput> returning the squared length of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="171" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a8431466ae0a43794383d50a58d40724e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_squared_length_2</definition>
        <argsstring></argsstring>
        <name>Compute_squared_length_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Vector_2 v)</computeroutput> returning the squared length of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="179" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ab209082d6173e8495c8f9453aaf8cc34" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_scaled_vector_3</definition>
        <argsstring></argsstring>
        <name>Construct_scaled_vector_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Vector_3 operator()(Vector_3 v, FT t)</computeroutput> returning the vector <computeroutput>t * v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="186" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ad9dce7020933f38df84134b3e4f7ff97" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_sum_of_vectors_3</definition>
        <argsstring></argsstring>
        <name>Construct_sum_of_vectors_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Vector_3 operator()(Vector_3 v1, Vector_3 v2)</computeroutput> returning the <computeroutput>v1+v2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="193" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ad84b107c18ce79e10c888a51009f33f5" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_translated_point_3</definition>
        <argsstring></argsstring>
        <name>Construct_translated_point_3</name>
        <briefdescription>
<para>Function object type that provides: <computeroutput>Point_3 operator()(Point_3 p, Vector_3 v)</computeroutput> returning the point obtained by translating <computeroutput>p</computeroutput> by the vector <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="200" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a031c2a0c09342082c418dcd438e20548" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_scalar_product_3</definition>
        <argsstring></argsstring>
        <name>Compute_scalar_product_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Vector_3 v1, Vector_3 v2)</computeroutput> returning the scalar product of <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="207" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1aed07517d0ad813828ad4045e38b99238" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_cross_product_vector_3</definition>
        <argsstring></argsstring>
        <name>Construct_cross_product_vector_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Vector_3 operator()(Vector_3 v1, Vector_3 v2)</computeroutput> returning the cross-product vector of <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="214" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1ab3cc1bb1f1f755967ad472fe4de637e2" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_center_3</definition>
        <argsstring></argsstring>
        <name>Construct_center_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Point_3 operator()(Sphere_3 s)</computeroutput> returning the center of the sphere <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect spheres or tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="222" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1abb56314c9d8192ce5bca2f1566c4f71c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Construct_center_2</definition>
        <argsstring></argsstring>
        <name>Construct_center_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>Point_2 operator()(Circle_2 c)</computeroutput> returning the center of the circle <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="230" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1afeadf7343e71e8f6a851e2cb42eac2ab" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_squared_radius_3</definition>
        <argsstring></argsstring>
        <name>Compute_squared_radius_3</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Sphere_3 s)</computeroutput> returning the squared radius of the sphere <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect spheres or tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="238" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1a6f93146aff9173c8621b791abc3d91ad" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Compute_squared_radius_2</definition>
        <argsstring></argsstring>
        <name>Compute_squared_radius_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>FT operator()(Circle_2 c)</computeroutput> returning the squared radius of the circle <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="246" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classShapeDetectionTraits_1abf10c9350f6719c6d37e3257a82cb4c6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ShapeDetectionTraits::Collinear_2</definition>
        <argsstring></argsstring>
        <name>Collinear_2</name>
        <briefdescription>
<para>Function object type that provides <computeroutput>bool operator(Point_2 p, Point_2 q, Point_2 r)</computeroutput> returning true if the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are collinear and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>Only required if you want to detect tori. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="255" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to Function Objects</header>
      <memberdef kind="function" id="classShapeDetectionTraits_1a461e7ea4fe736d6e74dcad243f3ec8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a1ecc80138521fa8cb5b2290f670dfcee" kindref="member">Construct_point_3</ref></type>
        <definition>Construct_point_3 ShapeDetectionTraits::construct_point_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_point_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1ac5335bb6d0c810a75cb69567b7cba2b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a459a492bfe6be1374acde85c375c6dd6" kindref="member">Construct_vector_3</ref></type>
        <definition>Construct_vector_3 ShapeDetectionTraits::construct_vector_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_vector_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a2d3151d3b8d1fc6eb072cdb8713ff406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a9647838af03e3057c466f607f5778b54" kindref="member">Construct_sphere_3</ref></type>
        <definition>Construct_sphere_3 ShapeDetectionTraits::construct_sphere_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_sphere_3_object</name>
        <briefdescription>
<para>Only required if you want to detect spheres or tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1aa407008f6a65bd63da8a31488b811ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1aa93609cc1a836ccd22feed4fed9102aa" kindref="member">Construct_line_3</ref></type>
        <definition>Construct_line_3 ShapeDetectionTraits::construct_line_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_line_3_object</name>
        <briefdescription>
<para>Only required if you want to detect cylinders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a823fc93419b032a8c136ac8f7ee0dfb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a6dcf63dfe463ba5064f09a69f8ef8dcd" kindref="member">Construct_point_on_3</ref></type>
        <definition>Construct_point_on_3 ShapeDetectionTraits::construct_point_on_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_point_on_3_object</name>
        <briefdescription>
<para>Only required if you want to detect cylinders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1ae81b1be49d6e6bae74856874d17afcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a4265dbce278cb0d9ba6b47c1da6ebe9f" kindref="member">Construct_point_2</ref></type>
        <definition>Construct_point_2 ShapeDetectionTraits::construct_point_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_point_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a8f869183708b950a5e476d7530135409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a90033fdd326510fd7a266fe481be89b8" kindref="member">Construct_vector_2</ref></type>
        <definition>Construct_vector_2 ShapeDetectionTraits::construct_vector_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_vector_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a9c66ec26506771dc2ffc1239d11f0690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1aeb10fc1e976f1ce048582468c75f8bc7" kindref="member">Construct_circle_2</ref></type>
        <definition>Construct_circle_2 ShapeDetectionTraits::construct_circle_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_circle_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a2cb6760e618116ae29c7b6624749ff6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a467edb2d9bd20eee24ac7fc1641c51dd" kindref="member">Compute_x_3</ref></type>
        <definition>Compute_x_3 ShapeDetectionTraits::compute_x_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_x_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1adaa5d2ee72a1b66aa15077510103c01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ac9152549fb7ce1471817b5494b75f816" kindref="member">Compute_y_3</ref></type>
        <definition>Compute_y_3 ShapeDetectionTraits::compute_y_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_y_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a45f340be37f8043c0d9447ff1166b483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ad1d00ed53ebe00517e16d7f755ff005f" kindref="member">Compute_z_3</ref></type>
        <definition>Compute_z_3 ShapeDetectionTraits::compute_z_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_z_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1af8143100a5b4a2cbd62a97a42379e759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a17782a4e5a0c14bd7a2519a6a2f901bd" kindref="member">Compute_x_2</ref></type>
        <definition>Compute_x_2 ShapeDetectionTraits::compute_x_2_object</definition>
        <argsstring>()</argsstring>
        <name>compute_x_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1ab780105fbd6c84971475bdb2a138f83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1af189cde632bc972e0ed4b4994479248d" kindref="member">Compute_y_2</ref></type>
        <definition>Compute_y_2 ShapeDetectionTraits::compute_y_2_object</definition>
        <argsstring>()</argsstring>
        <name>compute_y_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a4e32c3bd152c209a94f44faa69cbceea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1afa92c211cf2db407caa8c0b50d4c14c6" kindref="member">Compute_squared_length_3</ref></type>
        <definition>Compute_squared_length_3 ShapeDetectionTraits::compute_squared_length_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_length_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a666e08ab86f83150a0fe6650466bc5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a8431466ae0a43794383d50a58d40724e" kindref="member">Compute_squared_length_2</ref></type>
        <definition>Compute_squared_length_2 ShapeDetectionTraits::compute_squared_length_2_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_length_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1acde95608ab97de8e3f91c167f9754000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ab209082d6173e8495c8f9453aaf8cc34" kindref="member">Construct_scaled_vector_3</ref></type>
        <definition>Construct_scaled_vector_3 ShapeDetectionTraits::construct_scaled_vector_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_scaled_vector_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1aecfa8cf523ec0d302e8b891cbf84dc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ad9dce7020933f38df84134b3e4f7ff97" kindref="member">Construct_sum_of_vectors_3</ref></type>
        <definition>Construct_sum_of_vectors_3 ShapeDetectionTraits::construct_sum_of_vectors_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_sum_of_vectors_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a9a4d91e3f1cdaac5ea9e4f54f1779097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a031c2a0c09342082c418dcd438e20548" kindref="member">Compute_scalar_product_3</ref></type>
        <definition>Compute_scalar_product_3 ShapeDetectionTraits::compute_scalar_product_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_scalar_product_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1af8c732ca7d36fc16a09118541d4ee447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1aed07517d0ad813828ad4045e38b99238" kindref="member">Construct_cross_product_vector_3</ref></type>
        <definition>Construct_cross_product_vector_3 ShapeDetectionTraits::construct_cross_product_vector_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_cross_product_vector_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a0a2426cbc3fb05b842500fda1de8ada3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ad84b107c18ce79e10c888a51009f33f5" kindref="member">Construct_translated_point_3</ref></type>
        <definition>Construct_translated_point_3 ShapeDetectionTraits::construct_translated_point_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_translated_point_3_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a077dc675d473eea39146904727798539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1ab3cc1bb1f1f755967ad472fe4de637e2" kindref="member">Construct_center_3</ref></type>
        <definition>Construct_center_3 ShapeDetectionTraits::construct_center_3_object</definition>
        <argsstring>()</argsstring>
        <name>construct_center_3_object</name>
        <briefdescription>
<para>Only required if you want to detect spheres. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1ae05dd3104997e180e1a33efed0561862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1abb56314c9d8192ce5bca2f1566c4f71c" kindref="member">Construct_center_2</ref></type>
        <definition>Construct_center_2 ShapeDetectionTraits::construct_center_2_object</definition>
        <argsstring>()</argsstring>
        <name>construct_center_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a46745a2213099c9319ee0e593e0b887b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1afeadf7343e71e8f6a851e2cb42eac2ab" kindref="member">Compute_squared_radius_3</ref></type>
        <definition>Compute_squared_radius_3 ShapeDetectionTraits::compute_squared_radius_3_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_radius_3_object</name>
        <briefdescription>
<para>Only required if you want to detect spheres or tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a91e9f7d22aafc0d67dbe87f52bdcf6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1a6f93146aff9173c8621b791abc3d91ad" kindref="member">Compute_squared_radius_2</ref></type>
        <definition>Compute_squared_radius_2 ShapeDetectionTraits::compute_squared_radius_2_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_radius_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classShapeDetectionTraits_1a27b823a3bd63f36b72ec40024e9e41b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classShapeDetectionTraits_1abf10c9350f6719c6d37e3257a82cb4c6" kindref="member">Collinear_2</ref></type>
        <definition>Collinear_2 ShapeDetectionTraits::collinear_2_object</definition>
        <argsstring>()</argsstring>
        <name>collinear_2_object</name>
        <briefdescription>
<para>Only required if you want to detect tori. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ShapeDetectionTraits.h" line="349" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concept describing the set of types required by the class <computeroutput><ref refid="classCGAL_1_1Shape__detection__3_1_1Efficient__RANSAC" kindref="compound">CGAL::Shape_detection_3::Efficient_RANSAC</ref></computeroutput> and all shape classes. </para>    </briefdescription>
    <detaileddescription>
<para> To avoid copying potentially large input data, the shape detection class <computeroutput><ref refid="classCGAL_1_1Shape__detection__3_1_1Efficient__RANSAC" kindref="compound">CGAL::Shape_detection_3::Efficient_RANSAC</ref></computeroutput> will work on the input data directly and no internal copy will be made. For this reason, the input data has to be provided in form of a random access iterator. Point and normal property maps have to be provided to extract the points and the normals from the input.</para><para><xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="structCGAL_1_1Shape__detection__3_1_1Shape__detection__traits" kindref="compound">CGAL::Shape_detection_3::Shape_detection_traits</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/ShapeDetectionTraits.h" line="17" column="1" bodyfile="Concepts/ShapeDetectionTraits.h" bodystart="17" bodyend="352"/>
    <listofallmembers>
      <member refid="classShapeDetectionTraits_1a1f0577b5d4d3dbb055e4bcd8776f0fbb" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Circle_2</name></member>
      <member refid="classShapeDetectionTraits_1abf10c9350f6719c6d37e3257a82cb4c6" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Collinear_2</name></member>
      <member refid="classShapeDetectionTraits_1a27b823a3bd63f36b72ec40024e9e41b0" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>collinear_2_object</name></member>
      <member refid="classShapeDetectionTraits_1a031c2a0c09342082c418dcd438e20548" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_scalar_product_3</name></member>
      <member refid="classShapeDetectionTraits_1a9a4d91e3f1cdaac5ea9e4f54f1779097" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_scalar_product_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a8431466ae0a43794383d50a58d40724e" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_squared_length_2</name></member>
      <member refid="classShapeDetectionTraits_1a666e08ab86f83150a0fe6650466bc5d0" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_squared_length_2_object</name></member>
      <member refid="classShapeDetectionTraits_1afa92c211cf2db407caa8c0b50d4c14c6" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_squared_length_3</name></member>
      <member refid="classShapeDetectionTraits_1a4e32c3bd152c209a94f44faa69cbceea" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_squared_length_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a6f93146aff9173c8621b791abc3d91ad" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_squared_radius_2</name></member>
      <member refid="classShapeDetectionTraits_1a91e9f7d22aafc0d67dbe87f52bdcf6f3" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_squared_radius_2_object</name></member>
      <member refid="classShapeDetectionTraits_1afeadf7343e71e8f6a851e2cb42eac2ab" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_squared_radius_3</name></member>
      <member refid="classShapeDetectionTraits_1a46745a2213099c9319ee0e593e0b887b" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_squared_radius_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a17782a4e5a0c14bd7a2519a6a2f901bd" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_x_2</name></member>
      <member refid="classShapeDetectionTraits_1af8143100a5b4a2cbd62a97a42379e759" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_x_2_object</name></member>
      <member refid="classShapeDetectionTraits_1a467edb2d9bd20eee24ac7fc1641c51dd" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_x_3</name></member>
      <member refid="classShapeDetectionTraits_1a2cb6760e618116ae29c7b6624749ff6f" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_x_3_object</name></member>
      <member refid="classShapeDetectionTraits_1af189cde632bc972e0ed4b4994479248d" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_y_2</name></member>
      <member refid="classShapeDetectionTraits_1ab780105fbd6c84971475bdb2a138f83b" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_y_2_object</name></member>
      <member refid="classShapeDetectionTraits_1ac9152549fb7ce1471817b5494b75f816" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_y_3</name></member>
      <member refid="classShapeDetectionTraits_1adaa5d2ee72a1b66aa15077510103c01c" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_y_3_object</name></member>
      <member refid="classShapeDetectionTraits_1ad1d00ed53ebe00517e16d7f755ff005f" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Compute_z_3</name></member>
      <member refid="classShapeDetectionTraits_1a45f340be37f8043c0d9447ff1166b483" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>compute_z_3_object</name></member>
      <member refid="classShapeDetectionTraits_1abb56314c9d8192ce5bca2f1566c4f71c" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_center_2</name></member>
      <member refid="classShapeDetectionTraits_1ae05dd3104997e180e1a33efed0561862" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_center_2_object</name></member>
      <member refid="classShapeDetectionTraits_1ab3cc1bb1f1f755967ad472fe4de637e2" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_center_3</name></member>
      <member refid="classShapeDetectionTraits_1a077dc675d473eea39146904727798539" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_center_3_object</name></member>
      <member refid="classShapeDetectionTraits_1aeb10fc1e976f1ce048582468c75f8bc7" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_circle_2</name></member>
      <member refid="classShapeDetectionTraits_1a9c66ec26506771dc2ffc1239d11f0690" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_circle_2_object</name></member>
      <member refid="classShapeDetectionTraits_1aed07517d0ad813828ad4045e38b99238" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_cross_product_vector_3</name></member>
      <member refid="classShapeDetectionTraits_1af8c732ca7d36fc16a09118541d4ee447" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_cross_product_vector_3_object</name></member>
      <member refid="classShapeDetectionTraits_1aa93609cc1a836ccd22feed4fed9102aa" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_line_3</name></member>
      <member refid="classShapeDetectionTraits_1aa407008f6a65bd63da8a31488b811ee4" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_line_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a4265dbce278cb0d9ba6b47c1da6ebe9f" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_point_2</name></member>
      <member refid="classShapeDetectionTraits_1ae81b1be49d6e6bae74856874d17afcde" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_point_2_object</name></member>
      <member refid="classShapeDetectionTraits_1a1ecc80138521fa8cb5b2290f670dfcee" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_point_3</name></member>
      <member refid="classShapeDetectionTraits_1a461e7ea4fe736d6e74dcad243f3ec8dc" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_point_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a6dcf63dfe463ba5064f09a69f8ef8dcd" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_point_on_3</name></member>
      <member refid="classShapeDetectionTraits_1a823fc93419b032a8c136ac8f7ee0dfb8" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_point_on_3_object</name></member>
      <member refid="classShapeDetectionTraits_1ab209082d6173e8495c8f9453aaf8cc34" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_scaled_vector_3</name></member>
      <member refid="classShapeDetectionTraits_1acde95608ab97de8e3f91c167f9754000" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_scaled_vector_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a9647838af03e3057c466f607f5778b54" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_sphere_3</name></member>
      <member refid="classShapeDetectionTraits_1a2d3151d3b8d1fc6eb072cdb8713ff406" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_sphere_3_object</name></member>
      <member refid="classShapeDetectionTraits_1ad9dce7020933f38df84134b3e4f7ff97" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_sum_of_vectors_3</name></member>
      <member refid="classShapeDetectionTraits_1aecfa8cf523ec0d302e8b891cbf84dc25" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_sum_of_vectors_3_object</name></member>
      <member refid="classShapeDetectionTraits_1ad84b107c18ce79e10c888a51009f33f5" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_translated_point_3</name></member>
      <member refid="classShapeDetectionTraits_1a0a2426cbc3fb05b842500fda1de8ada3" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_translated_point_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a90033fdd326510fd7a266fe481be89b8" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_vector_2</name></member>
      <member refid="classShapeDetectionTraits_1a8f869183708b950a5e476d7530135409" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_vector_2_object</name></member>
      <member refid="classShapeDetectionTraits_1a459a492bfe6be1374acde85c375c6dd6" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Construct_vector_3</name></member>
      <member refid="classShapeDetectionTraits_1ac5335bb6d0c810a75cb69567b7cba2b3" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>construct_vector_3_object</name></member>
      <member refid="classShapeDetectionTraits_1a60708ad3df321149b26b2d3312da1845" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>FT</name></member>
      <member refid="classShapeDetectionTraits_1a5df2dcb6c7896a57a0179e5c23c0243b" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Input_range</name></member>
      <member refid="classShapeDetectionTraits_1ac72b445d5b46ea887405c70a5c7e9216" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Line_3</name></member>
      <member refid="classShapeDetectionTraits_1a56446d1726cfbe9401a175d108ebd16f" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Normal_map</name></member>
      <member refid="classShapeDetectionTraits_1ac9294997db7a533b544e87b803c6fc6d" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Plane_3</name></member>
      <member refid="classShapeDetectionTraits_1acaaad69da836bccce126a88ab83945a5" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Point_2</name></member>
      <member refid="classShapeDetectionTraits_1abf965fac8dcfb789747f110bb18c7b6f" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Point_3</name></member>
      <member refid="classShapeDetectionTraits_1a00d5850f6bc79bcf51472fcced5c8652" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Point_map</name></member>
      <member refid="classShapeDetectionTraits_1a517e4cdfdda3ea5f2fbfc1fffea52ff3" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Search_traits</name></member>
      <member refid="classShapeDetectionTraits_1a47684d8c5ad216550615a353d338f434" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Sphere_3</name></member>
      <member refid="classShapeDetectionTraits_1a473ebe1f0ff9bb63ce8af7be54e20568" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Vector_3</name></member>
      <member refid="classShapeDetectionTraits_1a473ebe1f0ff9bb63ce8af7be54e20568" prot="public" virt="non-virtual"><scope>ShapeDetectionTraits</scope><name>Vector_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
