<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classModularTraits_1_1ModularImage" kind="class" language="C++" prot="public">
    <compoundname>ModularTraits::ModularImage</compoundname>
    <includes local="no">Concepts/ModularTraits--ModularImage.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classModularTraits_1_1ModularImage_1a54313671621075951f43b3fca9a7863a" prot="public" static="no">
        <type><ref refid="classModularTraits_1a6b93b0135a50a20a8f77433664a1942c" kindref="member">ModularTraits::Residue_type</ref></type>
        <definition>typedef ModularTraits::Residue_type ModularTraits::ModularImage::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ModularTraits--ModularImage.h" line="28" column="1" bodyfile="Concepts/ModularTraits--ModularImage.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classModularTraits_1_1ModularImage_1aee26e4d4a64f6a72935c62aeb17964af" prot="public" static="no">
        <type><ref refid="classModularTraits_1abfb87e0c52d348b7e788222ecc8499b6" kindref="member">ModularTraits::Type</ref></type>
        <definition>typedef ModularTraits::Type ModularTraits::ModularImage::argument_type</definition>
        <argsstring></argsstring>
        <name>argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ModularTraits--ModularImage.h" line="33" column="1" bodyfile="Concepts/ModularTraits--ModularImage.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classModularTraits_1_1ModularImage_1a3de1fb2d668fd17a13013abf1189c2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classModularTraits_1_1ModularImage_1a54313671621075951f43b3fca9a7863a" kindref="member">result_type</ref></type>
        <definition>result_type ModularTraits::ModularImage::operator()</definition>
        <argsstring>(const argument_type &amp;x)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classModularTraits_1_1ModularImage_1aee26e4d4a64f6a72935c62aeb17964af" kindref="member">argument_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>computes <formula id="10">$ \varphi(x)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ModularTraits--ModularImage.h" line="41" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <computeroutput><ref refid="classAdaptableUnaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableUnaryFunction</ref></computeroutput> computes the modular image of the given value with respect to a homomorphism <formula id="8">$ \varphi$</formula> from the <computeroutput><ref refid="classModularTraits_1abfb87e0c52d348b7e788222ecc8499b6" kindref="member">ModularTraits::Type</ref></computeroutput> into the <computeroutput><ref refid="classModularTraits_1a6b93b0135a50a20a8f77433664a1942c" kindref="member">ModularTraits::Residue_type</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> The homomorphism preserves the mapping of <computeroutput>int</computeroutput> into both types , i.e., <formula id="9">$ \varphi(\mathrm{Type}(i)) == \mathrm{Residue\_type}(i)$</formula>.</para><para><xrefsect id="refines_1_refines000001"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classAdaptableUnaryFunction" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableUnaryFunction</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classModularTraits" kindref="compound">ModularTraits</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ModularTraits--ModularImage.h" line="19" column="1" bodyfile="Concepts/ModularTraits--ModularImage.h" bodystart="19" bodyend="45"/>
    <listofallmembers>
      <member refid="classModularTraits_1_1ModularImage_1aee26e4d4a64f6a72935c62aeb17964af" prot="public" virt="non-virtual"><scope>ModularTraits::ModularImage</scope><name>argument_type</name></member>
      <member refid="classModularTraits_1_1ModularImage_1a3de1fb2d668fd17a13013abf1189c2d7" prot="public" virt="non-virtual"><scope>ModularTraits::ModularImage</scope><name>operator()</name></member>
      <member refid="classModularTraits_1_1ModularImage_1a54313671621075951f43b3fca9a7863a" prot="public" virt="non-virtual"><scope>ModularTraits::ModularImage</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
