<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Classification_1_1Cluster" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Cluster</compoundname>
    <includes local="no">CGAL/Classification/Cluster.h</includes>
    <templateparamlist>
      <param>
        <type>typename ItemRange</type>
      </param>
      <param>
        <type>typename ItemMap</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a6511492bb5a5e92b5aace8331804b230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::Cluster</definition>
        <argsstring>(const ItemRange &amp;range, ItemMap item_map)</argsstring>
        <name>Cluster</name>
        <param>
          <type>const ItemRange &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>ItemMap</type>
          <declname>item_map</declname>
        </param>
        <briefdescription>
<para>Constructs an empty cluster of items. </para>        </briefdescription>
        <detaileddescription>
<para>Items in the clusters will be subsets of <computeroutput>range</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>input range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the input items. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="94" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifications</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a4b55ff3244b05548a3fb3c98e0fa5abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clears the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="107" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a35a208b1beb4cfa284b7e178a3305aa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::insert</definition>
        <argsstring>(std::size_t idx)</argsstring>
        <name>insert</name>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Inserts element of index <computeroutput>idx</computeroutput> in the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="112" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1aa2021d202b456557ab83602d3574cdb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of items in the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="122" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a6f87f62ec3aa581d9ce0e2a2ac47c652" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::index</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>index</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the index (in the input range) of the i^{th} element of the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="127" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a344279d00e39efe600d64fefaca5c9ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Cluster_1a7648e6da452e81ed5eb02aa7a73ae273" kindref="member">Item</ref> &amp;</type>
        <definition>const Item&amp; CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the i^{th} item of the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="132" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="132" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1ae342f4de2abd9aa55428a7305b5274e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>Returns the bounding box of the cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="138" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="138" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Classification</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a2403ceaf42636b00b8390770e538e77c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::training</definition>
        <argsstring>() const</argsstring>
        <name>training</name>
        <briefdescription>
<para>Returns the input classification value used for training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="162" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a3052a076b1a86822aabbbb5dbc71ae20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::training</definition>
        <argsstring>()</argsstring>
        <name>training</name>
        <briefdescription>
<para>Returns a reference to the input classification value used for training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="167" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a5a367dec731e240ab8923f2fc7adf0e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::label</definition>
        <argsstring>() const</argsstring>
        <name>label</name>
        <briefdescription>
<para>Returns the output classification value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="172" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Cluster_1a73cad1296e1a88526d5136b8266abaad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::label</definition>
        <argsstring>()</argsstring>
        <name>label</name>
        <briefdescription>
<para>Returns a reference to the output classification value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="177" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="177" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Cluster_1a7648e6da452e81ed5eb02aa7a73ae273" prot="public" static="no">
        <type>ItemMap::value_type</type>
        <definition>typedef ItemMap::value_type CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::Item</definition>
        <argsstring></argsstring>
        <name>Item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="58" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1a65b87307da44be91b0ff5f7b5b8b6ef6" prot="private" static="no" mutable="no">
        <type>const ItemRange *</type>
        <definition>const ItemRange* CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="73" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1afe8cc60a17e535f5a9e28bf9f25b4f70" prot="private" static="no" mutable="no">
        <type>ItemMap</type>
        <definition>ItemMap CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_item_map</definition>
        <argsstring></argsstring>
        <name>m_item_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="74" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1aa8290166122b93284f48420dd64886f2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_inliers</definition>
        <argsstring></argsstring>
        <name>m_inliers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="76" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1ae21f236eb8ace43aeade1a5062f25966" prot="private" static="no" mutable="yes">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Bbox_3</ref></type>
        <definition>CGAL::Bbox_3 CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_bounding_box</definition>
        <argsstring></argsstring>
        <name>m_bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="77" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1ab54f1efb1d160390ee8e0850f689b835" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_training</definition>
        <argsstring></argsstring>
        <name>m_training</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="78" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Cluster_1a82a6df2daf16786b93e7d4147573a729" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::Cluster&lt; ItemRange, ItemMap &gt;::m_label</definition>
        <argsstring></argsstring>
        <name>m_label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Cluster.h" line="79" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that represent a cluster of items to be classified as a single atomic object. </para>    </briefdescription>
    <detaileddescription>
<para>A cluster is a set of indices of items inside an input range with random access.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ItemRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput>. Its value type depends on the data that is classified (for example, <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_3</ref></computeroutput>).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ItemMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>ItemRange</computeroutput> and value type is the type of item to classify (for example, <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Classification/Cluster.h" line="55" column="1" bodyfile="CGAL/Classification/Cluster.h" bodystart="54" bodyend="180"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1ae342f4de2abd9aa55428a7305b5274e2" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a4b55ff3244b05548a3fb3c98e0fa5abe" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a6511492bb5a5e92b5aace8331804b230" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>Cluster</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a6f87f62ec3aa581d9ce0e2a2ac47c652" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>index</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a35a208b1beb4cfa284b7e178a3305aa1" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a7648e6da452e81ed5eb02aa7a73ae273" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>Item</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a5a367dec731e240ab8923f2fc7adf0e0" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>label</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a73cad1296e1a88526d5136b8266abaad" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>label</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1ae21f236eb8ace43aeade1a5062f25966" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_bounding_box</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1aa8290166122b93284f48420dd64886f2" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_inliers</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1afe8cc60a17e535f5a9e28bf9f25b4f70" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_item_map</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a82a6df2daf16786b93e7d4147573a729" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_label</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a65b87307da44be91b0ff5f7b5b8b6ef6" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_range</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1ab54f1efb1d160390ee8e0850f689b835" prot="private" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>m_training</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a344279d00e39efe600d64fefaca5c9ba" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1aa2021d202b456557ab83602d3574cdb9" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>size</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a2403ceaf42636b00b8390770e538e77c" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>training</name></member>
      <member refid="classCGAL_1_1Classification_1_1Cluster_1a3052a076b1a86822aabbbb5dbc71ae20" prot="public" virt="non-virtual"><scope>CGAL::Classification::Cluster</scope><name>training</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
