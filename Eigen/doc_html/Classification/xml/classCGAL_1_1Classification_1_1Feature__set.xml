<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Classification_1_1Feature__set" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Feature_set</compoundname>
    <includes local="no">CGAL/Classification/Feature_set.h</includes>
    <innerclass refid="structCGAL_1_1Classification_1_1Feature__set_1_1Compare__name" prot="private">CGAL::Classification::Feature_set::Compare_name</innerclass>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1a613933a88be42c85ff4bbb5ecaf6552f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Feature_set::Feature_set</definition>
        <argsstring>()</argsstring>
        <name>Feature_set</name>
        <briefdescription>
<para>Creates an empty feature set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="77" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="77" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifications</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Feature</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Classification_1_1Feature__handle" kindref="compound">Feature_handle</ref></type>
        <definition>Feature_handle CGAL::Classification::Feature_set::add</definition>
        <argsstring>(T &amp;&amp;... t)</argsstring>
        <name>add</name>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Instantiates a new feature and adds it to the set. </para>        </briefdescription>
        <detaileddescription>
<para>If several calls of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput> are surrounded by <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" kindref="member">end_parallel_additions()</ref></computeroutput>, they are computed in parallel. They are still inserted in the specified order in the feature set (the first call of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput> creates a feature at index 0, the second at index 1, etc.).</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" kindref="member">end_parallel_additions()</ref></computeroutput></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceCGAL_1_1Classification_1_1Feature" kindref="compound">Feature</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>type of the feature, inherited from <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__base" kindref="compound">Feature_base</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>types of the parameters of the feature&apos;s constructor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters of the feature&apos;s constructor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a handle to the newly added feature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="122" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="122" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1ae3642069b1c1fbf30111ecfa8bdd2ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Classification::Feature_set::remove</definition>
        <argsstring>(Feature_handle feature)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__handle" kindref="compound">Feature_handle</ref></type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Removes a feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to feature type that must be removed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the feature was correctly removed, <computeroutput>false</computeroutput> if its handle was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="177" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="177" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1ac49c9165decae6769582c460bcbe7e36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Feature_set::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Removes all features. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="191" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="191" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parallel Processing</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Feature_set::begin_parallel_additions</definition>
        <argsstring>()</argsstring>
        <name>begin_parallel_additions</name>
        <briefdescription>
<para>Initializes structures to compute features in parallel. </para>        </briefdescription>
        <detaileddescription>
<para>If the user wants to add features in parallel, this function should be called before making several calls of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput>. After the calls of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" kindref="member">end_parallel_additions()</ref></computeroutput> should be called.</para><para><simplesect kind="note"><para>This function requires <ref refid="installation_1thirdpartyTBB" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intel TBB</ref>.</para></simplesect>
<simplesect kind="warning"><para>As arguments of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput> are passed by reference and that new threads are started if <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput> is used, it is highly recommended to always call <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" kindref="member">end_parallel_additions()</ref></computeroutput> <emphasis>within the same scope</emphasis>, to avoid keeping references to temporary objects that might be deleted before the thread has terminated.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" kindref="member">end_parallel_additions()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="222" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Feature_set::end_parallel_additions</definition>
        <argsstring>()</argsstring>
        <name>end_parallel_additions</name>
        <briefdescription>
<para>Waits for the end of parallel feature computation and clears dedicated data structures afterwards. </para>        </briefdescription>
        <detaileddescription>
<para>If the user wants to add features in parallel, this function should be called after <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput> and several calls of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" kindref="member">add()</ref></computeroutput>.</para><para><simplesect kind="note"><para>This function requires <ref refid="installation_1thirdpartyTBB" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Intel TBB</ref>.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" kindref="member">begin_parallel_additions()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="240" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="240" bodyend="249"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1aa38682bb0dd5cea98873425989d0e6bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Feature_set::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns how many features are defined. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="261" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Feature__set_1ad190af1ce94aac3fdccca1b0790eae13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Classification_1_1Feature__handle" kindref="compound">Feature_handle</ref></type>
        <definition>Feature_handle CGAL::Classification::Feature_set::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the <formula id="3">$i^{th}$</formula> feature. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="270" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="270" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Feature__set_1a1d61ff9950825d281c6bcb3563dd7784" prot="private" static="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Classification_1_1Feature__handle" kindref="compound">Feature_handle</ref> &gt;</type>
        <definition>typedef std::vector&lt;Feature_handle&gt; CGAL::Classification::Feature_set::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="52" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Feature__set_1af87b6f94ce5229009d12a74ac55a36cc" prot="private" static="no" mutable="no">
        <type>Base</type>
        <definition>Base CGAL::Classification::Feature_set::m_features</definition>
        <argsstring></argsstring>
        <name>m_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Feature_set.h" line="53" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Set of features (see <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature__base" kindref="compound">Feature_base</ref></computeroutput>) used as input by classification algorithms. </para>    </briefdescription>
    <detaileddescription>
<para>This class handles both the instantiation, the addition and the deletion of features. </para>    </detaileddescription>
    <location file="CGAL/Classification/Feature_set.h" line="51" column="1" bodyfile="CGAL/Classification/Feature_set.h" bodystart="50" bodyend="352"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1a2d7dc5beaa908425dcf000ed441aa4bf" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>add</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1a1d61ff9950825d281c6bcb3563dd7784" prot="private" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1ad7314df99b70f0cee9cd4a3a70a4a186" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>begin_parallel_additions</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1ac49c9165decae6769582c460bcbe7e36" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1ad7a95c53e03a82384e308351cbed10da" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>end_parallel_additions</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1a613933a88be42c85ff4bbb5ecaf6552f" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>Feature_set</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1af87b6f94ce5229009d12a74ac55a36cc" prot="private" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>m_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1ad190af1ce94aac3fdccca1b0790eae13" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1ae3642069b1c1fbf30111ecfa8bdd2ef2" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Classification_1_1Feature__set_1aa38682bb0dd5cea98873425989d0e6bc" prot="public" virt="non-virtual"><scope>CGAL::Classification::Feature_set</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
