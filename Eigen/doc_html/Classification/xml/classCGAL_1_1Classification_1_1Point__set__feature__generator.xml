<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Classification_1_1Point__set__feature__generator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Point_set_feature_generator</compoundname>
    <includes local="no">CGAL/Classification/Point_set_feature_generator.h</includes>
    <innerclass refid="structCGAL_1_1Classification_1_1Point__set__feature__generator_1_1Scale" prot="private">CGAL::Classification::Point_set_feature_generator::Scale</innerclass>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename PointRange</type>
      </param>
      <param>
        <type>typename PointMap</type>
      </param>
      <param>
        <type>typename ConcurrencyTag</type>
      </param>
      <param>
        <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a652323c0c6c806df455a6ac454cd318a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Point_set_feature_generator</definition>
        <argsstring>(const PointRange &amp;input, PointMap point_map, std::size_t nb_scales, float voxel_size=-1.f)</argsstring>
        <name>Point_set_feature_generator</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>PointMap</type>
          <declname>point_map</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nb_scales</declname>
        </param>
        <param>
          <type>float</type>
          <declname>voxel_size</declname>
          <defval>-1.f</defval>
        </param>
        <briefdescription>
<para>Initializes a feature generator from an input range. </para>        </briefdescription>
        <detaileddescription>
<para>If not provided by the user, The size of the smallest scale is automatically estimated using a method equivalent to <computeroutput><ref refid="group__PkgPointSetProcessingAlgorithms_1gabb9a90622271869b3f2393314075fa0e" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Point_set_processing_3.tag">CGAL::compute_average_spacing()</ref></computeroutput> using 6 neighbors. The data structures needed (<computeroutput>Neighborhood</computeroutput>, <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></computeroutput>) are computed at <computeroutput>nb_scales</computeroutput> recursively larger scales.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>point range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the input points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_scales</parametername>
</parameternamelist>
<parameterdescription>
<para>number of scales to compute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voxel_size</parametername>
</parameternamelist>
<parameterdescription>
<para>smallest scale used as a voxel size for the planimetric grid (if the default value -1 is used, its value is automatically estimated). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="252" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="252" bodyend="279"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Feature Generation</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a495c5b3f8b775c696fe3aca17b27eed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_point_based_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_point_based_features</name>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>Generate geometric features based on point position information. </para>        </briefdescription>
        <detaileddescription>
<para>At each scale, the following features are generated:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Eigenvalue" kindref="compound">CGAL::Classification::Feature::Eigenvalue</ref></computeroutput> with indices 0, 1 and 2</para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Distance__to__plane" kindref="compound">CGAL::Classification::Feature::Distance_to_plane</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Elevation" kindref="compound">CGAL::Classification::Feature::Elevation</ref></computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Vertical__dispersion" kindref="compound">CGAL::Classification::Feature::Vertical_dispersion</ref></computeroutput></para></listitem><listitem><para>The version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Verticality" kindref="compound">CGAL::Classification::Feature::Verticality</ref></computeroutput> based on eigenvalues</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="373" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="373" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2b8350660278ccd608ddf038c5554fab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VectorMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_normal_based_features</definition>
        <argsstring>(Feature_set &amp;features, const VectorMap &amp;normal_map)</argsstring>
        <name>generate_normal_based_features</name>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const VectorMap &amp;</type>
          <declname>normal_map</declname>
        </param>
        <briefdescription>
<para>Generate geometric features based on normal vector information. </para>        </briefdescription>
        <detaileddescription>
<para>Generates the version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Verticality" kindref="compound">CGAL::Classification::Feature::Verticality</ref></computeroutput> based on normal vectors.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VectorMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>GeomTraits::Vector_3</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normal_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the normal vectors of the input points (if any). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="402" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a009b60ebe0ea7b220f9cd7e237d3ed56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColorMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_color_based_features</definition>
        <argsstring>(Feature_set &amp;features, const ColorMap &amp;color_map)</argsstring>
        <name>generate_color_based_features</name>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const ColorMap &amp;</type>
          <declname>color_map</declname>
        </param>
        <briefdescription>
<para>Generate geometric features based on point color information. </para>        </briefdescription>
        <detaileddescription>
<para>Generates <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Color__channel" kindref="compound">CGAL::Classification::Feature::Color_channel</ref></computeroutput> with channels <computeroutput>HUE</computeroutput>, <computeroutput>SATURATION</computeroutput> and <computeroutput>VALUE</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ColorMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput><ref refid="namespaceCGAL_1_1Classification_1a821191c51c0d68935f3dd35413cdcd0a" kindref="member">CGAL::Classification::RGB_Color</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the colors of the input points (if any). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="421" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="421" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a69edc4487e6f85c10901852e27b2c054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EchoMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_echo_based_features</definition>
        <argsstring>(Feature_set &amp;features, const EchoMap &amp;echo_map)</argsstring>
        <name>generate_echo_based_features</name>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const EchoMap &amp;</type>
          <declname>echo_map</declname>
        </param>
        <briefdescription>
<para>Generate geometric features based on echo information. </para>        </briefdescription>
        <detaileddescription>
<para>At each scale, generates <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Echo__scatter" kindref="compound">CGAL::Classification::Feature::Echo_scatter</ref></computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>EchoMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>std::size_t</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>echo_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the echo values of the input points (if any). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="441" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="441" bodyend="446"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data Structures Access</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a7e4e12244adb602c82c436042f41886a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a82de6e780eb4c8cf9afae0be6e41dfbd" kindref="member">Iso_cuboid_3</ref> &amp;</type>
        <definition>const Iso_cuboid_3&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <briefdescription>
<para>Returns the bounding box of the input point set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="456" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="456" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6613df0eb8933804ff3e78781ca8b7ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1abcad3c287398828ef2c9fcc0f99ae96f" kindref="member">Neighborhood</ref> &amp;</type>
        <definition>const Neighborhood&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::neighborhood</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>neighborhood</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the neighborhood structure at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="460" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a18a073ec964c93ec14c5381cfe20fd34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a8ddcf16d867f4760cbc25b39209df1ed" kindref="member">Planimetric_grid</ref> &amp;</type>
        <definition>const Planimetric_grid&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the planimetric grid structure at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="464" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="464" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1aaf287bf30bd34bbe504626531e74e0b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ad61672a2ccf1ebf87749c89e2ac1db92" kindref="member">Local_eigen_analysis</ref> &amp;</type>
        <definition>const Local_eigen_analysis&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::eigen</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>eigen</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the local eigen analysis structure at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="468" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="468" bodyend="468"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameters</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0242a2fd72e3255d5765b07685747678" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::number_of_scales</definition>
        <argsstring>() const</argsstring>
        <name>number_of_scales</name>
        <briefdescription>
<para>Returns the number of scales that were computed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="478" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="478" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a1f9c649a0a831e7345a3716de61a0210" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid_resolution</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid_resolution</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the grid resolution at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This resolution is the length and width of a cell of the <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> defined at this scale. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="485" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="485" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a5fe56300ff5b9c4f4752bbbc1a3f9253" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_neighbors</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_neighbors</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the radius used for neighborhood queries at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This radius is the smallest radius that is relevant from a geometric point of view at this scale (that is to say that encloses a few cells of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="493" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="493" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a4b99c78cbdb39d403580cf16fdda7a63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_dtm</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_dtm</name>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the radius used for digital terrain modeling at scale <computeroutput>scale</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This radius represents the minimum size of a building at this scale. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="499" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="499" bodyend="499"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a82de6e780eb4c8cf9afae0be6e41dfbd" prot="public" static="no">
        <type>GeomTraits::Iso_cuboid_3</type>
        <definition>typedef GeomTraits::Iso_cuboid_3 CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Iso_cuboid_3</definition>
        <argsstring></argsstring>
        <name>Iso_cuboid_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="109" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a8ddcf16d867f4760cbc25b39209df1ed" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Classification::Planimetric_grid</ref>&lt; GeomTraits, PointRange, PointMap &gt;</type>
        <definition>typedef Classification::Planimetric_grid&lt;GeomTraits, PointRange, PointMap&gt; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Planimetric_grid</definition>
        <argsstring></argsstring>
        <name>Planimetric_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="117" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1abcad3c287398828ef2c9fcc0f99ae96f" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Point__set__neighborhood" kindref="compound">Classification::Point_set_neighborhood</ref>&lt; GeomTraits, PointRange, PointMap &gt;</type>
        <definition>typedef Classification::Point_set_neighborhood&lt;GeomTraits, PointRange, PointMap&gt; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Neighborhood</definition>
        <argsstring></argsstring>
        <name>Neighborhood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="119" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ad61672a2ccf1ebf87749c89e2ac1db92" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Classification::Local_eigen_analysis</ref></type>
        <definition>typedef Classification::Local_eigen_analysis CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Local_eigen_analysis</definition>
        <argsstring></argsstring>
        <name>Local_eigen_analysis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="120" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab05aaa9ee646f397a1001eecae2ec38d" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a82de6e780eb4c8cf9afae0be6e41dfbd" kindref="member">Iso_cuboid_3</ref></type>
        <definition>Iso_cuboid_3 CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_bbox</definition>
        <argsstring></argsstring>
        <name>m_bbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="224" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0fd39323baee095831346c0baef2ad0f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Scale * &gt;</type>
        <definition>std::vector&lt;Scale*&gt; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_scales</definition>
        <argsstring></argsstring>
        <name>m_scales</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="225" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2370883fc540768be8033f60ab444b69" prot="private" static="no" mutable="no">
        <type>const PointRange &amp;</type>
        <definition>const PointRange&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_input</definition>
        <argsstring></argsstring>
        <name>m_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="227" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a65cb0d411724dd91ce516442a426b1b8" prot="private" static="no" mutable="no">
        <type>PointMap</type>
        <definition>PointMap CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_point_map</definition>
        <argsstring></argsstring>
        <name>m_point_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="228" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a09a879ba4b2e4cf1633b356600de0bb5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="506" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="506" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a805c60af2535ff061bed109f68e955bb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::get_parameter</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>get_parameter</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="536" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a9262ee2be33c94e6fcc32e1cacad9b42" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Constant_property_map&lt; <ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref>, T &gt;</type>
        <definition>Constant_property_map&lt;Iterator, T&gt; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::get_parameter</definition>
        <argsstring>(const Default &amp;)</argsstring>
        <name>get_parameter</name>
        <param>
          <type>const <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Default</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="543" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="543" bodyend="546"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generates a set of generic features for point set classification. </para>    </briefdescription>
    <detaileddescription>
<para>This class takes care of computing all necessary data structures and of generating a set of generic features at multiple scales to increase the reliability of the classification.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> and its value type is the key type of <computeroutput>PointMap</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>GeomTraits::Point_3</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel computation of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">CGAL::Classification::Local_eigen_analysis</ref></computeroutput> objects. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value is CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted: if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined: in that case, an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Classification/Point_set_feature_generator.h" line="106" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="105" bodyend="548"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a7e4e12244adb602c82c436042f41886a" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a09a879ba4b2e4cf1633b356600de0bb5" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1aaf287bf30bd34bbe504626531e74e0b7" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>eigen</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a009b60ebe0ea7b220f9cd7e237d3ed56" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_color_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a69edc4487e6f85c10901852e27b2c054" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_echo_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2b8350660278ccd608ddf038c5554fab" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_normal_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a495c5b3f8b775c696fe3aca17b27eed8" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_point_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a805c60af2535ff061bed109f68e955bb" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>get_parameter</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a9262ee2be33c94e6fcc32e1cacad9b42" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>get_parameter</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a18a073ec964c93ec14c5381cfe20fd34" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a1f9c649a0a831e7345a3716de61a0210" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>grid_resolution</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a82de6e780eb4c8cf9afae0be6e41dfbd" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ad61672a2ccf1ebf87749c89e2ac1db92" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Local_eigen_analysis</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab05aaa9ee646f397a1001eecae2ec38d" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2370883fc540768be8033f60ab444b69" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_input</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a65cb0d411724dd91ce516442a426b1b8" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_point_map</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0fd39323baee095831346c0baef2ad0f" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6613df0eb8933804ff3e78781ca8b7ec" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1abcad3c287398828ef2c9fcc0f99ae96f" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0242a2fd72e3255d5765b07685747678" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>number_of_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a8ddcf16d867f4760cbc25b39209df1ed" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Planimetric_grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a652323c0c6c806df455a6ac454cd318a" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Point_set_feature_generator</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a4b99c78cbdb39d403580cf16fdda7a63" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>radius_dtm</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a5fe56300ff5b9c4f4752bbbc1a3f9253" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>radius_neighbors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
