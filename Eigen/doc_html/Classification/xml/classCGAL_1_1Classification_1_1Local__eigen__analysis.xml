<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Classification_1_1Local__eigen__analysis" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Local_eigen_analysis</compoundname>
    <includes local="no">CGAL/Classification/Local_eigen_analysis.h</includes>
    <innerclass refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1_1Compute__clusters__eigen__values" prot="private">CGAL::Classification::Local_eigen_analysis::Compute_clusters_eigen_values</innerclass>
    <innerclass refid="structCGAL_1_1Classification_1_1Local__eigen__analysis_1_1Content" prot="private">CGAL::Classification::Local_eigen_analysis::Content</innerclass>
      <sectiondef kind="user-defined">
      <header>Named Constructors</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a386969a0031d04174a0bc44ce399792d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PointMap</type>
          </param>
          <param>
            <type>typename <ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></type>
          </param>
          <param>
            <type>typename ConcurrencyTag</type>
          </param>
          <param>
            <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></type>
        <definition>static Local_eigen_analysis CGAL::Classification::Local_eigen_analysis::create_from_point_set</definition>
        <argsstring>(const PointRange &amp;input, PointMap point_map, const NeighborQuery &amp;neighbor_query, const ConcurrencyTag &amp;=ConcurrencyTag(), const DiagonalizeTraits &amp;=DiagonalizeTraits())</argsstring>
        <name>create_from_point_set</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>PointMap</type>
          <declname>point_map</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref> &amp;</type>
          <declname>neighbor_query</declname>
        </param>
        <param>
          <type>const ConcurrencyTag &amp;</type>
          <defval>ConcurrencyTag()</defval>
        </param>
        <param>
          <type>const <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref> &amp;</type>
          <defval><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref>()</defval>
        </param>
        <briefdescription>
<para>Computes the local eigen analysis of an input point set based on a local neighborhood. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> and its value type is the key type of <computeroutput>PointMap</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel algorithm. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value is CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined. In that case, an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>point range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the input points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neighbor_query</parametername>
</parameternamelist>
<parameterdescription>
<para>object used to access neighborhoods of points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="263" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="263" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a448c6a7a05e63f22fef119f1d550c052" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></type>
          </param>
          <param>
            <type>typename ConcurrencyTag</type>
          </param>
          <param>
            <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></type>
        <definition>static Local_eigen_analysis CGAL::Classification::Local_eigen_analysis::create_from_face_graph</definition>
        <argsstring>(const FaceListGraph &amp;input, const NeighborQuery &amp;neighbor_query, const ConcurrencyTag &amp;=ConcurrencyTag(), const DiagonalizeTraits &amp;=DiagonalizeTraits())</argsstring>
        <name>create_from_face_graph</name>
        <param>
          <type>const <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref> &amp;</type>
          <declname>neighbor_query</declname>
        </param>
        <param>
          <type>const ConcurrencyTag &amp;</type>
          <defval>ConcurrencyTag()</defval>
        </param>
        <param>
          <type>const <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref> &amp;</type>
          <defval><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref>()</defval>
        </param>
        <briefdescription>
<para>Computes the local eigen analysis of an input face graph based on a local neighborhood. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classCGAL_1_1Classification_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel algorithm. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value is CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted: if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined then an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided. Otherwise, the internal implementation <computeroutput>Diagonalize_traits</computeroutput> is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>face graph. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neighbor_query</parametername>
</parameternamelist>
<parameterdescription>
<para>object used to access neighborhoods of points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="346" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="346" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a5a412e8b040c68ec7010d6ea81493a32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ClusterRange</type>
          </param>
          <param>
            <type>typename ConcurrencyTag</type>
          </param>
          <param>
            <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></type>
        <definition>static Local_eigen_analysis CGAL::Classification::Local_eigen_analysis::create_from_point_clusters</definition>
        <argsstring>(const ClusterRange &amp;input, const ConcurrencyTag &amp;=ConcurrencyTag(), const DiagonalizeTraits &amp;=DiagonalizeTraits())</argsstring>
        <name>create_from_point_clusters</name>
        <param>
          <type>const ClusterRange &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const ConcurrencyTag &amp;</type>
          <defval>ConcurrencyTag()</defval>
        </param>
        <param>
          <type>const <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref> &amp;</type>
          <defval><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref>()</defval>
        </param>
        <briefdescription>
<para>Computes the local eigen analysis of an input set of point clusters based on a local neighborhood. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ClusterRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> and its value type is the key type of <computeroutput>PointMap</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel algorithm. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value is CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted: if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined then an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided. Otherwise, the internal implementation <computeroutput>Diagonalize_traits</computeroutput> is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>cluster range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="430" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="430" bodyend="462"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Analysis</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1abcd13f20f7ed322c7570e2f3c65f9671" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GeomTraits</type>
          </param>
        </templateparamlist>
        <type>GeomTraits::Vector_3</type>
        <definition>GeomTraits::Vector_3 CGAL::Classification::Local_eigen_analysis::normal_vector</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>normal_vector</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the estimated unoriented normal vector of the point at position <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="475" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="475" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1afa899e9f1153a25ed806beb1c8fa505e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GeomTraits</type>
          </param>
        </templateparamlist>
        <type>GeomTraits::Plane_3</type>
        <definition>GeomTraits::Plane_3 CGAL::Classification::Local_eigen_analysis::plane</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>plane</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the estimated local tangent plane of the point at position <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="488" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="488" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1ab7228c878b41474817ef3df3751fb0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a831e826086ebc7c30855a594ddf1d330" kindref="member">Eigenvalues</ref></type>
        <definition>Eigenvalues CGAL::Classification::Local_eigen_analysis::eigenvalue</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>eigenvalue</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the normalized eigenvalues of the point at position <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="500" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="500" bodyend="508"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a831e826086ebc7c30855a594ddf1d330" prot="public" static="no">
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::array</ref>&lt; float, 3 &gt;</type>
        <definition>typedef CGAL::cpp11::array&lt;float, 3&gt; CGAL::Classification::Local_eigen_analysis::Eigenvalues</definition>
        <argsstring></argsstring>
        <name>Eigenvalues</name>
        <briefdescription>
<para>Eigenvalues (sorted in ascending order) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="68" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1af17737cc24d5309899e5ec0ca9195f43" prot="private" static="no">
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::array</ref>&lt; float, 3 &gt;</type>
        <definition>typedef CGAL::cpp11::array&lt;float, 3&gt; CGAL::Classification::Local_eigen_analysis::float3</definition>
        <argsstring></argsstring>
        <name>float3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="202" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a6c56b1ee6f8d102c708c820ce3ae51d9" prot="private" static="no">
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::array</ref>&lt; float, 2 &gt;</type>
        <definition>typedef CGAL::cpp11::array&lt;float, 2&gt; CGAL::Classification::Local_eigen_analysis::float2</definition>
        <argsstring></argsstring>
        <name>float2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="203" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a360005ca3200d3e3a226e2b3d13b5f21" prot="private" static="no">
        <type><ref refid="classCGAL_1_1cpp11_1_1array" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::cpp11::array</ref>&lt; compressed_float, 2 &gt;</type>
        <definition>typedef CGAL::cpp11::array&lt;compressed_float, 2&gt; CGAL::Classification::Local_eigen_analysis::cfloat2</definition>
        <argsstring></argsstring>
        <name>cfloat2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="204" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a07c3b91a000f8e7e5e1f46e2c8d01bb3" prot="private" static="no" mutable="no">
        <type>boost::shared_ptr&lt; Content &gt;</type>
        <definition>boost::shared_ptr&lt;Content&gt; CGAL::Classification::Local_eigen_analysis::m_content</definition>
        <argsstring></argsstring>
        <name>m_content</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="214" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a7296da40da9090da9062f2d7dd912f02" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></type>
          </param>
        </templateparamlist>
        <type>float</type>
        <definition>float CGAL::Classification::Local_eigen_analysis::face_radius</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceListGraph &gt;::face_descriptor &amp;fd, const FaceListGraph &amp;g)</argsstring>
        <name>face_radius</name>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &gt;::face_descriptor &amp;</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="519" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="519" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1adfd778f87b4f6f4c6fec11cc39124778" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Local_eigen_analysis::compute</definition>
        <argsstring>(std::size_t index, const Point &amp;query, std::vector&lt; Point &gt; &amp;neighbor_points)</argsstring>
        <name>compute</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>std::vector&lt; Point &gt; &amp;</type>
          <declname>neighbor_points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="535" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="535" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a981ebd49824062100998be0c70d41e37" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Local_eigen_analysis::compute_triangles</definition>
        <argsstring>(const FaceListGraph &amp;g, typename boost::graph_traits&lt; FaceListGraph &gt;::face_descriptor &amp;query, std::vector&lt; typename boost::property_map&lt; FaceListGraph, CGAL::face_index_t &gt;::type::value_type &gt; &amp;neighbor_faces)</argsstring>
        <name>compute_triangles</name>
        <param>
          <type>const <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &gt;::face_descriptor &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>std::vector&lt; typename boost::property_map&lt; <ref refid="classFaceListGraph" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">FaceListGraph</ref>, <ref refid="group__PkgBGLProperties_1ga315e5c7e887e2c2937eb411e14115dc6" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/BGL.tag">CGAL::face_index_t</ref> &gt;::type::value_type &gt; &amp;</type>
          <declname>neighbor_faces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Local_eigen_analysis.h" line="588" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="588" bodyend="663"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that precomputes and stores the eigenvectors and eigenvalues of the covariance matrices of all points of a point set using a local neighborhood. </para>    </briefdescription>
    <detaileddescription>
<para>This class can be used to compute eigen features (see <ref refid="group__PkgClassificationFeatures" kindref="compound">Predefined Features</ref>) and to estimate local normal vectors and tangent planes. </para>    </detaileddescription>
    <location file="CGAL/Classification/Local_eigen_analysis.h" line="66" column="1" bodyfile="CGAL/Classification/Local_eigen_analysis.h" bodystart="65" bodyend="665"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a360005ca3200d3e3a226e2b3d13b5f21" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>cfloat2</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1adfd778f87b4f6f4c6fec11cc39124778" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>compute</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a981ebd49824062100998be0c70d41e37" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>compute_triangles</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a448c6a7a05e63f22fef119f1d550c052" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>create_from_face_graph</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a5a412e8b040c68ec7010d6ea81493a32" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>create_from_point_clusters</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a386969a0031d04174a0bc44ce399792d" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>create_from_point_set</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1ab7228c878b41474817ef3df3751fb0dc" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>eigenvalue</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a831e826086ebc7c30855a594ddf1d330" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>Eigenvalues</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a7296da40da9090da9062f2d7dd912f02" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>face_radius</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a6c56b1ee6f8d102c708c820ce3ae51d9" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>float2</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1af17737cc24d5309899e5ec0ca9195f43" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>float3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1a07c3b91a000f8e7e5e1f46e2c8d01bb3" prot="private" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>m_content</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1abcd13f20f7ed322c7570e2f3c65f9671" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>normal_vector</name></member>
      <member refid="classCGAL_1_1Classification_1_1Local__eigen__analysis_1afa899e9f1153a25ed806beb1c8fa505e" prot="public" virt="non-virtual"><scope>CGAL::Classification::Local_eigen_analysis</scope><name>plane</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
