<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Classification_1_1Planimetric__grid" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Planimetric_grid</compoundname>
    <includes local="no">CGAL/Classification/Planimetric_grid.h</includes>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename PointRange</type>
      </param>
      <param>
        <type>typename PointMap</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a3fe89065f937190aab6171a4a0a66366" prot="public" static="no">
        <type>GeomTraits::Point_3</type>
        <definition>typedef GeomTraits::Point_3 CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="63" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a5b445155e3b9b82296bd5ff811d3dfa4" prot="public" static="no">
        <type>GeomTraits::Iso_cuboid_3</type>
        <definition>typedef GeomTraits::Iso_cuboid_3 CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::Iso_cuboid_3</definition>
        <argsstring></argsstring>
        <name>Iso_cuboid_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="64" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a7ab80e5701784cd9469fd399aee9c918" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>A forward iterator with value type <computeroutput>std::size_t</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="86" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a5820157958a9a9cb805598d86ad84d44" prot="private" static="no">
        <type>Image&lt; std::vector&lt; boost::uint32_t &gt; &gt;</type>
        <definition>typedef Image&lt;std::vector&lt;boost::uint32_t&gt; &gt; CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::Image_indices</definition>
        <argsstring></argsstring>
        <name>Image_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="67" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a6df1168d43aabb5350a9b6d0a69d879b" prot="private" static="no">
        <type>Image&lt; bool &gt;</type>
        <definition>typedef Image&lt;bool&gt; CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::Image_bool</definition>
        <argsstring></argsstring>
        <name>Image_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="68" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a6a1196a6b2b8d4db2bb75fa5cadd48b7" prot="private" static="no" mutable="no">
        <type>const PointRange *</type>
        <definition>const PointRange* CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_points</definition>
        <argsstring></argsstring>
        <name>m_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="70" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a0b2b7393d1bc5329911fc61402be94e4" prot="private" static="no" mutable="no">
        <type>PointMap</type>
        <definition>PointMap CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_point_map</definition>
        <argsstring></argsstring>
        <name>m_point_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="71" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a018edd6117f4fa3ab4d2f2c18195e1ec" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5b445155e3b9b82296bd5ff811d3dfa4" kindref="member">Iso_cuboid_3</ref></type>
        <definition>Iso_cuboid_3 CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_bbox</definition>
        <argsstring></argsstring>
        <name>m_bbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="72" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a37baf48a7bde44408a4a772287fa9798" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_resolution</definition>
        <argsstring></argsstring>
        <name>m_resolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="73" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1abaf127288c9349e5899216883cbc2eb9" prot="private" static="no" mutable="no">
        <type>Image_indices</type>
        <definition>Image_indices CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_grid</definition>
        <argsstring></argsstring>
        <name>m_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="75" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a9610cbb8b3643a8807b43b46e2518852" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref> *</type>
        <definition>Planimetric_grid* CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_lower_scale</definition>
        <argsstring></argsstring>
        <name>m_lower_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="76" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a885640fa0c206b5c587e946c5846eddf" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_current_scale</definition>
        <argsstring></argsstring>
        <name>m_current_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="77" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a2970ea97a00e3dc2e1c891b2b8ffe9b4" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="79" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a9536bc41445c31e0f654bcd84d795d12" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="80" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a87d1ea5fecac561847952aabafb60957" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::m_has_points</definition>
        <argsstring></argsstring>
        <name>m_has_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="81" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1ab11872ed492eaa87d8305623d0f43d72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::Planimetric_grid</definition>
        <argsstring>(const PointRange &amp;input, PointMap point_map, const Iso_cuboid_3 &amp;bbox, float grid_resolution)</argsstring>
        <name>Planimetric_grid</name>
        <param>
          <type>const PointRange &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>PointMap</type>
          <declname>point_map</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5b445155e3b9b82296bd5ff811d3dfa4" kindref="member">Iso_cuboid_3</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>float</type>
          <declname>grid_resolution</declname>
        </param>
        <briefdescription>
<para>Constructs a planimetric grid based on the input range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>point range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the input points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bbox</parametername>
</parameternamelist>
<parameterdescription>
<para>bounding box of the input range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grid_resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution of the planimetric grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="213" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="213" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1afe93cd315daf37e0eff8f8f9d280bde6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::resolution</definition>
        <argsstring>() const</argsstring>
        <name>resolution</name>
        <briefdescription>
<para>Returns the resolution of the grid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="280" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a5591c1d6e421a017618b13af5a51b7b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <briefdescription>
<para>Returns the number of cells along the X-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="288" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a65f8eda578c9dfe97e2c5d7b1354b9e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <briefdescription>
<para>Returns the number of cells along the Y-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="295" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a5cf7db525332f2a754ffc58f2a3b2b3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a7ab80e5701784cd9469fd399aee9c918" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::indices_begin</definition>
        <argsstring>(std::size_t x, std::size_t y) const</argsstring>
        <name>indices_begin</name>
        <param>
          <type>std::size_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the begin iterator on the indices of the points lying in the cell at position <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="315" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="315" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a6ed9a18d16e24076f1f3fe047d688b3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a7ab80e5701784cd9469fd399aee9c918" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::indices_end</definition>
        <argsstring>(std::size_t x, std::size_t y) const</argsstring>
        <name>indices_end</name>
        <param>
          <type>std::size_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the past-the-end iterator on the indices of the points lying in the cell at position <computeroutput>(x,y)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="326" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="326" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a3c0ee1a96a99087aea2b9a492400e5ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::has_points</definition>
        <argsstring>(std::size_t x, std::size_t y) const</argsstring>
        <name>has_points</name>
        <param>
          <type>std::size_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>false</computeroutput> if the cell at position <computeroutput>(x,y)</computeroutput> is empty, <computeroutput>true</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="336" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="336" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a84de5c4f8311def910ea7be535eba4c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::x</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>x</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>x</computeroutput> grid coordinate of the point at position <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="350" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="350" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Planimetric__grid_1a5d2ea5ca84c11140ef010aeb69a23144" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Planimetric_grid&lt; GeomTraits, PointRange, PointMap &gt;::y</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>y</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>y</computeroutput> grid coordinate of the point at position <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Planimetric_grid.h" line="364" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="364" bodyend="374"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that precomputes a 2D planimetric grid. </para>    </briefdescription>
    <detaileddescription>
<para>The grid is composed of squared cells with a user-defined size, each cell containing the list of indices of the points whose projection along the Z-axis lies within this cell. The mapping from each point to the cell it lies in is also stored.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> and its value type is the key type of <computeroutput>PointMap</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>GeomTraits::Point_3</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Classification/Planimetric_grid.h" line="61" column="1" bodyfile="CGAL/Classification/Planimetric_grid.h" bodystart="60" bodyend="375"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a3c0ee1a96a99087aea2b9a492400e5ef" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>has_points</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a65f8eda578c9dfe97e2c5d7b1354b9e4" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>height</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a6df1168d43aabb5350a9b6d0a69d879b" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>Image_bool</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5820157958a9a9cb805598d86ad84d44" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>Image_indices</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5cf7db525332f2a754ffc58f2a3b2b3a" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>indices_begin</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a6ed9a18d16e24076f1f3fe047d688b3f" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>indices_end</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5b445155e3b9b82296bd5ff811d3dfa4" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a7ab80e5701784cd9469fd399aee9c918" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a018edd6117f4fa3ab4d2f2c18195e1ec" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a885640fa0c206b5c587e946c5846eddf" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_current_scale</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1abaf127288c9349e5899216883cbc2eb9" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a87d1ea5fecac561847952aabafb60957" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_has_points</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a9536bc41445c31e0f654bcd84d795d12" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_height</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a9610cbb8b3643a8807b43b46e2518852" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_lower_scale</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a0b2b7393d1bc5329911fc61402be94e4" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_point_map</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a6a1196a6b2b8d4db2bb75fa5cadd48b7" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_points</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a37baf48a7bde44408a4a772287fa9798" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_resolution</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a2970ea97a00e3dc2e1c891b2b8ffe9b4" prot="private" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>m_width</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1ab11872ed492eaa87d8305623d0f43d72" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>Planimetric_grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a3fe89065f937190aab6171a4a0a66366" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1afe93cd315daf37e0eff8f8f9d280bde6" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>resolution</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5591c1d6e421a017618b13af5a51b7b6" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>width</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a84de5c4f8311def910ea7be535eba4c8" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>x</name></member>
      <member refid="classCGAL_1_1Classification_1_1Planimetric__grid_1a5d2ea5ca84c11140ef010aeb69a23144" prot="public" virt="non-virtual"><scope>CGAL::Classification::Planimetric_grid</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
