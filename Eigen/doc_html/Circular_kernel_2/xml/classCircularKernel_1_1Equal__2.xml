<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCircularKernel_1_1Equal__2" kind="class" language="C++" prot="public">
    <compoundname>CircularKernel::Equal_2</compoundname>
    <includes local="no">Concepts/CircularKernel--Equal_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classCircularKernel_1_1Equal__2_1a1766ef6f428ced61a0c50a7789519601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CircularKernel::Equal_2::operator()</definition>
        <argsstring>(const CircularKernel::Circular_arc_point_2 &amp;p0, const CircularKernel::Circular_arc_point_2 &amp;p1)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1a367df286e7cbf5d07067d6587937a164" kindref="member">CircularKernel::Circular_arc_point_2</ref> &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1a367df286e7cbf5d07067d6587937a164" kindref="member">CircularKernel::Circular_arc_point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
<para>For two points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--Equal_2.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1Equal__2_1a0cad8c0b7f2a7257821c49b642e22ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CircularKernel::Equal_2::operator()</definition>
        <argsstring>(const CircularKernel::Circular_arc_2 &amp;a0, const CircularKernel::Circular_arc_2 &amp;a1)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1aaa7a7ee11b2a76b5ef9dda78a15ee3cc" kindref="member">CircularKernel::Circular_arc_2</ref> &amp;</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1aaa7a7ee11b2a76b5ef9dda78a15ee3cc" kindref="member">CircularKernel::Circular_arc_2</ref> &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
<para>For two arcs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--Equal_2.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1Equal__2_1a0107dec9738847451c03c293f9869e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CircularKernel::Equal_2::operator()</definition>
        <argsstring>(const CircularKernel::Line_arc_2 &amp;a0, const CircularKernel::Line_arc_2 &amp;a1)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref> &amp;</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref> &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
<para>For two segments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--Equal_2.h" line="40" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Testing equality between objects. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000013"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel_1_1Equal__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel::Equal_2</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCircularKernel_1_1CompareX__2" kindref="compound">CircularKernel::CompareX_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCircularKernel_1_1CompareY__2" kindref="compound">CircularKernel::CompareY_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCircularKernel_1_1CompareXY__2" kindref="compound">CircularKernel::CompareXY_2</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/CircularKernel--Equal_2.h" line="16" column="1" bodyfile="Concepts/CircularKernel--Equal_2.h" bodystart="16" bodyend="46"/>
    <listofallmembers>
      <member refid="classCircularKernel_1_1Equal__2_1a1766ef6f428ced61a0c50a7789519601" prot="public" virt="non-virtual"><scope>CircularKernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1Equal__2_1a0cad8c0b7f2a7257821c49b642e22ab0" prot="public" virt="non-virtual"><scope>CircularKernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1Equal__2_1a0107dec9738847451c03c293f9869e73" prot="public" virt="non-virtual"><scope>CircularKernel::Equal_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
