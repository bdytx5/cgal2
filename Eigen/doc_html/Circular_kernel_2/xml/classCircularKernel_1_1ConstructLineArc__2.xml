<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCircularKernel_1_1ConstructLineArc__2" kind="class" language="C++" prot="public">
    <compoundname>CircularKernel::ConstructLineArc_2</compoundname>
    <includes local="no">Concepts/CircularKernel--ConstructLineArc_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classCircularKernel_1_1ConstructLineArc__2_1aff9636972f44755100c9c24accab3cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref></type>
        <definition>CircularKernel::Line_arc_2 CircularKernel::ConstructLineArc_2::operator()</definition>
        <argsstring>(const CircularKernel::Line_2 &amp;l, const CircularKernel::Circular_arc_point_2 &amp;p1, const CircularKernel::Circular_arc_point_2 &amp;p2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1ad701c373bfe533230ef67bb115c66972" kindref="member">CircularKernel::Line_2</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1a367df286e7cbf5d07067d6587937a164" kindref="member">CircularKernel::Circular_arc_point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1a367df286e7cbf5d07067d6587937a164" kindref="member">CircularKernel::Circular_arc_point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Constructs the line segment supported by <computeroutput>l</computeroutput>, whose source is <computeroutput>p1</computeroutput> and whose target is <computeroutput>p2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput> lie on <computeroutput>l</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1ConstructLineArc__2_1ac1dc7f9214d239843359bfb3ed333481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref></type>
        <definition>CircularKernel::Line_arc_2 CircularKernel::ConstructLineArc_2::operator()</definition>
        <argsstring>(const CircularKernel::Segment_2 &amp;s)</argsstring>
        <name>operator()</name>
        <param>
          <type>const CircularKernel::Segment_2 &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1ConstructLineArc__2_1af83ccaba42cc92154e3edf03f6519d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref></type>
        <definition>CircularKernel::Line_arc_2 CircularKernel::ConstructLineArc_2::operator()</definition>
        <argsstring>(const CircularKernel::Point_2 &amp;p1, const CircularKernel::Point_2 &amp;p2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1a3669ed612db0d62cc4cfe3979c15b351" kindref="member">CircularKernel::Point_2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1a3669ed612db0d62cc4cfe3979c15b351" kindref="member">CircularKernel::Point_2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1ConstructLineArc__2_1a5c8df72c542514260fbb3e0d10716c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref></type>
        <definition>CircularKernel::Line_arc_2 CircularKernel::ConstructLineArc_2::operator()</definition>
        <argsstring>(const CircularKernel::Line_2 &amp;l, const CircularKernel::Circle_2 &amp;c1, bool b1, const CircularKernel::Circle_2 &amp;c2, bool b2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1ad701c373bfe533230ef67bb115c66972" kindref="member">CircularKernel::Line_2</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1aad6380c249a934593a4409f175fc79d2" kindref="member">CircularKernel::Circle_2</ref> &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1aad6380c249a934593a4409f175fc79d2" kindref="member">CircularKernel::Circle_2</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b2</declname>
        </param>
        <briefdescription>
<para>Constructs the line segment whose supporting line is <computeroutput>l</computeroutput>, whose source endpoint is the <formula id="4">$ b_1^{th}$</formula> intersection of <computeroutput>l</computeroutput> with <computeroutput>c1</computeroutput>, and whose target endpoint is the <formula id="5">$ b_2^{th}$</formula> intersection of <computeroutput>l</computeroutput> and <computeroutput>c2</computeroutput>, where intersections are ordered lexicographically. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l</computeroutput> intersects both <computeroutput>c1</computeroutput> and <computeroutput>c2</computeroutput>, and the arc defined by the intersections has non-zero length. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCircularKernel_1_1ConstructLineArc__2_1aeb26c85097fbe71ba2e07dfb058edc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a9095959232dc018e83498e1dc1d0d523" kindref="member">CircularKernel::Line_arc_2</ref></type>
        <definition>CircularKernel::Line_arc_2 CircularKernel::ConstructLineArc_2::operator()</definition>
        <argsstring>(const CircularKernel::Line_2 &amp;l, const CircularKernel::Line_2 &amp;l1, const CircularKernel::Line_2 &amp;l2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCircularKernel_1ad701c373bfe533230ef67bb115c66972" kindref="member">CircularKernel::Line_2</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1ad701c373bfe533230ef67bb115c66972" kindref="member">CircularKernel::Line_2</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCircularKernel_1ad701c373bfe533230ef67bb115c66972" kindref="member">CircularKernel::Line_2</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>Same, for intersections defined by lines instead of circles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> </para>    </detaileddescription>
    <location file="Concepts/CircularKernel--ConstructLineArc_2.h" line="8" column="1" bodyfile="Concepts/CircularKernel--ConstructLineArc_2.h" bodystart="8" bodyend="60"/>
    <listofallmembers>
      <member refid="classCircularKernel_1_1ConstructLineArc__2_1aff9636972f44755100c9c24accab3cc9" prot="public" virt="non-virtual"><scope>CircularKernel::ConstructLineArc_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1ConstructLineArc__2_1ac1dc7f9214d239843359bfb3ed333481" prot="public" virt="non-virtual"><scope>CircularKernel::ConstructLineArc_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1ConstructLineArc__2_1af83ccaba42cc92154e3edf03f6519d28" prot="public" virt="non-virtual"><scope>CircularKernel::ConstructLineArc_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1ConstructLineArc__2_1a5c8df72c542514260fbb3e0d10716c35" prot="public" virt="non-virtual"><scope>CircularKernel::ConstructLineArc_2</scope><name>operator()</name></member>
      <member refid="classCircularKernel_1_1ConstructLineArc__2_1aeb26c85097fbe71ba2e07dfb058edc2c" prot="public" virt="non-virtual"><scope>CircularKernel::ConstructLineArc_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
