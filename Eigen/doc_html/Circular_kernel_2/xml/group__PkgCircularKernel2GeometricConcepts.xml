<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgCircularKernel2GeometricConcepts" kind="group">
    <compoundname>PkgCircularKernel2GeometricConcepts</compoundname>
    <title>Geometric Concepts</title>
    <innerclass refid="classCircularKernel_1_1BoundedSide__2" prot="public">CircularKernel::BoundedSide_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CircularArc__2" prot="public">CircularKernel::CircularArc_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CircularArcPoint__2" prot="public">CircularKernel::CircularArcPoint_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CompareX__2" prot="public">CircularKernel::CompareX_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CompareXY__2" prot="public">CircularKernel::CompareXY_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CompareY__2" prot="public">CircularKernel::CompareY_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CompareYatX__2" prot="public">CircularKernel::CompareYatX_2</innerclass>
    <innerclass refid="classCircularKernel_1_1CompareYtoRight__2" prot="public">CircularKernel::CompareYtoRight_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ComputeCircularX__2" prot="public">CircularKernel::ComputeCircularX_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ComputeCircularY__2" prot="public">CircularKernel::ComputeCircularY_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructBbox__2" prot="public">CircularKernel::ConstructBbox_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircle__2" prot="public">CircularKernel::ConstructCircle_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularArc__2" prot="public">CircularKernel::ConstructCircularArc_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularArcPoint__2" prot="public">CircularKernel::ConstructCircularArcPoint_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularMaxVertex__2" prot="public">CircularKernel::ConstructCircularMaxVertex_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularMinVertex__2" prot="public">CircularKernel::ConstructCircularMinVertex_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularSourceVertex__2" prot="public">CircularKernel::ConstructCircularSourceVertex_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructCircularTargetVertex__2" prot="public">CircularKernel::ConstructCircularTargetVertex_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructLine__2" prot="public">CircularKernel::ConstructLine_2</innerclass>
    <innerclass refid="classCircularKernel_1_1ConstructLineArc__2" prot="public">CircularKernel::ConstructLineArc_2</innerclass>
    <innerclass refid="classCircularKernel_1_1DoIntersect__2" prot="public">CircularKernel::DoIntersect_2</innerclass>
    <innerclass refid="classCircularKernel_1_1DoOverlap__2" prot="public">CircularKernel::DoOverlap_2</innerclass>
    <innerclass refid="classCircularKernel_1_1Equal__2" prot="public">CircularKernel::Equal_2</innerclass>
    <innerclass refid="classCircularKernel_1_1GetEquation" prot="public">CircularKernel::GetEquation</innerclass>
    <innerclass refid="classCircularKernel_1_1HasOn__2" prot="public">CircularKernel::HasOn_2</innerclass>
    <innerclass refid="classCircularKernel_1_1HasOnBoundedSide__2" prot="public">CircularKernel::HasOnBoundedSide_2</innerclass>
    <innerclass refid="classCircularKernel_1_1HasOnUnboundedSide__2" prot="public">CircularKernel::HasOnUnboundedSide_2</innerclass>
    <innerclass refid="classCircularKernel_1_1Intersect__2" prot="public">CircularKernel::Intersect_2</innerclass>
    <innerclass refid="classCircularKernel_1_1InXRange__2" prot="public">CircularKernel::InXRange_2</innerclass>
    <innerclass refid="classCircularKernel_1_1IsVertical__2" prot="public">CircularKernel::IsVertical_2</innerclass>
    <innerclass refid="classCircularKernel_1_1IsXMonotone__2" prot="public">CircularKernel::IsXMonotone_2</innerclass>
    <innerclass refid="classCircularKernel_1_1IsYMonotone__2" prot="public">CircularKernel::IsYMonotone_2</innerclass>
    <innerclass refid="classCircularKernel_1_1LineArc__2" prot="public">CircularKernel::LineArc_2</innerclass>
    <innerclass refid="classCircularKernel_1_1MakeXMonotone__2" prot="public">CircularKernel::MakeXMonotone_2</innerclass>
    <innerclass refid="classCircularKernel_1_1MakeXYMonotone__2" prot="public">CircularKernel::MakeXYMonotone_2</innerclass>
    <innerclass refid="classCircularKernel_1_1Split__2" prot="public">CircularKernel::Split_2</innerclass>
    <innerclass refid="classCircularKernel" prot="public">CircularKernel</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
