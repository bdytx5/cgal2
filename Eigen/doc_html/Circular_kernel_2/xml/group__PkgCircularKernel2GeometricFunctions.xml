<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgCircularKernel2GeometricFunctions" kind="group">
    <compoundname>PkgCircularKernel2GeometricFunctions</compoundname>
    <title>Geometric Global Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga05d5658be13df0510fb72d1ed8080ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_in_x_range</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca, const Circular_arc_point_2&lt; CircularKernel &gt; &amp;p)</argsstring>
        <name>has_in_x_range</name>
        <param>
          <type>const Circular_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>const Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Checks whether the point lies in the vertical range defined by the arc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga3c7c39fc6297b55d21cc70a7cbea3ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_in_x_range</definition>
        <argsstring>(const Line_arc_2&lt; CircularKernel &gt; &amp;ca, const Circular_arc_point_2&lt; CircularKernel &gt; &amp;p)</argsstring>
        <name>has_in_x_range</name>
        <param>
          <type>const Line_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>const Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Checks whether the point lies in the vertical range defined by the line segment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1gabd31562a8fe7b14d0bb475a5f4b80810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_on</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, const Circular_arc_point_2&lt; CircularKernel &gt; &amp;p)</argsstring>
        <name>has_on</name>
        <param>
          <type>const Circle_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Checks whether the point lies on the circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga20791b9a88e184491fe836fb3780f8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::make_x_monotone</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca, OutputIterator res)</argsstring>
        <name>make_x_monotone</name>
        <param>
          <type>const Circular_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Copies in the output iterator the <computeroutput>x</computeroutput>-monotone sub-arcs of <computeroutput>ca</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga62bc8c54f9bf7de2c39cdb5ed15f0c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::make_xy_monotone</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca, OutputIterator res)</argsstring>
        <name>make_xy_monotone</name>
        <param>
          <type>const Circular_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Copies in the output iterator the <computeroutput>xy</computeroutput>-monotone sub-arcs of <computeroutput>ca</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1gac6ca408fcb999bb95fd8bbdada45333c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt;CircularKernel&gt; CGAL::x_extremal_point</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, bool b)</argsstring>
        <name>x_extremal_point</name>
        <param>
          <type>const Circle_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the leftmost (resp. rightmost) point of the circle if <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput> (resp. <computeroutput>false</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga1841fa96dec33f66c30e30b8e7888179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::x_extremal_points</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, OutputIterator res)</argsstring>
        <name>x_extremal_points</name>
        <param>
          <type>const Circle_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Copies in the output iterator the <computeroutput>x</computeroutput>-extremal points of the circle. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>res</computeroutput> iterates on elements of type <computeroutput><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound">CircularKernel</ref>&gt;</computeroutput>, sorted in <computeroutput>x</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga39b4a3c207e8e8beef23170dbcf693ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt;CircularKernel&gt; CGAL::y_extremal_point</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, bool b)</argsstring>
        <name>y_extremal_point</name>
        <param>
          <type>const Circle_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the bottommost (resp. topmost) point of the circle if <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput> (resp. <computeroutput>false</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga265e0f6cc6a737bd128e2ffcf74d5c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::y_extremal_points</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, OutputIterator res)</argsstring>
        <name>y_extremal_points</name>
        <param>
          <type>const Circle_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Copies in the output iterator the <computeroutput>y</computeroutput>-extremal points of the circle. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>res</computeroutput> iterates on elements of type <computeroutput><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound">CircularKernel</ref>&gt;</computeroutput>, sorted in <computeroutput>y</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCircularKernel2GeometricFunctions_1ga79015ad57cb6c04656416d3e1ce47afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Comparison_result</ref></type>
        <definition>CGAL::Comparison_result CGAL::compare_y_to_right</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca1, const Circular_arc_2&lt; CircularKernel &gt; &amp;ca2, Circular_arc_point_2&lt; CircularKernel &gt; &amp;p)</argsstring>
        <name>compare_y_to_right</name>
        <param>
          <type>const Circular_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca1</declname>
        </param>
        <param>
          <type>const Circular_arc_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca2</declname>
        </param>
        <param>
          <type>Circular_arc_point_2&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Compares vertically the two arcs, to the right of the point <computeroutput>p</computeroutput>,. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> is an intersection point of the arcs, and the arcs are defined to the right of <computeroutput>p</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/global_functions_circular_kernel_2.h" line="117" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
