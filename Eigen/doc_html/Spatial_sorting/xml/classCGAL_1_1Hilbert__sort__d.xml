<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Hilbert__sort__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Hilbert_sort_d</compoundname>
    <includes local="no">CGAL/Hilbert_sort_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename PolicyTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Hilbert__sort__d_1a722aee9c22b76741579e0cb0fd2367e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hilbert_sort_d&lt; Traits, PolicyTag &gt;::Hilbert_sort_d</definition>
        <argsstring>(const Traits &amp;traits=Traits())</argsstring>
        <name>Hilbert_sort_d</name>
        <param>
          <type>const Traits &amp;</type>
          <declname>traits</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>constructs an instance with <computeroutput>traits</computeroutput> as traits class instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Hilbert_sort_d.h" line="23" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Hilbert__sort__d_1a304469a8925e0e0084296836f2964d51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Hilbert_sort_d&lt; Traits, PolicyTag &gt;::operator()</definition>
        <argsstring>(RandomAccessIterator begin, RandomAccessIterator end) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>It sorts the range <computeroutput>[begin, end)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classRandomAccessIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an iteratoe with value type <computeroutput>Traits::Point_d</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Hilbert_sort_d.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function object <computeroutput><ref refid="classCGAL_1_1Hilbert__sort__d" kindref="compound">Hilbert_sort_d</ref></computeroutput> sorts iterator ranges of <computeroutput>Traits::Point_d</computeroutput> along a Hilbert curve by recursively subdividing at the median or the middle depending on the <computeroutput>PolicyTag</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model for <computeroutput><ref refid="classSpatialSortingTraits__d" kindref="compound">SpatialSortingTraits_d</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="CGAL/Hilbert_sort_d.h" line="14" column="1" bodyfile="CGAL/Hilbert_sort_d.h" bodystart="14" bodyend="38"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Hilbert__sort__d_1a722aee9c22b76741579e0cb0fd2367e5" prot="public" virt="non-virtual"><scope>CGAL::Hilbert_sort_d</scope><name>Hilbert_sort_d</name></member>
      <member refid="classCGAL_1_1Hilbert__sort__d_1a304469a8925e0e0084296836f2964d51" prot="public" virt="non-virtual"><scope>CGAL::Hilbert_sort_d</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
