<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgCombinatorialMapsConstructions" kind="group">
    <compoundname>PkgCombinatorialMapsConstructions</compoundname>
    <title>Constructions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgCombinatorialMapsConstructions_1gadff533cb4d88203dd1ecb329906d3a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CMap</type>
          </param>
        </templateparamlist>
        <type>CMap::Dart_handle</type>
        <definition>CMap::Dart_handle CGAL::make_combinatorial_hexahedron</definition>
        <argsstring>(CMap &amp;cm)</argsstring>
        <name>make_combinatorial_hexahedron</name>
        <param>
          <type>CMap &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Creates a combinatorial hexahedron.</para></xrefdescription></xrefsect>Deprecated. Use <computeroutput><ref refid="group__PkgCombinatorialMapsConstructions_1gadff533cb4d88203dd1ecb329906d3a01" kindref="member">cm.make_combinatorial_hexahedron()</ref></computeroutput> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Combinatorial_map_constructors.h" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCombinatorialMapsConstructions_1gae5495cbd06ea15e790f0e6e95c2716d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CMap</type>
          </param>
        </templateparamlist>
        <type>CMap::Dart_handle</type>
        <definition>CMap::Dart_handle CGAL::make_combinatorial_polygon</definition>
        <argsstring>(CMap &amp;cm, unsigned int lg)</argsstring>
        <name>make_combinatorial_polygon</name>
        <param>
          <type>CMap &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Creates a combinatorial polygon of length <computeroutput>lg</computeroutput>.</para></xrefdescription></xrefsect>Deprecated. Use <computeroutput><ref refid="group__PkgCombinatorialMapsConstructions_1gae5495cbd06ea15e790f0e6e95c2716d9" kindref="member">cm.make_combinatorial_polygon()</ref></computeroutput> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Combinatorial_map_constructors.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCombinatorialMapsConstructions_1gaed778716a59f76325fb97e3fe616d29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CMap</type>
          </param>
        </templateparamlist>
        <type>CMap::Dart_handle</type>
        <definition>CMap::Dart_handle CGAL::make_combinatorial_tetrahedron</definition>
        <argsstring>(CMap &amp;cm)</argsstring>
        <name>make_combinatorial_tetrahedron</name>
        <param>
          <type>CMap &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Creates a combinatorial tetrahedron.</para></xrefdescription></xrefsect>Deprecated. Use <computeroutput><ref refid="group__PkgCombinatorialMapsConstructions_1gaed778716a59f76325fb97e3fe616d29d" kindref="member">cm.make_combinatorial_tetrahedron()</ref></computeroutput> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Combinatorial_map_constructors.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgCombinatorialMapsConstructions_1ga9c8c76fdd8459d5d6a69964231291724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CMap</type>
          </param>
        </templateparamlist>
        <type>CMap::Dart_handle</type>
        <definition>CMap::Dart_handle CGAL::make_edge</definition>
        <argsstring>(CMap &amp;cm)</argsstring>
        <name>make_edge</name>
        <param>
          <type>CMap &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Creates an isolated edge.</para></xrefdescription></xrefsect>Deprecated. Use <computeroutput><ref refid="group__PkgCombinatorialMapsConstructions_1ga9c8c76fdd8459d5d6a69964231291724" kindref="member">cm.make_edge()</ref></computeroutput> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Combinatorial_map_constructors.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic constructions. </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;CGAL/Combinatorial_map_constructors.h&gt;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
