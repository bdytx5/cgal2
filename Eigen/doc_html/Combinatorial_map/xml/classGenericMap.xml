<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classGenericMap" kind="class" language="C++" prot="public">
    <compoundname>GenericMap</compoundname>
    <includes local="no">Concepts/GenericMap.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classGenericMap_1a5266e4b8e8380c4df42f17b2cc8a4e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Map</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GenericMap::GenericMap</definition>
        <argsstring>(const Map &amp;bmap)</argsstring>
        <name>GenericMap</name>
        <param>
          <type>const Map &amp;</type>
          <declname>bmap</declname>
        </param>
        <briefdescription>
<para>Construct a new generic map from another one. </para>        </briefdescription>
        <detaileddescription>
<para>The new generic map is created by copying the darts and the non void attributes of bmap. Map must be a model of <computeroutput><ref refid="classGenericMap" kindref="compound">GenericMap</ref></computeroutput> concept, which can be defined with a different dimension and/or different attributes than <computeroutput>*this</computeroutput>. In this case, only dimensions that are common to <computeroutput>bmap</computeroutput> and <computeroutput>*this</computeroutput>, and only non void i-attributes of <computeroutput>bmap</computeroutput> whose info type is the same to the info of non void i-attributes of <computeroutput>*this</computeroutput>, are copied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="30" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart</definition>
        <argsstring></argsstring>
        <name>Dart</name>
        <briefdescription>
<para>Dart type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="40" column="1" bodyfile="Concepts/GenericMap.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart_handle</definition>
        <argsstring></argsstring>
        <name>Dart_handle</name>
        <briefdescription>
<para>Dart handle type. </para>        </briefdescription>
        <detaileddescription>
<para>For each <computeroutput>Dart_handle dh</computeroutput>, the type of <computeroutput>*dh</computeroutput> must be <computeroutput>Dart</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="45" column="1" bodyfile="Concepts/GenericMap.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart_const_handle</definition>
        <argsstring></argsstring>
        <name>Dart_const_handle</name>
        <briefdescription>
<para>Dart const handle type. </para>        </briefdescription>
        <detaileddescription>
<para>For each <computeroutput>Dart_const_handle dh</computeroutput>, the type of <computeroutput>*dh</computeroutput> must be <computeroutput>const Dart</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="50" column="1" bodyfile="Concepts/GenericMap.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a7a37f23cce66006651de27b8eea58e9e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart_info</definition>
        <argsstring></argsstring>
        <name>Dart_info</name>
        <briefdescription>
<para>Information associated to each dart. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="55" column="1" bodyfile="Concepts/GenericMap.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Size type (an unsigned integral type). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="60" column="1" bodyfile="Concepts/GenericMap.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constants</header>
      <memberdef kind="variable" id="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int GenericMap::dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <briefdescription>
<para>The dimension <emphasis>d</emphasis> of the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="70" column="1" bodyfile="Concepts/GenericMap.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGenericMap_1a6e4ee8b525afeb9bbaed065623e26e68" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>const size_type GenericMap::NB_MARKS</definition>
        <argsstring></argsstring>
        <name>NB_MARKS</name>
        <briefdescription>
<para>The number of available Boolean marks of the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="75" column="1" bodyfile="Concepts/GenericMap.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types for Attributes</header>
      <memberdef kind="typedef" id="classGenericMap_1a5b0f277939f658c55598a87ba9084981" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Attributes</definition>
        <argsstring></argsstring>
        <name>Attributes</name>
        <briefdescription>
<para>The tuple of cell attributes. </para>        </briefdescription>
        <detaileddescription>
<para>It contains at most <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref><computeroutput>+1</computeroutput> types (one for each possible cell of the generic map). Each type of the tuple must be either a model of the <computeroutput><ref refid="classCellAttribute" kindref="compound">CellAttribute</ref></computeroutput> concept or <computeroutput>void</computeroutput>. The first type corresponds to 0-attributes, the second to 1-attributes and so on. If the <emphasis>i <superscript>th</superscript></emphasis> type in the tuple is <computeroutput>void</computeroutput>, <emphasis>(i-1)</emphasis>-attributes are disabled. Otherwise, <emphasis>(i-1)</emphasis>-attributes are enabled and have the given type. If the size of the tuple is <emphasis>k</emphasis>, with <emphasis>k</emphasis> <formula id="27">$ &lt; $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref><computeroutput>+1</computeroutput>, <formula id="17">$ \forall $</formula> <emphasis>i</emphasis>: <emphasis>k</emphasis> <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are disabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="96" column="1" bodyfile="Concepts/GenericMap.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Attribute_type =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Attribute_type</name>
        <briefdescription>
<para><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput> is the type of <emphasis>i</emphasis>-attributes, a model of <computeroutput><ref refid="classCellAttribute" kindref="compound">CellAttribute</ref></computeroutput> concept. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classCellAttribute_1a53e4fbd3f7d254824f04c4ac578d4ae8" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type::Dart_handle</computeroutput></ref> is equal to <ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member"><computeroutput>Dart_handle</computeroutput></ref>, and <ref refid="classCellAttribute_1a9aa2169f890858c747967741fb509bc4" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type::Dart_const_handle</computeroutput></ref> is equal to <ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member"><computeroutput>Dart_const_handle</computeroutput></ref>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput>. </para></simplesect>
<simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="109" column="1" bodyfile="Concepts/GenericMap.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Attribute_handle =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Attribute_handle</name>
        <briefdescription>
<para><computeroutput>Attribute_handle&lt;i&gt;::type</computeroutput> is a handle to <emphasis>i</emphasis>-attributes. </para>        </briefdescription>
        <detaileddescription>
<para>For each <computeroutput>Attribute_handle&lt;i&gt;::type ah</computeroutput>, the type of <computeroutput>*ah</computeroutput> must be <computeroutput>Attribute_type&lt;i&gt;::type</computeroutput>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
<simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="118" column="1" bodyfile="Concepts/GenericMap.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Attribute_const_handle =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Attribute_const_handle</name>
        <briefdescription>
<para><computeroutput>Attribute_handle&lt;i&gt;::type</computeroutput> is a const handle to <emphasis>i</emphasis>-attributes. </para>        </briefdescription>
        <detaileddescription>
<para>For each <computeroutput>Attribute_const_handle&lt;i&gt;::type ah</computeroutput>, the type of <computeroutput>*ah</computeroutput> must be <computeroutput>const Attribute_type&lt;i&gt;::type</computeroutput>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
<simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="127" column="1" bodyfile="Concepts/GenericMap.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range Types</header>
      <memberdef kind="typedef" id="classGenericMap_1a3f67e5f77a6a61281054ee9c1d619c58" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart_range</definition>
        <argsstring></argsstring>
        <name>Dart_range</name>
        <briefdescription>
<para>Range of all the darts of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>This type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is bidirectional and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="139" column="1" bodyfile="Concepts/GenericMap.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a021b35b97c7f36bc32d3692ec5a58766" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMap::Dart_const_range</definition>
        <argsstring></argsstring>
        <name>Dart_const_range</name>
        <briefdescription>
<para>Const range of all the darts of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>This type is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is bidirectional and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="146" column="1" bodyfile="Concepts/GenericMap.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ae567e6737eb1577fb34e43bb257d8776" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Attribute_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Attribute_range</name>
        <briefdescription>
<para><computeroutput>Attribute_range&lt;i&gt;::type</computeroutput> is the range of all the <emphasis>i</emphasis>-attributes. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Attribute_range&lt;i&gt;::type</computeroutput> is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is bidirectional and its value type is <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput> </ref>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
<simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="158" column="1" bodyfile="Concepts/GenericMap.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1aef776e81abebd51a27441d60cb1318ab" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Attribute_const_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Attribute_const_range</name>
        <briefdescription>
<para><computeroutput>Attribute_const_range&lt;i&gt;::type</computeroutput> is the const range of all the <emphasis>i</emphasis>-attributes. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Attribute_const_range&lt;i&gt;::type</computeroutput> is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is bidirectional and its value type is <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput></ref>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
<simplesect kind="note"><para>It can be implemented using a nested template class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="169" column="1" bodyfile="Concepts/GenericMap.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1abf73974dbf5e7d9e01c7d8912f58edd3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Dart_of_orbit_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Dart_of_orbit_range</name>
        <briefdescription>
<para>Range of all the darts of the <computeroutput>&lt;I...&gt;</computeroutput> orbit. </para>        </briefdescription>
        <detaileddescription>
<para>This type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="177" column="1" bodyfile="Concepts/GenericMap.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a87a27a6dcd15469efa045d0b5110f015" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Dart_of_orbit_const_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Dart_of_orbit_const_range</name>
        <briefdescription>
<para>Const range of all the darts of the <computeroutput>&lt;I...&gt;</computeroutput> orbit. </para>        </briefdescription>
        <detaileddescription>
<para>This type is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="185" column="1" bodyfile="Concepts/GenericMap.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ab598f5933eb3662863c2e33ae9320d93" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Dart_of_cell_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Dart_of_cell_range</name>
        <briefdescription>
<para>Range of all the darts of an <emphasis>i</emphasis>-cell. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i==dim+1</emphasis>, range of all the darts of a connected component. This type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="196" column="1" bodyfile="Concepts/GenericMap.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a22703f97b83fdebb971144a26e030cfb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::Dart_of_cell_const_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Dart_of_cell_const_range</name>
        <briefdescription>
<para>Const range of all the darts of the <emphasis>i</emphasis>-cell. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i==dim+1</emphasis>, range of all the darts of a connected component. This type is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="207" column="1" bodyfile="Concepts/GenericMap.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a6d6212f4fc539c0054a2cfc3387ca096" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::One_dart_per_incident_cell_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>One_dart_per_incident_cell_range</name>
        <briefdescription>
<para>Range of one dart of each <emphasis>i</emphasis>-cell incident to one <emphasis>j</emphasis>-cell. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis>, 0 <formula id="11">$ \leq $</formula> <emphasis>j</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i</emphasis>==<emphasis>dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. If <emphasis>j</emphasis>==<emphasis>dim+1</emphasis>, consider one connected component instead of one <emphasis>j</emphasis>-cell. This type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="220" column="1" bodyfile="Concepts/GenericMap.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ab43995ae60a2f45a9c70a95591597326" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::One_dart_per_incident_cell_const_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>One_dart_per_incident_cell_const_range</name>
        <briefdescription>
<para>Const range of one dart of each <emphasis>i</emphasis>-cell incident to one <emphasis>j</emphasis>-cell. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis>, 0 <formula id="11">$ \leq $</formula> <emphasis>j</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i==dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. If <emphasis>j==dim+1</emphasis>, consider one connected component instead of one <emphasis>j</emphasis>-cell. This type is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="233" column="1" bodyfile="Concepts/GenericMap.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1ae9588233426a0e74848af1c8c79cede9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::One_dart_per_cell_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>One_dart_per_cell_range</name>
        <briefdescription>
<para>Range of one dart of each <emphasis>i</emphasis>-cell of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i==dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. This type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="245" column="1" bodyfile="Concepts/GenericMap.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMap_1a87f53ac04517f399231fba79613c491e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMap::One_dart_per_cell_const_range =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>One_dart_per_cell_const_range</name>
        <briefdescription>
<para>Const range of one dart of each <emphasis>i</emphasis>-cell of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension, with 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. If <emphasis>i==dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. This type is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> concept, its iterator type is forward and its value type is <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member"><computeroutput>Dart</computeroutput></ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="257" column="1" bodyfile="Concepts/GenericMap.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Member Functions</header>
      <memberdef kind="function" id="classGenericMap_1ab16ce816af5bc32b6e55bb0ccc27c59c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <briefdescription>
<para>Returns true iff the generic map is empty, i.e. it contains no dart. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a8e5275b70d5a894596e989a44fef88c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_without_boundary</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>is_without_boundary</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true iff the generic map is without <emphasis>i</emphasis>-boundary. </para>        </briefdescription>
        <detaileddescription>
<para>The map is without <emphasis>i</emphasis>-boundary if there is no <computeroutput>i</computeroutput>-free dart. <simplesect kind="pre"><para>1 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab3d17ad220cd1afcfb5d53c83ceca6e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_without_boundary</definition>
        <argsstring>() const</argsstring>
        <name>is_without_boundary</name>
        <briefdescription>
<para>Returns true iff the generic map is without boundary in all dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a1089d3d771b0a8b1819d8b719861d139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::number_of_darts</definition>
        <argsstring>() const</argsstring>
        <name>number_of_darts</name>
        <briefdescription>
<para>Returns the number of darts in the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a4b54978622b14186ea7fd70793ff023e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::number_of_attributes</definition>
        <argsstring>() const</argsstring>
        <name>number_of_attributes</name>
        <briefdescription>
<para>Returns the number of <emphasis>i</emphasis>-attributes in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ad701ccd825ed7da61aee37c1f6e2db9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_dart_used</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>is_dart_used</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns true if dh points to a used dart (i.e. valid). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a0e5b92501f6331af764b672f880bf53f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_free</definition>
        <argsstring>(Dart_const_handle dh, unsigned int i) const</argsstring>
        <name>is_free</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns true iff dart <computeroutput>*dh</computeroutput> is <emphasis>i</emphasis>-free. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a479583222d078880cfc5e08d874943e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMap::is_free</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>is_free</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns true iff dart <computeroutput>*dh</computeroutput> is <emphasis>i</emphasis>-free. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1aaa0ee11c83a6083fff9223fb3246f915" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GenericMap::highest_nonfree_dimension</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>highest_nonfree_dimension</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns the highest dimension <emphasis>i</emphasis> such that dart <computeroutput>*dh</computeroutput> is not <emphasis>i</emphasis>-free. </para>        </briefdescription>
        <detaileddescription>
<para>-1 if <computeroutput>dh</computeroutput> is free for any dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab7ff317ec05627584651e15e5f77f45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::other_extremity</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>other_extremity</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a handle to a dart belonging to the other vertex of the edge containing dart <computeroutput>*dh</computeroutput> (but not necessarily to the same edge). </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>NULL</computeroutput> if such a dart does not exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a802122c13e53cef02d251c55ebab7c2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::other_extremity</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>other_extremity</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const handle to a dart belonging to the other vertex of the edge containing dart <computeroutput>*dh</computeroutput>, when the dart is const (but not necessarily to the same edge). </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>NULL</computeroutput> if such a dart does not exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a871e921eff665637dd5b30eb5169856a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::next</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a handle to a dart belonging to the next edge after <computeroutput>*dh</computeroutput>, that does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput> and that belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>i</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a740da35931e6b04ec9356196fdb94eb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::next</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const handle to a dart belonging to the next edge after <computeroutput>*dh</computeroutput>, that does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput> and that belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>i</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a1df4fa8da65992fd9d0593f32d695285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::previous</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>previous</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a handle to a dart belonging to the previous edge begore <computeroutput>*dh</computeroutput>, that does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput> and that belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>i</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a7c72831b34b5055d5db28f6b4c1a2683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::previous</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>previous</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const handle to a dart belonging to the previous edge begore <computeroutput>*dh</computeroutput>, that does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput> and that belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>i</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a956fbbb8fb58f6d1e7813ca286d50012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::opposite</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>opposite</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a handle to a dart belonging to the opposite <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This dart does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput>, nor to the same <emphasis>i</emphasis>-cell, but belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>j</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>j</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>j</emphasis> <formula id="23">$ \neq $</formula> <emphasis>i</emphasis>. <simplesect kind="pre"><para>2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ae239675d5c1c035f7fa3dc32c7009f48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::opposite</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>opposite</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const handle to a dart belonging to the opposite <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This dart does not belong to the same <emphasis>0</emphasis>-cell than <computeroutput>*dh</computeroutput>, nor to the same <emphasis>i</emphasis>-cell, but belongs to the same <emphasis>i</emphasis>-cell than <computeroutput>*dh</computeroutput>for each <emphasis>j</emphasis>, 2 <formula id="11">$ \leq $</formula> <emphasis>j</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>j</emphasis> <formula id="23">$ \neq $</formula> <emphasis>i</emphasis>. <simplesect kind="pre"><para>2 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ae3c5c543f210eb0c735c883392be77e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; GenericMap::display_characteristics</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>display_characteristics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Displays on <computeroutput>os</computeroutput> the number of elements of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Its number of darts, its number of <emphasis>i</emphasis>-cells, for each <emphasis>i</emphasis>, 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and its number of connected components.</para><para>Example of output for a 3D combinatorial map containing two disjoint combinatorial tetrahedra:</para><para><computeroutput>#Darts=24, #0-cells=8, #1-cells=12, #2-cells=8, #3-cells=2, #ccs=2</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="372" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Attributes Access Member Functions</header>
      <memberdef kind="function" id="classGenericMap_1ac3f091df8030d85b38e5ef40499eaf48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a7a37f23cce66006651de27b8eea58e9e" kindref="member">Dart_info</ref> &amp;</type>
        <definition>Dart_info&amp; GenericMap::info</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns the information associated to dart <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>Dart_info</computeroutput> is not <computeroutput>void</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a1f4edb73122267abd4c3159cee73fc55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGenericMap_1a7a37f23cce66006651de27b8eea58e9e" kindref="member">Dart_info</ref> &amp;</type>
        <definition>const Dart_info&amp; GenericMap::info</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns the information associated to dart <computeroutput>*dh</computeroutput>, when the dart is const. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>Dart_info</computeroutput> is not <computeroutput>void</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a60dace8ebefc87170b0a4bb4ac138137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
        <definition>Attribute_handle&lt;i&gt;::type GenericMap::attribute</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>attribute</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a handle to the <emphasis>i</emphasis>-attribute associated to dart <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a748da2220b760ce36502daef52c1f987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" kindref="member">Attribute_const_handle</ref>&lt; i &gt;::type</type>
        <definition>Attribute_const_handle&lt;i&gt;::type GenericMap::attribute</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>attribute</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const handle to the <emphasis>i</emphasis>-attribute associated to dart <computeroutput>*dh</computeroutput>, when the dart is const. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1aedbd81420b8a913aea16b38e7d351974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::dart_of_attribute</definition>
        <argsstring>(typename Attribute_handle&lt; i &gt;::type ah)</argsstring>
        <name>dart_of_attribute</name>
        <param>
          <type>typename <ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Returns one dart of the cell associated to the <emphasis>i</emphasis>-attribute <computeroutput>*ah</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>NULL</computeroutput> if <ref refid="classCellAttribute_1af801565273cbed009223161551b3e6b2" kindref="member"><computeroutput>Supports_cell_dart</computeroutput></ref> of <emphasis>i</emphasis>-attributes is equal to <ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag"><computeroutput>Tag_false</computeroutput></ref>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput> and <computeroutput>ah</computeroutput>!=NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1af51b4662244e8daef6494b081c64f0f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::dart_of_attribute</definition>
        <argsstring>(typename Attribute_const_handle&lt; i &gt;::type ah) const</argsstring>
        <name>dart_of_attribute</name>
        <param>
          <type>typename <ref refid="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" kindref="member">Attribute_const_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Returns one dart of the cell associated to the const <emphasis>i</emphasis>-attribute <computeroutput>*ah</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>NULL</computeroutput> if <ref refid="classCellAttribute_1af801565273cbed009223161551b3e6b2" kindref="member"><computeroutput>Supports_cell_dart</computeroutput></ref> of <emphasis>i</emphasis>-attributes is equal to <ref refid="group__PkgStlExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag"><computeroutput>Tag_false</computeroutput></ref>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput> and <computeroutput>ah</computeroutput>!=NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a0c15ff29236582e6a1b770e19c063ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type::Info &amp;</type>
        <definition>Attribute_type&lt;i&gt;::type::Info&amp; GenericMap::info_of_attribute</definition>
        <argsstring>(typename Attribute_handle&lt; i &gt;::type ah)</argsstring>
        <name>info_of_attribute</name>
        <param>
          <type>typename <ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Returns the information of the <emphasis>i</emphasis>-attribute <computeroutput>*ah</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Defined only if <ref refid="classCellAttribute_1ab89dcc6d5fd025f71ccfacb35d886fe3" kindref="member"><computeroutput>Info</computeroutput></ref> of <emphasis>i</emphasis>-attributes is not <computeroutput>void</computeroutput>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput> and <computeroutput>ah</computeroutput>!=NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a892b0f0c4af53ce1fef8acb66ee45342" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type::Info &amp;</type>
        <definition>const Attribute_type&lt;i&gt;::type::Info&amp; GenericMap::info_of_attribute</definition>
        <argsstring>(typename Attribute_const_handle&lt; i &gt;::type ah) const</argsstring>
        <name>info_of_attribute</name>
        <param>
          <type>typename <ref refid="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" kindref="member">Attribute_const_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Returns the information of the const <emphasis>i</emphasis>-attribute <computeroutput>*ah</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Defined only if <ref refid="classCellAttribute_1ab89dcc6d5fd025f71ccfacb35d886fe3" kindref="member"><computeroutput>Info</computeroutput></ref> of <emphasis>i</emphasis>-attributes is not <computeroutput>void</computeroutput>. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput> and <computeroutput>ah</computeroutput>!=NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a901e7a2eabb8addc6b437be139413778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type::Info &amp;</type>
        <definition>Attribute_type&lt;i&gt;::type::Info&amp; GenericMap::info</definition>
        <argsstring>(Dart_handle adart)</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>adart</declname>
        </param>
        <briefdescription>
<para>A shorcut for <ref refid="classGenericMap_1a0c15ff29236582e6a1b770e19c063ad2" kindref="member"><computeroutput>info_of_attribute&lt;i&gt;</computeroutput></ref><computeroutput>(</computeroutput><ref refid="classGenericMap_1a60dace8ebefc87170b0a4bb4ac138137" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart))</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a60dace8ebefc87170b0a4bb4ac138137" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart)!=NULL</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a6c461a93372453e7aa6c19241910d691" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type::Info &amp;</type>
        <definition>const Attribute_type&lt;i&gt;::type::Info&amp; GenericMap::info</definition>
        <argsstring>(Dart_const_handle adart) const</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>adart</declname>
        </param>
        <briefdescription>
<para>A shorcut for <ref refid="classGenericMap_1a892b0f0c4af53ce1fef8acb66ee45342" kindref="member"><computeroutput>info_of_attribute&lt;i&gt;</computeroutput></ref><computeroutput>(</computeroutput><ref refid="classGenericMap_1a748da2220b760ce36502daef52c1f987" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart))</computeroutput> for const handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a748da2220b760ce36502daef52c1f987" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart)!=NULL</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1aa2ea1db275ebf90a67385b046a2e8a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref> &amp;</type>
        <definition>Dart_handle&amp; GenericMap::dart</definition>
        <argsstring>(Dart_handle adart)</argsstring>
        <name>dart</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>adart</declname>
        </param>
        <briefdescription>
<para>A shorcut for <ref refid="classGenericMap_1aedbd81420b8a913aea16b38e7d351974" kindref="member"><computeroutput>dart_of_attribute&lt;i&gt;</computeroutput></ref><computeroutput>(</computeroutput><ref refid="classGenericMap_1a60dace8ebefc87170b0a4bb4ac138137" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart))</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>attribute&lt;i&gt;(adart)!=NULL</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1afe90a43a5b38c9045da97a28923078f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::dart</definition>
        <argsstring>(Dart_const_handle adart) const</argsstring>
        <name>dart</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>adart</declname>
        </param>
        <briefdescription>
<para>A shorcut for <ref refid="classGenericMap_1af51b4662244e8daef6494b081c64f0f3" kindref="member"><computeroutput>dart_of_attribute&lt;i&gt;</computeroutput></ref><computeroutput>(</computeroutput><ref refid="classGenericMap_1a748da2220b760ce36502daef52c1f987" kindref="member"><computeroutput>attribute&lt;i&gt;</computeroutput></ref><computeroutput>(adart))</computeroutput> for const handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>attribute&lt;i&gt;(adart)!=NULL</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab326587b270395ffc0a6849690d7af65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMap::is_attribute_used</definition>
        <argsstring>(typename Attribute_const_handle&lt; i &gt;::type ah) const</argsstring>
        <name>is_attribute_used</name>
        <param>
          <type>typename <ref refid="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" kindref="member">Attribute_const_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Returns true if ah points to a used i-attribute (i.e. valid). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non <computeroutput>void</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="468" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Transformations Between Handles and Instances</header>
      <memberdef kind="function" id="classGenericMap_1a0ffdb12dba84222c38c986b41479e17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::dart_handle</definition>
        <argsstring>(Dart &amp;d)</argsstring>
        <name>dart_handle</name>
        <param>
          <type><ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member">Dart</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the dart handle of <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>d</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1aa8753c15a78a613c4b833ec25202766a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
        <definition>Dart_const_handle GenericMap::dart_handle</definition>
        <argsstring>(const Dart &amp;d) const</argsstring>
        <name>dart_handle</name>
        <param>
          <type>const <ref refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" kindref="member">Dart</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the dart const handle of <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>d</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="485" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range Access Member Functions</header>
      <memberdef kind="function" id="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a3f67e5f77a6a61281054ee9c1d619c58" kindref="member">Dart_range</ref> &amp;</type>
        <definition>Dart_range&amp; GenericMap::darts</definition>
        <argsstring>()</argsstring>
        <name>darts</name>
        <briefdescription>
<para>Returns a range of all the darts in the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ac140c922fb57399b0f6dce87a8f5bc30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a021b35b97c7f36bc32d3692ec5a58766" kindref="member">Dart_const_range</ref> &amp;</type>
        <definition>Dart_const_range&amp; GenericMap::darts</definition>
        <argsstring>() const</argsstring>
        <name>darts</name>
        <briefdescription>
<para>Returns a const range of all the darts in the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a01b65dd586a4d0a31280cd4b9668cc7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ae567e6737eb1577fb34e43bb257d8776" kindref="member">Attribute_range</ref>&lt; i &gt;::type &amp;</type>
        <definition>Attribute_range&lt;i&gt;::type&amp; GenericMap::attributes</definition>
        <argsstring>()</argsstring>
        <name>attributes</name>
        <briefdescription>
<para>Returns a range of all the <emphasis>i</emphasis>-attributes in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a9afbff52b8e31674ff2cff7e484926b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1aef776e81abebd51a27441d60cb1318ab" kindref="member">Attribute_const_range</ref>&lt; i &gt;::type &amp;</type>
        <definition>Attribute_const_range&lt;i&gt;::type&amp; GenericMap::attributes</definition>
        <argsstring>() const</argsstring>
        <name>attributes</name>
        <briefdescription>
<para>Returns a const range of all the <emphasis>i</emphasis>-attributes in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a7063c7bd9d94a3e19d6b39a05f78a00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int ...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1abf73974dbf5e7d9e01c7d8912f58edd3" kindref="member">Dart_of_orbit_range</ref></type>
        <definition>Dart_of_orbit_range GenericMap::darts_of_orbit</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>darts_of_orbit</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a range of all the darts of the orbit <computeroutput>&lt;I...&gt;(*dh)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. <simplesect kind="pre"><para><computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput> and <computeroutput>I...</computeroutput> is a sequence of integers <formula id="37">$ i_1$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="38">$ i_k$</formula>, such that 0 <formula id="11">$ \leq $</formula> <formula id="37">$ i_1$</formula> <formula id="27">$ &lt; $</formula> <formula id="41">$ i_2$</formula> <formula id="27">$ &lt; $</formula> <formula id="4">$ \ldots$</formula> <formula id="27">$ &lt; $</formula> <formula id="38">$ i_k$</formula> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ad1e4905d90af753fe1ae88eb59d878a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int ...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a87a27a6dcd15469efa045d0b5110f015" kindref="member">Dart_of_orbit_const_range</ref></type>
        <definition>Dart_of_orbit_const_range GenericMap::darts_of_orbit</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>darts_of_orbit</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const range of all the darts of the orbit <computeroutput>&lt;I...&gt;(*dh)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. <simplesect kind="pre"><para>Same as for the non const version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a5b3790e983547e21e34d1547298d022c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ab598f5933eb3662863c2e33ae9320d93" kindref="member">Dart_of_cell_range</ref></type>
        <definition>Dart_of_cell_range GenericMap::darts_of_cell</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>darts_of_cell</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a range of all the darts of the <emphasis>i</emphasis>-cell containing <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. <emphasis>i</emphasis>-cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, range of all the darts of the connected component containing <computeroutput>dh</computeroutput>. <simplesect kind="pre"><para><computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>, 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a4afcc76fa04799c129f1e54cc287a44a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a22703f97b83fdebb971144a26e030cfb" kindref="member">Dart_of_cell_const_range</ref></type>
        <definition>Dart_of_cell_const_range GenericMap::darts_of_cell</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>darts_of_cell</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const range of all the darts of the <emphasis>i</emphasis>-cell containing <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. <emphasis>i</emphasis>-cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, const range of all the darts of the connected component containing <computeroutput>*dh</computeroutput>. <simplesect kind="pre"><para>Same as for the non const version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab573219895c138fd5df5ed04a654350f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>j</declname>
            <defname>j</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a6d6212f4fc539c0054a2cfc3387ca096" kindref="member">One_dart_per_incident_cell_range</ref></type>
        <definition>One_dart_per_incident_cell_range GenericMap::one_dart_per_incident_cell</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>one_dart_per_incident_cell</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a range of one dart of each <emphasis>i</emphasis>-cell incident to the <emphasis>j</emphasis>-cell containing <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. Cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. If <emphasis>j==dim+1</emphasis>, consider the connected component containing <computeroutput>*dh</computeroutput> instead of the <emphasis>j</emphasis>-cell. <simplesect kind="pre"><para><computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>, 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis>, 0 <formula id="11">$ \leq $</formula> <emphasis>j</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1af964b3ba98b88e7517ea58507c5e68c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>j</declname>
            <defname>j</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ab43995ae60a2f45a9c70a95591597326" kindref="member">One_dart_per_incident_cell_const_range</ref></type>
        <definition>One_dart_per_incident_cell_const_range GenericMap::one_dart_per_incident_cell</definition>
        <argsstring>(Dart_const_handle dh) const</argsstring>
        <name>one_dart_per_incident_cell</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns a const range of one dart of each <emphasis>i</emphasis>-cell incident to the <emphasis>j</emphasis>-cell containing <computeroutput>*dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The first element in the range points onto <computeroutput>*dh</computeroutput>. Cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, consider each connected component instead of each <emphasis>i</emphasis>-cell. If <emphasis>j==dim+1</emphasis>, consider the connected component containing <computeroutput>*dh</computeroutput> instead of the <emphasis>j</emphasis>-cell. <simplesect kind="pre"><para>Same as for the non const version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a5c2c1638b2d8966fa1df1eb177b59181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ae9588233426a0e74848af1c8c79cede9" kindref="member">One_dart_per_cell_range</ref></type>
        <definition>One_dart_per_cell_range GenericMap::one_dart_per_cell</definition>
        <argsstring>()</argsstring>
        <name>one_dart_per_cell</name>
        <briefdescription>
<para>Returns a range of one dart of each <emphasis>i</emphasis>-cell in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, range of one dart of each connected component in the generic map. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <emphasis>dim+1</emphasis> and 0 <formula id="11">$ \leq $</formula> <emphasis>dim</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a27e90cd5ac68207d2a036cad2ceb6f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>dim</declname>
            <defname>dim</defname>
            <defval><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member">dimension</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a87f53ac04517f399231fba79613c491e" kindref="member">One_dart_per_cell_const_range</ref></type>
        <definition>One_dart_per_cell_const_range GenericMap::one_dart_per_cell</definition>
        <argsstring>() const</argsstring>
        <name>one_dart_per_cell</name>
        <briefdescription>
<para>Returns a const range of one dart of each <emphasis>i</emphasis>-cell in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Cells are considered in <emphasis>dim</emphasis> dimension. If <emphasis>i==dim+1</emphasis>, const range of one dart of each connected component in the generic map. <simplesect kind="pre"><para>Same as for the non const version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="587" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classGenericMap_1a76dfed826c863e999fda06f4935936f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::create_dart</definition>
        <argsstring>(T1 t1)</argsstring>
        <name>create_dart</name>
        <param>
          <type>T1</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
<para>Creates a new dart in the generic map, and returns the corresponding handle. </para>        </briefdescription>
        <detaileddescription>
<para>Calls the constructor of dart having <computeroutput>T1</computeroutput> as parameter. A new dart is initialized to be <emphasis>i</emphasis>-free, <formula id="17">$ \forall $</formula> <emphasis>i</emphasis>: 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and to have no associated attribute for each non void attribute. Overloads of this member function are defined that take from zero to nine arguments. With zero argument, <computeroutput>create_dart()</computeroutput> creates a new dart by using the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1abbbbfd6f4cd029ffb9cf28e455a7625b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::erase_dart</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>erase_dart</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Removes <computeroutput>*dh</computeroutput> from the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a5d698a85ca72a0a5d9391367af232d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
        <definition>Attribute_handle&lt;i&gt;::type GenericMap::create_attribute</definition>
        <argsstring>(T1 t1)</argsstring>
        <name>create_attribute</name>
        <param>
          <type>T1</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
<para>Creates a new <emphasis>i</emphasis>-attribute in the generic map, and returns the corresponding handle. </para>        </briefdescription>
        <detaileddescription>
<para>Calls the constructor of <emphasis>i</emphasis>-attribute having <computeroutput>T1</computeroutput> as parameter. Overloads of this member function are defined that take from zero to nine arguments. With zero argument, <computeroutput>create_attribute&lt;i&gt;()</computeroutput> creates a new <emphasis>i</emphasis>-attribute by using the default constructor. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i</emphasis>-attributes are non void. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1aed0f512ecf1eb0dffb45bfb533883166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GenericMap::erase_attribute</definition>
        <argsstring>(Attribute_handle&lt; i &gt;::type ah)</argsstring>
        <name>erase_attribute</name>
        <param>
          <type><ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Removes the <emphasis>i</emphasis>-attribute <computeroutput>*ah</computeroutput> from the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non void, and <computeroutput>*ah</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1a01b65dd586a4d0a31280cd4b9668cc7e" kindref="member"><computeroutput>attributes&lt;i&gt;()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="629" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a246cb43a0c76592c605e4a129aab9763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GenericMap::set_attribute</definition>
        <argsstring>(Dart_handle dh, Attribute_handle&lt; i &gt;::type ah)</argsstring>
        <name>set_attribute</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" kindref="member">Attribute_handle</ref>&lt; i &gt;::type</type>
          <declname>ah</declname>
        </param>
        <briefdescription>
<para>Associates the <emphasis>i</emphasis>-attribute of all the darts of the <emphasis>i</emphasis>-cell containing <computeroutput>*dh</computeroutput> to <computeroutput>*ah</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>, 0 <formula id="11">$ \leq $</formula> <emphasis>i</emphasis> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are non void, and <computeroutput>*ah</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1a01b65dd586a4d0a31280cd4b9668cc7e" kindref="member"><computeroutput>attributes&lt;i&gt;()</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ade40ca606988d75b8a9f26d0d9fb75ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Deletes all the darts and all the attributes of the generic map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a5a197b375487985360bcb8218ed6f097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap" kindref="compound">GenericMap</ref> &amp;</type>
        <definition>GenericMap&amp; GenericMap::operator=</definition>
        <argsstring>(const GenericMap &amp;bmap)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGenericMap" kindref="compound">GenericMap</ref> &amp;</type>
          <declname>bmap</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>All darts and attributes are duplicated, and the former generic map is deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab1eda831fba0779a01a90c8bf43ddabe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::swap</definition>
        <argsstring>(GenericMap &amp;bmap)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classGenericMap" kindref="compound">GenericMap</ref> &amp;</type>
          <declname>bmap</declname>
        </param>
        <briefdescription>
<para>Swap the current generic map with <computeroutput>bmap</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>There is no copy of darts and attributes thus this method runs in constant time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="653" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Attributes management</header>
      <memberdef kind="function" id="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::are_attributes_automatically_managed</definition>
        <argsstring>() const</argsstring>
        <name>are_attributes_automatically_managed</name>
        <briefdescription>
<para>Returns the status of the management of the attributes of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if the high level operations update the non void attributes (default value); <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1af7fcbe383d43efece8525654b45741bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::set_automatic_attributes_management</definition>
        <argsstring>(bool update_attributes)</argsstring>
        <name>set_automatic_attributes_management</name>
        <param>
          <type>bool</type>
          <declname>update_attributes</declname>
        </param>
        <briefdescription>
<para>Set the status of the managment of the attributes of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>After calling <computeroutput>set_automatic_attributes_management(false)</computeroutput>, all high level operations will not update non void attributes, until the call of <computeroutput>set_automatic_attributes_management(true)</computeroutput>. The call of <computeroutput>set_automatic_attributes_management(true)</computeroutput> call the <ref refid="classGenericMap_1abb8954d074686dba5e91c5d54343cd0d" kindref="member"><computeroutput>correct_invalid_attributes()</computeroutput></ref> function.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1abb8954d074686dba5e91c5d54343cd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::correct_invalid_attributes</definition>
        <argsstring>()</argsstring>
        <name>correct_invalid_attributes</name>
        <briefdescription>
<para>Correct the invalid attributes of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>We can have invalid attribute either if we have called <ref refid="classGenericMap_1af7fcbe383d43efece8525654b45741bf" kindref="member"><computeroutput>set_automatic_attributes_management(false)</computeroutput></ref> before to use some modification operations or if we have modified the generic map by using low level operations.</para><para><formula id="74">$ \forall i $</formula>, 0 <formula id="11">$ \leq $</formula> i <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> such that the i-attributes are non void, <formula id="17">$ \forall $</formula> d <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>:<itemizedlist>
<listitem><para>if there exists a dart <computeroutput>d2</computeroutput> in the same i-cell than <computeroutput>d</computeroutput> with a different i-attribute, then the i-attribute of <computeroutput>d2</computeroutput> is set to the i-attribute of <computeroutput>d</computeroutput>;</para></listitem><listitem><para>if there exists a dart <computeroutput>d2</computeroutput> in a different i-cell than <computeroutput>d</computeroutput> with the same i-attribute, then the i-attribute of all the darts in i-cell(<computeroutput>d</computeroutput>) is set to a new i-attribute (copy of the original attribute);</para></listitem><listitem><para>ensures that <ref refid="classGenericMap_1aedbd81420b8a913aea16b38e7d351974" kindref="member"><computeroutput>dart_of_attribute(d)</computeroutput></ref> <formula id="31">$ \in $</formula> i-cell(<computeroutput>d</computeroutput>). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="684" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dynamic Onmerge/Onsplit functors</header>
      <memberdef kind="function" id="classGenericMap_1a50cbe1541d64238d3a0e5216c68b595d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>boost::function&lt; void(typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;, typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;)&gt; &amp;</type>
        <definition>boost::function&lt;void(typename Attribute_type&lt; i &gt;::type&amp;, typename Attribute_type&lt; i &gt;::type&amp;)&gt;&amp; GenericMap::onsplit_function</definition>
        <argsstring>()</argsstring>
        <name>onsplit_function</name>
        <briefdescription>
<para>Return the current dynamic onsplit function associated with i-attributes. </para>        </briefdescription>
        <detaileddescription>
<para>This is a boost:function returning void and having two references to <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput></ref> as parameters. The onsplit function is returned by reference so that we can modify it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a3e45a43ebde995456c49742cff76e09d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>const boost::function&lt; void(typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;, typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;)&gt; &amp;</type>
        <definition>const boost::function&lt;void(typename Attribute_type&lt; i &gt;::type&amp;, typename Attribute_type&lt; i &gt;::type&amp;)&gt;&amp; GenericMap::onsplit_function</definition>
        <argsstring>() const</argsstring>
        <name>onsplit_function</name>
        <briefdescription>
<para>Return the current dynamic onsplit function associated with i-attributes, when *this is const. </para>        </briefdescription>
        <detaileddescription>
<para>This is a boost:function returning void and having two references to <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput></ref> as parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="710" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a2f7596c483cad45a7e3813be074c0070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>boost::function&lt; void(typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;, typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;)&gt; &amp;</type>
        <definition>boost::function&lt;void(typename Attribute_type&lt; i &gt;::type&amp;, typename Attribute_type&lt; i &gt;::type&amp;)&gt;&amp; GenericMap::onmerge_function</definition>
        <argsstring>()</argsstring>
        <name>onmerge_function</name>
        <briefdescription>
<para>Return the current dynamic onmerge function associated with i-attributes. </para>        </briefdescription>
        <detaileddescription>
<para>This is a boost:function returning void and having two references to <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput></ref> as parameters. The onmerge function is returned by reference so that we can modify it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a2497c281eb66b2c8f7388fa91514b9dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>const boost::function&lt; void(typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;, typename <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member">Attribute_type</ref>&lt; i &gt;::type &amp;)&gt; &amp;</type>
        <definition>const boost::function&lt;void(typename Attribute_type&lt; i &gt;::type&amp;, typename Attribute_type&lt; i &gt;::type&amp;)&gt;&amp; GenericMap::onmerge_function</definition>
        <argsstring>() const</argsstring>
        <name>onmerge_function</name>
        <briefdescription>
<para>Return the current dynamic onmerge function associated with i-attributes, when *this is const. </para>        </briefdescription>
        <detaileddescription>
<para>This is a boost:function returning void and having two references to <ref refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" kindref="member"><computeroutput>Attribute_type&lt;i&gt;::type</computeroutput></ref> as parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="729" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Boolean Marks</header>
      <memberdef kind="function" id="classGenericMap_1a8c66e1d43055fe732354eedb0f1a780b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::get_new_mark</definition>
        <argsstring>() const</argsstring>
        <name>get_new_mark</name>
        <briefdescription>
<para>Reserves a new mark. </para>        </briefdescription>
        <detaileddescription>
<para>Returns its index. If there is no more available free mark, throw the exception Exception_no_more_available_mark. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_reserved</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>is_reserved</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Returns true iff <computeroutput>m</computeroutput> is a reserved mark of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <emphasis>m</emphasis> <formula id="27">$ &lt; $</formula> <ref refid="classGenericMap_1a6e4ee8b525afeb9bbaed065623e26e68" kindref="member"><computeroutput>NB_MARKS</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="746" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a27763ddbd462d2a47f48d00f50f31d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_marked</definition>
        <argsstring>(Dart_const_handle dh, size_type m) const</argsstring>
        <name>is_marked</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Returns true iff <computeroutput>*dh</computeroutput> is marked for <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="752" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ae444b97ab2983b7cc3fd1b0d6e3dcfe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::mark</definition>
        <argsstring>(Dart_const_handle dh, size_type m) const</argsstring>
        <name>mark</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Marks <computeroutput>*dh</computeroutput> for <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ad55a2a8e0c030a71e3ee0e3be3e15f96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::unmark</definition>
        <argsstring>(Dart_const_handle dh, size_type m) const</argsstring>
        <name>unmark</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Unmarks <computeroutput>*dh</computeroutput> for the mark <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <computeroutput><ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member">darts()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a9996d3fe87eb7cb6ecaae192312eae89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::negate_mark</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>negate_mark</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Inverse the mark <computeroutput>m</computeroutput> for all the darts of the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>All the marked darts become unmarked and all the unmarked darts become marked. <simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab63ba9e899d2c231ba06a95030ecbd2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::unmark_all</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>unmark_all</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Unmarks all the darts of the generic map for <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="778" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a2dd9cc4cc6e3ff34cc1e3f095014a36a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::number_of_marked_darts</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>number_of_marked_darts</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Returns the number of marked darts for <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a27af8e783b1c01cfef98c1945beb032e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::number_of_unmarked_darts</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>number_of_unmarked_darts</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Return the number of unmarked darts for <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a7feb8a3d9e53f8c863acf3767886e4c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenericMap::free_mark</definition>
        <argsstring>(size_type m) const</argsstring>
        <name>free_mark</name>
        <param>
          <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Frees mark <computeroutput>m</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" kindref="member"><computeroutput>is_reserved(m)</computeroutput></ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="796" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructions</header>
      <memberdef kind="function" id="classGenericMap_1a7dd6108f23e2b12436aa7a809034ec82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::make_combinatorial_hexahedron</definition>
        <argsstring>()</argsstring>
        <name>make_combinatorial_hexahedron</name>
        <briefdescription>
<para>Creates a combinatorial hexahedron (six combinatorial quadrangles 2-sewn together), and adds it in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle on one dart of this combinatorial hexahedron. <simplesect kind="pre"><para><computeroutput>dimension</computeroutput> <formula id="75">$\geq$</formula> 2.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6f455fd64b650495392bddecedbd5afe" kindref="member">make_edge</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a3b96033006873f36ea81c51925eb8be1" kindref="member">make_combinatorial_polygon</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7f3014036c3fe9d132698f1c92de1f95" kindref="member">make_combinatorial_tetrahedron</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="812" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a3b96033006873f36ea81c51925eb8be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::make_combinatorial_polygon</definition>
        <argsstring>(unsigned int lg)</argsstring>
        <name>make_combinatorial_polygon</name>
        <param>
          <type>unsigned int</type>
          <declname>lg</declname>
        </param>
        <briefdescription>
<para>Creates a combinatorial polygon of length <computeroutput>lg</computeroutput> (a cycle of <computeroutput>lg</computeroutput> darts 1-sewn together), and adds it in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle on one dart of this combinatorial polygon. <simplesect kind="pre"><para><computeroutput>dimension</computeroutput> <formula id="52">$ \geq$</formula> 1 and <computeroutput>lg</computeroutput> <formula id="76">$ &gt;$</formula> 0.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6f455fd64b650495392bddecedbd5afe" kindref="member">make_edge</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7f3014036c3fe9d132698f1c92de1f95" kindref="member">make_combinatorial_tetrahedron</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7dd6108f23e2b12436aa7a809034ec82" kindref="member">make_combinatorial_hexahedron</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="822" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a7f3014036c3fe9d132698f1c92de1f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::make_combinatorial_tetrahedron</definition>
        <argsstring>()</argsstring>
        <name>make_combinatorial_tetrahedron</name>
        <briefdescription>
<para>Creates a combinatorial tetrahedron (four combinatorial triangles 2-sewn together), and adds it in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle on one dart of this combinatorial tetrahedron. <simplesect kind="pre"><para><computeroutput>dimension</computeroutput> <formula id="52">$ \geq$</formula> 2.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6f455fd64b650495392bddecedbd5afe" kindref="member">make_edge</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a3b96033006873f36ea81c51925eb8be1" kindref="member">make_combinatorial_polygon</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7dd6108f23e2b12436aa7a809034ec82" kindref="member">make_combinatorial_hexahedron</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a6f455fd64b650495392bddecedbd5afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::make_edge</definition>
        <argsstring>()</argsstring>
        <name>make_edge</name>
        <briefdescription>
<para>Creates an isolated edge (two darts sewn to represent one edge and two vertices) and adds it in the generic map. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle on one dart of this edge. <simplesect kind="pre"><para><computeroutput>dimension</computeroutput> <formula id="52">$ \geq$</formula> 2.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a3b96033006873f36ea81c51925eb8be1" kindref="member">make_combinatorial_polygon</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7f3014036c3fe9d132698f1c92de1f95" kindref="member">make_combinatorial_tetrahedron</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7dd6108f23e2b12436aa7a809034ec82" kindref="member">make_combinatorial_hexahedron</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="842" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::insert_cell_0_in_cell_1</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>insert_cell_0_in_cell_1</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Inserts a 0-cell in the 1-cell containing <computeroutput>dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>next(dh)</computeroutput>, a handle on one dart belonging to the new 0-cell. <simplesect kind="pre"><para><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> <formula id="52">$ \geq$</formula> 1 and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>.</para></simplesect>
See examples for combinatorial map in <ref refid="index_1fig__fig_cmap_insert_vertex" kindref="member">fig__fig_cmap_insert_vertex</ref> and for generalized map in <ref refid="index_1fig__fig_gmap_insert_vertex" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">fig__fig_gmap_insert_vertex</ref>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if 1-attributes are non <computeroutput>void</computeroutput>, <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member"><computeroutput>Attribute_type&lt;1&gt;::type::On_split</computeroutput></ref>(<emphasis>a</emphasis>,<emphasis>a&apos;</emphasis>) is called, with <emphasis>a</emphasis> the original 1-attribute associated with <emphasis>dh</emphasis> and <emphasis>a&apos;</emphasis> the new 1-attribute created during the operation. If set, the dynamic onsplit function of 1-attributes is also called on <emphasis>a</emphasis> and <emphasis>a&apos;</emphasis>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" kindref="member">insert_dangling_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="867" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::insert_cell_0_in_cell_2</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>insert_cell_0_in_cell_2</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Inserts a 0-cell in the 2-cell containing <computeroutput>dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The 2-cell is split in triangles, one for each initial edge of the facet. Returns a handle on one dart belonging to the new 0-cell. <simplesect kind="pre"><para><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> <formula id="52">$ \geq$</formula> 2 and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>.</para></simplesect>
See examples for combinatorial map in <ref refid="index_1fig__fig_cmap_triangulation" kindref="member">fig__fig_cmap_triangulation</ref> and for generalized map in <ref refid="index_1fig__fig_gmap_triangulation" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">fig__fig_gmap_triangulation</ref>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if 2-attributes are non <computeroutput>void</computeroutput>, <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member"><computeroutput>Attribute_type&lt;2&gt;::type::On_split</computeroutput></ref>(<emphasis>a</emphasis>,<emphasis>a&apos;</emphasis>) is called, with <emphasis>a</emphasis> the original 2-attribute associated with <computeroutput>dh</computeroutput> and <emphasis>a&apos;</emphasis> each new 2-attribute created during the operation. If set, the dynamic onsplit function of 2-attributes is also called on <emphasis>a</emphasis> and <emphasis>a&apos;</emphasis>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" kindref="member">insert_dangling_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::insert_cell_1_in_cell_2</definition>
        <argsstring>(Dart_handle dh1, Dart_handle dh2)</argsstring>
        <name>insert_cell_1_in_cell_2</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh1</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh2</declname>
        </param>
        <briefdescription>
<para>Inserts a 1-cell in the 2-cell containing <computeroutput>dh1</computeroutput> and <computeroutput>dh2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>previous(dh1)</computeroutput>, a handle on one dart belonging to the new 1-cell. <simplesect kind="pre"><para><computeroutput>is_insertable_cell_1_in_cell_2(dh1,dh2)</computeroutput>.</para></simplesect>
See examples for combinatorial map in <ref refid="index_1fig__fig_cmap_insert_edge" kindref="member">fig__fig_cmap_insert_edge</ref> and for generalized map in <ref refid="index_1fig__fig_gmap_insert_edge" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">fig__fig_gmap_insert_edge</ref>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if 2-attributes are non <computeroutput>void</computeroutput>, <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member"><computeroutput>Attribute_type&lt;2&gt;::type::On_split</computeroutput></ref>(<emphasis>a</emphasis>,<emphasis>a&apos;</emphasis>) is called, with <emphasis>a</emphasis> the original 2-attribute associated with <computeroutput>dh</computeroutput> and <emphasis>a&apos;</emphasis> the new 2-attribute created during the operation. If set, the dynamic onsplit function of 2-attributes is also called on <emphasis>a</emphasis> and <emphasis>a&apos;</emphasis>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1abef4982f87b00f703fd19d1309654075" kindref="member">is_insertable_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" kindref="member">insert_cell_0_in_cell_1</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" kindref="member">insert_dangling_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::insert_cell_2_in_cell_3</definition>
        <argsstring>(InputIterator afirst, InputIterator alast)</argsstring>
        <name>insert_cell_2_in_cell_3</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>afirst</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>alast</declname>
        </param>
        <briefdescription>
<para>Inserts a 2-cell along the path of 1-cells containing darts given by the range <computeroutput>[afirst,alast)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>opposite&lt;2&gt;(*afirst)</computeroutput>, a handle on one dart belonging to the new 2-cell. <simplesect kind="pre"><para><computeroutput>is_insertable_cell_2_in_cell_3(afirst,alast)</computeroutput>.</para></simplesect>
See examples for combinatorial map in <ref refid="index_1fig__fig_cmap_insert_facet" kindref="member">fig__fig_cmap_insert_facet</ref> and for generalized map in <ref refid="index_1fig__fig_gmap_insert_facet" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">fig__fig_gmap_insert_facet</ref>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if 3-attributes are non <computeroutput>void</computeroutput>, <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member"><computeroutput>Attribute_type&lt;3&gt;::type::On_split</computeroutput></ref>(<emphasis>a</emphasis>,<emphasis>a&apos;</emphasis>) is called, with <emphasis>a</emphasis> the original 3-attribute associated with <computeroutput>dh</computeroutput> and <emphasis>a&apos;</emphasis> the new 3-attribute created during the operation. If set, the dynamic onsplit function of 3-attributes is also called on <emphasis>a</emphasis> and <emphasis>a&apos;</emphasis>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ab7cf6baf7cfeb73597a1e4be4df5ec36" kindref="member">is_insertable_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" kindref="member">insert_cell_0_in_cell_1</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" kindref="member">insert_dangling_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
        <definition>Dart_handle GenericMap::insert_dangling_cell_1_in_cell_2</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>insert_dangling_cell_1_in_cell_2</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Inserts a 1-cell in a the 2-cell containing <computeroutput>dh</computeroutput>, the 1-cell being attached only by one of its extremity to the 0-cell containing <computeroutput>dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>previous(dh)</computeroutput>, a handle on the dart belonging to the new 1-cell and to the new 0-cell. <simplesect kind="pre"><para><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> <formula id="52">$ \geq$</formula> 2 and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>.</para></simplesect>
See examples for combinatorial map in <ref refid="index_1fig__fig_cmap_insert_edge" kindref="member">fig__fig_cmap_insert_edge</ref> and for generalized map in <ref refid="index_1fig__fig_gmap_insert_edge" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">fig__fig_gmap_insert_edge</ref>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" kindref="member">insert_cell_0_in_cell_1</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1abef4982f87b00f703fd19d1309654075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericMap::is_insertable_cell_1_in_cell_2</definition>
        <argsstring>(Dart_const_handle dh1, Dart_const_handle dh2)</argsstring>
        <name>is_insertable_cell_1_in_cell_2</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh1</declname>
        </param>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh2</declname>
        </param>
        <briefdescription>
<para>Returns true iff it is possible to insert a 1-cell in the generic map between <computeroutput>dh1</computeroutput> and <computeroutput>dh2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This is possible if <computeroutput>dh1</computeroutput> <formula id="23">$ \neq $</formula> <computeroutput>dh2</computeroutput> and <computeroutput>dh1</computeroutput> can be reached from <computeroutput>dh2</computeroutput> by using some <computeroutput>previous</computeroutput> and <computeroutput>next</computeroutput> calls. <simplesect kind="pre"><para><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> <formula id="52">$ \geq$</formula> 2, <computeroutput>*dh1</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>, and <computeroutput>*dh2</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ab7cf6baf7cfeb73597a1e4be4df5ec36" kindref="member">is_insertable_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="961" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ab7cf6baf7cfeb73597a1e4be4df5ec36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMap::is_insertable_cell_2_in_cell_3</definition>
        <argsstring>(InputIterator afirst, InputIterator alast)</argsstring>
        <name>is_insertable_cell_2_in_cell_3</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>afirst</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>alast</declname>
        </param>
        <briefdescription>
<para>Returns true iff it is possible to insert a 2-cell in the generic map along the path of darts given by the range <computeroutput>[afirst,alast)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The 2-cell can be inserted iff the ordered list of darts form a closed path of edges inside a same volume. <simplesect kind="pre"><para><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> <formula id="52">$ \geq$</formula> 3.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1abef4982f87b00f703fd19d1309654075" kindref="member">is_insertable_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="972" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1ae984451f87a342d85838b959525afdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMap::is_removable</definition>
        <argsstring>(Dart_const_handle dh)</argsstring>
        <name>is_removable</name>
        <param>
          <type><ref refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" kindref="member">Dart_const_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Returns true iff the <emphasis>i</emphasis>-cell containing <computeroutput>dh</computeroutput> can be removed. </para>        </briefdescription>
        <detaileddescription>
<para>An <emphasis>i</emphasis>-cell can be removed if <computeroutput>i</computeroutput>==<ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> or if <computeroutput>i</computeroutput>==<ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>-1 or if <computeroutput>i</computeroutput> <formula id="27">$ &lt; $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>-1 and the <emphasis>i</emphasis>-cell containing <computeroutput>dh</computeroutput> is incident to at most two (<emphasis>i+1</emphasis>)-cells. <simplesect kind="pre"><para>0 <formula id="11">$ \leq $</formula> <computeroutput>i</computeroutput> <formula id="11">$ \leq $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref> and <computeroutput>*dh</computeroutput> <formula id="31">$ \in $</formula> <ref refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" kindref="member"><computeroutput>darts()</computeroutput></ref>.</para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" kindref="member">remove_cell</ref>&lt;i&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="983" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" kindref="member">size_type</ref></type>
        <definition>size_type GenericMap::remove_cell</definition>
        <argsstring>(Dart_handle dh)</argsstring>
        <name>remove_cell</name>
        <param>
          <type><ref refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" kindref="member">Dart_handle</ref></type>
          <declname>dh</declname>
        </param>
        <briefdescription>
<para>Removes the <emphasis>i</emphasis>-cell containing <computeroutput>dh</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the number of darts removed from the generic map. <simplesect kind="pre"><para><computeroutput>is_removable&lt;i&gt;(dh)</computeroutput>.</para></simplesect>
See examples in <ref refid="index_1fig__fig_cmap_insert_vertex" kindref="member">fig__fig_cmap_insert_vertex</ref>, <ref refid="index_1fig__fig_cmap_insert_edge" kindref="member">fig__fig_cmap_insert_edge</ref> and <ref refid="index_1fig__fig_cmap_insert_facet" kindref="member">fig__fig_cmap_insert_facet</ref>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if <computeroutput>i</computeroutput> <formula id="27">$ &lt; $</formula> <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>dimension</computeroutput></ref>, and <emphasis>i+1</emphasis>-attributes are non <computeroutput>void</computeroutput>, and if there are two distinct (<emphasis>i+1</emphasis>)-cells around dart <computeroutput>dh</computeroutput>, <ref refid="classCellAttribute_1a31081515f9da08876797a998f7199b27" kindref="member"><computeroutput>Attribute_type&lt;i+1&gt;::type::On_merge</computeroutput></ref>(<emphasis>a1</emphasis>,<emphasis>a2</emphasis>) is called, with <emphasis>a1</emphasis> the (<emphasis>i+1</emphasis>)-attribute associated to <computeroutput>dh</computeroutput>, and <emphasis>a2</emphasis> the (<emphasis>i+1</emphasis>)-attribute associated to <formula id="25">$ \beta_{i+1}$</formula>(<emphasis>dh</emphasis>). If set, the dynamic onmerge function of <emphasis>i+1</emphasis>-attributes is also called on <emphasis>a1</emphasis> and <emphasis>a2</emphasis>.</para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==true</computeroutput>, if a <emphasis>j</emphasis>-cell is disconnected in two <emphasis>j</emphasis>-cells during the operation, and if <emphasis>j</emphasis>-attributes are non void, <ref refid="classCellAttribute_1a3b4b722747fa2e6f52331bf92ea4f92f" kindref="member"><computeroutput>Attribute_type&lt;j&gt;::type::On_split</computeroutput></ref>(<emphasis>a</emphasis>,<emphasis>a&apos;</emphasis>) is called with <emphasis>a</emphasis> the original <emphasis>j</emphasis>-attribute and <emphasis>a&apos;</emphasis> the new <emphasis>j</emphasis>-attribute created due to the disconnection. If set, the dynamic onsplit function of <emphasis>j</emphasis>-attributes is also called on <emphasis>a</emphasis> and <emphasis>a&apos;</emphasis>.</para><para></para><para>If <ref refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" kindref="member"><computeroutput>are_attributes_automatically_managed()</computeroutput></ref><computeroutput>==false</computeroutput>, non void attributes are not updated; thus the generic map can be no more valid after this operation. </para><para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae984451f87a342d85838b959525afdb4" kindref="member">is_removable</ref>&lt;i&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" kindref="member">insert_cell_0_in_cell_1</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" kindref="member">insert_cell_0_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" kindref="member">insert_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" kindref="member">insert_dangling_cell_1_in_cell_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" kindref="member">insert_cell_2_in_cell_3</ref>&lt;<ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref>&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMap.h" line="1007" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGenericMap" kindref="compound">GenericMap</ref></computeroutput> defines a <emphasis>d</emphasis>-dimensional generic map. This concept is defined only to factorize the common notions between <ref refid="classCombinatorialMap" kindref="compound"><computeroutput>CombinatorialMap</computeroutput></ref> and <ref refid="classGeneralizedMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag"><computeroutput>GeneralizedMap</computeroutput></ref> concepts. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><ref refid="classDefaultConstructible" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></para></xrefdescription></xrefsect></para><para>A generic map has a set of darts <emphasis>D</emphasis>, and functions <formula id="72">$ f_0$</formula>, <formula id="4">$ \ldots$</formula>, <formula id="73">$ f_{d}$</formula> that link these darts between them.</para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><ref refid="classCGAL_1_1Combinatorial__map" kindref="compound"><computeroutput>CGAL::Combinatorial_map&lt;d,Items,Alloc&gt;</computeroutput></ref> </para><para><ref refid="classCGAL_1_1Generalized__map" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag"><computeroutput>CGAL::Generalized_map&lt;d,Items,Alloc&gt;</computeroutput></ref></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCombinatorialMap" kindref="compound">CombinatorialMap</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classGeneralizedMap" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Generalized_map.tag">GeneralizedMap</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="21">
        <label>unspecified_type</label>
        <link refid="classunspecified__type" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag"/>
      </node>
      <node id="20">
        <label>GenericMap</label>
        <link refid="classGenericMap"/>
        <childnode refid="21" relation="usage">
          <edgelabel>NB_MARKS</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Concepts/GenericMap.h" line="19" column="1" bodyfile="Concepts/GenericMap.h" bodystart="19" bodyend="1011"/>
    <listofallmembers>
      <member refid="classGenericMap_1a27cd04b3ad17a37f09b390a3f2232ee5" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>are_attributes_automatically_managed</name></member>
      <member refid="classGenericMap_1a60dace8ebefc87170b0a4bb4ac138137" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>attribute</name></member>
      <member refid="classGenericMap_1a748da2220b760ce36502daef52c1f987" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>attribute</name></member>
      <member refid="classGenericMap_1adfc1c9f38230637e6a483d62374af04d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attribute_const_handle</name></member>
      <member refid="classGenericMap_1aef776e81abebd51a27441d60cb1318ab" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attribute_const_range</name></member>
      <member refid="classGenericMap_1a0d7c2eec818bf0f5e0e4239feff21980" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attribute_handle</name></member>
      <member refid="classGenericMap_1ae567e6737eb1577fb34e43bb257d8776" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attribute_range</name></member>
      <member refid="classGenericMap_1a01213a6b36324a8e006d18afc57fc551" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attribute_type</name></member>
      <member refid="classGenericMap_1a01b65dd586a4d0a31280cd4b9668cc7e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>attributes</name></member>
      <member refid="classGenericMap_1a9afbff52b8e31674ff2cff7e484926b6" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>attributes</name></member>
      <member refid="classGenericMap_1a5b0f277939f658c55598a87ba9084981" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Attributes</name></member>
      <member refid="classGenericMap_1ade40ca606988d75b8a9f26d0d9fb75ab" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>clear</name></member>
      <member refid="classGenericMap_1abb8954d074686dba5e91c5d54343cd0d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>correct_invalid_attributes</name></member>
      <member refid="classGenericMap_1a5d698a85ca72a0a5d9391367af232d65" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>create_attribute</name></member>
      <member refid="classGenericMap_1a76dfed826c863e999fda06f4935936f9" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>create_dart</name></member>
      <member refid="classGenericMap_1aa2ea1db275ebf90a67385b046a2e8a68" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart</name></member>
      <member refid="classGenericMap_1afe90a43a5b38c9045da97a28923078f7" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart</name></member>
      <member refid="classGenericMap_1aa6e0c1a813f2badd22b13ac8ae2f2722" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart</name></member>
      <member refid="classGenericMap_1ab0dfdbbf36c60c3a863c2fe01ad9ea24" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_const_handle</name></member>
      <member refid="classGenericMap_1a021b35b97c7f36bc32d3692ec5a58766" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_const_range</name></member>
      <member refid="classGenericMap_1ad0ca6f8641bb5dfc4550fba716df0d70" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_handle</name></member>
      <member refid="classGenericMap_1a0ffdb12dba84222c38c986b41479e17a" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart_handle</name></member>
      <member refid="classGenericMap_1aa8753c15a78a613c4b833ec25202766a" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart_handle</name></member>
      <member refid="classGenericMap_1a7a37f23cce66006651de27b8eea58e9e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_info</name></member>
      <member refid="classGenericMap_1aedbd81420b8a913aea16b38e7d351974" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart_of_attribute</name></member>
      <member refid="classGenericMap_1af51b4662244e8daef6494b081c64f0f3" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dart_of_attribute</name></member>
      <member refid="classGenericMap_1a22703f97b83fdebb971144a26e030cfb" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_of_cell_const_range</name></member>
      <member refid="classGenericMap_1ab598f5933eb3662863c2e33ae9320d93" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_of_cell_range</name></member>
      <member refid="classGenericMap_1a87a27a6dcd15469efa045d0b5110f015" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_of_orbit_const_range</name></member>
      <member refid="classGenericMap_1abf73974dbf5e7d9e01c7d8912f58edd3" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_of_orbit_range</name></member>
      <member refid="classGenericMap_1a3f67e5f77a6a61281054ee9c1d619c58" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>Dart_range</name></member>
      <member refid="classGenericMap_1aebcaaf5b48b571d26a77c74c5583bc1c" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts</name></member>
      <member refid="classGenericMap_1ac140c922fb57399b0f6dce87a8f5bc30" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts</name></member>
      <member refid="classGenericMap_1a5b3790e983547e21e34d1547298d022c" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts_of_cell</name></member>
      <member refid="classGenericMap_1a4afcc76fa04799c129f1e54cc287a44a" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts_of_cell</name></member>
      <member refid="classGenericMap_1a7063c7bd9d94a3e19d6b39a05f78a00d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts_of_orbit</name></member>
      <member refid="classGenericMap_1ad1e4905d90af753fe1ae88eb59d878a5" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>darts_of_orbit</name></member>
      <member refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>dimension</name></member>
      <member refid="classGenericMap_1ae3c5c543f210eb0c735c883392be77e5" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>display_characteristics</name></member>
      <member refid="classGenericMap_1aed0f512ecf1eb0dffb45bfb533883166" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>erase_attribute</name></member>
      <member refid="classGenericMap_1abbbbfd6f4cd029ffb9cf28e455a7625b" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>erase_dart</name></member>
      <member refid="classGenericMap_1a7feb8a3d9e53f8c863acf3767886e4c2" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>free_mark</name></member>
      <member refid="classGenericMap_1a5266e4b8e8380c4df42f17b2cc8a4e32" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>GenericMap</name></member>
      <member refid="classGenericMap_1a8c66e1d43055fe732354eedb0f1a780b" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>get_new_mark</name></member>
      <member refid="classGenericMap_1aaa0ee11c83a6083fff9223fb3246f915" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>highest_nonfree_dimension</name></member>
      <member refid="classGenericMap_1ac3f091df8030d85b38e5ef40499eaf48" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info</name></member>
      <member refid="classGenericMap_1a1f4edb73122267abd4c3159cee73fc55" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info</name></member>
      <member refid="classGenericMap_1a901e7a2eabb8addc6b437be139413778" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info</name></member>
      <member refid="classGenericMap_1a6c461a93372453e7aa6c19241910d691" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info</name></member>
      <member refid="classGenericMap_1a0c15ff29236582e6a1b770e19c063ad2" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info_of_attribute</name></member>
      <member refid="classGenericMap_1a892b0f0c4af53ce1fef8acb66ee45342" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>info_of_attribute</name></member>
      <member refid="classGenericMap_1a7ca9a5f6c514cdd3c0fdd31e81163774" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>insert_cell_0_in_cell_1</name></member>
      <member refid="classGenericMap_1a6e286a26bbb5d897e0b830fff3721a8c" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>insert_cell_0_in_cell_2</name></member>
      <member refid="classGenericMap_1af052e3f6c70a2d691a2bdbccfa9c3908" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>insert_cell_1_in_cell_2</name></member>
      <member refid="classGenericMap_1ae07843054741ac7462b4e90dc945a28b" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>insert_cell_2_in_cell_3</name></member>
      <member refid="classGenericMap_1a1e129b7060aa80feb689ecf51068e4ca" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>insert_dangling_cell_1_in_cell_2</name></member>
      <member refid="classGenericMap_1ab326587b270395ffc0a6849690d7af65" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_attribute_used</name></member>
      <member refid="classGenericMap_1ad701ccd825ed7da61aee37c1f6e2db9b" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_dart_used</name></member>
      <member refid="classGenericMap_1ab16ce816af5bc32b6e55bb0ccc27c59c" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_empty</name></member>
      <member refid="classGenericMap_1a0e5b92501f6331af764b672f880bf53f" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_free</name></member>
      <member refid="classGenericMap_1a479583222d078880cfc5e08d874943e8" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_free</name></member>
      <member refid="classGenericMap_1abef4982f87b00f703fd19d1309654075" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_insertable_cell_1_in_cell_2</name></member>
      <member refid="classGenericMap_1ab7cf6baf7cfeb73597a1e4be4df5ec36" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_insertable_cell_2_in_cell_3</name></member>
      <member refid="classGenericMap_1a27763ddbd462d2a47f48d00f50f31d14" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_marked</name></member>
      <member refid="classGenericMap_1ae984451f87a342d85838b959525afdb4" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_removable</name></member>
      <member refid="classGenericMap_1a130016d92744a3fb92078c57a3974cb8" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_reserved</name></member>
      <member refid="classGenericMap_1a8e5275b70d5a894596e989a44fef88c0" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_without_boundary</name></member>
      <member refid="classGenericMap_1ab3d17ad220cd1afcfb5d53c83ceca6e2" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>is_without_boundary</name></member>
      <member refid="classGenericMap_1a7dd6108f23e2b12436aa7a809034ec82" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>make_combinatorial_hexahedron</name></member>
      <member refid="classGenericMap_1a3b96033006873f36ea81c51925eb8be1" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>make_combinatorial_polygon</name></member>
      <member refid="classGenericMap_1a7f3014036c3fe9d132698f1c92de1f95" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>make_combinatorial_tetrahedron</name></member>
      <member refid="classGenericMap_1a6f455fd64b650495392bddecedbd5afe" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>make_edge</name></member>
      <member refid="classGenericMap_1ae444b97ab2983b7cc3fd1b0d6e3dcfe9" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>mark</name></member>
      <member refid="classGenericMap_1a6e4ee8b525afeb9bbaed065623e26e68" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>NB_MARKS</name></member>
      <member refid="classGenericMap_1a9996d3fe87eb7cb6ecaae192312eae89" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>negate_mark</name></member>
      <member refid="classGenericMap_1a871e921eff665637dd5b30eb5169856a" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>next</name></member>
      <member refid="classGenericMap_1a740da35931e6b04ec9356196fdb94eb7" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>next</name></member>
      <member refid="classGenericMap_1a4b54978622b14186ea7fd70793ff023e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>number_of_attributes</name></member>
      <member refid="classGenericMap_1a1089d3d771b0a8b1819d8b719861d139" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>number_of_darts</name></member>
      <member refid="classGenericMap_1a2dd9cc4cc6e3ff34cc1e3f095014a36a" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>number_of_marked_darts</name></member>
      <member refid="classGenericMap_1a27af8e783b1c01cfef98c1945beb032e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>number_of_unmarked_darts</name></member>
      <member refid="classGenericMap_1a5c2c1638b2d8966fa1df1eb177b59181" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>one_dart_per_cell</name></member>
      <member refid="classGenericMap_1a27e90cd5ac68207d2a036cad2ceb6f36" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>one_dart_per_cell</name></member>
      <member refid="classGenericMap_1a87f53ac04517f399231fba79613c491e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>One_dart_per_cell_const_range</name></member>
      <member refid="classGenericMap_1ae9588233426a0e74848af1c8c79cede9" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>One_dart_per_cell_range</name></member>
      <member refid="classGenericMap_1ab573219895c138fd5df5ed04a654350f" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>one_dart_per_incident_cell</name></member>
      <member refid="classGenericMap_1af964b3ba98b88e7517ea58507c5e68c9" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>one_dart_per_incident_cell</name></member>
      <member refid="classGenericMap_1ab43995ae60a2f45a9c70a95591597326" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>One_dart_per_incident_cell_const_range</name></member>
      <member refid="classGenericMap_1a6d6212f4fc539c0054a2cfc3387ca096" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>One_dart_per_incident_cell_range</name></member>
      <member refid="classGenericMap_1a2f7596c483cad45a7e3813be074c0070" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>onmerge_function</name></member>
      <member refid="classGenericMap_1a2497c281eb66b2c8f7388fa91514b9dd" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>onmerge_function</name></member>
      <member refid="classGenericMap_1a50cbe1541d64238d3a0e5216c68b595d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>onsplit_function</name></member>
      <member refid="classGenericMap_1a3e45a43ebde995456c49742cff76e09d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>onsplit_function</name></member>
      <member refid="classGenericMap_1a5a197b375487985360bcb8218ed6f097" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>operator=</name></member>
      <member refid="classGenericMap_1a956fbbb8fb58f6d1e7813ca286d50012" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>opposite</name></member>
      <member refid="classGenericMap_1ae239675d5c1c035f7fa3dc32c7009f48" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>opposite</name></member>
      <member refid="classGenericMap_1ab7ff317ec05627584651e15e5f77f45f" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>other_extremity</name></member>
      <member refid="classGenericMap_1a802122c13e53cef02d251c55ebab7c2d" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>other_extremity</name></member>
      <member refid="classGenericMap_1a1df4fa8da65992fd9d0593f32d695285" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>previous</name></member>
      <member refid="classGenericMap_1a7c72831b34b5055d5db28f6b4c1a2683" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>previous</name></member>
      <member refid="classGenericMap_1a389c061e7bd6d6f975ddf35332a86971" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>remove_cell</name></member>
      <member refid="classGenericMap_1a246cb43a0c76592c605e4a129aab9763" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>set_attribute</name></member>
      <member refid="classGenericMap_1af7fcbe383d43efece8525654b45741bf" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>set_automatic_attributes_management</name></member>
      <member refid="classGenericMap_1a47fb55be8fbfd7930c358a0ecc9cb810" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>size_type</name></member>
      <member refid="classGenericMap_1ab1eda831fba0779a01a90c8bf43ddabe" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>swap</name></member>
      <member refid="classGenericMap_1ad55a2a8e0c030a71e3ee0e3be3e15f96" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>unmark</name></member>
      <member refid="classGenericMap_1ab63ba9e899d2c231ba06a95030ecbd2e" prot="public" virt="non-virtual"><scope>GenericMap</scope><name>unmark_all</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
