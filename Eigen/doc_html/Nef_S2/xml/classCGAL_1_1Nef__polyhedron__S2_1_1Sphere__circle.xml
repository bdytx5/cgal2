<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Nef_polyhedron_S2::Sphere_circle</compoundname>
    <includes local="no">CGAL/Nef_polyhedron_S2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a48687941c364232ca0c0d9016d2240b4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
<para>ring type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="97" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ae0424a139b3dcb803e0c4cf360d0517d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Plane_3</definition>
        <argsstring></argsstring>
        <name>Plane_3</name>
        <briefdescription>
<para>plane a <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></computeroutput> lies in. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="102" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a69ef68cb7b9bc9370408bf8e531582f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Sphere_circle</definition>
        <argsstring>()</argsstring>
        <name>Sphere_circle</name>
        <briefdescription>
<para>creates some great circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a93e550629d2f0b5d588d84139e9ec559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Sphere_circle</definition>
        <argsstring>(const Sphere_point &amp;p, const Sphere_point &amp;q)</argsstring>
        <name>Sphere_circle</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>If <formula id="7">$ p$</formula> and <formula id="8">$ q$</formula> are opposite of each other, then we create the unique great circle on <formula id="0">$ S_2$</formula> which contains p and q. </para>        </briefdescription>
        <detaileddescription>
<para>This circle is oriented such that a walk along <computeroutput>c</computeroutput> meets <formula id="7">$ p$</formula> just before the shorter segment between <formula id="7">$ p$</formula> and <formula id="8">$ q$</formula>. If <formula id="7">$ p$</formula> and <formula id="8">$ q$</formula> are opposite of each other then we create any great circle that contains <formula id="7">$ p$</formula> and <formula id="8">$ q$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1afdc103f0bee43a986a10c89456f4efaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Sphere_circle</definition>
        <argsstring>(const Plane_3 &amp;h)</argsstring>
        <name>Sphere_circle</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ae0424a139b3dcb803e0c4cf360d0517d" kindref="member">Plane_3</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>creates the circle corresponding to the plane <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h</computeroutput> contains the origin. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ab0f5d6916caf1817681e76b7cedb20b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Sphere_circle</definition>
        <argsstring>(const RT &amp;x, const RT &amp;y, const RT &amp;z)</argsstring>
        <name>Sphere_circle</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a48687941c364232ca0c0d9016d2240b4" kindref="member">RT</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a48687941c364232ca0c0d9016d2240b4" kindref="member">RT</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a48687941c364232ca0c0d9016d2240b4" kindref="member">RT</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>creates the circle orthogonal to the vector <formula id="6">$ (x,y,z)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1adb8b9cfcc1971304ced2378161630873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::Sphere_circle</definition>
        <argsstring>(Sphere_circle c, const Sphere_point &amp;p)</argsstring>
        <name>Sphere_circle</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>creates a great circle orthogonal to <formula id="10">$ c$</formula> that contains <formula id="7">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="7">$ p$</formula> is not part of <formula id="10">$ c$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1aefad1a962721626fb4136e950bab1882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></type>
        <definition>Sphere_circle CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::opposite</definition>
        <argsstring>()</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>Returns a sphere circle in the opposite direction of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a8fafa6ab4ed4aae6041a278123479ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::has_on</definition>
        <argsstring>(const Sphere_point &amp;p)</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>c</computeroutput> contains <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a16169c62073ce4f9dab4ef1f7101d7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ae0424a139b3dcb803e0c4cf360d0517d" kindref="member">Plane_3</ref></type>
        <definition>Plane_3 CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::plane</definition>
        <argsstring>()</argsstring>
        <name>plane</name>
        <briefdescription>
<para>returns the plane supporting <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ac88f9822dff95c1b7809769064f7c17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref></type>
        <definition>Sphere_point CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle::orthogonal_pole</definition>
        <argsstring>()</argsstring>
        <name>orthogonal_pole</name>
        <briefdescription>
<para>returns the point that is the pole of the hemisphere left of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="169" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a2572790fd86655d81590558f4306e844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equal_as_sets</definition>
        <argsstring>(const Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle c1, const Nef_polyhedron_S2&lt; Traits &gt;::Sphere_circle c2)</argsstring>
        <name>equal_as_sets</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; Traits &gt;::<ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; Traits &gt;::<ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>c1</computeroutput> and <computeroutput>c2</computeroutput> are equal as unoriented circles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1266" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>c</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></computeroutput> is an oriented great circle on the surface of a unit sphere. </para>    </briefdescription>
    <detaileddescription>
<para>Such circles correspond to the intersection of an oriented plane (that contains the origin) and the surface of <formula id="0">$ S_2$</formula>. The orientation of the great circle is that of a counterclockwise walk along the circle as seen from the positive halfspace of the oriented plane. </para>    </detaileddescription>
    <location file="CGAL/Nef_polyhedron_S2.h" line="88" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="88" bodyend="173"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a2572790fd86655d81590558f4306e844" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>equal_as_sets</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a8fafa6ab4ed4aae6041a278123479ca3" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1aefad1a962721626fb4136e950bab1882" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ac88f9822dff95c1b7809769064f7c17f" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>orthogonal_pole</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a16169c62073ce4f9dab4ef1f7101d7e0" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>plane</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ae0424a139b3dcb803e0c4cf360d0517d" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Plane_3</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a48687941c364232ca0c0d9016d2240b4" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>RT</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a69ef68cb7b9bc9370408bf8e531582f8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Sphere_circle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1a93e550629d2f0b5d588d84139e9ec559" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Sphere_circle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1afdc103f0bee43a986a10c89456f4efaa" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Sphere_circle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1ab0f5d6916caf1817681e76b7cedb20b6" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Sphere_circle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle_1adb8b9cfcc1971304ced2378161630873" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2::Sphere_circle</scope><name>Sphere_circle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
