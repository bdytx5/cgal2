<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Nef__polyhedron__S2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Nef_polyhedron_S2</compoundname>
    <includes local="no">CGAL/Nef_polyhedron_S2.h</includes>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1SFace" prot="public">CGAL::Nef_polyhedron_S2::SFace</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1SFace__cycle__iterator" prot="public">CGAL::Nef_polyhedron_S2::SFace_cycle_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1SHalfedge" prot="public">CGAL::Nef_polyhedron_S2::SHalfedge</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1SHalfloop" prot="public">CGAL::Nef_polyhedron_S2::SHalfloop</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" prot="public">CGAL::Nef_polyhedron_S2::Sphere_circle</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" prot="public">CGAL::Nef_polyhedron_S2::Sphere_point</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__segment" prot="public">CGAL::Nef_polyhedron_S2::Sphere_segment</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__S2_1_1SVertex" prot="public">CGAL::Nef_polyhedron_S2::SVertex</innerclass>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="enum" id="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6" prot="public" static="no">
        <name>Boundary</name>
        <enumvalue id="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6ad904d1cdd3b1568d38e36bee673f2524" prot="public">
          <name>EXCLUDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6a1e02df1cb7cc053f462ba6f6c0a942c1" prot="public">
          <name>INCLUDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>construction selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="945" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="945" bodyend="945"/>
      </memberdef>
      <memberdef kind="enum" id="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823" prot="public" static="no">
        <name>Content</name>
        <enumvalue id="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823acebbfcbcc3e2815f7099bdab77dd5e76" prot="public">
          <name>EMPTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823a0b0522ca5df388099c82fefe571d2b23" prot="public">
          <name>COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>construction selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="950" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="950" bodyend="950"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1ab8c065032149003b2a13676eead440e8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SVertex_const_handle</definition>
        <argsstring></argsstring>
        <name>SVertex_const_handle</name>
        <briefdescription>
<para>non-mutable handle to svertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="874" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a451791355a3c6f37c518201f868fb481" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfedge_const_handle</definition>
        <argsstring></argsstring>
        <name>SHalfedge_const_handle</name>
        <briefdescription>
<para>non-mutable handle to shalfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="879" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="879" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a5e369fac0476252aa4922cd418ec3f11" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfloop_const_handle</definition>
        <argsstring></argsstring>
        <name>SHalfloop_const_handle</name>
        <briefdescription>
<para>non-mutable handle to shalfloop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="884" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a54eeaf9cfa515807ca7f78966758a817" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SFace_const_handle</definition>
        <argsstring></argsstring>
        <name>SFace_const_handle</name>
        <briefdescription>
<para>non-mutable handle to sface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="889" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a7dadf69770a484c63021ee43bd1e5399" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SVertex_const_iterator</definition>
        <argsstring></argsstring>
        <name>SVertex_const_iterator</name>
        <briefdescription>
<para>non-mutable iterator over all svertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="894" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1adad3f2e436981087488d4bc9aaef4a10" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfedge_const_iterator</definition>
        <argsstring></argsstring>
        <name>SHalfedge_const_iterator</name>
        <briefdescription>
<para>non-mutable iterator over all shalfedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="899" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a86de0f3d94277b3be8259f70d741ef2b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfloop_const_iterator</definition>
        <argsstring></argsstring>
        <name>SHalfloop_const_iterator</name>
        <briefdescription>
<para>non-mutable iterator over all shalfloops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="904" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a6e922713ff9859c939b90320cdcdd06c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SFace_const_iterator</definition>
        <argsstring></argsstring>
        <name>SFace_const_iterator</name>
        <briefdescription>
<para>non-mutable iterator over all sfaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="909" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a01c3c91495941a39260d5273b3504142" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfedge_around_svertex_const_circulator</definition>
        <argsstring></argsstring>
        <name>SHalfedge_around_svertex_const_circulator</name>
        <briefdescription>
<para>circulating the adjacency list of an svertex <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="915" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="915" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a626dcb7aae58100dd39e4ace717bd90e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SHalfedge_around_sface_const_circulator</definition>
        <argsstring></argsstring>
        <name>SHalfedge_around_sface_const_circulator</name>
        <briefdescription>
<para>circulating the sface cycle of an sface <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="921" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="921" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a8bf70a1ec332bb0c1af5bea79a51fc72" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::SFace_cycle_const_iterator</definition>
        <argsstring></argsstring>
        <name>SFace_cycle_const_iterator</name>
        <briefdescription>
<para>iterating all sface cycles of an sface <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The iterator has method <computeroutput>bool is_svertex()</computeroutput>, <computeroutput>bool is_shalfedge()</computeroutput>, <computeroutput>bool is_shalfloop()</computeroutput>, and can be converted to the corresponding handles <computeroutput>SVertex_const_handle</computeroutput>, <computeroutput>SHalfedge_const_handle</computeroutput>, or <computeroutput>SHalfloop_const_handle</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="930" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1ae8b6c72a01dce16a34766db6d98c2a31" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Mark</definition>
        <argsstring></argsstring>
        <name>Mark</name>
        <briefdescription>
<para>attributes of objects (vertices, edges, faces). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="935" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="935" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1a833d2fb4c81665b3d399d8961f2228c1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>size type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="940" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="940" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Object_handle</definition>
        <argsstring></argsstring>
        <name>Object_handle</name>
        <briefdescription>
<para>a generic handle to an object of the underlying plane map. </para>        </briefdescription>
        <detaileddescription>
<para>The kind of object <computeroutput>(vertex, halfedge, face)</computeroutput> can be determined and the object can be assigned to a corresponding handle by the three functions:</para><para><itemizedlist>
<listitem><para><computeroutput>bool assign(Vertex_const_handle&amp; h, Object_handle)</computeroutput></para></listitem><listitem><para><computeroutput>bool assign(Halfedge_const_handle&amp; h, Object_handle)</computeroutput></para></listitem><listitem><para><computeroutput>bool assign(Face_const_handle&amp; h, Object_handle)</computeroutput></para></listitem></itemizedlist>
</para><para>where each function returns <computeroutput>true</computeroutput> iff the assignment to <computeroutput>h</computeroutput> was done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1165" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ae7d36187df693fd995f4045df77e533f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Nef_polyhedron_S2</definition>
        <argsstring>(Content sphere=EMPTY)</argsstring>
        <name>Nef_polyhedron_S2</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823" kindref="member">Content</ref></type>
          <declname>sphere</declname>
          <defval><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823acebbfcbcc3e2815f7099bdab77dd5e76" kindref="member">EMPTY</ref></defval>
        </param>
        <briefdescription>
<para>creates an instance <computeroutput>N</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt;K&gt;</computeroutput> and initializes it to the empty set if <computeroutput>sphere == EMPTY</computeroutput> and to the whole sphere if <computeroutput>sphere == COMPLETE</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aa5f3cf1ffda6bd8f1ecab9a85a9ed618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Nef_polyhedron_S2</definition>
        <argsstring>(Sphere_circle c, Boundary circle=INCLUDED)</argsstring>
        <name>Nef_polyhedron_S2</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6" kindref="member">Boundary</ref></type>
          <declname>circle</declname>
          <defval><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6a1e02df1cb7cc053f462ba6f6c0a942c1" kindref="member">INCLUDED</ref></defval>
        </param>
        <briefdescription>
<para>creates a Nef polyhedron <computeroutput>N</computeroutput> containing the half-sphere left of <computeroutput>c</computeroutput> including <computeroutput>c</computeroutput> if <computeroutput>circle==INCLUDED</computeroutput>, excluding <computeroutput>c</computeroutput> if <computeroutput>circle==EXCLUDED</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a08d0608f7cb4ccf45db39f341aee422c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Forward_iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Nef_polyhedron_S2&lt; Traits &gt;::Nef_polyhedron_S2</definition>
        <argsstring>(Forward_iterator first, Forward_iterator beyond, Boundary b=INCLUDED)</argsstring>
        <name>Nef_polyhedron_S2</name>
        <param>
          <type>Forward_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Forward_iterator</type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6" kindref="member">Boundary</ref></type>
          <declname>b</declname>
          <defval><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6a1e02df1cb7cc053f462ba6f6c0a942c1" kindref="member">INCLUDED</ref></defval>
        </param>
        <briefdescription>
<para>creates a Nef polyhedron <computeroutput>N</computeroutput> from the set of sphere segments in the iterator range <computeroutput>[first,beyond)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If the set of sphere segments is a simple polygon that separates the sphere surface into two regions, then the polygonal region that is left of the segment <computeroutput>*first</computeroutput> is selected. The polygonal region includes its boundary if <computeroutput>b = INCLUDED</computeroutput> and excludes the boundary otherwise. <computeroutput>Forward_iterator</computeroutput> has to be an iterator with value type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__segment" kindref="compound">Sphere_segment</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="940" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aee67b7d1b1b38c7757801d0356f950c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Nef_polyhedron_S2&lt; Traits &gt;::clear</definition>
        <argsstring>(Content plane=EMPTY)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823" kindref="member">Content</ref></type>
          <declname>plane</declname>
          <defval><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823acebbfcbcc3e2815f7099bdab77dd5e76" kindref="member">EMPTY</ref></defval>
        </param>
        <briefdescription>
<para>makes <computeroutput>N</computeroutput> the empty set if <computeroutput>plane == EMPTY</computeroutput> and the full plane if <computeroutput>plane == COMPLETE</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ad564764787931e772adefdc94447fcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::is_empty</definition>
        <argsstring>()</argsstring>
        <name>is_empty</name>
        <briefdescription>
<para>returns true if <computeroutput>N</computeroutput> is empty, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1003" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aaf24fe73f032c4198ff5c495fa19befa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::is_sphere</definition>
        <argsstring>()</argsstring>
        <name>is_sphere</name>
        <briefdescription>
<para>returns true if <computeroutput>N</computeroutput> is the whole sphere, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1009" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a02aece81255baaf9e81b5f5c44a193a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::contains</definition>
        <argsstring>(Object_handle h)</argsstring>
        <name>contains</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" kindref="member">Object_handle</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>returns true iff the object <computeroutput>h</computeroutput> is contained in the set represented by <computeroutput>N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a9dee6ba287bd900cdc3eb5b4152bec01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::contained_in_boundary</definition>
        <argsstring>(Object_handle h)</argsstring>
        <name>contained_in_boundary</name>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" kindref="member">Object_handle</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>returns true iff the object <computeroutput>h</computeroutput> is contained in the <formula id="15">$ 1$</formula>-skeleton of <computeroutput>N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a0adb7471ee81ac7b1b4794c5f53ce877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" kindref="member">Object_handle</ref></type>
        <definition>Object_handle CGAL::Nef_polyhedron_S2&lt; Traits &gt;::locate</definition>
        <argsstring>(const Sphere_point &amp;p)</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns a generic handle <computeroutput>h</computeroutput> to an object (face, halfedge, vertex) of the underlying plane map that contains the point <computeroutput>p</computeroutput> in its relative interior. </para>        </briefdescription>
        <detaileddescription>
<para>The point <computeroutput>p</computeroutput> is contained in the set represented by <computeroutput>N</computeroutput> if <computeroutput>N.contains(h)</computeroutput> is true. The location mode flag <computeroutput>m</computeroutput> allows one to choose between different point location strategies. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a8f46cec3bc496185f542dd3adfe6823c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" kindref="member">Object_handle</ref></type>
        <definition>Object_handle CGAL::Nef_polyhedron_S2&lt; Traits &gt;::ray_shoot</definition>
        <argsstring>(const Sphere_point &amp;p, const Sphere_direction &amp;d)</argsstring>
        <name>ray_shoot</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Sphere_direction &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns a handle <computeroutput>h</computeroutput> with <computeroutput>N.contains(h)</computeroutput> that can be converted to a <computeroutput>Vertex_/Halfedge_/Face_const_handle</computeroutput> as described above. </para>        </briefdescription>
        <detaileddescription>
<para>The object returned is intersected by the ray starting in <computeroutput>p</computeroutput> with direction <computeroutput>d</computeroutput> and has minimal distance to <computeroutput>p</computeroutput>. The operation returns an empty <computeroutput>Object_handle</computeroutput> if the ray shoot along <computeroutput>d</computeroutput> does not hit any object <computeroutput>h</computeroutput> of <computeroutput>N</computeroutput> with <computeroutput>N.contains(h)</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a447bac92b5e441d5f37d81910ca60fca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" kindref="member">Object_handle</ref></type>
        <definition>Object_handle CGAL::Nef_polyhedron_S2&lt; Traits &gt;::ray_shoot_to_boundary</definition>
        <argsstring>(const Sphere_point &amp;p, const Sphere_direction &amp;d)</argsstring>
        <name>ray_shoot_to_boundary</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__point" kindref="compound">Sphere_point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Sphere_direction &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>returns a handle <computeroutput>h</computeroutput> that can be converted to a <computeroutput>Vertex_/Halfedge_const_handle</computeroutput> as described above. </para>        </briefdescription>
        <detaileddescription>
<para>The object returned is part of the <formula id="15">$ 1$</formula>-skeleton of <computeroutput>N</computeroutput>, intersected by the ray starting in <computeroutput>p</computeroutput> with direction <computeroutput>d</computeroutput> and has minimal distance to <computeroutput>p</computeroutput>. The operation returns an empty <computeroutput>Object_handle</computeroutput> if the ray shoot along <computeroutput>d</computeroutput> does not hit any <formula id="15">$ 1$</formula>-skeleton object <computeroutput>h</computeroutput> of <computeroutput>N</computeroutput>. The location mode flag <computeroutput>m</computeroutput> allows one to choose between different point location strategies. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructive Operations</header>
      <description><para>Additionally there are operators <computeroutput>*,+,-,^,!</computeroutput> which implement the binary operations <emphasis>intersection</emphasis>, <emphasis>union</emphasis>, <emphasis>difference</emphasis>, <emphasis>symmetric difference</emphasis>, and the unary operation <emphasis>complement</emphasis> respectively.</para><para>There are also the corresponding modification operations <computeroutput>&lt;,&lt;=,&gt;,&gt;=,==,!=</computeroutput>.</para><para>There are also comparison operations like <computeroutput>&lt;,&lt;=,&gt;,&gt;=,==,!=</computeroutput> which implement the relations subset, subset or equal, superset, superset or equal, equality, inequality, respectively. </para></description>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1afc29e300fdc792168b5560ee6be5f362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::complement</definition>
        <argsstring>()</argsstring>
        <name>complement</name>
        <briefdescription>
<para>returns the complement of <computeroutput>N</computeroutput> in the plane. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1030" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ab7de2939ddbf54a4ca4dbe70bf902e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::interior</definition>
        <argsstring>()</argsstring>
        <name>interior</name>
        <briefdescription>
<para>returns the interior of <computeroutput>N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1abc92b55c3f5214ad6bc13cbfe4cdcd25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::closure</definition>
        <argsstring>()</argsstring>
        <name>closure</name>
        <briefdescription>
<para>returns the closure of <computeroutput>N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1042" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ab0b0ab4542cefe90bcd467d71a7ffb93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::boundary</definition>
        <argsstring>()</argsstring>
        <name>boundary</name>
        <briefdescription>
<para>returns the boundary of <computeroutput>N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ad558bf3c89f37d35436a9d829faad0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::regularization</definition>
        <argsstring>()</argsstring>
        <name>regularization</name>
        <briefdescription>
<para>returns the regularized polyhedron (closure of interior). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a8f757a2ab79ee25519de9dc27f5f89ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::intersection</definition>
        <argsstring>(const Nef_polyhedron_S2&lt; K &gt; &amp;N1)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt; &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>N</computeroutput> <formula id="12">$ \cap$</formula> <computeroutput>N1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1059" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a23221418d4ca5ef6f101a8a5d7b97f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::join</definition>
        <argsstring>(const Nef_polyhedron_S2&lt; K &gt; &amp;N1)</argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt; &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>N</computeroutput> <formula id="13">$ \cup$</formula> <computeroutput>N1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1065" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a798cf66cd3c9e601f3b33777f4d377bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::difference</definition>
        <argsstring>(const Nef_polyhedron_S2&lt; K &gt; &amp;N1)</argsstring>
        <name>difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt; &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>N</computeroutput> <formula id="14">$ -$</formula> <computeroutput>N1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1071" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ada841dfc92c91a863a5a873f1e1e84fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt;</type>
        <definition>Nef_polyhedron_S2&lt;K&gt; CGAL::Nef_polyhedron_S2&lt; Traits &gt;::symmetric_difference</definition>
        <argsstring>(const Nef_polyhedron_S2&lt; K &gt; &amp;N1)</argsstring>
        <name>symmetric_difference</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt; K &gt; &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
<para>returns the symmectric difference <computeroutput>N - T</computeroutput> <formula id="13">$ \cup$</formula> <computeroutput>T - N</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1078" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Statistics and Integrity</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aae4b11e92a013b1ce9dd444cf1792929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_svertices</definition>
        <argsstring>()</argsstring>
        <name>number_of_svertices</name>
        <briefdescription>
<para>returns the number of svertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aca467f6c8fdca9b6b308f525295d9e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_shalfedges</definition>
        <argsstring>()</argsstring>
        <name>number_of_shalfedges</name>
        <briefdescription>
<para>returns the number of shalfedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a4bb0d7cc86da41049c2de60472c717bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_sedges</definition>
        <argsstring>()</argsstring>
        <name>number_of_sedges</name>
        <briefdescription>
<para>returns the number of sedges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ab6c8fd4c1ab5d79c6cf75d698c89ff37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_shalfloops</definition>
        <argsstring>()</argsstring>
        <name>number_of_shalfloops</name>
        <briefdescription>
<para>returns the number of shalfloops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a5337e950f3a2f0899ca5b893de0ac3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_sloops</definition>
        <argsstring>()</argsstring>
        <name>number_of_sloops</name>
        <briefdescription>
<para>returns the number of sloops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a16e895d4461bd3ddd4a16a9d9b4655da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_sfaces</definition>
        <argsstring>()</argsstring>
        <name>number_of_sfaces</name>
        <briefdescription>
<para>returns the number of sfaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aff965b5c89ea585cb5269d6a4b5abd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_sface_cycles</definition>
        <argsstring>()</argsstring>
        <name>number_of_sface_cycles</name>
        <briefdescription>
<para>returns the number of sface cycles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aede130b74358f79b2d2394b8d24a6007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size_type</type>
        <definition>Size_type CGAL::Nef_polyhedron_S2&lt; Traits &gt;::number_of_connected_components</definition>
        <argsstring>()</argsstring>
        <name>number_of_connected_components</name>
        <briefdescription>
<para>calculates the number of connected components of <computeroutput>P</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a62cb1c299dfda0bb6fb9418b83f49792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Nef_polyhedron_S2&lt; Traits &gt;::print_statistics</definition>
        <argsstring>(std::ostream &amp;os=std::cout)</argsstring>
        <name>print_statistics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
          <defval>std::cout</defval>
        </param>
        <briefdescription>
<para>print the statistics of <computeroutput>P</computeroutput>: the number of vertices, edges, and faces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1a33cbc044c8064754a879f7c1395532e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Nef_polyhedron_S2&lt; Traits &gt;::check_integrity_and_topological_planarity</definition>
        <argsstring>(bool faces=true)</argsstring>
        <name>check_integrity_and_topological_planarity</name>
        <param>
          <type>bool</type>
          <declname>faces</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>checks the link structure and the genus of <computeroutput>P</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration</header>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1ad722e67acc04745db44c8454ab7a4cf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Nef_polyhedron_S2&lt; Traits &gt;::has_shalfloop</definition>
        <argsstring>() const</argsstring>
        <name>has_shalfloop</name>
        <briefdescription>
<para>The list of all objects can be accessed via iterator ranges. </para>        </briefdescription>
        <detaileddescription>
<para>For comfortable iteration we also provide iterations macros. The iterator range access operations are of the following kind:<itemizedlist>
<listitem><para><computeroutput>SVertex_iterator svertices_begin()/svertices_end()</computeroutput></para></listitem><listitem><para><computeroutput>SHalfedge_iterator shalfedges_begin()/shalfedges_end()</computeroutput></para></listitem><listitem><para><computeroutput>SHalfloop_iterator shalfloops_begin()/shalfloops_end()</computeroutput></para></listitem><listitem><para><computeroutput>SFace_iterator sfaces_begin()/sfaces_end()</computeroutput></para></listitem></itemizedlist>
</para><para>The macros are then<itemizedlist>
<listitem><para><computeroutput>CGAL_forall_svertices(v,M)</computeroutput>,</para></listitem><listitem><para><computeroutput>CGAL_forall_shalfedges(e,M)</computeroutput>,</para></listitem><listitem><para><computeroutput>CGAL_forall_sfaces(f,M)</computeroutput>,</para></listitem><listitem><para><computeroutput>CGAL_forall_sface_cycles_of(fc,F)</computeroutput></para></listitem></itemizedlist>
</para><para>where <computeroutput>M</computeroutput> is a sphere map and <computeroutput>F</computeroutput> is a sface.</para><para>returns true iff there is a shalfloop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Nef__polyhedron__S2_1aab7dfa6f629176f4ca3d694cf08dc0f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Nef__polyhedron__S2_1a5e369fac0476252aa4922cd418ec3f11" kindref="member">SHalfloop_const_handle</ref></type>
        <definition>SHalfloop_const_handle CGAL::Nef_polyhedron_S2&lt; Traits &gt;::shalfloop</definition>
        <argsstring>() const</argsstring>
        <name>shalfloop</name>
        <briefdescription>
<para>returns access to the sloop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Nef_polyhedron_S2.h" line="1255" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
    <briefdescription>
<para>An instance of data type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref>&lt;Traits&gt;</computeroutput> is a subset of the sphere <formula id="0">$ S_2$</formula> that is the result of forming complements and intersections starting from a finite set <computeroutput>H</computeroutput> of halfspaces bounded by a plane containing the origin. </para>    </briefdescription>
    <detaileddescription>
<para>Halfspaces correspond to hemispheres of <formula id="0">$ S_2$</formula> and are therefore modeled by oriented great circles of type <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2_1_1Sphere__circle" kindref="compound">Sphere_circle</ref></computeroutput>. <computeroutput><ref refid="classCGAL_1_1Nef__polyhedron__S2" kindref="compound">Nef_polyhedron_S2</ref></computeroutput> is closed under all binary set operations <computeroutput>intersection</computeroutput>, <computeroutput>union</computeroutput>, <computeroutput>difference</computeroutput>, <computeroutput>complement</computeroutput> and under the topological operations <computeroutput>boundary</computeroutput>, <computeroutput>closure</computeroutput>, and <computeroutput>interior</computeroutput>.</para><para><bold>Parameters</bold><linebreak/>
</para><para><programlisting><codeline><highlight class="normal">template&lt;<sp/>class<sp/>Nef_polyhedronTraits_S2,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Nef_polyhedronItems_S2<sp/>=<sp/>CGAL::SM_items,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Nef_polyhedronMarks<sp/>=<sp/>bool<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">class<sp/>Nef_polyhedron_S2;</highlight></codeline>
</programlisting></para><para>The first parameter requires one of the following exact kernels: <computeroutput><ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref></computeroutput>, <computeroutput><ref refid="structCGAL_1_1Simple__homogeneous" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Simple_homogeneous</ref></computeroutput> parametrized with <computeroutput>Gmpz</computeroutput>, <computeroutput>leda_integer</computeroutput> or any other number type modeling <formula id="1">$\mathbb{Z}$</formula>, or <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref></computeroutput>, <computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Simple_cartesian</ref></computeroutput> parametrized with <computeroutput>Gmpq</computeroutput>, <computeroutput>leda_rational</computeroutput>, <computeroutput>Quotient&lt;Gmpz&gt;</computeroutput> or any other number type modeling <formula id="2">$\mathbb{Q}$</formula>.</para><para>The second parameter and the third parameter are for future considerations. Neither <computeroutput>Nef_polyhedronItems_S2</computeroutput> nor <computeroutput>Nef_polyhedronMarks</computeroutput> is specifed, yet. Do not use other than the default types for these two template parameters.</para><para><bold>Exploration - Point location - Ray shooting</bold><linebreak/>
</para><para>As Nef polyhedra are the result of forming complements and intersections starting from a set <computeroutput>H</computeroutput> of half-spaces that are defined by oriented lines in the plane, they can be represented by an attributed plane map <formula id="3">$ M = (V,E,F)$</formula>. For topological queries within <computeroutput>M</computeroutput> the following types and operations allow exploration access to this structure.</para><para><bold>Input and Output</bold><linebreak/>
</para><para>A Nef polyhedron <computeroutput>N</computeroutput> can be visualized in an open GL window. The output operator is defined in the file <computeroutput>CGAL/IO/Nef_polyhedron_2_Window-stream.h</computeroutput>.</para><para><bold>Implementation</bold><linebreak/>
</para><para>Nef polyhedra are implemented on top of a halfedge data structure and use linear space in the number of vertices, edges and facets. Operations like <computeroutput>empty</computeroutput> take constant time. The operations <computeroutput>clear</computeroutput>, <computeroutput>complement</computeroutput>, <computeroutput>interior</computeroutput>, <computeroutput>closure</computeroutput>, <computeroutput>boundary</computeroutput>, <computeroutput>regularization</computeroutput>, input and output take linear time. All binary set operations and comparison operations take time <formula id="4">$ O(n \log n)$</formula> where <formula id="5">$ n$</formula> is the size of the output plus the size of the input.</para><para>The point location and ray shooting operations are implemented in the naive way. The operations run in linear query time without any preprocessing. </para>    </detaileddescription>
    <location file="CGAL/Nef_polyhedron_S2.h" line="70" column="1" bodyfile="CGAL/Nef_polyhedron_S2.h" bodystart="70" bodyend="1259"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Boundary</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ab0b0ab4542cefe90bcd467d71a7ffb93" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>boundary</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a33cbc044c8064754a879f7c1395532e8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>check_integrity_and_topological_planarity</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aee67b7d1b1b38c7757801d0356f950c3" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1abc92b55c3f5214ad6bc13cbfe4cdcd25" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>closure</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1afc29e300fdc792168b5560ee6be5f362" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>complement</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823a0b0522ca5df388099c82fefe571d2b23" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>COMPLETE</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a9dee6ba287bd900cdc3eb5b4152bec01" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>contained_in_boundary</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a02aece81255baaf9e81b5f5c44a193a7" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>contains</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Content</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a798cf66cd3c9e601f3b33777f4d377bb" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>difference</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a3ce8658c7c7445e8f074d2c03c945823acebbfcbcc3e2815f7099bdab77dd5e76" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>EMPTY</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6ad904d1cdd3b1568d38e36bee673f2524" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>EXCLUDED</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ad722e67acc04745db44c8454ab7a4cf9" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>has_shalfloop</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a0efe7db1ce8df143782f5f5a713e0fa6a1e02df1cb7cc053f462ba6f6c0a942c1" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>INCLUDED</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ab7de2939ddbf54a4ca4dbe70bf902e0f" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>interior</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a8f757a2ab79ee25519de9dc27f5f89ea" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>intersection</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ad564764787931e772adefdc94447fcec" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aaf24fe73f032c4198ff5c495fa19befa" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>is_sphere</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a23221418d4ca5ef6f101a8a5d7b97f52" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>join</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a0adb7471ee81ac7b1b4794c5f53ce877" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ae8b6c72a01dce16a34766db6d98c2a31" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Mark</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ae7d36187df693fd995f4045df77e533f" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Nef_polyhedron_S2</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aa5f3cf1ffda6bd8f1ecab9a85a9ed618" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Nef_polyhedron_S2</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a08d0608f7cb4ccf45db39f341aee422c" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Nef_polyhedron_S2</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aede130b74358f79b2d2394b8d24a6007" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_connected_components</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a4bb0d7cc86da41049c2de60472c717bb" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_sedges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aff965b5c89ea585cb5269d6a4b5abd61" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_sface_cycles</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a16e895d4461bd3ddd4a16a9d9b4655da" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_sfaces</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aca467f6c8fdca9b6b308f525295d9e57" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_shalfedges</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ab6c8fd4c1ab5d79c6cf75d698c89ff37" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_shalfloops</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a5337e950f3a2f0899ca5b893de0ac3d2" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_sloops</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aae4b11e92a013b1ce9dd444cf1792929" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>number_of_svertices</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ade3314ff1e537734fecd18250fe35d66" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>Object_handle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a62cb1c299dfda0bb6fb9418b83f49792" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>print_statistics</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a8f46cec3bc496185f542dd3adfe6823c" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>ray_shoot</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a447bac92b5e441d5f37d81910ca60fca" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>ray_shoot_to_boundary</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ad558bf3c89f37d35436a9d829faad0de" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>regularization</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a54eeaf9cfa515807ca7f78966758a817" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SFace_const_handle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a6e922713ff9859c939b90320cdcdd06c" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SFace_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a8bf70a1ec332bb0c1af5bea79a51fc72" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SFace_cycle_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a626dcb7aae58100dd39e4ace717bd90e" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfedge_around_sface_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a01c3c91495941a39260d5273b3504142" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfedge_around_svertex_const_circulator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a451791355a3c6f37c518201f868fb481" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfedge_const_handle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1adad3f2e436981087488d4bc9aaef4a10" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfedge_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1aab7dfa6f629176f4ca3d694cf08dc0f3" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>shalfloop</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a5e369fac0476252aa4922cd418ec3f11" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfloop_const_handle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a86de0f3d94277b3be8259f70d741ef2b" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SHalfloop_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a833d2fb4c81665b3d399d8961f2228c1" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ab8c065032149003b2a13676eead440e8" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SVertex_const_handle</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1a7dadf69770a484c63021ee43bd1e5399" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>SVertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Nef__polyhedron__S2_1ada841dfc92c91a863a5a873f1e1e84fa" prot="public" virt="non-virtual"><scope>CGAL::Nef_polyhedron_S2</scope><name>symmetric_difference</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
