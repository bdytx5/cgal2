<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classKernel__d_1_1Intersect__d" kind="class" language="C++" prot="public">
    <compoundname>Kernel_d::Intersect_d</compoundname>
    <includes local="no">Concepts/Kernel--Intersect_d.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classKernel__d_1_1Intersect__d_1a9bd8a0eb76ea04dec684b5558b0227dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type1</type>
          </param>
          <param>
            <type>class Type2</type>
          </param>
        </templateparamlist>
        <type>cpp11::result_of&lt; Kernel::Intersect_d(Type1, Type2)&gt;::type</type>
        <definition>cpp11::result_of&lt;Kernel::Intersect_d(Type1, Type2)&gt;::type Kernel_d::Intersect_d::operator()</definition>
        <argsstring>(const Type1 &amp;p, const Type2 &amp;q)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Type1 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the result of the intersection of <formula id="11">$ p$</formula> and <formula id="13">$ q$</formula> in form of a stack-based discriminated union container object. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> may be any of <computeroutput><ref refid="classKernel__d_1a62751eea3776caaf978bcc69c03329cb" kindref="member">Kernel_d::Segment_d</ref></computeroutput>, <computeroutput><ref refid="classKernel__d_1a0644d7a129f3f6cfd51d34728375475d" kindref="member">Kernel_d::Ray_d</ref></computeroutput>, <computeroutput><ref refid="classKernel__d_1ae68c09bec26a60c1b0af81276aa4bc74" kindref="member">Kernel_d::Line_d</ref></computeroutput>, <computeroutput><ref refid="classKernel__d_1ac3ebd6dc97fb0f4ca08145032a5244aa" kindref="member">Kernel_d::Hyperplane_d</ref></computeroutput>.</para><para>For a list of the possible return types, see <computeroutput><ref refid="group__intersection__linear__grp_1gab77f3cd98c4c4ff7acff59c98ab88ff0" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::intersection()</ref></computeroutput>.</para><para><simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> have the same dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/Kernel--Intersect_d.h" line="27" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> </para>    </detaileddescription>
    <location file="Concepts/Kernel--Intersect_d.h" line="8" column="1" bodyfile="Concepts/Kernel--Intersect_d.h" bodystart="8" bodyend="31"/>
    <listofallmembers>
      <member refid="classKernel__d_1_1Intersect__d_1a9bd8a0eb76ea04dec684b5558b0227dd" prot="public" virt="non-virtual"><scope>Kernel_d::Intersect_d</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
