<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Hyperplane__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Hyperplane_d</compoundname>
    <includes local="no">CGAL/Kernel_d/Hyperplane_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Hyperplane__d_1a1b41ffba5fb8923c95ab422c10e58a40" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Hyperplane_d&lt; Kernel &gt;::LA</definition>
        <argsstring></argsstring>
        <name>LA</name>
        <briefdescription>
<para>the linear algebra layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="44" column="1" bodyfile="CGAL/Kernel_d/Hyperplane_d.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Hyperplane__d_1a59f8ad07b9541ad6c05232f230cc331c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Hyperplane_d&lt; Kernel &gt;::Coefficient_const_iterator</definition>
        <argsstring></argsstring>
        <name>Coefficient_const_iterator</name>
        <briefdescription>
<para>a read-only iterator for the coefficients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1" bodyfile="CGAL/Kernel_d/Hyperplane_d.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a96bda4c593efd572142e9ad7ef30fcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>()</argsstring>
        <name>Hyperplane_d</name>
        <briefdescription>
<para>introduces a variable <computeroutput>h</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a63a5106a90528a80a0db7b5d8fc19b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(int d, InputIterator first, InputIterator last, RT D)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>h</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> initialized to the hyperplane with coefficients <computeroutput>set [first,last)</computeroutput> and <computeroutput>D</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>size [first,last) == d</computeroutput>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>has <computeroutput>RT</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a9da3d5c331ab3ac07053a18e8dd6c663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(int d, InputIterator first, InputIterator last)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>h</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> initialized to the hyperplane with coefficients <computeroutput>set [first,last)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>size [first,last) == d+1</computeroutput>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>has <computeroutput>RT</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a9421e77f28294d3be1fb9428806eb6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(ForwardIterator first, ForwardIterator last, Point_d&lt; Kernel &gt; o, Oriented_side side=ON_ORIENTED_BOUNDARY)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
          <declname>side</declname>
          <defval><ref refid="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979a45220491cf36139beffd09434aa31256" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">ON_ORIENTED_BOUNDARY</ref></defval>
        </param>
        <briefdescription>
<para>constructs some hyperplane that passes through the points in <computeroutput>set [first,last)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>side</computeroutput> is <computeroutput>ON_POSITIVE_SIDE</computeroutput> or <computeroutput>ON_NEGATIVE_SIDE</computeroutput> then <computeroutput>o</computeroutput> is on that side of the constructed hyperplane.</para><para><simplesect kind="pre"><para>A hyperplane with the stated properties must exist. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>has <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> as value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a2eaad498476851273533fd8268f6ee4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(Point_d&lt; Kernel &gt; p, Direction_d&lt; Kernel &gt; dir)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Direction__d" kindref="compound">Direction_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>constructs the hyperplane with normal direction <computeroutput>dir</computeroutput> that passes through <formula id="11">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>The direction <computeroutput>dir</computeroutput> points into the positive side.</para><para><simplesect kind="pre"><para><computeroutput>p.dimension()==dir.dimension()</computeroutput> and <computeroutput>dir</computeroutput> is not degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a2983268d761dd4303d75d06a7919c82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(RT a, RT b, RT c)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type>RT</type>
          <declname>a</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>b</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>h</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> in <formula id="28">$ 2$</formula>-dimensional space with equation <formula id="48">$ ax+by+c=0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1ac53ef9afdc5cbb098b965fdae2ee8f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hyperplane_d&lt; Kernel &gt;::Hyperplane_d</definition>
        <argsstring>(RT a, RT b, RT c, RT d)</argsstring>
        <name>Hyperplane_d</name>
        <param>
          <type>RT</type>
          <declname>a</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>b</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>c</declname>
        </param>
        <param>
          <type>RT</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>h</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> in <formula id="36">$ 3$</formula>-dimensional space with equation <formula id="49">$ ax+by+cz+d=0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="50" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1ac02629a17885f6326fa1331c47df9579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Hyperplane_d&lt; Kernel &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension of <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a3fa79468674e83463618e39a7e6cdcca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RT</type>
        <definition>RT CGAL::Hyperplane_d&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the <formula id="34">$ i$</formula>-th coefficient of <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="50">$ 0 \leq i \leq d$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a01ab209e28e77806e058c391a53f2aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RT</type>
        <definition>RT CGAL::Hyperplane_d&lt; Kernel &gt;::coefficient</definition>
        <argsstring>(int i)</argsstring>
        <name>coefficient</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the <formula id="34">$ i$</formula>-th coefficient of <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="50">$ 0 \leq i \leq d$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1ad795d9844d08040390e30006e9a71b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Hyperplane__d_1a59f8ad07b9541ad6c05232f230cc331c" kindref="member">Coefficient_const_iterator</ref></type>
        <definition>Coefficient_const_iterator CGAL::Hyperplane_d&lt; Kernel &gt;::coefficients_begin</definition>
        <argsstring>()</argsstring>
        <name>coefficients_begin</name>
        <briefdescription>
<para>returns an iterator pointing to the first coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a2953ebe9c002a30677d238632564dfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Hyperplane__d_1a59f8ad07b9541ad6c05232f230cc331c" kindref="member">Coefficient_const_iterator</ref></type>
        <definition>Coefficient_const_iterator CGAL::Hyperplane_d&lt; Kernel &gt;::coefficients_end</definition>
        <argsstring>()</argsstring>
        <name>coefficients_end</name>
        <briefdescription>
<para>returns an iterator pointing beyond the last coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a9b06b5a8c3a274a896b73d0aba922197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__d" kindref="compound">Vector_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Vector_d&lt;Kernel&gt; CGAL::Hyperplane_d&lt; Kernel &gt;::orthogonal_vector</definition>
        <argsstring>()</argsstring>
        <name>orthogonal_vector</name>
        <briefdescription>
<para>returns the orthogonal vector of <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It points from the negative halfspace into the positive halfspace and its homogeneous coordinates are <formula id="51">$ (c_0, \ldots, c_{d - 1},1)$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a6ef80023ef061eef690a7d094a312488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__d" kindref="compound">Direction_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Direction_d&lt;Kernel&gt; CGAL::Hyperplane_d&lt; Kernel &gt;::orthogonal_direction</definition>
        <argsstring>()</argsstring>
        <name>orthogonal_direction</name>
        <briefdescription>
<para>returns the orthogonal direction of <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It points from the negative halfspace into the positive halfspace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a8992b11d039d91d3214a288da40a8ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::Hyperplane_d&lt; Kernel &gt;::oriented_side</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>oriented_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the side of the hyperplane <computeroutput>h</computeroutput> containing <formula id="11">$ p$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1aa0ab129eaeb99c2a0d439d02e953183b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Hyperplane_d&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff point <computeroutput>p</computeroutput> lies on the hyperplane <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1aace4fc2409059cecdb75c81044ba25d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Hyperplane_d&lt; Kernel &gt;::has_on_boundary</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on_boundary</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff point <computeroutput>p</computeroutput> lies on the boundary of hyperplane <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1af9c7e8cf6b5566201aae98d3ccfca549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Hyperplane_d&lt; Kernel &gt;::has_on_positive_side</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on_positive_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff point <computeroutput>p</computeroutput> lies on the positive side of hyperplane <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a2bbad9aa03fb960d5b874d64d04dcf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Hyperplane_d&lt; Kernel &gt;::has_on_negative_side</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on_negative_side</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff point <computeroutput>p</computeroutput> lies on the negative side of hyperplane <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1ad5a93fbf7e86ec52cfae8ff364f44647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Hyperplane_d&lt;Kernel&gt; CGAL::Hyperplane_d&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_d&lt; Kernel &gt; &amp;t)</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__d" kindref="compound">Aff_transformation_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns <formula id="52">$ t(h)$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h.dimension() == t.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="221" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Hyperplane__d_1a7de58b9954c8dd29537b2ac926f608e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weak_equality</definition>
        <argsstring>(const Hyperplane_d&lt; Kernel &gt; &amp;h1, const Hyperplane_d&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>weak_equality</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>test for weak equality. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h1.dimension() == h2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Hyperplane_d.h" line="234" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance of data type <computeroutput><ref refid="classCGAL_1_1Hyperplane__d" kindref="compound">Hyperplane_d</ref></computeroutput> is an oriented hyperplane in <formula id="6">$ d$</formula> - dimensional space. </para>    </briefdescription>
    <detaileddescription>
<para>A hyperplane <formula id="39">$ h$</formula> is represented by coefficients <formula id="40">$ (c_0,c_1,\ldots,c_d)$</formula> of type <computeroutput>RT</computeroutput>. At least one of <formula id="41">$ c_0$</formula> to <formula id="42">$ c_{ d - 1 }$</formula> must be non-zero. The plane equation is <formula id="43">$ \sum_{ 0 \le i &lt; d } c_i x_i + c_d = 0$</formula>, where <formula id="44">$ x_0$</formula> to <formula id="45">$ x_{d-1}$</formula> are Cartesian point coordinates. For a particular <formula id="24">$ x$</formula> the sign of <formula id="46">$ \sum_{ 0 \le i &lt; d } c_i x_i + c_d$</formula> determines the position of a point <formula id="24">$ x$</formula> with respect to the hyperplane (on the hyperplane, on the negative side, or on the positive side).</para><para>There are two equality predicates for hyperplanes. The (weak) equality predicate (<computeroutput>weak_equality</computeroutput>) declares two hyperplanes equal if they consist of the same set of points, the strong equality predicate (<computeroutput>operator==</computeroutput>) requires in addition that the negative halfspaces agree. In other words, two hyperplanes are strongly equal if their coefficient vectors are positive multiples of each other and they are (weakly) equal if their coefficient vectors are multiples of each other.</para><para><bold>Implementation</bold><linebreak/>
</para><para>Hyperplanes are implemented by arrays of integers as an item type. All operations like creation, initialization, tests, vector arithmetic, input and output on a hyperplane <formula id="39">$ h$</formula> take time <formula id="47">$ O(h.dimension())$</formula>. coordinate access and <computeroutput><ref refid="classCGAL_1_1Hyperplane__d_1ac02629a17885f6326fa1331c47df9579" kindref="member">dimension()</ref></computeroutput> take constant time. The space requirement is <formula id="47">$ O(h.dimension())$</formula>. </para>    </detaileddescription>
    <location file="CGAL/Kernel_d/Hyperplane_d.h" line="35" column="1" bodyfile="CGAL/Kernel_d/Hyperplane_d.h" bodystart="35" bodyend="226"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Hyperplane__d_1a01ab209e28e77806e058c391a53f2aac" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>coefficient</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a59f8ad07b9541ad6c05232f230cc331c" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Coefficient_const_iterator</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1ad795d9844d08040390e30006e9a71b31" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>coefficients_begin</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a2953ebe9c002a30677d238632564dfc1" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>coefficients_end</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1ac02629a17885f6326fa1331c47df9579" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1aa0ab129eaeb99c2a0d439d02e953183b" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1aace4fc2409059cecdb75c81044ba25d6" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>has_on_boundary</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a2bbad9aa03fb960d5b874d64d04dcf3f" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>has_on_negative_side</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1af9c7e8cf6b5566201aae98d3ccfca549" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>has_on_positive_side</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a96bda4c593efd572142e9ad7ef30fcc5" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a63a5106a90528a80a0db7b5d8fc19b4b" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a9da3d5c331ab3ac07053a18e8dd6c663" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a9421e77f28294d3be1fb9428806eb6cf" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a2eaad498476851273533fd8268f6ee4e" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a2983268d761dd4303d75d06a7919c82e" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1ac53ef9afdc5cbb098b965fdae2ee8f58" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>Hyperplane_d</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a1b41ffba5fb8923c95ab422c10e58a40" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>LA</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a3fa79468674e83463618e39a7e6cdcca" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a8992b11d039d91d3214a288da40a8ca3" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>oriented_side</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a6ef80023ef061eef690a7d094a312488" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>orthogonal_direction</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a9b06b5a8c3a274a896b73d0aba922197" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>orthogonal_vector</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1ad5a93fbf7e86ec52cfae8ff364f44647" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Hyperplane__d_1a7de58b9954c8dd29537b2ac926f608e5" prot="public" virt="non-virtual"><scope>CGAL::Hyperplane_d</scope><name>weak_equality</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
