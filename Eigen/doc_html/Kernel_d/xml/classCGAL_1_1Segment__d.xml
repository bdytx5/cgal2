<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Segment__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Segment_d</compoundname>
    <includes local="no">CGAL/Kernel_d/Segment_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Segment__d_1a3a87a622436556d8eb6850c88a2016c3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Segment_d&lt; Kernel &gt;::LA</definition>
        <argsstring></argsstring>
        <name>LA</name>
        <briefdescription>
<para>the linear algebra layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="34" column="1" bodyfile="CGAL/Kernel_d/Segment_d.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a82462da31668b81e12e3acc57f162962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Segment_d&lt; Kernel &gt;::Segment_d</definition>
        <argsstring>()</argsstring>
        <name>Segment_d</name>
        <briefdescription>
<para>introduces a variable <computeroutput>s</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1aa548199d0c194a59af44805fd159efb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Segment_d&lt; Kernel &gt;::Segment_d</definition>
        <argsstring>(Point_d&lt; Kernel &gt; p, Point_d&lt; Kernel &gt; q)</argsstring>
        <name>Segment_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>s</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> which is initialized to the segment <formula id="82">$ (p,q)$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p.dimension()==q.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1ad81bb8f75ee75811059f0f857ad6ab6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Segment_d&lt; Kernel &gt;::Segment_d</definition>
        <argsstring>(Point_d&lt; Kernel &gt; p, Vector_d&lt; Kernel &gt; v)</argsstring>
        <name>Segment_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Vector__d" kindref="compound">Vector_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>s</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> which is initialized to the segment <computeroutput>(p,p+v)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p.dimension()==v.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a9395dcf19178f328ce6bdfd8c31bdc4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Segment_d&lt; Kernel &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension of the ambient space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1ab15639fb3a81f228cbd2ad58c9148fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::source</definition>
        <argsstring>()</argsstring>
        <name>source</name>
        <briefdescription>
<para>returns the source point of segment <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1aceac029df3ae8c0f56b8a13595737ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::target</definition>
        <argsstring>()</argsstring>
        <name>target</name>
        <briefdescription>
<para>returns the target point of segment <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1ab65a63317c3722dd8a0a79542aeb3cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::vertex</definition>
        <argsstring>(int i)</argsstring>
        <name>vertex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns source or target of <computeroutput>s</computeroutput>: <computeroutput>vertex(0)</computeroutput> returns the source, <computeroutput>vertex(1)</computeroutput> returns the target. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter <formula id="34">$ i$</formula> is taken modulo <formula id="28">$ 2$</formula>, which gives easy access to the other vertex.</para><para><simplesect kind="pre"><para><formula id="79">$ i \geq0$</formula>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1abb3d058922c70677109412eb41349518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::point</definition>
        <argsstring>(int i)</argsstring>
        <name>point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a74e3534b67653fbd93d553613ce7f2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(i)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a856014b414e5f80ebdad5dea967f0119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::min</definition>
        <argsstring>()</argsstring>
        <name>min</name>
        <briefdescription>
<para>returns the lexicographically smaller vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a25d1684af7a48443dc9e0ad8500579d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::max</definition>
        <argsstring>()</argsstring>
        <name>max</name>
        <briefdescription>
<para>returns the lexicographically larger vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a0e8ff4b7a8ab68c212dda1803c234cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Segment_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::opposite</definition>
        <argsstring>()</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns the segment <computeroutput>(<ref refid="classCGAL_1_1Segment__d_1aceac029df3ae8c0f56b8a13595737ee7" kindref="member">target()</ref>,<ref refid="classCGAL_1_1Segment__d_1ab15639fb3a81f228cbd2ad58c9148fe8" kindref="member">source()</ref>)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1af460764bf00bb4ad3ba5c6301b75b73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__d" kindref="compound">Direction_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Direction_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction from source to target. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s</computeroutput> is non-degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1ac2ce7e4c38f2da0309f0a89387d32300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__d" kindref="compound">Vector_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Vector_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::vector</definition>
        <argsstring>()</argsstring>
        <name>vector</name>
        <briefdescription>
<para>returns the vector from source to target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a71f91a59bf78d4fc2c1d24709de5adff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::Segment_d&lt; Kernel &gt;::squared_length</definition>
        <argsstring>()</argsstring>
        <name>squared_length</name>
        <briefdescription>
<para>returns the square of the length of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1aa18af797886251e623c4671865b4df72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_d&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true if <formula id="11">$ p$</formula> lies on <computeroutput>s</computeroutput> and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s.dimension()==p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1ab0b0ec5783a9b7d60cf24a7f0ebbd122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Line_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::supporting_line</definition>
        <argsstring>()</argsstring>
        <name>supporting_line</name>
        <briefdescription>
<para>returns the supporting line of <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s</computeroutput> is non-degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a41f9eb9bb4fdae0c9e19df84c08e72a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Segment_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_d&lt; Kernel &gt; &amp;t)</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__d" kindref="compound">Aff_transformation_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns <formula id="83">$ t(s)$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s.dimension()==t.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a1f74c8f1ee548889cb11f66ab7051038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Segment_d&lt;Kernel&gt; CGAL::Segment_d&lt; Kernel &gt;::operator+</definition>
        <argsstring>(const Vector_d&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__d" kindref="compound">Vector_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns <formula id="84">$ s+v$</formula>, i.e., <computeroutput>s</computeroutput> translated by vector <formula id="21">$ v$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s.dimension()==v.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a40ec6b9372ceb0656cff1e2fa96bdaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Segment_d&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>()</argsstring>
        <name>is_degenerate</name>
        <briefdescription>
<para>returns true if <computeroutput>s</computeroutput> is degenerate i.e. <computeroutput>s.source()=s.target()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="182" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a5d6573fa0986a07cae4b1be52af2d726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weak_equality</definition>
        <argsstring>(const Segment_d&lt; Kernel &gt; &amp;s1, const Segment_d&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>weak_equality</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Test for equality as unoriented segments. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s1.dimension()==s2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a120651370c9a329bfd48d4036723cf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parallel</definition>
        <argsstring>(const Segment_d&lt; Kernel &gt; &amp;s1, const Segment_d&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>return true if one of the segments is degenerate or if the unoriented supporting lines are parallel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>s1.dimension()==s2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Segment__d_1a0d38020369f56eb0a80c03c1b8a03439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool common_endpoint</definition>
        <argsstring>(const Segment_d&lt; Kernel &gt; &amp;s1, const Segment_d&lt; Kernel &gt; &amp;s2, Point_d&lt; Kernel &gt; &amp;common)</argsstring>
        <name>common_endpoint</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>common</declname>
        </param>
        <briefdescription>
<para>if <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput> touch in a common end point, this point is assigned to <computeroutput>common</computeroutput> and the result is <computeroutput>true</computeroutput>, otherwise the result is <computeroutput>false</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s1==s2</computeroutput> then one of the endpoints is returned.</para><para><simplesect kind="pre"><para><computeroutput>s1.dimension()==s2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Segment_d.h" line="216" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance <formula id="57">$ s$</formula> of the data type <computeroutput><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref></computeroutput> is a directed straight line segment in <formula id="6">$ d$</formula>-dimensional Euclidean space connecting two points <formula id="11">$ p$</formula> and <formula id="13">$ q$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para><formula id="11">$ p$</formula> is called the source point and <formula id="13">$ q$</formula> is called the target point of <formula id="57">$ s$</formula>, both points are called endpoints of <formula id="57">$ s$</formula>. A segment whose endpoints are equal is called <emphasis>degenerate</emphasis>.</para><para><bold>Implementation</bold><linebreak/>
</para><para>Segments are implemented by a pair of points as an item type. All operations like creation, initialization, tests, the calculation of the direction and source - target vector, input and output on a segment <formula id="57">$ s$</formula> take time <formula id="81">$ O(s.dimension())$</formula>. <computeroutput><ref refid="classCGAL_1_1Segment__d_1a9395dcf19178f328ce6bdfd8c31bdc4e" kindref="member">dimension()</ref></computeroutput>, coordinate and end point access, and identity test take constant time. The operations for intersection calculation also take time <formula id="81">$ O(s.dimension())$</formula>. The space requirement is <formula id="81">$ O(s.dimension())$</formula>. </para>    </detaileddescription>
    <location file="CGAL/Kernel_d/Segment_d.h" line="25" column="1" bodyfile="CGAL/Kernel_d/Segment_d.h" bodystart="25" bodyend="186"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Segment__d_1a0d38020369f56eb0a80c03c1b8a03439" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>common_endpoint</name></member>
      <member refid="classCGAL_1_1Segment__d_1a9395dcf19178f328ce6bdfd8c31bdc4e" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Segment__d_1af460764bf00bb4ad3ba5c6301b75b73b" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Segment__d_1aa18af797886251e623c4671865b4df72" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Segment__d_1a40ec6b9372ceb0656cff1e2fa96bdaa1" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Segment__d_1a3a87a622436556d8eb6850c88a2016c3" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>LA</name></member>
      <member refid="classCGAL_1_1Segment__d_1a25d1684af7a48443dc9e0ad8500579d9" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>max</name></member>
      <member refid="classCGAL_1_1Segment__d_1a856014b414e5f80ebdad5dea967f0119" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>min</name></member>
      <member refid="classCGAL_1_1Segment__d_1a1f74c8f1ee548889cb11f66ab7051038" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Segment__d_1a74e3534b67653fbd93d553613ce7f2ee" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Segment__d_1a0e8ff4b7a8ab68c212dda1803c234cc8" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Segment__d_1a120651370c9a329bfd48d4036723cf63" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>parallel</name></member>
      <member refid="classCGAL_1_1Segment__d_1abb3d058922c70677109412eb41349518" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>point</name></member>
      <member refid="classCGAL_1_1Segment__d_1a82462da31668b81e12e3acc57f162962" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>Segment_d</name></member>
      <member refid="classCGAL_1_1Segment__d_1aa548199d0c194a59af44805fd159efb7" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>Segment_d</name></member>
      <member refid="classCGAL_1_1Segment__d_1ad81bb8f75ee75811059f0f857ad6ab6c" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>Segment_d</name></member>
      <member refid="classCGAL_1_1Segment__d_1ab15639fb3a81f228cbd2ad58c9148fe8" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>source</name></member>
      <member refid="classCGAL_1_1Segment__d_1a71f91a59bf78d4fc2c1d24709de5adff" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>squared_length</name></member>
      <member refid="classCGAL_1_1Segment__d_1ab0b0ec5783a9b7d60cf24a7f0ebbd122" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>supporting_line</name></member>
      <member refid="classCGAL_1_1Segment__d_1aceac029df3ae8c0f56b8a13595737ee7" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>target</name></member>
      <member refid="classCGAL_1_1Segment__d_1a41f9eb9bb4fdae0c9e19df84c08e72a8" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Segment__d_1ac2ce7e4c38f2da0309f0a89387d32300" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>vector</name></member>
      <member refid="classCGAL_1_1Segment__d_1ab65a63317c3722dd8a0a79542aeb3cfb" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>vertex</name></member>
      <member refid="classCGAL_1_1Segment__d_1a5d6573fa0986a07cae4b1be52af2d726" prot="public" virt="non-virtual"><scope>CGAL::Segment_d</scope><name>weak_equality</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
