<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classLinearAlgebraTraits__d" kind="class" language="C++" prot="public">
    <compoundname>LinearAlgebraTraits_d</compoundname>
    <includes local="no">Concepts/LinearAlgebraTraits_d.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type LinearAlgebraTraits_d::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <briefdescription>
<para>the number type of the components. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="30" column="1" bodyfile="Concepts/LinearAlgebraTraits_d.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type LinearAlgebraTraits_d::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
<para>the vector type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="35" column="1" bodyfile="Concepts/LinearAlgebraTraits_d.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type LinearAlgebraTraits_d::Matrix</definition>
        <argsstring></argsstring>
        <name>Matrix</name>
        <briefdescription>
<para>the matrix type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="40" column="1" bodyfile="Concepts/LinearAlgebraTraits_d.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a768b870f0905c13246e8a4e34988a027" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref></type>
        <definition>static Matrix LinearAlgebraTraits_d::transpose</definition>
        <argsstring>(const Matrix &amp;M)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>returns <formula id="118">$ M^T$</formula> (a <computeroutput>M.column_dimension()</computeroutput> <formula id="119">$ \times$</formula> <computeroutput>M.column_dimension()</computeroutput> - matrix). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a69e49c6d46a200839efc7dc29d68e931" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::inverse</definition>
        <argsstring>(const Matrix &amp;M, Matrix &amp;I, NT &amp;D, Vector &amp;c)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>determines whether <computeroutput>M</computeroutput> has an inverse. </para>        </briefdescription>
        <detaileddescription>
<para>It also computes either the inverse as <formula id="120">$ (1/D) \cdot I$</formula> or when no inverse exists, a vector <formula id="115">$ c$</formula> such that <formula id="121">$ c^T \cdot M = 0 $</formula>. <simplesect kind="pre"><para><formula id="15">$ M$</formula> is square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a63b5d706ce9c2a617dd56847d142b768" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref></type>
        <definition>static Matrix LinearAlgebraTraits_d::inverse</definition>
        <argsstring>(const Matrix &amp;M, NT &amp;D)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>returns the inverse matrix of <computeroutput>M</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>More precisely, <formula id="122">$ 1/D$</formula> times the matrix returned is the inverse of <computeroutput>M</computeroutput>. <simplesect kind="pre"><para><computeroutput>determinant(M) != 0</computeroutput>.</para></simplesect>
<simplesect kind="pre"><para><formula id="15">$ M$</formula> is square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a0de84fc788cd656f10e009992bc93ee3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref></type>
        <definition>static NT LinearAlgebraTraits_d::determinant</definition>
        <argsstring>(const Matrix &amp;M, Matrix &amp;L, Matrix &amp;U, std::vector&lt; int &gt; &amp;q, Vector &amp;c)</argsstring>
        <name>determinant</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns the determinant <formula id="68">$ D$</formula> of <computeroutput>M</computeroutput> and sufficient information to verify that the value of the determinant is correct. </para>        </briefdescription>
        <detaileddescription>
<para>If the determinant is zero then <formula id="115">$ c$</formula> is a vector such that <formula id="123">$ c^T \cdot M = 0$</formula>. If the determinant is non-zero then <formula id="124">$ L$</formula> and <formula id="125">$ U$</formula> are lower and upper diagonal matrices respectively and <formula id="13">$ q$</formula> encodes a permutation matrix <formula id="126">$ Q$</formula> with <formula id="127">$ Q(i,j) = 1$</formula> iff <formula id="128">$ i = q(j)$</formula> such that <formula id="129">$ L \cdot M \cdot Q = U$</formula>, <formula id="130">$ L(0,0) = 1$</formula>, <formula id="131">$ L(i,i) = U(i - 1,i - 1)$</formula> for all <formula id="34">$ i$</formula>, <formula id="132">$ 1 \le i &lt; n$</formula>, and <formula id="133">$ D = s \cdot U(n - 1,n - 1)$</formula> where <formula id="57">$ s$</formula> is the determinant of <formula id="126">$ Q$</formula>.</para><para><simplesect kind="pre"><para><computeroutput>M</computeroutput> is square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a684ac60518b4f5ed9eb3b58eb262f37e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::verify_determinant</definition>
        <argsstring>(const Matrix &amp;M, NT D, Matrix &amp;L, Matrix &amp;U, const std::vector&lt; int &gt; &amp;q, Vector &amp;c)</argsstring>
        <name>verify_determinant</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref></type>
          <declname>D</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>verifies the conditions stated above. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a5a624020109c60d630e61ae3c9c06de0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref></type>
        <definition>static NT LinearAlgebraTraits_d::determinant</definition>
        <argsstring>(const Matrix &amp;M)</argsstring>
        <name>determinant</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>returns the determinant of <computeroutput>M</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>M</computeroutput> is square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a69db2300d0c5efc3bfc028aebcc223af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int LinearAlgebraTraits_d::sign_of_determinant</definition>
        <argsstring>(const Matrix &amp;M)</argsstring>
        <name>sign_of_determinant</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>returns the sign of the determinant of <computeroutput>M</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>M</computeroutput> is square. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1ac3d3e4464a6e1541902a951c6665b19a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::linear_solver</definition>
        <argsstring>(const Matrix &amp;M, const Vector &amp;b, Vector &amp;x, NT &amp;D, Matrix &amp;spanning_vectors, Vector &amp;c)</argsstring>
        <name>linear_solver</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>spanning_vectors</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>determines the complete solution space of the linear system <formula id="134">$ M\cdot x = b$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>If the system is unsolvable then <formula id="123">$ c^T \cdot M = 0$</formula> and <formula id="135">$ c^T \cdot b \not= 0$</formula>. If the system is solvable then <formula id="136">$ (1/D) x$</formula> is a solution, and the columns of <computeroutput>spanning_vectors</computeroutput> are a maximal set of linearly independent solutions to the corresponding homogeneous system.</para><para><simplesect kind="pre"><para><computeroutput>M.row_dimension() = b.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1abdec876bc18e92224a64a296661fb68e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::linear_solver</definition>
        <argsstring>(const Matrix &amp;M, const Vector &amp;b, Vector &amp;x, NT &amp;D, Vector &amp;c)</argsstring>
        <name>linear_solver</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>determines whether the linear system <formula id="134">$ M\cdot x = b$</formula> is solvable. </para>        </briefdescription>
        <detaileddescription>
<para>If yes, then <formula id="136">$ (1/D) x$</formula> is a solution, if not then <formula id="123">$ c^T \cdot M = 0$</formula> and <formula id="135">$ c^T \cdot b \not= 0$</formula>. <simplesect kind="pre"><para><computeroutput>M.row_dimension() = b.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1ac9a62d7077e932b289c678a04ad9ab23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::linear_solver</definition>
        <argsstring>(const Matrix &amp;M, const Vector &amp;b, Vector &amp;x, NT &amp;D)</argsstring>
        <name>linear_solver</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" kindref="member">NT</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>as above, but without the witness <formula id="115">$ c$</formula> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>M.row_dimension() = b.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a05a1d80d30f48c1a6385167f36ce2b14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::is_solvable</definition>
        <argsstring>(const Matrix &amp;M, const Vector &amp;b)</argsstring>
        <name>is_solvable</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>determines whether the system <formula id="137">$ M \cdot x = b$</formula> is solvable </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>M.row_dimension() = b.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a9740a304f9099f4d247817c04fd8c64a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LinearAlgebraTraits_d::homogeneous_linear_solver</definition>
        <argsstring>(const Matrix &amp;M, Vector &amp;x)</argsstring>
        <name>homogeneous_linear_solver</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" kindref="member">Vector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>determines whether the homogeneous linear system <formula id="138">$ M\cdot x = 0$</formula> has a non - trivial solution. </para>        </briefdescription>
        <detaileddescription>
<para>If yes, then <formula id="24">$ x$</formula> is such a solution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1af936e334e9553f8b27a4347cf7842d86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int LinearAlgebraTraits_d::homogeneous_linear_solver</definition>
        <argsstring>(const Matrix &amp;M, Matrix &amp;spanning_vecs)</argsstring>
        <name>homogeneous_linear_solver</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>spanning_vecs</declname>
        </param>
        <briefdescription>
<para>determines the solution space of the homogeneous linear system <formula id="138">$ M\cdot x = 0$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>It returns the dimension of the solution space. Moreover the columns of <computeroutput>spanning_vecs</computeroutput> span the solution space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1abd49066e80c239e6fc0741b5b0cd692a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int LinearAlgebraTraits_d::independent_columns</definition>
        <argsstring>(const Matrix &amp;M, std::vector&lt; int &gt; &amp;columns)</argsstring>
        <name>independent_columns</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
<para>returns the indices of a maximal subset of independent columns of <computeroutput>M</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLinearAlgebraTraits__d_1a251fe41a7ae2abba7d1bf8e5eb62664e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int LinearAlgebraTraits_d::rank</definition>
        <argsstring>(const Matrix &amp;M)</argsstring>
        <name>rank</name>
        <param>
          <type>const <ref refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" kindref="member">Matrix</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>returns the rank of matrix <computeroutput>M</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearAlgebraTraits_d.h" line="178" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The data type <computeroutput><ref refid="classLinearAlgebraTraits__d" kindref="compound">LinearAlgebraTraits_d</ref></computeroutput> encapsulates two classes <computeroutput><ref refid="classMatrix" kindref="compound">Matrix</ref></computeroutput>, <computeroutput><ref refid="classVector" kindref="compound">Vector</ref></computeroutput> and many functions of basic linear algebra. An instance of data type <computeroutput><ref refid="classMatrix" kindref="compound">Matrix</ref></computeroutput> is a matrix of variables of type <computeroutput>NT</computeroutput>. Accordingly, <computeroutput><ref refid="classVector" kindref="compound">Vector</ref></computeroutput> implements vectors of variables of type <computeroutput>NT</computeroutput>. Most functions of linear algebra are <emphasis>checkable</emphasis>, i.e., the programs can be asked for a proof that their output is correct. For example, if the linear system solver declares a linear system <formula id="114">$ A x = b$</formula> unsolvable it also returns a vector <formula id="115">$ c$</formula> such that <formula id="116">$ c^T A = 0$</formula> and <formula id="117">$ c^T b \neq 0$</formula>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Linear__algebraHd" kindref="compound">CGAL::Linear_algebraHd</ref>&lt;RT&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Linear__algebraCd" kindref="compound">CGAL::Linear_algebraCd</ref>&lt;FT&gt;</computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/LinearAlgebraTraits_d.h" line="21" column="1" bodyfile="Concepts/LinearAlgebraTraits_d.h" bodystart="21" bodyend="182"/>
    <listofallmembers>
      <member refid="classLinearAlgebraTraits__d_1a0de84fc788cd656f10e009992bc93ee3" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>determinant</name></member>
      <member refid="classLinearAlgebraTraits__d_1a5a624020109c60d630e61ae3c9c06de0" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>determinant</name></member>
      <member refid="classLinearAlgebraTraits__d_1a9740a304f9099f4d247817c04fd8c64a" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>homogeneous_linear_solver</name></member>
      <member refid="classLinearAlgebraTraits__d_1af936e334e9553f8b27a4347cf7842d86" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>homogeneous_linear_solver</name></member>
      <member refid="classLinearAlgebraTraits__d_1abd49066e80c239e6fc0741b5b0cd692a" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>independent_columns</name></member>
      <member refid="classLinearAlgebraTraits__d_1a69e49c6d46a200839efc7dc29d68e931" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>inverse</name></member>
      <member refid="classLinearAlgebraTraits__d_1a63b5d706ce9c2a617dd56847d142b768" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>inverse</name></member>
      <member refid="classLinearAlgebraTraits__d_1a05a1d80d30f48c1a6385167f36ce2b14" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>is_solvable</name></member>
      <member refid="classLinearAlgebraTraits__d_1ac3d3e4464a6e1541902a951c6665b19a" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>linear_solver</name></member>
      <member refid="classLinearAlgebraTraits__d_1abdec876bc18e92224a64a296661fb68e" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>linear_solver</name></member>
      <member refid="classLinearAlgebraTraits__d_1ac9a62d7077e932b289c678a04ad9ab23" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>linear_solver</name></member>
      <member refid="classLinearAlgebraTraits__d_1aff99e9b79d9917b250853f5deca38f53" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>Matrix</name></member>
      <member refid="classLinearAlgebraTraits__d_1acfacfe2ecd24c8380e426105eb768d8e" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>NT</name></member>
      <member refid="classLinearAlgebraTraits__d_1a251fe41a7ae2abba7d1bf8e5eb62664e" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>rank</name></member>
      <member refid="classLinearAlgebraTraits__d_1a69db2300d0c5efc3bfc028aebcc223af" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>sign_of_determinant</name></member>
      <member refid="classLinearAlgebraTraits__d_1a768b870f0905c13246e8a4e34988a027" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>transpose</name></member>
      <member refid="classLinearAlgebraTraits__d_1a1682116f6dd3f354ffd7d6ec356ae2b4" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>Vector</name></member>
      <member refid="classLinearAlgebraTraits__d_1a684ac60518b4f5ed9eb3b58eb262f37e" prot="public" virt="non-virtual"><scope>LinearAlgebraTraits_d</scope><name>verify_determinant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
