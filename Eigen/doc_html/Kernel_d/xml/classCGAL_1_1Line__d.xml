<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Line__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Line_d</compoundname>
    <includes local="no">CGAL/Kernel_d/Line_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Line__d_1a38088d941bc15f3ef0b4faaf178f3004" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Line_d&lt; Kernel &gt;::LA</definition>
        <argsstring></argsstring>
        <name>LA</name>
        <briefdescription>
<para>the linear algebra layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1" bodyfile="CGAL/Kernel_d/Line_d.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1aa2562b98856968f3d7c3503aa750ec31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_d&lt; Kernel &gt;::Line_d</definition>
        <argsstring>()</argsstring>
        <name>Line_d</name>
        <briefdescription>
<para>introduces a variable <computeroutput>l</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a72fc22c5800b25e451fd8414028624ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_d&lt; Kernel &gt;::Line_d</definition>
        <argsstring>(Point_d&lt; Kernel &gt; p, Point_d&lt; Kernel &gt; q)</argsstring>
        <name>Line_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a line through <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> and oriented from <computeroutput>p</computeroutput> to <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="11">$ p$</formula> and <formula id="13">$ q$</formula> are distinct and have the same dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1ad528a619e391ef59d03399c6c0a3d0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_d&lt; Kernel &gt;::Line_d</definition>
        <argsstring>(Point_d&lt; Kernel &gt; p, Direction_d&lt; Kernel &gt; dir)</argsstring>
        <name>Line_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Direction__d" kindref="compound">Direction_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>introduces a line through <computeroutput>p</computeroutput> with direction <computeroutput>dir</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p.dimension()==dir.dimension()</computeroutput>, <computeroutput>dir</computeroutput> is not degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a7432ce7ce71cf1dbeb0c5a5cecbc8dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_d&lt; Kernel &gt;::Line_d</definition>
        <argsstring>(Segment_d&lt; Kernel &gt; s)</argsstring>
        <name>Line_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Segment__d" kindref="compound">Segment_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>l</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> and initializes it to the line through <computeroutput>s.source()</computeroutput> and <computeroutput>s.target()</computeroutput> with direction from <computeroutput>s.source()</computeroutput> to <computeroutput>s.target()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="57">$ s$</formula> is not degenerate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1aeda33e811eb7c5501d1cef26e5a8c4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Line_d&lt; Kernel &gt;::Line_d</definition>
        <argsstring>(Ray_d&lt; Kernel &gt; r)</argsstring>
        <name>Line_d</name>
        <param>
          <type><ref refid="classCGAL_1_1Ray__d" kindref="compound">Ray_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces a variable <computeroutput>l</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> and initializes it to the line through <computeroutput>r.point(1)</computeroutput> and <computeroutput>r.point(2)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a4077090e17d855317714f7dee3213a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Line_d&lt; Kernel &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <briefdescription>
<para>returns the dimension of the ambient space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1aca04f6ae0dff2ca378316d64d3c510cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::point</definition>
        <argsstring>(int i)</argsstring>
        <name>point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns an arbitrary point on <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It holds that <computeroutput>point(i) == point(j)</computeroutput>, iff <computeroutput>i==j</computeroutput>. Furthermore, <computeroutput>l</computeroutput> is directed from <computeroutput>point(i)</computeroutput> to <computeroutput>point(j)</computeroutput>, for all <computeroutput>i &lt; j</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1abe92fda37f31efef0e5365e145e6d4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Line_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::opposite</definition>
        <argsstring>()</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns the line <computeroutput>(point(2),point(1))</computeroutput> of opposite direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a74866c107e9ef23894c021bbcaea7512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__d" kindref="compound">Direction_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Direction_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns the direction of <computeroutput>l</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a874614b2724f5860fabfa88dd85586dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Line_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_d&lt; Kernel &gt; &amp;t)</argsstring>
        <name>transform</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__d" kindref="compound">Aff_transformation_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns <formula id="58">$ t(l)$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l.dimension()==t.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1aab48ccbe7b3ef05d3386a51fc78e5533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Line_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::operator+</definition>
        <argsstring>(const Vector_d&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__d" kindref="compound">Vector_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>l+v</computeroutput>, i.e., <computeroutput>l</computeroutput> translated by vector <formula id="21">$ v$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l.dimension()==v.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1ab2dec6a57f6bc44dfe9dd5ed214b50da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>Point_d&lt;Kernel&gt; CGAL::Line_d&lt; Kernel &gt;::projection</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>projection</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the point of intersection of <computeroutput>l</computeroutput> with the hyperplane that is orthogonal to <computeroutput>l</computeroutput> and that contains <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l.dimension()==p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a1063e21c1221847b388de35e435e1f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Line_d&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_d&lt; Kernel &gt; &amp;p)</argsstring>
        <name>has_on</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__d" kindref="compound">Point_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true if <formula id="11">$ p$</formula> lies on <computeroutput>l</computeroutput> and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l.dimension()==p.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Line__d_1a79aefa331e9f933f5e2cc9564bbc2b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool weak_equality</definition>
        <argsstring>(const Line_d&lt; Kernel &gt; &amp;l1, const Line_d&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>weak_equality</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>Test for equality as unoriented lines. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l1.dimension()==l2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Line__d_1afbba4983ff01e6a7d2069524694cda32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool parallel</definition>
        <argsstring>(const Line_d&lt; Kernel &gt; &amp;l1, const Line_d&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>returns true if <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel as unoriented lines and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>l1.dimension()==l2.dimension()</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel_d/Line_d.h" line="161" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance of data type <computeroutput><ref refid="classCGAL_1_1Line__d" kindref="compound">Line_d</ref></computeroutput> is an oriented line in <formula id="6">$ d$</formula>-dimensional Euclidean space. </para>    </briefdescription>
    <detaileddescription>
<para><bold>Implementation</bold><linebreak/>
</para><para>Lines are implemented by a pair of points as an item type. All operations like creation, initialization, tests, direction calculation, input and output on a line <formula id="55">$ l$</formula> take time <formula id="56">$ O(l.dimension())$</formula>. <computeroutput><ref refid="classCGAL_1_1Line__d_1a4077090e17d855317714f7dee3213a00" kindref="member">dimension()</ref></computeroutput>, coordinate and point access, and identity test take constant time. The operations for intersection calculation also take time <formula id="56">$ O(l.dimension())$</formula>. The space requirement is <formula id="56">$ O(l.dimension())$</formula>. </para>    </detaileddescription>
    <location file="CGAL/Kernel_d/Line_d.h" line="21" column="1" bodyfile="CGAL/Kernel_d/Line_d.h" bodystart="21" bodyend="143"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Line__d_1a4077090e17d855317714f7dee3213a00" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Line__d_1a74866c107e9ef23894c021bbcaea7512" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Line__d_1a1063e21c1221847b388de35e435e1f4b" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Line__d_1a38088d941bc15f3ef0b4faaf178f3004" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>LA</name></member>
      <member refid="classCGAL_1_1Line__d_1aa2562b98856968f3d7c3503aa750ec31" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>Line_d</name></member>
      <member refid="classCGAL_1_1Line__d_1a72fc22c5800b25e451fd8414028624ce" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>Line_d</name></member>
      <member refid="classCGAL_1_1Line__d_1ad528a619e391ef59d03399c6c0a3d0c2" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>Line_d</name></member>
      <member refid="classCGAL_1_1Line__d_1a7432ce7ce71cf1dbeb0c5a5cecbc8dbd" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>Line_d</name></member>
      <member refid="classCGAL_1_1Line__d_1aeda33e811eb7c5501d1cef26e5a8c4b0" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>Line_d</name></member>
      <member refid="classCGAL_1_1Line__d_1aab48ccbe7b3ef05d3386a51fc78e5533" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>operator+</name></member>
      <member refid="classCGAL_1_1Line__d_1abe92fda37f31efef0e5365e145e6d4c4" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Line__d_1afbba4983ff01e6a7d2069524694cda32" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>parallel</name></member>
      <member refid="classCGAL_1_1Line__d_1aca04f6ae0dff2ca378316d64d3c510cd" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>point</name></member>
      <member refid="classCGAL_1_1Line__d_1ab2dec6a57f6bc44dfe9dd5ed214b50da" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>projection</name></member>
      <member refid="classCGAL_1_1Line__d_1a874614b2724f5860fabfa88dd85586dc" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Line__d_1a79aefa331e9f933f5e2cc9564bbc2b03" prot="public" virt="non-virtual"><scope>CGAL::Line_d</scope><name>weak_equality</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
