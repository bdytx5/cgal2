<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Epick__d" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Epick_d</compoundname>
    <includes local="no">CGAL/Epick_d.h</includes>
    <innerclass refid="classCGAL_1_1Epick__d_1_1Compute__squared__radius__d" prot="public">CGAL::Epick_d::Compute_squared_radius_d</innerclass>
    <innerclass refid="classCGAL_1_1Epick__d_1_1Construct__circumcenter__d" prot="public">CGAL::Epick_d::Construct_circumcenter_d</innerclass>
    <innerclass refid="classCGAL_1_1Epick__d_1_1Point__d" prot="public">CGAL::Epick_d::Point_d</innerclass>
    <innerclass refid="classCGAL_1_1Epick__d_1_1Side__of__bounded__sphere__d" prot="public">CGAL::Epick_d::Side_of_bounded_sphere_d</innerclass>
    <innerclass refid="classCGAL_1_1Epick__d_1_1Weighted__point__d" prot="public">CGAL::Epick_d::Weighted_point_d</innerclass>
    <templateparamlist>
      <param>
        <type>typename DimensionTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Epick__d_1a3e10f48baee7efa1440b3805d508e976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Epick__d_1_1Construct__circumcenter__d" kindref="compound">Construct_circumcenter_d</ref></type>
        <definition>Construct_circumcenter_d CGAL::Epick_d&lt; DimensionTag &gt;::construct_circumcenter_d_object</definition>
        <argsstring>()</argsstring>
        <name>construct_circumcenter_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Epick_d.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Epick__d_1a5a0a6d8bba700df9f0d6f097cc98f05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Epick__d_1_1Compute__squared__radius__d" kindref="compound">Compute_squared_radius_d</ref></type>
        <definition>Compute_squared_radius_d CGAL::Epick_d&lt; DimensionTag &gt;::compute_squared_radius_d_object</definition>
        <argsstring>()</argsstring>
        <name>compute_squared_radius_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Epick_d.h" line="126" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A model for <computeroutput><ref refid="classKernel__d" kindref="compound">Kernel_d</ref></computeroutput> that uses Cartesian coordinates to represent the geometric objects. </para>    </briefdescription>
    <detaileddescription>
<para>This kernel is default constructible and copyable. It does not carry any state so it is possible to use objects created by one instance with functors created by another one.</para><para>This kernel supports construction of points from <computeroutput>double</computeroutput> Cartesian coordinates. It provides exact geometric predicates, but the geometric constructions are not guaranteed to be exact. The geometric predicates are made exact without sacrificing speed thanks to the use of filters.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DimensionTag</parametername>
</parameternamelist>
<parameterdescription>
<para>is a tag representing the dimension of the ambient Euclidean space. It may be either <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Dimension_tag</ref>&lt;d&gt;</computeroutput> where <computeroutput>d</computeroutput> is an integer or <computeroutput><ref refid="structCGAL_1_1Dynamic__dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Dynamic_dimension_tag</ref></computeroutput>. In the latter case, the dimension of the space is specified for each point when it is constructed, so it does not need to be known at compile-time.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only the interfaces specific to this class are listed below. Refer to the concepts for the rest.</para></simplesect>
<simplesect kind="attention"><para>Known bugs: the functor <computeroutput>Intersect_d</computeroutput> is not yet implemented. <computeroutput>Contained_in_affine_hull</computeroutput> assumes that the iterators refer to an affinely independent family. <computeroutput>Orientation_d</computeroutput> only works for points, not vectors.</para></simplesect>
<simplesect kind="attention"><para>Ancient compilers like gcc-4.2 or icc 14 are not supported, but gcc-4.4 and icc 15 work.</para></simplesect>
<simplesect kind="attention"><para>This kernel requires the <ref refid="installation_1thirdpartyEigen" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Eigen</ref> library.</para></simplesect>
<xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classKernel__d" kindref="compound">Kernel_d</ref></computeroutput> </para><para><computeroutput><ref refid="classDelaunayTriangulationTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation.tag">DelaunayTriangulationTraits</ref></computeroutput> </para><para><computeroutput><ref refid="classRegularTriangulationTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation.tag">RegularTriangulationTraits</ref></computeroutput> </para><para><computeroutput><ref refid="classSearchTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">SearchTraits</ref></computeroutput> </para><para><computeroutput><ref refid="classRangeSearchTraits" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Spatial_searching.tag">RangeSearchTraits</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Cartesian__d" kindref="compound">CGAL::Cartesian_d</ref>&lt;<ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Homogeneous__d" kindref="compound">CGAL::Homogeneous_d</ref>&lt;<ref refid="classRingNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Epick_d.h" line="49" column="1" bodyfile="CGAL/Epick_d.h" bodystart="49" bodyend="127"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Epick__d_1a5a0a6d8bba700df9f0d6f097cc98f05b" prot="public" virt="non-virtual"><scope>CGAL::Epick_d</scope><name>compute_squared_radius_d_object</name></member>
      <member refid="structCGAL_1_1Epick__d_1a3e10f48baee7efa1440b3805d508e976" prot="public" virt="non-virtual"><scope>CGAL::Epick_d</scope><name>construct_circumcenter_d_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
