<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="triangulation_data_structure_static_8cpp-example" kind="example">
    <compoundname>triangulation_data_structure_static.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Triangulation_data_structure.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/assertions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure&lt;CGAL::Dimension_tag&lt;7&gt;</ref><sp/>&gt;<sp/>TDS;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TDS<sp/>S;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>7<sp/>==<sp/>S.maximal_dimension()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>-2<sp/>==<sp/>S.current_dimension()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>S.is_valid()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;TDS::Vertex_handle&gt;<sp/>V(10);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>V[0]<sp/>=<sp/>S.insert_increase_dimension();<sp/></highlight><highlight class="comment">//insert<sp/>first<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>-1<sp/>==<sp/>S.current_dimension()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>5;<sp/>++i<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V[i]<sp/>=<sp/>S.insert_increase_dimension(V[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>6<sp/>vertices<sp/>have<sp/>created<sp/>a<sp/>triangulation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>4-dimensional<sp/>topological<sp/>sphere<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>boundary<sp/>of<sp/>a<sp/>five<sp/>dimensional<sp/>simplex).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>4<sp/>==<sp/>S.current_dimension()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>6<sp/>==<sp/>S.number_of_vertices()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>6<sp/>==<sp/>S.number_of_full_cells()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TDS::Full_cell_handle<sp/>c<sp/>=<sp/>V[5]-&gt;full_cell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>V[6]<sp/>=<sp/>S.insert_in_full_cell(c);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>cell<sp/>c<sp/>is<sp/>split<sp/>in<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>7<sp/>==<sp/>S.number_of_vertices()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>10<sp/>==<sp/>S.number_of_full_cells()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>V[3]-&gt;full_cell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TDS::Facet<sp/>ft(c,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>Facet<sp/>opposite<sp/>to<sp/>vertex<sp/>2<sp/>in<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>V[7]<sp/>=<sp/>S.insert_in_facet(ft);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>facet<sp/>ft<sp/>is<sp/>split<sp/>in<sp/>4<sp/>and<sp/>the<sp/>two<sp/>incident<sp/>cells<sp/>are<sp/>split<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>8<sp/>==<sp/>S.number_of_vertices()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>16<sp/>==<sp/>S.number_of_full_cells()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>V[3]-&gt;full_cell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TDS::Face<sp/>face(c);<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>meant<sp/>to<sp/>contain<sp/>the<sp/>edge<sp/>joining<sp/>vertices<sp/>2<sp/>and<sp/>4<sp/>of<sp/>full_cell<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>face.set_index(0,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>namely<sp/>vertex<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>face.set_index(1,<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>and<sp/>vertex<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>V[8]<sp/>=<sp/>S.insert_in_face(face);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>face<sp/>is<sp/>split<sp/>in<sp/>2,<sp/>and<sp/>all<sp/>incident<sp/>full<sp/>cells<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>S.is_valid()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TDS::Full_cell_handle<sp/>hole[2];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>hole[0]<sp/>=<sp/>V[8]-&gt;full_cell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>hole[1]<sp/>=<sp/>hole[0]-&gt;neighbor(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hole<sp/>is<sp/>made<sp/>of<sp/>two<sp/>adjacent<sp/>full<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ft<sp/>=<sp/>TDS::Facet(hole[0],<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>face<sp/>on<sp/>the<sp/>boundary<sp/>of<sp/>hole[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>V[9]<sp/>=<sp/>S.insert_in_hole(hole,<sp/>hole+2,<sp/>ft);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hole<sp/>is<sp/>triangulated<sp/>by<sp/>linking<sp/>a<sp/>new<sp/>vertex<sp/>to<sp/>its<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CGAL_assertion(<sp/>S.is_valid()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
