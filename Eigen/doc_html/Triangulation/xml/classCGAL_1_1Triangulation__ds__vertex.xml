<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Triangulation__ds__vertex" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation_ds_vertex</compoundname>
    <includes local="no">CGAL/Triangulation_ds_vertex.h</includes>
    <templateparamlist>
      <param>
        <type>typename TriangulationDataStructure_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__ds__vertex_1a5d7e7223639e0ca6323b3cea151f8057" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation_ds_vertex&lt; TriangulationDataStructure_ &gt;::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para></para><para>Implements the validity checks required by the concept <computeroutput><ref refid="classTriangulationDSVertex" kindref="compound">TriangulationDSVertex</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Does not implement additional checks.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_ds_vertex.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex" kindref="compound">Triangulation_ds_vertex</ref></computeroutput> serves as the default vertex template parameter in the class <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">Triangulation_data_structure</ref>&lt;Dimensionality, TriangulationDSVertex_, TriangulationDSFullCell_&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>This class does not contain any geometric information but only combinatorial (adjacency) information. Thus, if the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">Triangulation_data_structure</ref></computeroutput> is used as a parameter of a (embedded) <computeroutput><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref></computeroutput>, then its vertex template parameter has to fulfill additional geometric requirements, i.e., it has to be a model of the refined concept <computeroutput><ref refid="classTriangulationVertex" kindref="compound">TriangulationVertex</ref></computeroutput>.</para><para>This class can be used directly or can serve as a base to derive other classes with some additional attributes tuned for a specific application (a color for example).</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>&lt;tt&gt;TriangulationDataStructure_&lt;/tt&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> concept.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="models_1_models000003"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationDSVertex" kindref="compound">TriangulationDSVertex</ref></computeroutput></para></xrefdescription></xrefsect></para><para><heading level="2">Rebind Mechanism </heading>
</para><para>In case of derivation from that class, the nested class <computeroutput>Rebind_TDS</computeroutput> need to be provided in the derived class.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__full__cell" kindref="compound">Triangulation_ds_full_cell</ref>&lt;TriangulationDataStructure_, TriangulationDSFullCellStoragePolicy&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">Triangulation_data_structure</ref>&lt;Dimensionality, TriangulationDSVertex_, TriangulationDSFullCell_&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Triangulation_ds_vertex.h" line="37" column="1" bodyfile="CGAL/Triangulation_ds_vertex.h" bodystart="37" bodyend="53"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangulation__ds__vertex_1a5d7e7223639e0ca6323b3cea151f8057" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_ds_vertex</scope><name>is_valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
