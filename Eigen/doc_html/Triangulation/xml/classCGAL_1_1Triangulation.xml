<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Triangulation" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation</compoundname>
    <includes local="no">CGAL/Triangulation.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>TriangulationTraits_</declname>
        <defname>TriangulationTraits_</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>TriangulationDataStructure_</declname>
        <defname>TriangulationDataStructure_</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a352007b3356b48a186bb425e46556f6d" prot="public" static="no">
        <type>TriangulationTraits_</type>
        <definition>typedef TriangulationTraits_ CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Geom_traits</definition>
        <argsstring></argsstring>
        <name>Geom_traits</name>
        <briefdescription>
<para>Type for the model of the <computeroutput>TriangulationTraits_</computeroutput> concept. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="63" column="1" bodyfile="CGAL/Triangulation.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" prot="public" static="no">
        <type>TriangulationTraits_::Point_d</type>
        <definition>typedef TriangulationTraits_::Point_d CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
<para>A point in Euclidean space. </para>        </briefdescription>
        <detaileddescription>
<para>Note that in the context of a <computeroutput><ref refid="classCGAL_1_1Regular__triangulation" kindref="compound">Regular_triangulation</ref></computeroutput> class (which derives from this class), <computeroutput>TriangulationTraits_::Point_d</computeroutput> is a weighted point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="70" column="1" bodyfile="CGAL/Triangulation.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a147923c9862c050a130509b7f206cf64" prot="public" static="no">
        <type>TriangulationTraits_::Dimension</type>
        <definition>typedef TriangulationTraits_::Dimension CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Maximal_dimension</definition>
        <argsstring></argsstring>
        <name>Maximal_dimension</name>
        <briefdescription>
<para>This indicates whether the maximal dimension is static (i.e. if the type of <computeroutput>Maximal_dimension</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Dimension_tag</ref>&lt;int dim&gt;</computeroutput>) or dynamic (i.e. if the type of <computeroutput>Maximal_dimension</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Dynamic__dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Dynamic_dimension_tag</ref></computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>In the latter case, the <computeroutput>dim</computeroutput> parameter passed to the constructor of the class is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="80" column="1" bodyfile="CGAL/Triangulation.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1af5bb59ee9b23d16ae5c1a8beac52cb2b" prot="public" static="no">
        <type>TriangulationDataStructure_</type>
        <definition>typedef TriangulationDataStructure_ CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Triangulation_ds</definition>
        <argsstring></argsstring>
        <name>Triangulation_ds</name>
        <briefdescription>
<para>The second template parameter: the triangulation data structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="85" column="1" bodyfile="CGAL/Triangulation.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a105744e8ed756cd79c689fac0cc4c169" prot="public" static="no">
        <type>TriangulationDataStructure_::Vertex</type>
        <definition>typedef TriangulationDataStructure_::Vertex CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classTriangulationVertex" kindref="compound">TriangulationVertex</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="90" column="1" bodyfile="CGAL/Triangulation.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1ac4d235ca89ed6f3ff64f4a3faf015eea" prot="public" static="no">
        <type>TriangulationDataStructure_::Full_cell</type>
        <definition>typedef TriangulationDataStructure_::Full_cell CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Full_cell</definition>
        <argsstring></argsstring>
        <name>Full_cell</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classTriangulationFullCell" kindref="compound">TriangulationFullCell</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="96" column="1" bodyfile="CGAL/Triangulation.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" prot="public" static="no">
        <type>TriangulationDataStructure_::Facet</type>
        <definition>typedef TriangulationDataStructure_::Facet CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Facet</definition>
        <argsstring></argsstring>
        <name>Facet</name>
        <briefdescription>
<para>The facet class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="102" column="1" bodyfile="CGAL/Triangulation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" prot="public" static="no">
        <type>TriangulationDataStructure_::Face</type>
        <definition>typedef TriangulationDataStructure_::Face CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Face</definition>
        <argsstring></argsstring>
        <name>Face</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classTriangulationDSFace" kindref="compound">TriangulationDSFace</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="107" column="1" bodyfile="CGAL/Triangulation.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Handles and Iterators</header>
      <description><para>The vertices and full cells of triangulations are accessed through handles and iterators.</para><para>A handle is a model of the <computeroutput><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref></computeroutput> concept, and supports the two dereference operators: <computeroutput>operator*</computeroutput> and <computeroutput>operator-&gt;</computeroutput>. Iterators are bidirectional and non-mutable. They are convertible to the corresponding handles, thus the user can pass them directly as arguments to the functions. All handles are model of <computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput> and <computeroutput><ref refid="classHashable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">Hashable</ref></computeroutput>, that is they can be used as keys in containers such as <computeroutput>std::map</computeroutput> and <computeroutput>boost::unordered_map</computeroutput>. </para></description>
      <memberdef kind="enum" id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1" prot="public" static="no">
        <name>Locate_type</name>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1ade1e70cfdf4d2dbe34d52a17e01e6d91" prot="public">
          <name>ON_VERTEX</name>
          <initializer>=0</initializer>
          <briefdescription>
<para>when the located point coincides with a vertex of the triangulation </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a4fb921e49e10cc8c13ae0af39563098e" prot="public">
          <name>IN_FACE</name>
          <briefdescription>
<para>when the point is in the interior of a face of dimension equal or less than <computeroutput><ref refid="classCGAL_1_1Triangulation_1a2183e2d5583c4a339b6ddf40c9acc781" kindref="member">maximal_dimension()</ref></computeroutput> - 2 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1ae2f2769cedcfab4ec0a04e643951bbde" prot="public">
          <name>IN_FACET</name>
          <briefdescription>
<para>when the point is in the interior of a facet </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a8d6394b632b0117d045db08d06fac769" prot="public">
          <name>IN_FULL_CELL</name>
          <briefdescription>
<para>when the point is in the interior of a full cell </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a132f39ec6fbc6497258e6b76488c5676" prot="public">
          <name>OUTSIDE_CONVEX_HULL</name>
          <briefdescription>
<para>when the point is outside the convex hull but in the affine hull of the current triangulation </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a4fc81f6eab064619eab117d842cb6cad" prot="public">
          <name>OUTSIDE_AFFINE_HULL</name>
          <briefdescription>
<para>when the point is outside the affine hull of the current triangulation. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Used by <computeroutput><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref></computeroutput> to specify which case occurs when locating a point in the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="220" column="1" bodyfile="CGAL/Triangulation.h" bodystart="220" bodyend="226"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" prot="public" static="no">
        <type>TriangulationDataStructure_::Vertex_handle</type>
        <definition>typedef TriangulationDataStructure_::Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
<para>handle to a a vertex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="128" column="1" bodyfile="CGAL/Triangulation.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a4d0d07682df8287266b3543963c7491f" prot="public" static="no">
        <type>TriangulationDataStructure_::Vertex_const_handle</type>
        <definition>typedef TriangulationDataStructure_::Vertex_const_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Vertex_const_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_const_handle</name>
        <briefdescription>
<para>const handle to a a vertex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="134" column="1" bodyfile="CGAL/Triangulation.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a4171657a4bb334b0d4c940f3b724c332" prot="public" static="no">
        <type>TriangulationDataStructure_::Vertex_iterator</type>
        <definition>typedef TriangulationDataStructure_::Vertex_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_iterator</name>
        <briefdescription>
<para>iterator over all vertices (including the infinite one) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="140" column="1" bodyfile="CGAL/Triangulation.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a641484a12d5a795053c827142ca2f218" prot="public" static="no">
        <type>TriangulationDataStructure_::Vertex_const_iterator</type>
        <definition>typedef TriangulationDataStructure_::Vertex_const_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Vertex_const_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_const_iterator</name>
        <briefdescription>
<para>const iterator over all vertices (including the infinite one) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="146" column="1" bodyfile="CGAL/Triangulation.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a6097653102d5cfe0df39ddc4b1742a5e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Finite_vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_vertex_iterator</name>
        <briefdescription>
<para>iterator over finite vertices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="151" column="1" bodyfile="CGAL/Triangulation.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1aab014ba0508c8d17232452acbd3e8a7c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Finite_vertex_const_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_vertex_const_iterator</name>
        <briefdescription>
<para>const iterator over finite vertices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="156" column="1" bodyfile="CGAL/Triangulation.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" prot="public" static="no">
        <type>TriangulationDataStructure_::Full_cell_handle</type>
        <definition>typedef TriangulationDataStructure_::Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Full_cell_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_handle</name>
        <briefdescription>
<para>handle to a full cell </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="162" column="1" bodyfile="CGAL/Triangulation.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a1af144e869efba1cb61453b0202f5d3f" prot="public" static="no">
        <type>TriangulationDataStructure_::Full_cell_const_handle</type>
        <definition>typedef TriangulationDataStructure_::Full_cell_const_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Full_cell_const_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_const_handle</name>
        <briefdescription>
<para>const handle to a full cell </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="168" column="1" bodyfile="CGAL/Triangulation.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a912c8764d774b853ee4965418ab39840" prot="public" static="no">
        <type>TriangulationDataStructure_::Full_cell_iterator</type>
        <definition>typedef TriangulationDataStructure_::Full_cell_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Full_cell_iterator</definition>
        <argsstring></argsstring>
        <name>Full_cell_iterator</name>
        <briefdescription>
<para>iterator over all full cells (including the infinite ones) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="175" column="1" bodyfile="CGAL/Triangulation.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1abf5d59502213cf9887e4befe7ad66da6" prot="public" static="no">
        <type>TriangulationDataStructure_::Full_cell_const_iterator</type>
        <definition>typedef TriangulationDataStructure_::Full_cell_const_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Full_cell_const_iterator</definition>
        <argsstring></argsstring>
        <name>Full_cell_const_iterator</name>
        <briefdescription>
<para>const iterator over all full cells (including the infinite ones) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="182" column="1" bodyfile="CGAL/Triangulation.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a81ba3b7bf860344f1e9caca53e6d5cd2" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Finite_full_cell_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_full_cell_iterator</name>
        <briefdescription>
<para>iterator over finite full cells </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="187" column="1" bodyfile="CGAL/Triangulation.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a8a675a9dadf7bd7d511dc4ba2c8b8e8b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Finite_full_cell_const_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_full_cell_const_iterator</name>
        <briefdescription>
<para>const iterator over finite full cells </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="192" column="1" bodyfile="CGAL/Triangulation.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1ab327fb6e008bcb7b385fd0c2bfdbdf76" prot="public" static="no">
        <type>TriangulationDataStructure_::Facet_iterator</type>
        <definition>typedef TriangulationDataStructure_::Facet_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Facet_iterator</definition>
        <argsstring></argsstring>
        <name>Facet_iterator</name>
        <briefdescription>
<para>iterator over all facets (including the infinite ones) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="198" column="1" bodyfile="CGAL/Triangulation.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a6c33ee8a64012e49586c529f39757e32" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Finite_facet_iterator</definition>
        <argsstring></argsstring>
        <name>Finite_facet_iterator</name>
        <briefdescription>
<para>iterator over finite facets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="203" column="1" bodyfile="CGAL/Triangulation.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" prot="public" static="no">
        <type>TriangulationDataStructure_::size_type</type>
        <definition>typedef TriangulationDataStructure_::size_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>size type (an unsigned integral type) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="208" column="1" bodyfile="CGAL/Triangulation.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation_1a94c8cff5d58de158d6035a597e208234" prot="public" static="no">
        <type>TriangulationDataStructure_::difference_type</type>
        <definition>typedef TriangulationDataStructure_::difference_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>difference type (a signed integral type) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="214" column="1" bodyfile="CGAL/Triangulation.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1af7c419089770b5f8f8f695ddc4bae647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Triangulation</definition>
        <argsstring>(int dim, const Geom_traits &amp;gt=Geom_traits())</argsstring>
        <name>Triangulation</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a352007b3356b48a186bb425e46556f6d" kindref="member">Geom_traits</ref> &amp;</type>
          <declname>gt</declname>
          <defval><ref refid="classCGAL_1_1Triangulation_1a352007b3356b48a186bb425e46556f6d" kindref="member">Geom_traits</ref>()</defval>
        </param>
        <briefdescription>
<para>Instantiates a triangulation with one vertex (the vertex at infinity). </para>        </briefdescription>
        <detaileddescription>
<para>See the description of the nested type <computeroutput>Maximal_dimension</computeroutput> above for an explanation of the use of the parameter <computeroutput>dim</computeroutput>. The triangulation stores a copy of the geometric traits <computeroutput>gt</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1aab75ff276e6fce6c1b26bcdcdaab9fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::Triangulation</definition>
        <argsstring>(const Triangulation &amp;t2)</argsstring>
        <name>Triangulation</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>The copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="244" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1ac0d79b01b2d90dcafa2f72c6dec96da0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Triangulation_1af5bb59ee9b23d16ae5c1a8beac52cb2b" kindref="member">Triangulation_ds</ref> &amp;</type>
        <definition>const Triangulation_ds&amp; CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::tds</definition>
        <argsstring>() const</argsstring>
        <name>tds</name>
        <briefdescription>
<para>Returns a const reference to the underlying triangulation data structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a3567f6691efc7de6d8cf242fdcd71e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1af5bb59ee9b23d16ae5c1a8beac52cb2b" kindref="member">Triangulation_ds</ref> &amp;</type>
        <definition>Triangulation_ds&amp; CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::tds</definition>
        <argsstring>()</argsstring>
        <name>tds</name>
        <briefdescription>
<para></para><para>Returns a non-const reference to the underlying triangulation data structure. </para>        </briefdescription>
        <detaileddescription>
<para> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a37330515770a3ceff69d7003622f0e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Triangulation_1a352007b3356b48a186bb425e46556f6d" kindref="member">Geom_traits</ref> &amp;</type>
        <definition>const Geom_traits&amp; CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::geom_traits</definition>
        <argsstring>() const</argsstring>
        <name>geom_traits</name>
        <briefdescription>
<para>Returns a const reference to the geometric traits instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a2183e2d5583c4a339b6ddf40c9acc781" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::maximal_dimension</definition>
        <argsstring>() const</argsstring>
        <name>maximal_dimension</name>
        <briefdescription>
<para>Returns the maximal dimension of the full dimensional cells that can be stored in the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::current_dimension</definition>
        <argsstring>() const</argsstring>
        <name>current_dimension</name>
        <briefdescription>
<para>Returns the dimension of the triangulation (as an embedded manifold). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a780dd7423be3005779871317919413a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the triangulation has no finite vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1afe1fe35422184d562df4562317bcbf92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::number_of_vertices</definition>
        <argsstring>() const</argsstring>
        <name>number_of_vertices</name>
        <briefdescription>
<para>Returns the number of finite vertices in the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a48ce908ceee25383948a7042fb51762f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::number_of_full_cells</definition>
        <argsstring>() const</argsstring>
        <name>number_of_full_cells</name>
        <briefdescription>
<para>Returns the number of full cells of maximal dimension in the triangulation (full cells incident to the vertex at infinity are counted). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a44e3585e1b8fa31b718310a3f32a92af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::infinite_vertex</definition>
        <argsstring>() const</argsstring>
        <name>infinite_vertex</name>
        <briefdescription>
<para>Returns a handle to the vertex at infinity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1abba18bc51e982b4fb7d56fc1b894dfbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::infinite_full_cell</definition>
        <argsstring>() const</argsstring>
        <name>infinite_full_cell</name>
        <briefdescription>
<para>Returns a handle to some full cell incident to the vertex at infinity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="305" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Non-Constant-Time Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a9ead5898e253681887633542f6f2f7ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::number_of_finite_full_cells</definition>
        <argsstring>() const</argsstring>
        <name>number_of_finite_full_cells</name>
        <briefdescription>
<para>Returns the number of full cells of maximal dimension that are not incident to the vertex at infinity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="316" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tests for Finite and Infinite Elements</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1abc324aac5057a1d4763c1706200419c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::is_infinite</definition>
        <argsstring>(Vertex_handle v) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if the vertex <computeroutput>v</computeroutput> is the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a8213719b293536a01b670379ca3aba28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::is_infinite</definition>
        <argsstring>(Full_cell_handle c) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if <computeroutput>c</computeroutput> is incident to the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a22a5005903613be10d59df6f1465afc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::is_infinite</definition>
        <argsstring>(const Facet &amp;ft) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if facet <computeroutput>ft</computeroutput> is incident to the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a545a8951fa681312943a901978537018" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::is_infinite</definition>
        <argsstring>(const Face &amp;f) const</argsstring>
        <name>is_infinite</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if the face <computeroutput>f</computeroutput> is incident to the infinite vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="346" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Faces and Facets</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a9dd8ae15c2aabba82c9f2c62a8a80acc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::full_cell</definition>
        <argsstring>(const Facet &amp;f) const</argsstring>
        <name>full_cell</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns a full cell containing the facet <computeroutput>f</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1ae7cc3a139eb04cd9c71a97460155cb38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::index_of_covertex</definition>
        <argsstring>(const Facet &amp;f) const</argsstring>
        <name>index_of_covertex</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns the index of the vertex of the full cell <computeroutput>c=tr.full_cell(f)</computeroutput> which does not belong to <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="362" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Triangulation Traversal</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a800fed6555205ba8985bdb98917676df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a4171657a4bb334b0d4c940f3b724c332" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::vertices_begin</definition>
        <argsstring>()</argsstring>
        <name>vertices_begin</name>
        <briefdescription>
<para>The first vertex of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a02ab969e86936929273eb0a757f0f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a4171657a4bb334b0d4c940f3b724c332" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::vertices_end</definition>
        <argsstring>()</argsstring>
        <name>vertices_end</name>
        <briefdescription>
<para>The beyond vertex of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a3d58f149d9280456218eac0f6aab9c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a6097653102d5cfe0df39ddc4b1742a5e" kindref="member">Finite_vertex_iterator</ref></type>
        <definition>Finite_vertex_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_vertices_begin</definition>
        <argsstring>()</argsstring>
        <name>finite_vertices_begin</name>
        <briefdescription>
<para>The first finite vertex of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1abb2c1c00d7c359c364fb7f22ed65732b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a6097653102d5cfe0df39ddc4b1742a5e" kindref="member">Finite_vertex_iterator</ref></type>
        <definition>Finite_vertex_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_vertices_end</definition>
        <argsstring>()</argsstring>
        <name>finite_vertices_end</name>
        <briefdescription>
<para>The beyond finite vertex of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a04cdf99328b3511282ac62a7420df7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a912c8764d774b853ee4965418ab39840" kindref="member">Full_cell_iterator</ref></type>
        <definition>Full_cell_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::full_cells_begin</definition>
        <argsstring>()</argsstring>
        <name>full_cells_begin</name>
        <briefdescription>
<para>The first full cell of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a10e44b74801a177b62bf7c2fda2be226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a912c8764d774b853ee4965418ab39840" kindref="member">Full_cell_iterator</ref></type>
        <definition>Full_cell_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::full_cells_end</definition>
        <argsstring>()</argsstring>
        <name>full_cells_end</name>
        <briefdescription>
<para>The beyond full cell of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1afc03fd650523922c05332f3649921a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a81ba3b7bf860344f1e9caca53e6d5cd2" kindref="member">Finite_full_cell_iterator</ref></type>
        <definition>Finite_full_cell_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_full_cells_begin</definition>
        <argsstring>()</argsstring>
        <name>finite_full_cells_begin</name>
        <briefdescription>
<para>The first finite full cell of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a59e47b3a229f0a323da15fc6d985100d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a81ba3b7bf860344f1e9caca53e6d5cd2" kindref="member">Finite_full_cell_iterator</ref></type>
        <definition>Finite_full_cell_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_full_cells_end</definition>
        <argsstring>()</argsstring>
        <name>finite_full_cells_end</name>
        <briefdescription>
<para>The beyond finite full cell of <computeroutput>tr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a12dbb76f5fa83a360dbef6d3ddfbc388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1ab327fb6e008bcb7b385fd0c2bfdbdf76" kindref="member">Facet_iterator</ref></type>
        <definition>Facet_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::facets_begin</definition>
        <argsstring>()</argsstring>
        <name>facets_begin</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the first facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1aad6830f68c30647e7ef21af16483194e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1ab327fb6e008bcb7b385fd0c2bfdbdf76" kindref="member">Facet_iterator</ref></type>
        <definition>Facet_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::facets_end</definition>
        <argsstring>()</argsstring>
        <name>facets_end</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the beyond facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a9166332ea17e26fd5fdb1220478757fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a6c33ee8a64012e49586c529f39757e32" kindref="member">Finite_facet_iterator</ref></type>
        <definition>Finite_facet_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_facets_begin</definition>
        <argsstring>()</argsstring>
        <name>finite_facets_begin</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the first finite facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a0d991b81fa64caab32542b5aa1712eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a6c33ee8a64012e49586c529f39757e32" kindref="member">Finite_facet_iterator</ref></type>
        <definition>Finite_facet_iterator CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::finite_facets_end</definition>
        <argsstring>()</argsstring>
        <name>finite_facets_end</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the beyond finite facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="427" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Point Location</header>
      <description><para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref></computeroutput> provides methods to locate a query point with respect to the triangulation: </para></description>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1ab8ef50362a2530d69deb3663fa9147f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::locate</definition>
        <argsstring>(const Point &amp;query, Full_cell_const_handle hint=Full_cell_handle()) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a1af144e869efba1cb61453b0202f5d3f" kindref="member">Full_cell_const_handle</ref></type>
          <declname>hint</declname>
          <defval><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref>()</defval>
        </param>
        <briefdescription>
<para>The optional argument <computeroutput>hint</computeroutput> is used as a starting place for the search. </para>        </briefdescription>
        <detaileddescription>
<para>If the <computeroutput>query</computeroutput> point lies outside the affine hull of the points (which can happen when <computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" kindref="member">current_dimension()</ref> &lt;</computeroutput> <computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a2183e2d5583c4a339b6ddf40c9acc781" kindref="member">maximal_dimension()</ref></computeroutput>) or if there is no finite vertex yet in the triangulation, then <emphasis>locate</emphasis> returns a default constructed <computeroutput><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle()</ref></computeroutput>.</para><para>If the point <computeroutput>query</computeroutput> lies in the interior of a bounded (finite) full cell of <computeroutput>tr</computeroutput>, the latter full cell is returned.</para><para>If <computeroutput>query</computeroutput> lies on the boundary of some finite full cells, one of the cells is returned.</para><para>Let <formula id="9">$ d=$</formula><computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" kindref="member">current_dimension()</ref></computeroutput>. If the point <computeroutput>query</computeroutput> lies outside the convex hull of the points, an infinite full cell with vertices <formula id="10">$ \{ p_1, p_2, \ldots, p_d, \infty\}$</formula> is returned such that the full cell <formula id="11">$ (p_1, p_2, \ldots, p_d, query)$</formula> is positively oriented (the rest of the triangulation lies on the other side of facet <formula id="12">$ (p_1, p_2, \ldots, p_d)$</formula>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a46b11884eca037fc82e4bc0121a3518a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::locate</definition>
        <argsstring>(const Point &amp;query, Vertex_handle hint) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Same as above but <computeroutput>hint</computeroutput> is a vertex and not a full cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1af9ea0ceb6cc5c814e4ed63738396a6b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::locate</definition>
        <argsstring>(const Point &amp;query, Locate_type &amp;loc_type, Face &amp;f, Facet &amp;ft, Full_cell_handle hint=Full_cell_handle()) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1" kindref="member">Locate_type</ref> &amp;</type>
          <declname>loc_type</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>hint</declname>
          <defval><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref>()</defval>
        </param>
        <briefdescription>
<para>The optional argument <computeroutput>hint</computeroutput> is used as a starting place for the search. </para>        </briefdescription>
        <detaileddescription>
<para>If the <computeroutput>query</computeroutput> point lies outside the affine hull of the points (which can happen when <computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" kindref="member">current_dimension()</ref> &lt;</computeroutput> <computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a2183e2d5583c4a339b6ddf40c9acc781" kindref="member">maximal_dimension()</ref></computeroutput>) or if there is no finite vertex yet in the triangulation, then <computeroutput>loc_type</computeroutput> is set to <computeroutput>OUTSIDE_AFFINE_HULL</computeroutput>, and <emphasis>locate</emphasis> returns <computeroutput><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle()</ref></computeroutput>. If the <computeroutput>query</computeroutput> point lies inside the affine hull of the points, the function finds the <formula id="13">$ k$</formula>-face that contains <computeroutput>query</computeroutput> in its relative interior (if the <formula id="13">$ k$</formula>-face is finite, it is unique) and the result is returned as follows:</para><para><variablelist>
<varlistentry><term><bold> <formula id="14">$ k=0$</formula></bold></term></varlistentry>
<listitem><para><computeroutput>loc_type</computeroutput> is set to <computeroutput>ON_VERTEX</computeroutput>, <computeroutput>f</computeroutput> is set to the vertex <computeroutput>v</computeroutput> the <computeroutput>query</computeroutput> lies on and a full cell having <computeroutput>v</computeroutput> as a vertex is returned. </para></listitem>
<varlistentry><term><bold> <formula id="15">$ 0&lt;k&lt;$</formula><computeroutput>c.current_dimension()-1</computeroutput></bold></term></varlistentry>
<listitem><para><computeroutput>loc_type</computeroutput> is set to <computeroutput>IN_FACE</computeroutput>, <computeroutput>f</computeroutput> is set to the unique finite face containing the <computeroutput>query</computeroutput> point. A full cell having <computeroutput>f</computeroutput> on its boundary is returned. </para></listitem>
<varlistentry><term><bold> <formula id="16">$ k=$</formula><computeroutput>c.current_dimension()-1</computeroutput></bold></term></varlistentry>
<listitem><para><computeroutput>loc_type</computeroutput> is set to <computeroutput>IN_FACET</computeroutput>, <computeroutput>ft</computeroutput> is set to one of the two representation of the finite facet containing the <computeroutput>query</computeroutput> point. The full cell of <computeroutput>ft</computeroutput> is returned. </para></listitem>
<varlistentry><term><bold> <formula id="16">$ k=$</formula><computeroutput>c.current_dimension()</computeroutput></bold></term></varlistentry>
<listitem><para>If the <computeroutput>query</computeroutput> point lies <emphasis>outside</emphasis> the convex hull of the points in the triangulation, then <computeroutput>loc_type</computeroutput> is set to <computeroutput>OUTSIDE_CONVEX_HULL</computeroutput> and a full cell is returned as in the <computeroutput>locate</computeroutput> method above. If the <computeroutput>query</computeroutput> point lies <emphasis>inside</emphasis> the convex hull of the points in the triangulation, then <computeroutput>loc_type</computeroutput> is set to <computeroutput>IN_FULL_CELL</computeroutput> and the unique full cell containing the <computeroutput>query</computeroutput> point is returned. </para></listitem>
</variablelist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a6e71f40009edee950c1c87258a3aee5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::locate</definition>
        <argsstring>(const Point &amp;query, Locate_type &amp;loc_type, Face &amp;f, Vertex_handle hint) const</argsstring>
        <name>locate</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1" kindref="member">Locate_type</ref> &amp;</type>
          <declname>loc_type</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Same as above but <computeroutput>hint</computeroutput>, the starting place for the search, is a vertex. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter <computeroutput>hint</computeroutput> is ignored if it is a default constructed <computeroutput><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle()</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="508" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Removal</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a2facc61faaa2cec2ddfb750f72d81bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::collapse_face</definition>
        <argsstring>(const Point &amp;p, const Face &amp;f)</argsstring>
        <name>collapse_face</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Contracts the <computeroutput>Face f</computeroutput> to a single vertex at position <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle to that vertex.</para><para><simplesect kind="pre"><para>The boundary of the union of full cells incident to <computeroutput>f</computeroutput> must be a triangulation of a sphere of dimension <computeroutput>tr</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" kindref="member">current_dimension()</ref></computeroutput>). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="523" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Point Insertion</header>
      <description><para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref></computeroutput> provides functions to insert a given point in the triangulation: </para></description>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1af88e208ad33fae3c7dffa999ad2631da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert</definition>
        <argsstring>(ForwardIterator s, ForwardIterator e)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Inserts the points found in range <computeroutput>[s,e)</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the number of vertices actually inserted. (If several vertices share the same position in space, only the vertex that was actually inserted is counted.) <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with the value type <computeroutput>Point</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a2a6a11038170429d97260391d0acae8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert</definition>
        <argsstring>(const Point &amp;p, Full_cell_handle hint=Full_cell_handle())</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>hint</declname>
          <defval><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref>()</defval>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a <computeroutput>Vertex_handle</computeroutput> to the vertex of the triangulation with position <computeroutput>p</computeroutput>. Prior to the actual insertion, <computeroutput>p</computeroutput> is located in the triangulation; <computeroutput>hint</computeroutput> is used as a starting place for locating <computeroutput>p</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a79e945a3e013ddcdafb14bd5967a18ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert</definition>
        <argsstring>(const Point &amp;p, Vertex_handle hint)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Same as above but uses a vertex <computeroutput>hint</computeroutput> as the starting place for the search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1ac98183b1c784328d4280ec9870398831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert</definition>
        <argsstring>(const Point &amp;p, Locate_type loc_type, Face &amp;f, Facet &amp;ft, Full_cell_handle c)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1" kindref="member">Locate_type</ref></type>
          <declname>loc_type</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> into the triangulation and returns a handle to the <computeroutput>Vertex</computeroutput> at that position. </para>        </briefdescription>
        <detaileddescription>
<para>The action taken depends on the value of <computeroutput>loc_type</computeroutput>:</para><para><variablelist>
<varlistentry><term><bold><computeroutput>ON_VERTEX</computeroutput></bold></term></varlistentry>
<listitem><para>The point of the p<computeroutput>Vertex</computeroutput> described by <computeroutput>f</computeroutput> is set to <computeroutput>p</computeroutput>. </para></listitem>
<varlistentry><term><bold><computeroutput>IN_FACE</computeroutput></bold></term></varlistentry>
<listitem><para>The point <computeroutput>p</computeroutput> is inserted in the <computeroutput>Face f</computeroutput>. </para></listitem>
<varlistentry><term><bold><computeroutput>IN_FACET</computeroutput></bold></term></varlistentry>
<listitem><para>The point <computeroutput>p</computeroutput> is inserted in the <computeroutput>Facet ft</computeroutput>. </para></listitem>
<varlistentry><term><bold>Anything else</bold></term></varlistentry>
<listitem><para>The point <computeroutput>p</computeroutput> is inserted in the triangulation according to the value of <computeroutput>loc_type</computeroutput>, using the full cell <computeroutput>c</computeroutput>. </para></listitem>
</variablelist>
</para><para>This method is used internally by the other <computeroutput><ref refid="classCGAL_1_1Triangulation_1af88e208ad33fae3c7dffa999ad2631da" kindref="member">insert()</ref></computeroutput> methods. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a2b49b3f3dead836d3bea31d495b89d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_in_hole</definition>
        <argsstring>(const Point &amp;p, ForwardIterator s, ForwardIterator e, const Facet &amp;ft, OutputIterator out)</argsstring>
        <name>insert_in_hole</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Removes the full cells in the range <formula id="17">$ C=$</formula><computeroutput>[s, e)</computeroutput>, inserts a vertex at position <computeroutput>p</computeroutput> and fills the hole by connecting each face of the boundary to <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>A <computeroutput>Vertex_handle</computeroutput> to the new <computeroutput>Vertex</computeroutput> is returned. The facet <computeroutput>ft</computeroutput> must lie on the boundary of <formula id="18">$ C$</formula> and its defining full cell, <computeroutput>tr</computeroutput>.<computeroutput>full_cell(ft)</computeroutput> must lie inside <formula id="18">$ C$</formula>. Handles to the newly created full cells are output in the <computeroutput>out</computeroutput> output iterator. <simplesect kind="pre"><para><formula id="19">$C$</formula> must be a topological ball, must contain <computeroutput>p</computeroutput> in its interior and must not contain any vertex of the triangulation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a27d7dfc1989bb1bddf856da77bc2ff3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_in_hole</definition>
        <argsstring>(const Point &amp;p, ForwardIterator s, ForwardIterator e, const Facet &amp;ft)</argsstring>
        <name>insert_in_hole</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
<para>Same as above, but the newly created full cells are not retrieved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a7bba92f7964a3b0a9c513c5a31504fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_in_face</definition>
        <argsstring>(const Point &amp;p, const Face &amp;f)</argsstring>
        <name>insert_in_face</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> must lie in the relative interior of <computeroutput>f</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a43bf60f8f5ce31f2073ae691b7d275bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_in_facet</definition>
        <argsstring>(const Point &amp;p, const Facet &amp;ft)</argsstring>
        <name>insert_in_facet</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> must lie in the relative interior of <computeroutput>ft</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a54643ea790cd66d67e56b33c40530789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_in_full_cell</definition>
        <argsstring>(const Point &amp;p, Full_cell_handle c)</argsstring>
        <name>insert_in_full_cell</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> must lie in the interior of <computeroutput>c</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1ad4c6fa10fc9b75f462a8514834e27d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_outside_convex_hull</definition>
        <argsstring>(const Point &amp;, Full_cell_handle c)</argsstring>
        <name>insert_outside_convex_hull</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> must lie outside the convex hull of <computeroutput>tr</computeroutput>. The half-space defined by the infinite full cell <computeroutput>c</computeroutput> must contain <computeroutput>p</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a4f168d5d6798c12b20230d13c36d3367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::insert_outside_affine_hull</definition>
        <argsstring>(const Point &amp;)</argsstring>
        <name>insert_outside_affine_hull</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" kindref="member">Point</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Inserts point <computeroutput>p</computeroutput> in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> must lie outside the affine hull of <computeroutput>tr</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="625" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a24225e8b6a8193d4d2ec2b48f2da0248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Partially checks whether <computeroutput>tr</computeroutput> is a triangulation. This function returns <computeroutput>true</computeroutput> if the combinatorial triangulation data structure&apos;s <computeroutput><ref refid="classCGAL_1_1Triangulation_1a24225e8b6a8193d4d2ec2b48f2da0248" kindref="member">is_valid()</ref></computeroutput> test returns <computeroutput>true</computeroutput> and if some geometric tests are passed with success. It is checked that the orientation of each finite full cell is positive and that the orientation of each infinite full cell is consistent with their finite adjacent full cells. The <computeroutput>verbose</computeroutput> parameter is not used.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a62eda072a392c3e3837dfe4af91ee57f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::are_incident_full_cells_valid</definition>
        <argsstring>(Vertex_const_handle v, bool verbose=false) const</argsstring>
        <name>are_incident_full_cells_valid</name>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation_1a4d0d07682df8287266b3543963c7491f" kindref="member">Vertex_const_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Returns <computeroutput>true</computeroutput> if and only if all finite full cells incident to <computeroutput>v</computeroutput> have positive orientation. The <computeroutput>verbose</computeroutput> parameter is not used.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="654" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Input/Output</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a1bd74fdea9e3943ac096d9d2a0be5163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Triangulation &amp;t)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Reads the underlying combinatorial triangulation from <computeroutput>is</computeroutput> by calling the corresponding input operator of the triangulation data structure class (note that the infinite vertex is numbered 0), and the non-combinatorial information by calling the corresponding input operators of the vertex and the full cell classes (such as point coordinates), which are provided by overloading the stream operators of the vertex and full cell types. </para>        </briefdescription>
        <detaileddescription>
<para>Assigns the resulting triangulation to <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="672" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation_1a6480b2bbfac9a8cff2b928fce9b1f5d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Triangulation &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Writes the triangulation <computeroutput>t</computeroutput> into <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation.h" line="677" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
    <briefdescription>
<para>This class implements triangulations of point sets in dimension <formula id="6">$ d $</formula>. </para>    </briefdescription>
    <detaileddescription>
<para>The triangulation covers the convex hull of the input points (the embedded vertices of the triangulation).</para><para>To store this triangulation in a triangulation data structure, we turn the set of its faces into a topological sphere by adding a fictitious vertex, called the <emphasis>infinite vertex</emphasis>, as well as infinite simplices incident to boundary faces of the convex hull. Each infinite <formula id="7">$ i$</formula>-simplex is incident to the infinite vertex and to an <formula id="8">$ (i-1)$</formula>-simplex of the convex hull boundary.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangulationTraits_</parametername>
</parameternamelist>
<parameterdescription>
<para>is the geometric traits class that provides the geometric types and predicates needed by triangulations. <computeroutput>TriangulationTraits_</computeroutput> must be a model of the concept <computeroutput><ref refid="classTriangulationTraits" kindref="compound">TriangulationTraits</ref></computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangulationDataStructure_</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. This model is used to store the faces of the triangulation. The parameter <computeroutput>TriangulationDataStructure_</computeroutput> defaults to <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">Triangulation_data_structure</ref></computeroutput> whose template parameters are instantiated as follows: <itemizedlist>
<listitem>
<para><computeroutput>TriangulationTraits_::Dimension</computeroutput> </para></listitem>
<listitem>
<para><computeroutput><ref refid="classCGAL_1_1Triangulation__vertex" kindref="compound">Triangulation_vertex</ref>&lt;TriangulationTraits_&gt;</computeroutput> </para></listitem>
<listitem>
<para><computeroutput><ref refid="classCGAL_1_1Triangulation__full__cell" kindref="compound">Triangulation_full_cell</ref>&lt;TriangulationTraits_&gt;</computeroutput>. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
The triangulation deduces its maximal dimension from the type <computeroutput>TriangulationTraits_::Dimension</computeroutput>. This dimension has to match the dimension returned by <computeroutput>TriangulationDataStructure_::maximal_dimension()</computeroutput>.</para><para><heading level="2">Input/Output </heading>
</para><para>The information in the <computeroutput>iostream</computeroutput> is: the current dimension, the number of finite vertices, the non-combinatorial information about vertices (point, <emphasis>etc.</emphasis>), the number of full cells, the indices of the vertices of each full cell, plus the non-combinatorial information about each full cell, then the indices of the neighbors of each full cell, where the index corresponds to the preceding list of full cells.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">Triangulation_data_structure</ref>&lt;Dimensionality, TriangulationDSVertex_, TriangulationDSFullCell_&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Delaunay__triangulation" kindref="compound">Delaunay_triangulation</ref>&lt;DelaunayTriangulationTraits_, TriangulationDataStructure_&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>CGAL::Triangulation&lt; Regular_triangulation_traits_adapter&lt; RegularTriangulationTraits_ &gt;, TriangulationDataStructure_ &gt;</label>
        <link refid="classCGAL_1_1Triangulation"/>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; Regular_triangulation_traits_adapter&lt; RegularTriangulationTraits_ &gt;, TriangulationDataStructure_ &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>CGAL::Delaunay_triangulation&lt; DelaunayTriangulationTraits_, TriangulationDataStructure_ &gt;</label>
        <link refid="classCGAL_1_1Delaunay__triangulation"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>CGAL::Triangulation&lt; DelaunayTriangulationTraits_, TriangulationDataStructure_ &gt;</label>
        <link refid="classCGAL_1_1Triangulation"/>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; DelaunayTriangulationTraits_, TriangulationDataStructure_ &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>CGAL::Triangulation&lt; TriangulationTraits_, TriangulationDataStructure_ &gt;</label>
        <link refid="classCGAL_1_1Triangulation"/>
      </node>
      <node id="18">
        <label>CGAL::Regular_triangulation&lt; RegularTriangulationTraits_, TriangulationDataStructure_ &gt;</label>
        <link refid="classCGAL_1_1Regular__triangulation"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CGAL/Triangulation.h" line="55" column="1" bodyfile="CGAL/Triangulation.h" bodystart="55" bodyend="681"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangulation_1a62eda072a392c3e3837dfe4af91ee57f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>are_incident_full_cells_valid</name></member>
      <member refid="classCGAL_1_1Triangulation_1a2facc61faaa2cec2ddfb750f72d81bcf" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>collapse_face</name></member>
      <member refid="classCGAL_1_1Triangulation_1a62f94fb89a94243d74b2d1a273a50b1f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>current_dimension</name></member>
      <member refid="classCGAL_1_1Triangulation_1a94c8cff5d58de158d6035a597e208234" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>difference_type</name></member>
      <member refid="classCGAL_1_1Triangulation_1a780dd7423be3005779871317919413a2" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>empty</name></member>
      <member refid="classCGAL_1_1Triangulation_1ada52cef984f0e0c3a4feba1caaf5b2ba" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Face</name></member>
      <member refid="classCGAL_1_1Triangulation_1a8b1939b059439a2039f0138e390c4955" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Facet</name></member>
      <member refid="classCGAL_1_1Triangulation_1ab327fb6e008bcb7b385fd0c2bfdbdf76" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Facet_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a12dbb76f5fa83a360dbef6d3ddfbc388" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>facets_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1aad6830f68c30647e7ef21af16483194e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>facets_end</name></member>
      <member refid="classCGAL_1_1Triangulation_1a6c33ee8a64012e49586c529f39757e32" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Finite_facet_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a9166332ea17e26fd5fdb1220478757fb" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_facets_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1a0d991b81fa64caab32542b5aa1712eb8" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_facets_end</name></member>
      <member refid="classCGAL_1_1Triangulation_1a8a675a9dadf7bd7d511dc4ba2c8b8e8b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Finite_full_cell_const_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a81ba3b7bf860344f1e9caca53e6d5cd2" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Finite_full_cell_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1afc03fd650523922c05332f3649921a4b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_full_cells_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1a59e47b3a229f0a323da15fc6d985100d" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_full_cells_end</name></member>
      <member refid="classCGAL_1_1Triangulation_1aab014ba0508c8d17232452acbd3e8a7c" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Finite_vertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a6097653102d5cfe0df39ddc4b1742a5e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Finite_vertex_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a3d58f149d9280456218eac0f6aab9c28" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_vertices_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1abb2c1c00d7c359c364fb7f22ed65732b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>finite_vertices_end</name></member>
      <member refid="classCGAL_1_1Triangulation_1ac4d235ca89ed6f3ff64f4a3faf015eea" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Full_cell</name></member>
      <member refid="classCGAL_1_1Triangulation_1a9dd8ae15c2aabba82c9f2c62a8a80acc" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>full_cell</name></member>
      <member refid="classCGAL_1_1Triangulation_1a1af144e869efba1cb61453b0202f5d3f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Full_cell_const_handle</name></member>
      <member refid="classCGAL_1_1Triangulation_1abf5d59502213cf9887e4befe7ad66da6" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Full_cell_const_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a9dc0c1f6f1974fbc59ad55e172bdbe0a" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Full_cell_handle</name></member>
      <member refid="classCGAL_1_1Triangulation_1a912c8764d774b853ee4965418ab39840" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Full_cell_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a04cdf99328b3511282ac62a7420df7e1" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>full_cells_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1a10e44b74801a177b62bf7c2fda2be226" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>full_cells_end</name></member>
      <member refid="classCGAL_1_1Triangulation_1a37330515770a3ceff69d7003622f0e8a" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>geom_traits</name></member>
      <member refid="classCGAL_1_1Triangulation_1a352007b3356b48a186bb425e46556f6d" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Geom_traits</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a4fb921e49e10cc8c13ae0af39563098e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>IN_FACE</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1ae2f2769cedcfab4ec0a04e643951bbde" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>IN_FACET</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a8d6394b632b0117d045db08d06fac769" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>IN_FULL_CELL</name></member>
      <member refid="classCGAL_1_1Triangulation_1ae7cc3a139eb04cd9c71a97460155cb38" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>index_of_covertex</name></member>
      <member refid="classCGAL_1_1Triangulation_1abba18bc51e982b4fb7d56fc1b894dfbf" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>infinite_full_cell</name></member>
      <member refid="classCGAL_1_1Triangulation_1a44e3585e1b8fa31b718310a3f32a92af" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>infinite_vertex</name></member>
      <member refid="classCGAL_1_1Triangulation_1af88e208ad33fae3c7dffa999ad2631da" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Triangulation_1a2a6a11038170429d97260391d0acae8e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Triangulation_1a79e945a3e013ddcdafb14bd5967a18ec" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Triangulation_1ac98183b1c784328d4280ec9870398831" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Triangulation_1a7bba92f7964a3b0a9c513c5a31504fba" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_in_face</name></member>
      <member refid="classCGAL_1_1Triangulation_1a43bf60f8f5ce31f2073ae691b7d275bf" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_in_facet</name></member>
      <member refid="classCGAL_1_1Triangulation_1a54643ea790cd66d67e56b33c40530789" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_in_full_cell</name></member>
      <member refid="classCGAL_1_1Triangulation_1a2b49b3f3dead836d3bea31d495b89d0b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_in_hole</name></member>
      <member refid="classCGAL_1_1Triangulation_1a27d7dfc1989bb1bddf856da77bc2ff3b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_in_hole</name></member>
      <member refid="classCGAL_1_1Triangulation_1a4f168d5d6798c12b20230d13c36d3367" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_outside_affine_hull</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad4c6fa10fc9b75f462a8514834e27d01" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>insert_outside_convex_hull</name></member>
      <member refid="classCGAL_1_1Triangulation_1abc324aac5057a1d4763c1706200419c6" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Triangulation_1a8213719b293536a01b670379ca3aba28" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Triangulation_1a22a5005903613be10d59df6f1465afc9" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Triangulation_1a545a8951fa681312943a901978537018" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Triangulation_1a24225e8b6a8193d4d2ec2b48f2da0248" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Triangulation_1ab8ef50362a2530d69deb3663fa9147f9" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Triangulation_1a46b11884eca037fc82e4bc0121a3518a" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Triangulation_1af9ea0ceb6cc5c814e4ed63738396a6b6" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Triangulation_1a6e71f40009edee950c1c87258a3aee5c" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Locate_type</name></member>
      <member refid="classCGAL_1_1Triangulation_1a2183e2d5583c4a339b6ddf40c9acc781" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>maximal_dimension</name></member>
      <member refid="classCGAL_1_1Triangulation_1a147923c9862c050a130509b7f206cf64" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Maximal_dimension</name></member>
      <member refid="classCGAL_1_1Triangulation_1a9ead5898e253681887633542f6f2f7ad" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>number_of_finite_full_cells</name></member>
      <member refid="classCGAL_1_1Triangulation_1a48ce908ceee25383948a7042fb51762f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>number_of_full_cells</name></member>
      <member refid="classCGAL_1_1Triangulation_1afe1fe35422184d562df4562317bcbf92" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1ade1e70cfdf4d2dbe34d52a17e01e6d91" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>ON_VERTEX</name></member>
      <member refid="classCGAL_1_1Triangulation_1a6480b2bbfac9a8cff2b928fce9b1f5d4" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Triangulation_1a1bd74fdea9e3943ac096d9d2a0be5163" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a4fc81f6eab064619eab117d842cb6cad" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>OUTSIDE_AFFINE_HULL</name></member>
      <member refid="classCGAL_1_1Triangulation_1ad5e9ac89fd2a2dbc52492acb1fa1dad1a132f39ec6fbc6497258e6b76488c5676" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>OUTSIDE_CONVEX_HULL</name></member>
      <member refid="classCGAL_1_1Triangulation_1a1b422d984178df24b1802d9ea89a3731" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Triangulation_1ae83c49f5f2f90371376ee0faf469e760" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1Triangulation_1ac0d79b01b2d90dcafa2f72c6dec96da0" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>tds</name></member>
      <member refid="classCGAL_1_1Triangulation_1a3567f6691efc7de6d8cf242fdcd71e8c" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>tds</name></member>
      <member refid="classCGAL_1_1Triangulation_1af7c419089770b5f8f8f695ddc4bae647" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Triangulation</name></member>
      <member refid="classCGAL_1_1Triangulation_1aab75ff276e6fce6c1b26bcdcdaab9fc3" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Triangulation</name></member>
      <member refid="classCGAL_1_1Triangulation_1af5bb59ee9b23d16ae5c1a8beac52cb2b" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Triangulation_ds</name></member>
      <member refid="classCGAL_1_1Triangulation_1a105744e8ed756cd79c689fac0cc4c169" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1Triangulation_1a4d0d07682df8287266b3543963c7491f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Vertex_const_handle</name></member>
      <member refid="classCGAL_1_1Triangulation_1a641484a12d5a795053c827142ca2f218" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Vertex_const_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a9cce545266f97305c03009e19a9574b8" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Vertex_handle</name></member>
      <member refid="classCGAL_1_1Triangulation_1a4171657a4bb334b0d4c940f3b724c332" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>Vertex_iterator</name></member>
      <member refid="classCGAL_1_1Triangulation_1a800fed6555205ba8985bdb98917676df" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>vertices_begin</name></member>
      <member refid="classCGAL_1_1Triangulation_1a02ab969e86936929273eb0a757f0f622" prot="public" virt="non-virtual"><scope>CGAL::Triangulation</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
