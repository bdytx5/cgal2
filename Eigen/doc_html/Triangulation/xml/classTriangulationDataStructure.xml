<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTriangulationDataStructure" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDataStructure</compoundname>
    <includes local="no">Concepts/TriangulationDataStructure.h</includes>
    <innerclass refid="classTriangulationDataStructure_1_1FullCell" prot="public">TriangulationDataStructure::FullCell</innerclass>
    <innerclass refid="classTriangulationDataStructure_1_1Vertex" prot="public">TriangulationDataStructure::Vertex</innerclass>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1ac6585f210dd629b88553df633d9ef37f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <briefdescription>
<para>The vertex type, requirements for this type are described in the concept <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">TriangulationDataStructure::Vertex</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="93" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a1e250cb0243618f0992802d6e9b720d6" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Full_cell</definition>
        <argsstring></argsstring>
        <name>Full_cell</name>
        <briefdescription>
<para>The full cell type, requirements for this type are described in the concept <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="99" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a734e9d4f614c0b1c5672cfaa4211d2cc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Full_cell_data</definition>
        <argsstring></argsstring>
        <name>Full_cell_data</name>
        <briefdescription>
<para>A model of the concept <computeroutput><ref refid="classFullCellData" kindref="compound">FullCellData</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="104" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Facet</definition>
        <argsstring></argsstring>
        <name>Facet</name>
        <briefdescription>
<para>The facet type, for describing faces of the triangulation with codimension 1. </para>        </briefdescription>
        <detaileddescription>
<para>The constructor <computeroutput>Facet(c,i)</computeroutput> constructs a <computeroutput>Facet</computeroutput> representing the facet of full cell <computeroutput>c</computeroutput> opposite to its <computeroutput>i</computeroutput>-th vertex. Its dimension is <computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref>-1</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="112" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Face</definition>
        <argsstring></argsstring>
        <name>Face</name>
        <briefdescription>
<para>The face type, which must be a model of the concept <computeroutput><ref refid="classTriangulationDSFace" kindref="compound">TriangulationDSFace</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="117" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Handles</header>
      <description><para>Vertices and full cells are manipulated via <emphasis>handles</emphasis>.</para><para>Handles support the usual two dereference operators and <computeroutput>operator-&gt;</computeroutput>. </para></description>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
<para><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref> to a <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="130" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a1d2cb3cfabf90d68f8abce3699042c3d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Vertex_const_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_const_handle</name>
        <briefdescription>
<para>Const handle to a <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="135" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Full_cell_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_handle</name>
        <briefdescription>
<para><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref> to a <computeroutput>Full_cell</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="140" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a55563fe9c67ac6a2db635c3a3bc3fccc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Full_cell_const_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_const_handle</name>
        <briefdescription>
<para>Const handle to a <computeroutput>Full_cell</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="145" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iterators</header>
      <description><para>Vertices, facets and full cells can be iterated over using <emphasis>iterators</emphasis>.</para><para>Iterators support the usual two dereference operators and <computeroutput>operator-&gt;</computeroutput>. </para></description>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a19e1bcc1e298f9ed6ff15a029a6742ca" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over the list of vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="158" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a28593d4b9fe1eae25c86cef06efabb07" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Full_cell_iterator</definition>
        <argsstring></argsstring>
        <name>Full_cell_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over the list of full cells. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="164" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1a064d946b7ad17a2d99b1ca56de49cd5f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Facet_iterator</definition>
        <argsstring></argsstring>
        <name>Facet_iterator</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> over the facets of the complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="170" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1ae57075579dec3b242288a6eec266b6bb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Size type (an unsigned integral type). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="175" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1afef05c420a3304355769ccfa1f2835ee" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Difference type (a signed integral type). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="180" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1ad36f4129acca06ffd61d1f63e2ccf4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationDataStructure::TriangulationDataStructure</definition>
        <argsstring>(int dim=0)</argsstring>
        <name>TriangulationDataStructure</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Creates an instance <computeroutput>tds</computeroutput> of type <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The maximal dimension of its full cells is <computeroutput>dim</computeroutput> and <computeroutput>tds</computeroutput> is initialized to the empty triangulation. Thus, <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput> equals <computeroutput>-2</computeroutput>. The parameter <computeroutput>dim</computeroutput> can be ignored by the constructor if it is already known at compile-time. Otherwise, the following precondition holds: <simplesect kind="pre"><para><computeroutput>dim&gt;0</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="196" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Queries</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1af641ddf619eb90c4a314ef061dda85dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::maximal_dimension</definition>
        <argsstring>() const</argsstring>
        <name>maximal_dimension</name>
        <briefdescription>
<para>Returns the maximal dimension of the full dimensional cells that can be stored in the triangulation <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="post"><para>the returned value is positive. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::current_dimension</definition>
        <argsstring>() const</argsstring>
        <name>current_dimension</name>
        <briefdescription>
<para>Returns the dimension of the full dimensional cells stored in the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>It holds that <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref>=-2</computeroutput> if and only if <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1ad799774e182438424e0495bed32af1e0" kindref="member">empty()</ref></computeroutput> is <computeroutput>true</computeroutput>. <simplesect kind="post"><para>the returned value <computeroutput>d</computeroutput> satisfies <formula id="34">$ -2\leq d \leq$</formula><computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1af641ddf619eb90c4a314ef061dda85dc" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ad799774e182438424e0495bed32af1e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the triangulation contains nothing, returns <computeroutput>false</computeroutput> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aa6611be9db32c2af676cab01cd6a297f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ae57075579dec3b242288a6eec266b6bb" kindref="member">size_type</ref></type>
        <definition>size_type TriangulationDataStructure::number_of_vertices</definition>
        <argsstring>() const</argsstring>
        <name>number_of_vertices</name>
        <briefdescription>
<para>Returns the number of vertices in the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a4617275d61aeacb5e9bc4d2549bdd388" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ae57075579dec3b242288a6eec266b6bb" kindref="member">size_type</ref></type>
        <definition>size_type TriangulationDataStructure::number_of_full_cells</definition>
        <argsstring>() const</argsstring>
        <name>number_of_full_cells</name>
        <briefdescription>
<para>Returns the number of full cells in the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a6d959dc17a9f2e679a1eca62fcdb2fb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::is_vertex</definition>
        <argsstring>(const Vertex_handle &amp;v) const</argsstring>
        <name>is_vertex</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Tests whether <computeroutput>v</computeroutput> is a vertex of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a4758cdefda61c6adbebd778505472bb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::is_full_cell</definition>
        <argsstring>(const Full_cell_handle &amp;c) const</argsstring>
        <name>is_full_cell</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Tests whether <computeroutput>c</computeroutput> is a full cell of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a736072a157ba6e09084b0f2245ace46b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TraversalPredicate</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref></type>
        <definition>Facet TriangulationDataStructure::gather_full_cells</definition>
        <argsstring>(Full_cell_handle start, TraversalPredicate &amp;tp, OutputIterator &amp;out) const</argsstring>
        <name>gather_full_cells</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type>TraversalPredicate &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>This function computes (<emphasis>gathers</emphasis>) a connected set of full cells satifying a common criterion. </para>        </briefdescription>
        <detaileddescription>
<para>Call them <emphasis>good</emphasis> full cells. It is assumed that the argument <computeroutput>start</computeroutput> is a good full cell. The full cells are then recursively explored by examining if, from a given good full cell, its adjacent full cells are also good.</para><para>The argument <computeroutput>tp</computeroutput> is a predicate, i.e. a function or a functor providing <computeroutput>operator()</computeroutput>, that takes as argument a <computeroutput>Facet</computeroutput> whose <computeroutput>Full_cell</computeroutput> is good. The predicate must return <computeroutput>true</computeroutput> if the traversal of that <computeroutput>Facet</computeroutput> leads to a good full cell.</para><para>All the good full cells are output into the last argument <computeroutput>out</computeroutput>.</para><para>Returns a facet on the boundary of the set of cells.</para><para><simplesect kind="pre"><para><computeroutput>start != <ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput> and <computeroutput>start</computeroutput> is a good cell. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a024f5dd99e9259115bb470f31ad8a6ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator TriangulationDataStructure::incident_full_cells</definition>
        <argsstring>(Vertex_handle v, OutputIterator out) const</argsstring>
        <name>incident_full_cells</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Inserts in <computeroutput>out</computeroutput> all the full cells that are incident to the vertex <computeroutput>v</computeroutput>, i.e., the full cells that have the <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref> v</computeroutput> as a vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the output iterator. <simplesect kind="pre"><para><computeroutput>v!=<ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a896e03621077cdd49d3b1bc64e43a18a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator TriangulationDataStructure::incident_full_cells</definition>
        <argsstring>(const Face &amp;f, OutputIterator out) const</argsstring>
        <name>incident_full_cells</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Inserts in <computeroutput>out</computeroutput> all the full cells that are incident to the face <computeroutput>f</computeroutput>, i.e., the full cells that have the <computeroutput>Face f</computeroutput> as a subface. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the output iterator. <simplesect kind="pre"><para><computeroutput>f.full_cell()!=<ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a96ae17a07bb770df12725b77d59245f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator TriangulationDataStructure::star</definition>
        <argsstring>(const Face &amp;f, OutputIterator out) const</argsstring>
        <name>star</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Inserts in <computeroutput>out</computeroutput> all the full cells that share at least one vertex with the <computeroutput>Face f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the output iterator. <simplesect kind="pre"><para><computeroutput>f.full_cell()!=<ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a9700c5ae4a6a2af65b002fb1057d47fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator TriangulationDataStructure::incident_faces</definition>
        <argsstring>(Vertex_handle v, const int dim, OutputIterator out)</argsstring>
        <name>incident_faces</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Constructs all the <computeroutput>Face</computeroutput>s of dimension <computeroutput>dim</computeroutput> incident to <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> v and inserts them in the <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> out</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>dim &gt;=</computeroutput> <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput>, then no <computeroutput>Face</computeroutput> is constructed. <simplesect kind="pre"><para><computeroutput>0 &lt; dim</computeroutput> and <computeroutput>v!=<ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="305" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Accessing the Vertices</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1ae52151644650358da452e2726be667ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::vertex</definition>
        <argsstring>(Full_cell_handle c, const int i) const</argsstring>
        <name>vertex</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a handle to the <computeroutput>i</computeroutput>-th <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> of the <computeroutput>Full_cell</computeroutput> <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput> and <computeroutput>c!=<ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a2eee53e856629399598a35e3938c0deb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::mirror_index</definition>
        <argsstring>(Full_cell_handle c, int i) const</argsstring>
        <name>mirror_index</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the index of <computeroutput>c</computeroutput> as a neighbor of its <computeroutput>i</computeroutput>-th neighbor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput>tds</computeroutput>.<computeroutput>current_dimension</computeroutput>() and <computeroutput>c!=<ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aef893596d3c5cd9afbbbb8db86d3da37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::mirror_vertex</definition>
        <argsstring>(Full_cell_handle c, int i) const</argsstring>
        <name>mirror_vertex</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the vertex of the <computeroutput>i</computeroutput>-th neighbor of <computeroutput>c</computeroutput> that is not vertex of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput>tds</computeroutput>.<computeroutput>current_dimension</computeroutput>() and <computeroutput>c!=<ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a39654db0ad61a12895b51aa0ebf75557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a19e1bcc1e298f9ed6ff15a029a6742ca" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator TriangulationDataStructure::vertices_begin</definition>
        <argsstring>()</argsstring>
        <name>vertices_begin</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the first vertex of <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>User has no control on the order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a0f4a5ddc59c3402d63c289035e2c4e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a19e1bcc1e298f9ed6ff15a029a6742ca" kindref="member">Vertex_iterator</ref></type>
        <definition>Vertex_iterator TriangulationDataStructure::vertices_end</definition>
        <argsstring>()</argsstring>
        <name>vertices_end</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> refering beyond the last vertex of <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="340" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Accessing the Full Cells</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1aad1bfd6a9a13896ddb520ffc9fdd1b9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::full_cell</definition>
        <argsstring>(Vertex_handle v) const</argsstring>
        <name>full_cell</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns a full cell incident to <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this full cell is not unique (<computeroutput>v</computeroutput> is typically incident to more than one full cell). <simplesect kind="pre"><para><computeroutput>v != Vertex_handle</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1adb00e571db571c9276478d12e0570c02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::neighbor</definition>
        <argsstring>(Full_cell_handle c, int i) const</argsstring>
        <name>neighbor</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a <computeroutput>Full_cell_handle</computeroutput> pointing to the <computeroutput>Full_cell</computeroutput> opposite to the <computeroutput>i</computeroutput>-th vertex of <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput> and <computeroutput>c != <ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle()</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aa17461b589697a64a4fef3bdcf0dda68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a28593d4b9fe1eae25c86cef06efabb07" kindref="member">Full_cell_iterator</ref></type>
        <definition>Full_cell_iterator TriangulationDataStructure::full_cells_begin</definition>
        <argsstring>()</argsstring>
        <name>full_cells_begin</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the first full cell of <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>User has no control on the order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1adcf5aa984f7e81678106090736138988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a28593d4b9fe1eae25c86cef06efabb07" kindref="member">Full_cell_iterator</ref></type>
        <definition>Full_cell_iterator TriangulationDataStructure::full_cells_end</definition>
        <argsstring>()</argsstring>
        <name>full_cells_end</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> refering beyond the last full cell of <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="370" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Faces and Facets</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1af5943a75a8a714520260a6b305159a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a064d946b7ad17a2d99b1ca56de49cd5f" kindref="member">Facet_iterator</ref></type>
        <definition>Facet_iterator TriangulationDataStructure::facets_begin</definition>
        <argsstring>()</argsstring>
        <name>facets_begin</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> to the first facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aa3681c67750dd458a2af9d58707bccb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a064d946b7ad17a2d99b1ca56de49cd5f" kindref="member">Facet_iterator</ref></type>
        <definition>Facet_iterator TriangulationDataStructure::facets_end</definition>
        <argsstring>()</argsstring>
        <name>facets_end</name>
        <briefdescription>
<para><ref refid="classIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">Iterator</ref> refering beyond the last facet of the triangulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a24c1e1e59bc04b87972cb28f99451b3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::full_cell</definition>
        <argsstring>(const Facet &amp;f) const</argsstring>
        <name>full_cell</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns a full cell containing the facet <computeroutput>f</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a59a673db4f64d5c2f019ef919159a1bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::index_of_covertex</definition>
        <argsstring>(const Facet &amp;f) const</argsstring>
        <name>index_of_covertex</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns the index of vertex of the full cell <computeroutput>c=tds.full_cell(f)</computeroutput> which does not belong to <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="396" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vertex Insertion</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1af3de41c55ee9f55a2177b7e7f694e406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_in_full_cell</definition>
        <argsstring>(Full_cell_handle c)</argsstring>
        <name>insert_in_full_cell</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts a new vertex <computeroutput>v</computeroutput> in the full cell <computeroutput>c</computeroutput> and returns a handle to it. </para>        </briefdescription>
        <detaileddescription>
<para>The full cell <computeroutput>c</computeroutput> is subdivided into <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput>+1 full cells which share the vertex <computeroutput>v</computeroutput>.</para><para><anchor id="classTriangulationDataStructure_1fig__triangulationfiginsertfullcell"/><image type="html" name="insert-in-cell.png"></image>
 <image type="latex" name="insert-in-cell.png" width="15cm"></image>
  <ref refid="classTriangulationDataStructure_1fig__triangulationfiginsertfullcell" kindref="member">fig__triangulationfiginsertfullcell</ref> Insertion in a full cell, <formula id="36">$ d=2$</formula>  <linebreak/>
</para><para><simplesect kind="pre"><para>Current dimension is positive and <computeroutput>c</computeroutput> is a full cell of <computeroutput>tds</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a5f63c83b5b3b4990bdcabbeace9dd1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_in_face</definition>
        <argsstring>(const Face &amp;f)</argsstring>
        <name>insert_in_face</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Inserts a vertex in the triangulation data structure by subdividing the <computeroutput>Face f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle to the newly created <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput>.</para><para><anchor id="classTriangulationDataStructure_1fig__triangulationfiginsertface"/><image type="html" name="insert-in-face.png"></image>
 <image type="latex" name="insert-in-face.png" width="15cm"></image>
  <ref refid="classTriangulationDataStructure_1fig__triangulationfiginsertface" kindref="member">fig__triangulationfiginsertface</ref> Insertion in face, <formula id="37">$ d=3$</formula>  <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1af34f361a1b381916e3c09e3d0cb122e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_in_facet</definition>
        <argsstring>(const Facet &amp;ft)</argsstring>
        <name>insert_in_facet</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref> &amp;</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
<para>Inserts a vertex in the triangulation data structure by subdividing the <computeroutput>Facet ft</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle to the newly created <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a9b8c4026fd56a333715b91ebc665e4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_in_hole</definition>
        <argsstring>(ForwardIterator start, ForwardIterator end, Facet f)</argsstring>
        <name>insert_in_hole</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para></para><para>Removes the full cells in the range <formula id="17">$ C=$</formula><computeroutput>[s, e)</computeroutput>, inserts a vertex at position <computeroutput>p</computeroutput> and fills the hole by connecting each face of the boundary to <computeroutput>p</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>A <computeroutput>Vertex_handle</computeroutput> to the new <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> is returned. The facet <computeroutput>ft</computeroutput> must lie on the boundary of <formula id="18">$ C$</formula> and its defining full cell, <computeroutput>tr</computeroutput>.<computeroutput>full_cell(ft)</computeroutput> must lie inside <formula id="18">$ C$</formula>. Handles to the newly created full cells are output in the <computeroutput>out</computeroutput> output iterator. <simplesect kind="pre"><para><computeroutput>c</computeroutput> belongs to <formula id="18">$ C$</formula> and <computeroutput>c-&gt;neighbor(i)</computeroutput> does not, with <computeroutput>f=(c,i)</computeroutput>. <formula id="38">$ H$</formula>, the union of full cells in <formula id="18">$ C$</formula>, is simply connected and its boundary <formula id="39">$ \partial H$</formula> is a combinatorial triangulation of the sphere <formula id="40">$ \mathbb{S}^{d-1}$</formula>. All vertices of cells of <formula id="18">$ C$</formula> are on <formula id="39">$ \partial H$</formula>.</para></simplesect>
<anchor id="classTriangulationDataStructure_1fig__triangulationfiginserthole"/><image type="html" name="insert-in-hole.png"></image>
 <image type="latex" name="insert-in-hole.png" width="15cm"></image>
  <ref refid="classTriangulationDataStructure_1fig__triangulationfiginserthole" kindref="member">fig__triangulationfiginserthole</ref> Insertion in a hole, <formula id="36">$ d=2$</formula>  <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ab2602c393d49501f5b259de069008707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_in_hole</definition>
        <argsstring>(ForwardIterator start, ForwardIterator end, Facet f, OutputIterator out)</argsstring>
        <name>insert_in_hole</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" kindref="member">Facet</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Same as above, but handles to the new full cells are appended to the <computeroutput>out</computeroutput> output iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ab4b08d338feca9e4779bd8424360223a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::insert_increase_dimension</definition>
        <argsstring>(Vertex_handle star)</argsstring>
        <name>insert_increase_dimension</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>star</declname>
        </param>
        <briefdescription>
<para>Transforms a triangulation of the sphere <formula id="23">$ \mathbb{S}^d$</formula> into the triangulation of the sphere <formula id="41">$ \mathbb{S}^{d+1}$</formula> by adding a new vertex <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>v</computeroutput> is used to triangulate one of the two half-spheres of <formula id="41">$ \mathbb{S}^{d+1}$</formula> ( <formula id="42">$ v$</formula> is added as <formula id="43">$ (d+2)^{th}$</formula> vertex to all full cells) and <computeroutput>star</computeroutput> is used to triangulate the other half-sphere (all full cells that do not already have star as vertex are duplicated, and <computeroutput>star</computeroutput> replaces <computeroutput>v</computeroutput> in these full cells). The indexing of the vertices in the full cell is such that, if <computeroutput>f</computeroutput> was a full cell of maximal dimension in the initial complex, then <computeroutput>(f,v)</computeroutput>, in this order, is the corresponding full cell in the updated triangulation. A handle to <computeroutput>v</computeroutput> is returned (see Figure <ref refid="classTriangulationDataStructure_1fig__triangulationfiginsertincreasedim" kindref="member">fig__triangulationfiginsertincreasedim</ref>). <simplesect kind="pre"><para>If the current dimension is -2 (empty triangulation), then <computeroutput>star</computeroutput> can be omitted (it is ignored), otherwise the current dimension must be strictly less than the maximal dimension and <computeroutput>star</computeroutput> must be a vertex of <computeroutput>tds</computeroutput>.</para></simplesect>
<anchor id="classTriangulationDataStructure_1fig__triangulationfiginsertincreasedim"/><image type="html" name="insert-increase-dim.png"></image>
 <image type="latex" name="insert-increase-dim.png" width="15cm"></image>
  <ref refid="classTriangulationDataStructure_1fig__triangulationfiginsertincreasedim" kindref="member">fig__triangulationfiginsertincreasedim</ref> Insertion, increasing the dimension from <formula id="44">$ d=1$</formula> to <formula id="36">$ d=2$</formula>  <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ac98d20e2d6f5ff358daf94c3378cc774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::new_full_cell</definition>
        <argsstring>()</argsstring>
        <name>new_full_cell</name>
        <briefdescription>
<para>Adds a new full cell to <computeroutput>tds</computeroutput> and returns a handle to it. </para>        </briefdescription>
        <detaileddescription>
<para>The new full cell has no vertices and no neighbors yet. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a0ad077228ea232f3d9c8897d556fe125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::new_vertex</definition>
        <argsstring>()</argsstring>
        <name>new_vertex</name>
        <briefdescription>
<para>Adds a new vertex to <computeroutput>tds</computeroutput> and returns a handle to it. </para>        </briefdescription>
        <detaileddescription>
<para>The new vertex has no associated full cell nor index yet. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aedf48ac2e91e8eaea892400edfbae385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::associate_vertex_with_full_cell</definition>
        <argsstring>(Full_cell_handle c, int i, Vertex_handle v)</argsstring>
        <name>associate_vertex_with_full_cell</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets the <computeroutput>i</computeroutput>-th vertex of <computeroutput>c</computeroutput> to <computeroutput>v</computeroutput> and, if <computeroutput>v != <ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle()</ref></computeroutput>, sets <computeroutput>c</computeroutput> as the incident full cell of <computeroutput>v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a11446b8dad0fb719cc303d7371a278ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::set_neighbors</definition>
        <argsstring>(Full_cell_handle ci, int i, Full_cell_handle cj, int j)</argsstring>
        <name>set_neighbors</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>ci</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>cj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Sets the neighbor opposite to vertex <computeroutput>i</computeroutput> of <computeroutput>Full_cell</computeroutput> <computeroutput>ci</computeroutput> to <computeroutput>cj</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the neighbor opposite to vertex <computeroutput>j</computeroutput> of <computeroutput>Full_cell</computeroutput> <computeroutput>cj</computeroutput> to <computeroutput>ci</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1af5af209a18634655fdeaf766960a5699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::set_current_dimension</definition>
        <argsstring>(int d)</argsstring>
        <name>set_current_dimension</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Forces the current dimension of the complex to <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="45">$-2 \leq d \leq $</formula><computeroutput><ref refid="classTriangulationDataStructure_1af641ddf619eb90c4a314ef061dda85dc" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="525" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vertex Removal</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1a712409cca74860bc1d557d65cf0ecfca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Reinitializes <computeroutput>tds</computeroutput> to the empty complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ac4a4c4adb99383072ad19fe86c5b51b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::collapse_face</definition>
        <argsstring>(const Face &amp;f)</argsstring>
        <name>collapse_face</name>
        <param>
          <type>const <ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">Face</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Contracts the <computeroutput>Face f</computeroutput> to a single vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle to that vertex (see Figure <ref refid="classTriangulationDataStructure_1fig__triangulationfigcollapseface" kindref="member">fig__triangulationfigcollapseface</ref>). <simplesect kind="pre"><para>The boundary of the full cells incident to <computeroutput>f</computeroutput> is a topological sphere of dimension <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput>-1).</para></simplesect>
<anchor id="classTriangulationDataStructure_1fig__triangulationfigcollapseface"/><image type="html" name="collapse-face.png"></image>
 <image type="latex" name="collapse-face.png" width="15cm"></image>
  <ref refid="classTriangulationDataStructure_1fig__triangulationfigcollapseface" kindref="member">fig__triangulationfigcollapseface</ref> Collapsing an edge in dimension <formula id="37">$ d=3$</formula>, <computeroutput>v</computeroutput> is returned.  <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1a615f0a049a9ff58077f35f90ea149f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::remove_decrease_dimension</definition>
        <argsstring>(Vertex_handle v, Vertex_handle star)</argsstring>
        <name>remove_decrease_dimension</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>star</declname>
        </param>
        <briefdescription>
<para>This method does exactly the opposite of <computeroutput><ref refid="classTriangulationDataStructure_1ab4b08d338feca9e4779bd8424360223a" kindref="member">insert_increase_dimension()</ref></computeroutput>: <computeroutput>v</computeroutput> is removed, full cells not containing <computeroutput>star</computeroutput> are removed, full cells containing <computeroutput>star</computeroutput> but not <computeroutput>v</computeroutput> loose vertex <computeroutput>star</computeroutput>, full cells containing <computeroutput>star</computeroutput> and <computeroutput>v</computeroutput> loose vertex <computeroutput>v</computeroutput> (see Figure <ref refid="classTriangulationDataStructure_1fig__triangulationfiginsertincreasedim" kindref="member">fig__triangulationfiginsertincreasedim</ref>). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>All cells contain either <computeroutput>star</computeroutput> or <computeroutput>v</computeroutput>. Edge <computeroutput>star-v</computeroutput> exists in the triangulation and <computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref> != -2</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="566" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ae243c3a18ee2dde0e472855645bf7fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::delete_vertex</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>delete_vertex</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Remove the vertex <computeroutput>v</computeroutput> from the triangulation.  <simplesect kind="pre"><para><computeroutput>v</computeroutput> is a vertex of <computeroutput>tds</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aaaece6770a1eb4dccb12368e7092e63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::delete_full_cell</definition>
        <argsstring>(Full_cell_handle c)</argsstring>
        <name>delete_full_cell</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Remove the full cell <computeroutput>c</computeroutput> from the triangulation.  <simplesect kind="pre"><para><computeroutput>c</computeroutput> is a full cell of <computeroutput>tds</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1aeb25e7c1abea387178721ecc348ea1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TriangulationDataStructure::delete_full_cells</definition>
        <argsstring>(ForwardIterator start, ForwardIterator end)</argsstring>
        <name>delete_full_cells</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Calls <computeroutput>delete_full_cell</computeroutput> over an iterator range of value type <computeroutput>Full_cell_handle</computeroutput>.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="593" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1a83b71c11e77dcffa0cd0351f403b4169" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Partially checks whether <computeroutput>tds</computeroutput> is indeed a triangulation.</para><para>It must <emphasis>at least</emphasis> <itemizedlist>
<listitem>
<para>check the validity of the vertices and full cells of <computeroutput>tds</computeroutput> by calling their respective <computeroutput>is_valid</computeroutput> method. </para></listitem>
<listitem>
<para>check that each full cell has no duplicate vertices and has as many neighbors as its number of facets (<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref>+1</computeroutput>). </para></listitem>
<listitem>
<para>check that each full cell share exactly <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" kindref="member">current_dimension()</ref></computeroutput> vertices with each of its neighbor. </para></listitem>
</itemizedlist>
</para><para>When <computeroutput>verbose</computeroutput> is set to <computeroutput>true</computeroutput>, messages are printed to give a precise indication on the kind of invalidity encountered.</para><para>Returns <computeroutput>true</computeroutput> if all the tests pass, <computeroutput>false</computeroutput> if any test fails. See the documentation for the models of this concept to see the additionnal (if any) validity checks that they implement.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ac1c4f44b2b2cb70a0dc23491ebaf75e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; TriangulationDataStructure::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, TriangulationDataStructure &amp;tds)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &amp;</type>
          <declname>tds</declname>
        </param>
        <briefdescription>
<para>Reads a combinatorial triangulation from <computeroutput>is</computeroutput> and assigns it to <computeroutput>tds</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The dimension of the input complex must be less than or equal to <computeroutput>tds</computeroutput>.<computeroutput><ref refid="classTriangulationDataStructure_1af641ddf619eb90c4a314ef061dda85dc" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1ac2faf1557099f08c28534e499c809c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; TriangulationDataStructure::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const TriangulationDataStructure &amp;tds)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &amp;</type>
          <declname>tds</declname>
        </param>
        <briefdescription>
<para>Writes <computeroutput>tds</computeroutput> into the output stream <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="636" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> concept describes objects responsible for storing and maintaining the combinatorial part of a <formula id="22">$ d$</formula>-dimensional pure simplicial complex that has the topology of the <formula id="22">$ d$</formula>-dimensional sphere <formula id="23">$ \mathbb{S}^d$</formula> with <formula id="24">$ d\in[-2,D]$</formula>. Since the simplicial <formula id="22">$ d$</formula>-complex is pure, all faces are sub-faces of some <formula id="22">$ d$</formula>-simplex. And since it has the topology of the sphere <formula id="23">$ \mathbb{S}^d$</formula>, it is manifold, thus any <formula id="25">$ d-1$</formula>-face belongs to exactly two <formula id="22">$ d$</formula>-dimensional full cells. </para>    </briefdescription>
    <detaileddescription>
<para> The concept <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> includes two sub-concepts <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">TriangulationDataStructure::Vertex</ref></computeroutput> and <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput>.</para><para>Possible values for the current dimension <formula id="22">$ d$</formula> include</para><para><variablelist>
<varlistentry><term><bold>-2</bold></term></varlistentry>
<listitem><para>This corresponds to the non-existence of any object in the triangulation. </para></listitem>
<varlistentry><term><bold>-1</bold></term></varlistentry>
<listitem><para>This corresponds to a single vertex and a single full cell, which is also the unique vertex and the unique full cell in the <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. In a geometric realization of the <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> (<emphasis>e.g.</emphasis>, in a <computeroutput>Triangulation&lt;TriangulationTraits_, TriangulationDataStructure_&gt;</computeroutput> or a <computeroutput>Delaunay_triangulation&lt;DelaunayTriangulationTraits_, TriangulationDataStructure_&gt;</computeroutput>), this vertex corresponds to <emphasis>the vertex at infinity</emphasis>.</para><para></para></listitem>
<varlistentry><term><bold>0</bold></term></varlistentry>
<listitem><para>This corresponds to two vertices, each incident to one <formula id="26">$ 0$</formula>-face; the two full cells being neighbors of each other. This is the unique triangulation of the <formula id="26">$ 0$</formula>-sphere.</para><para></para></listitem>
<varlistentry><term><bold> <formula id="27">$ d&gt;0$</formula></bold></term></varlistentry>
<listitem><para>This corresponds to a triangulation of the sphere <formula id="23">$ \mathbb{S}^d$</formula>. </para></listitem>
</variablelist>
</para><para>An <formula id="7">$ i$</formula>-simplex is a simplex with <formula id="28">$ i+1$</formula> vertices. An <formula id="7">$ i$</formula>-simplex <formula id="29">$ \sigma$</formula> is incident to a <formula id="30">$ j$</formula>-simplex <formula id="31">$ \sigma&apos;$</formula>, <formula id="32">$ j&lt;i$</formula>, if and only if <formula id="31">$ \sigma&apos;$</formula> is a proper face of <formula id="29">$ \sigma$</formula>.</para><para>We call a <formula id="26">$ 0$</formula>-simplex a <emphasis>vertex</emphasis>, a <formula id="33">$ (d-1)$</formula>-simplex a <emphasis>facet</emphasis> and a <formula id="22">$ d$</formula>-simplex a <emphasis>full cell</emphasis>. A <emphasis>face</emphasis> can have any dimension. Two full cells are <emphasis>neighbors</emphasis> if they share a facet. Two faces are <emphasis>incident</emphasis> if one is included in the other.</para><para><heading level="2">Input/Output </heading>
</para><para>The information stored in the <computeroutput>iostream</computeroutput> is:</para><para><itemizedlist>
<listitem><para>the current dimension (which must be smaller than or equal to <computeroutput>tds.maximal_dimension()</computeroutput>),</para></listitem><listitem><para>the number of vertices,</para></listitem><listitem><para>for each vertex the information of that vertex,</para></listitem><listitem><para>the number of full cells,</para></listitem><listitem><para>for each full cell the indices of its vertices and extra information for that full cell,</para></listitem><listitem><para>for each full cell the indices of its neighbors.</para></listitem></itemizedlist>
</para><para>The indices of vertices and full cells correspond to the order in the file; the user cannot control it. The classes <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> and <computeroutput>Full_cell</computeroutput> have to provide the relevant I/O operators (possibly empty).</para><para><xrefsect id="hasModels_1_hasModels000003"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref>&lt;Dimensionality, TriangulationDSVertex_, TriangulationDSFullCell_&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">TriangulationDataStructure::Vertex</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSVertex" kindref="compound">TriangulationDSVertex</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSFullCell" kindref="compound">TriangulationDSFullCell</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSFace" kindref="compound">TriangulationDSFace</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/TriangulationDataStructure.h" line="83" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="83" bodyend="641"/>
    <listofallmembers>
      <member refid="classTriangulationDataStructure_1aedf48ac2e91e8eaea892400edfbae385" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>associate_vertex_with_full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a712409cca74860bc1d557d65cf0ecfca" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>clear</name></member>
      <member refid="classTriangulationDataStructure_1ac4a4c4adb99383072ad19fe86c5b51b6" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>collapse_face</name></member>
      <member refid="classTriangulationDataStructure_1a5dcffe3b959b85334362c488a007d715" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>current_dimension</name></member>
      <member refid="classTriangulationDataStructure_1aaaece6770a1eb4dccb12368e7092e63b" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>delete_full_cell</name></member>
      <member refid="classTriangulationDataStructure_1aeb25e7c1abea387178721ecc348ea1bc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>delete_full_cells</name></member>
      <member refid="classTriangulationDataStructure_1ae243c3a18ee2dde0e472855645bf7fbc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>delete_vertex</name></member>
      <member refid="classTriangulationDataStructure_1afef05c420a3304355769ccfa1f2835ee" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>difference_type</name></member>
      <member refid="classTriangulationDataStructure_1ad799774e182438424e0495bed32af1e0" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>empty</name></member>
      <member refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Face</name></member>
      <member refid="classTriangulationDataStructure_1a40ff410f4cf02b6c20e03702cc7d4e71" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Facet</name></member>
      <member refid="classTriangulationDataStructure_1a064d946b7ad17a2d99b1ca56de49cd5f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Facet_iterator</name></member>
      <member refid="classTriangulationDataStructure_1af5943a75a8a714520260a6b305159a12" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>facets_begin</name></member>
      <member refid="classTriangulationDataStructure_1aa3681c67750dd458a2af9d58707bccb7" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>facets_end</name></member>
      <member refid="classTriangulationDataStructure_1aad1bfd6a9a13896ddb520ffc9fdd1b9d" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a24c1e1e59bc04b87972cb28f99451b3a" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a1e250cb0243618f0992802d6e9b720d6" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a55563fe9c67ac6a2db635c3a3bc3fccc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Full_cell_const_handle</name></member>
      <member refid="classTriangulationDataStructure_1a734e9d4f614c0b1c5672cfaa4211d2cc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Full_cell_data</name></member>
      <member refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Full_cell_handle</name></member>
      <member refid="classTriangulationDataStructure_1a28593d4b9fe1eae25c86cef06efabb07" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Full_cell_iterator</name></member>
      <member refid="classTriangulationDataStructure_1aa17461b589697a64a4fef3bdcf0dda68" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>full_cells_begin</name></member>
      <member refid="classTriangulationDataStructure_1adcf5aa984f7e81678106090736138988" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>full_cells_end</name></member>
      <member refid="classTriangulationDataStructure_1a736072a157ba6e09084b0f2245ace46b" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>gather_full_cells</name></member>
      <member refid="classTriangulationDataStructure_1a9700c5ae4a6a2af65b002fb1057d47fa" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>incident_faces</name></member>
      <member refid="classTriangulationDataStructure_1a024f5dd99e9259115bb470f31ad8a6ce" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>incident_full_cells</name></member>
      <member refid="classTriangulationDataStructure_1a896e03621077cdd49d3b1bc64e43a18a" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>incident_full_cells</name></member>
      <member refid="classTriangulationDataStructure_1a59a673db4f64d5c2f019ef919159a1bc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>index_of_covertex</name></member>
      <member refid="classTriangulationDataStructure_1a5f63c83b5b3b4990bdcabbeace9dd1f8" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_in_face</name></member>
      <member refid="classTriangulationDataStructure_1af34f361a1b381916e3c09e3d0cb122e0" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_in_facet</name></member>
      <member refid="classTriangulationDataStructure_1af3de41c55ee9f55a2177b7e7f694e406" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_in_full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a9b8c4026fd56a333715b91ebc665e4b5" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_in_hole</name></member>
      <member refid="classTriangulationDataStructure_1ab2602c393d49501f5b259de069008707" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_in_hole</name></member>
      <member refid="classTriangulationDataStructure_1ab4b08d338feca9e4779bd8424360223a" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>insert_increase_dimension</name></member>
      <member refid="classTriangulationDataStructure_1a4758cdefda61c6adbebd778505472bb7" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>is_full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a83b71c11e77dcffa0cd0351f403b4169" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>is_valid</name></member>
      <member refid="classTriangulationDataStructure_1a6d959dc17a9f2e679a1eca62fcdb2fb8" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>is_vertex</name></member>
      <member refid="classTriangulationDataStructure_1af641ddf619eb90c4a314ef061dda85dc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>maximal_dimension</name></member>
      <member refid="classTriangulationDataStructure_1a2eee53e856629399598a35e3938c0deb" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>mirror_index</name></member>
      <member refid="classTriangulationDataStructure_1aef893596d3c5cd9afbbbb8db86d3da37" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>mirror_vertex</name></member>
      <member refid="classTriangulationDataStructure_1adb00e571db571c9276478d12e0570c02" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>neighbor</name></member>
      <member refid="classTriangulationDataStructure_1ac98d20e2d6f5ff358daf94c3378cc774" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>new_full_cell</name></member>
      <member refid="classTriangulationDataStructure_1a0ad077228ea232f3d9c8897d556fe125" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>new_vertex</name></member>
      <member refid="classTriangulationDataStructure_1a4617275d61aeacb5e9bc4d2549bdd388" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>number_of_full_cells</name></member>
      <member refid="classTriangulationDataStructure_1aa6611be9db32c2af676cab01cd6a297f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>number_of_vertices</name></member>
      <member refid="classTriangulationDataStructure_1ac2faf1557099f08c28534e499c809c93" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationDataStructure_1ac1c4f44b2b2cb70a0dc23491ebaf75e8" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationDataStructure_1a615f0a049a9ff58077f35f90ea149f09" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>remove_decrease_dimension</name></member>
      <member refid="classTriangulationDataStructure_1af5af209a18634655fdeaf766960a5699" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>set_current_dimension</name></member>
      <member refid="classTriangulationDataStructure_1a11446b8dad0fb719cc303d7371a278ae" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>set_neighbors</name></member>
      <member refid="classTriangulationDataStructure_1ae57075579dec3b242288a6eec266b6bb" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>size_type</name></member>
      <member refid="classTriangulationDataStructure_1a96ae17a07bb770df12725b77d59245f2" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>star</name></member>
      <member refid="classTriangulationDataStructure_1ad36f4129acca06ffd61d1f63e2ccf4bb" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>TriangulationDataStructure</name></member>
      <member refid="classTriangulationDataStructure_1ae52151644650358da452e2726be667ce" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>vertex</name></member>
      <member refid="classTriangulationDataStructure_1ac6585f210dd629b88553df633d9ef37f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Vertex</name></member>
      <member refid="classTriangulationDataStructure_1a1d2cb3cfabf90d68f8abce3699042c3d" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Vertex_const_handle</name></member>
      <member refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Vertex_handle</name></member>
      <member refid="classTriangulationDataStructure_1a19e1bcc1e298f9ed6ff15a029a6742ca" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>Vertex_iterator</name></member>
      <member refid="classTriangulationDataStructure_1a39654db0ad61a12895b51aa0ebf75557" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>vertices_begin</name></member>
      <member refid="classTriangulationDataStructure_1a0f4a5ddc59c3402d63c289035e2c4e7d" prot="public" virt="non-virtual"><scope>TriangulationDataStructure</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
