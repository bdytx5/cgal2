<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRegularTriangulationTraits" kind="class" language="C++" prot="public">
    <compoundname>RegularTriangulationTraits</compoundname>
    <includes local="no">Concepts/RegularTriangulationTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1ac4f5dbcfbf41536cf454ed4d52915704" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>A number type that is a model for <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="25" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1a142c277407394d5cf7aece697a24e36b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::Weighted_point_d</definition>
        <argsstring></argsstring>
        <name>Weighted_point_d</name>
        <briefdescription>
<para>The weighted point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="30" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1a79851a92387224841f84d5790932b1e7" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::Construct_point_d</definition>
        <argsstring></argsstring>
        <name>Construct_point_d</name>
        <briefdescription>
<para>A function object that must provide the operator <computeroutput>Point_d operator()(const Weighted_point_d &amp; wp)</computeroutput>, returning <computeroutput>wp</computeroutput> without its weight. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="37" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1a331bdd2e42a385b25b1e7f4f328abfc9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::Compute_weight_d</definition>
        <argsstring></argsstring>
        <name>Compute_weight_d</name>
        <briefdescription>
<para>A function object that must provide the operator <computeroutput>FT operator()(const Weighted_point_d &amp; wp)</computeroutput>, returning the weight of <computeroutput>wp</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="44" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1af8718aa99b1fb6f06894a4b37033f746" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::Power_side_of_power_sphere_d</definition>
        <argsstring></argsstring>
        <name>Power_side_of_power_sphere_d</name>
        <briefdescription>
<para>A predicate object that must provide the templated operator <computeroutput>template&lt;typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>&gt; Oriented_side operator()(ForwardIterator start, ForwardIterator end, const Weighted_point_d &amp; p)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Let <formula id="21">$ S $</formula> be the power sphere of the weighted points in range <computeroutput>[start,end)</computeroutput>. The operator returns:<itemizedlist>
<listitem><para><computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>p</computeroutput> is orthogonal to <formula id="21">$ S $</formula>,</para></listitem><listitem><para><computeroutput>ON_NEGATIVE_SIDE</computeroutput> if the power distance between <computeroutput>p</computeroutput> and <formula id="21">$ S $</formula> is positive.</para></listitem><listitem><para><computeroutput>ON_POSITIVE_SIDE</computeroutput> otherwise.</para></listitem></itemizedlist>
</para><para><simplesect kind="pre"><para>If <computeroutput>Dimension</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Dimension__tag" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Dimension_tag</ref>&lt;D&gt;</computeroutput>, then <computeroutput>std::distance(start,end)=D+1</computeroutput>. The weighted points in range <computeroutput>[start,end)</computeroutput> must be affinely independent, i.e., the simplex must not be flat. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="65" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegularTriangulationTraits_1a71362ac628cf16025c61e21b947405ea" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegularTriangulationTraits::In_flat_power_side_of_power_sphere_d</definition>
        <argsstring></argsstring>
        <name>In_flat_power_side_of_power_sphere_d</name>
        <briefdescription>
<para>A predicate object that must provide the templated operator <computeroutput>template&lt;typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>&gt; Oriented_side operator()(Flat_orientation_d orient, ForwardIterator start, ForwardIterator end, const Weighted_point_d &amp; p)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The points in range <computeroutput>[start,end)</computeroutput> and <computeroutput>p</computeroutput> are supposed to belong to the lower-dimensional flat whose orientation is given by <computeroutput>orient</computeroutput>.</para><para>Let <formula id="21">$ S $</formula> be the power sphere of the weighted points in range <computeroutput>[start,end)</computeroutput> in this lower dimensional flat. The operator returns:<itemizedlist>
<listitem><para><computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>p</computeroutput> is orthogonal to <formula id="21">$ S $</formula>,</para></listitem><listitem><para><computeroutput>ON_NEGATIVE_SIDE</computeroutput> if the power distance between <computeroutput>p</computeroutput> and <formula id="21">$ S $</formula> is positive.</para></listitem><listitem><para><computeroutput>ON_POSITIVE_SIDE</computeroutput> otherwise.</para></listitem></itemizedlist>
</para><para><simplesect kind="pre"><para><computeroutput>std::distance(start,end)=k+1</computeroutput> where <formula id="13">$ k$</formula> is the number of points used to construct <computeroutput>orient</computeroutput> (dimension of the flat). The points in range <computeroutput>[start,end)</computeroutput> must be affinely independent. <computeroutput>p</computeroutput> must be in the flat generated by these points. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="90" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classRegularTriangulationTraits_1ac4b80d2d67e42f102a4703cc5eedf09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RegularTriangulationTraits::RegularTriangulationTraits</definition>
        <argsstring>()</argsstring>
        <name>RegularTriangulationTraits</name>
        <briefdescription>
<para>The default constructor (optional). </para>        </briefdescription>
        <detaileddescription>
<para>This is not required when an instance of the traits is provided to the constructor of <computeroutput><ref refid="classCGAL_1_1Regular__triangulation" kindref="compound">CGAL::Regular_triangulation</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>The following methods permit access to the traits class&apos;s predicates and functors: </para></description>
      <memberdef kind="function" id="classRegularTriangulationTraits_1a4d6deba245d32be0815e57a55a4ef65e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits_1a79851a92387224841f84d5790932b1e7" kindref="member">Construct_point_d</ref></type>
        <definition>Construct_point_d RegularTriangulationTraits::construct_point_d_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_point_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits_1a3bbc2571330e8a1afff4edfeeedf9082" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits_1a331bdd2e42a385b25b1e7f4f328abfc9" kindref="member">Compute_weight_d</ref></type>
        <definition>Compute_weight_d RegularTriangulationTraits::compute_weight_d_object</definition>
        <argsstring>() const</argsstring>
        <name>compute_weight_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits_1a64d7795fbbb43182abc8d7102d37f0e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits_1af8718aa99b1fb6f06894a4b37033f746" kindref="member">Power_side_of_power_sphere_d</ref></type>
        <definition>Power_side_of_power_sphere_d RegularTriangulationTraits::power_side_of_power_sphere_d_object</definition>
        <argsstring>() const</argsstring>
        <name>power_side_of_power_sphere_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRegularTriangulationTraits_1af9c35744964f64ff94f6d37ffbbe2af0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationTraits_1a71362ac628cf16025c61e21b947405ea" kindref="member">In_flat_power_side_of_power_sphere_d</ref></type>
        <definition>In_flat_power_side_of_power_sphere_d RegularTriangulationTraits::in_flat_power_side_of_power_sphere_d_object</definition>
        <argsstring>() const</argsstring>
        <name>in_flat_power_side_of_power_sphere_d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationTraits.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This concept describes the geometric types and predicates required to build a regular triangulation. It corresponds to the first template parameter of the class <computeroutput><ref refid="classCGAL_1_1Regular__triangulation" kindref="compound">CGAL::Regular_triangulation</ref>&lt;RegularTriangulationTraits_, TriangulationDataStructure_&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000002"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classTriangulationTraits" kindref="compound">TriangulationTraits</ref></computeroutput></para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000002"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="structCGAL_1_1Epick__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">CGAL::Epick_d</ref>&lt;Dim&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationTraits" kindref="compound">TriangulationTraits</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/RegularTriangulationTraits.h" line="16" column="1" bodyfile="Concepts/RegularTriangulationTraits.h" bodystart="16" bodyend="132"/>
    <listofallmembers>
      <member refid="classRegularTriangulationTraits_1a331bdd2e42a385b25b1e7f4f328abfc9" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>Compute_weight_d</name></member>
      <member refid="classRegularTriangulationTraits_1a3bbc2571330e8a1afff4edfeeedf9082" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>compute_weight_d_object</name></member>
      <member refid="classRegularTriangulationTraits_1a79851a92387224841f84d5790932b1e7" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>Construct_point_d</name></member>
      <member refid="classRegularTriangulationTraits_1a4d6deba245d32be0815e57a55a4ef65e" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>construct_point_d_object</name></member>
      <member refid="classRegularTriangulationTraits_1ac4f5dbcfbf41536cf454ed4d52915704" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>FT</name></member>
      <member refid="classRegularTriangulationTraits_1a71362ac628cf16025c61e21b947405ea" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>In_flat_power_side_of_power_sphere_d</name></member>
      <member refid="classRegularTriangulationTraits_1af9c35744964f64ff94f6d37ffbbe2af0" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>in_flat_power_side_of_power_sphere_d_object</name></member>
      <member refid="classRegularTriangulationTraits_1af8718aa99b1fb6f06894a4b37033f746" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>Power_side_of_power_sphere_d</name></member>
      <member refid="classRegularTriangulationTraits_1a64d7795fbbb43182abc8d7102d37f0e2" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>power_side_of_power_sphere_d_object</name></member>
      <member refid="classRegularTriangulationTraits_1ac4b80d2d67e42f102a4703cc5eedf09f" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>RegularTriangulationTraits</name></member>
      <member refid="classRegularTriangulationTraits_1a142c277407394d5cf7aece697a24e36b" prot="public" virt="non-virtual"><scope>RegularTriangulationTraits</scope><name>Weighted_point_d</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
