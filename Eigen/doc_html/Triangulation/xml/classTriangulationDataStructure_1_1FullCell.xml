<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTriangulationDataStructure_1_1FullCell" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDataStructure::FullCell</compoundname>
    <includes local="no">Concepts/TriangulationDataStructure.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::FullCell::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <briefdescription>
<para>A handle to a vertex, which must be the same as the nested type <computeroutput><ref refid="classTriangulationDataStructure_1ab0a5285f03a0b0ecc10dee12413659ec" kindref="member">TriangulationDataStructure::Vertex_handle</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="785" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1_1FullCell_1a727e73f3657b270260445d1be97ea013" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::FullCell::Vertex_handle_iterator</definition>
        <argsstring></argsstring>
        <name>Vertex_handle_iterator</name>
        <briefdescription>
<para>An iterator over the handles to the vertices of the full cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="791" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::FullCell::Full_cell_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_handle</name>
        <briefdescription>
<para>A handle to a full cell, which must be the same as the nested type <computeroutput><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">TriangulationDataStructure::Full_cell_handle</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="797" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1_1FullCell_1a77ec2c253f1f5e2a4a88840b0a813e86" prot="public" static="no">
        <type><ref refid="classTriangulationDataStructure_1a734e9d4f614c0b1c5672cfaa4211d2cc" kindref="member">TriangulationDataStructure::Full_cell_data</ref></type>
        <definition>typedef TriangulationDataStructure::Full_cell_data TriangulationDataStructure::FullCell::TDS_data</definition>
        <argsstring></argsstring>
        <name>TDS_data</name>
        <briefdescription>
<para>A data member of this type has to be stored and accessible through access function below. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="804" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::FullCell::maximal_dimension</definition>
        <argsstring>() const</argsstring>
        <name>maximal_dimension</name>
        <briefdescription>
<para>Returns one less than the maximum number of vertices that the full cell can store. </para>        </briefdescription>
        <detaileddescription>
<para>This does not return the dimension of the actual full cell stored in <computeroutput>c</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1acd7ceb928a525ec9e02df64bfdc5542f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a727e73f3657b270260445d1be97ea013" kindref="member">Vertex_handle_iterator</ref></type>
        <definition>Vertex_handle_iterator TriangulationDataStructure::FullCell::vertices_begin</definition>
        <argsstring>() const</argsstring>
        <name>vertices_begin</name>
        <briefdescription>
<para>Returns an iterator to the first <computeroutput>Vertex_handle</computeroutput> stored in the full cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="822" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a4d6f237b590094f72b2ddfe84820371f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a727e73f3657b270260445d1be97ea013" kindref="member">Vertex_handle_iterator</ref></type>
        <definition>Vertex_handle_iterator TriangulationDataStructure::FullCell::vertices_end</definition>
        <argsstring>() const</argsstring>
        <name>vertices_end</name>
        <briefdescription>
<para>Returns an iterator pointing beyond the last <computeroutput>Vertex_handle</computeroutput> stored in the full cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1af4ca891640fb2b2944c8f1976329e102" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::FullCell::vertex</definition>
        <argsstring>(const int i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>i</computeroutput>-th vertex of the full cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula> <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="834" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a767f0af5bb89ed2661be55190b8928fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::FullCell::neighbor</definition>
        <argsstring>(const int i) const</argsstring>
        <name>neighbor</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the full cell opposite to the <computeroutput>i</computeroutput>-th vertex of the full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a9d8a7a0d0ac8390621d9029aeba166fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::FullCell::mirror_index</definition>
        <argsstring>(const int i) const</argsstring>
        <name>mirror_index</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the index of <computeroutput>c</computeroutput> in its <formula id="46">$ i^{th}$</formula> neighbor (<computeroutput>c.neighbor(i)</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para>If the returned integer is not negative, it holds that <computeroutput>c.neighbor(i)-&gt;neighbor(j) == c</computeroutput>. Returns <computeroutput>-1</computeroutput> if <computeroutput>c</computeroutput> has no adjacent full cell of index <computeroutput>i</computeroutput>. <simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula> <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="849" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a39e603599021f2d79bf4685cedcca857" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::FullCell::index</definition>
        <argsstring>(Full_cell_handle n) const</argsstring>
        <name>index</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" kindref="member">Full_cell_handle</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns the index <computeroutput>i</computeroutput> such that <computeroutput>c.neighbor(i)==n</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>n</computeroutput> must be a neighbor of <computeroutput>c</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a6d9425e82aed0096ae022b048bec1dae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TriangulationDataStructure::FullCell::index</definition>
        <argsstring>(Vertex_handle v) const</argsstring>
        <name>index</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the index <computeroutput>i</computeroutput> of the vertex <computeroutput>v</computeroutput> such that <computeroutput>c.vertex(i)==v</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>v</computeroutput> must be a vertex of the <computeroutput>c</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="863" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Internal</header>
      <description><para></para><para>These functions are used internally by the triangulation data structure.</para><para>The user is not encouraged to use them directly as they may change in the future.  </para></description>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1ae0c07ac2538bceada47120fb617eff43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classTriangulationDataStructure_1_1FullCell_1a77ec2c253f1f5e2a4a88840b0a813e86" kindref="member">TDS_data</ref> &amp;</type>
        <definition>const TDS_data&amp; TriangulationDataStructure::FullCell::tds_data</definition>
        <argsstring>() const</argsstring>
        <name>tds_data</name>
        <briefdescription>
<para>Returns the data member of type <computeroutput>TDS_data</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>It is typically used to mark the full cell as <emphasis>visited</emphasis> during operations on a <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a349132871d005bd2af491a5a633018d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a77ec2c253f1f5e2a4a88840b0a813e86" kindref="member">TDS_data</ref> &amp;</type>
        <definition>TDS_data&amp; TriangulationDataStructure::FullCell::tds_data</definition>
        <argsstring>()</argsstring>
        <name>tds_data</name>
        <briefdescription>
<para>Same as above, but returns a reference to a non-<computeroutput>const</computeroutput> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="885" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a8b17ef7f715d3870b12dad5f9dc2fa3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle TriangulationDataStructure::FullCell::mirror_vertex</definition>
        <argsstring>(const int i, const int cur_dim) const</argsstring>
        <name>mirror_vertex</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>cur_dim</declname>
        </param>
        <briefdescription>
<para>Returns a handle to the mirror vertex of the <computeroutput>i</computeroutput>-th vertex of full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>cur_dim</computeroutput> is the current dimension of the triangulation data structure. </para><para>This function works even if the adjacency information stored in the neighbor full cell <computeroutput>*c.neighbor(i)</computeroutput> is corrupted. This is useful when temporary corruption is necessary during surgical operations on a triangulation. </para><para><simplesect kind="pre"><para><formula id="47">$0 \leq i,$</formula> <computeroutput>cur_dim</computeroutput> <formula id="48">$ \leq $</formula> <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="899" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Update Functions</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a1297d245cc605802cd07fa3c803ab3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::FullCell::set_vertex</definition>
        <argsstring>(const int i, Vertex_handle v)</argsstring>
        <name>set_vertex</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets the <formula id="7">$ i$</formula>-th vertex of the full cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula> <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a4237a06bc492ac7fb221edca956b836c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::FullCell::set_neighbor</definition>
        <argsstring>(const int i, Full_cell_handle n)</argsstring>
        <name>set_neighbor</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" kindref="member">Full_cell_handle</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets the <computeroutput>i</computeroutput>-th neighbor of <computeroutput>c</computeroutput> to <computeroutput>n</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Full cell <computeroutput>n</computeroutput> is opposite to the <formula id="7">$ i$</formula>-th vertex of <computeroutput>c</computeroutput>. <simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="919" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1ab963e3ff68eb2860bbe8e6bbb32ce2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::FullCell::set_mirror_index</definition>
        <argsstring>(const int i, const int index)</argsstring>
        <name>set_mirror_index</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Sets the mirror index of the <formula id="7">$ i$</formula>-th vertex of <computeroutput>c</computeroutput> to <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This corresponds to the index, in <computeroutput>c-&gt;neighbor(i)</computeroutput>, of the full cell <computeroutput>c</computeroutput>.</para><para>Note: a model of this concept may choose not to store mirror indices, in which case this function should do nothing. <simplesect kind="pre"><para><formula id="35">$0 \leq i \leq $</formula><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a260a58b3ec0a88bebaed4d835a615400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::FullCell::swap_vertices</definition>
        <argsstring>(int d1, int d2)</argsstring>
        <name>swap_vertices</name>
        <param>
          <type>int</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
<para>Switches the orientation of the full cell <computeroutput>c</computeroutput> by swapping its vertices with index <computeroutput>d1</computeroutput> and <computeroutput>d2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="49">$0 \leq d1,d2 \leq $</formula><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" kindref="member">maximal_dimension()</ref></computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="937" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Queries</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a6755cb4da606e1910cc3fa9f7dcaaa45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::FullCell::has_vertex</definition>
        <argsstring>(Vertex_handle v) const</argsstring>
        <name>has_vertex</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the vertex <computeroutput>v</computeroutput> is a vertex of the full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1ab005a686d33a83b03362b8fcab6526a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::FullCell::has_vertex</definition>
        <argsstring>(Vertex_handle v, int &amp;ret) const</argsstring>
        <name>has_vertex</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> and sets the value of <computeroutput>ret</computeroutput> to the index of <computeroutput>v</computeroutput> in <computeroutput>c</computeroutput> if the vertex <computeroutput>v</computeroutput> is a vertex of the full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a1b6b7bcc59dc9f815d3b5b62de0a59cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::FullCell::has_neighbor</definition>
        <argsstring>(Full_cell_handle n) const</argsstring>
        <name>has_neighbor</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" kindref="member">Full_cell_handle</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the full cell <computeroutput>n</computeroutput> is a neighbor of the full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1a4991e06ddcd9a30a4a9b1ac1073af3c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::FullCell::has_neighbor</definition>
        <argsstring>(Full_cell_handle n, int &amp;ret) const</argsstring>
        <name>has_neighbor</name>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" kindref="member">Full_cell_handle</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> and sets the value of <computeroutput>ret</computeroutput> to the index of <computeroutput>n</computeroutput> as a neighbor of <computeroutput>c</computeroutput> if the full cell <computeroutput>n</computeroutput> is a neighbor of the full cell <computeroutput>c</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="970" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1aac12f9d0c7c7ca8630b816c219a19b38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::FullCell::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>        </briefdescription>
        <detaileddescription>
<para></para><para>Performs some validity checks on the full cell <computeroutput>c</computeroutput>.</para><para>It must <emphasis>at least</emphasis> check that for each <emphasis>existing</emphasis> neighbor <computeroutput>n</computeroutput>, <computeroutput>c</computeroutput> is also a neighbor of <computeroutput>n</computeroutput>.</para><para>Returns <computeroutput>true</computeroutput> if all the tests pass, <computeroutput>false</computeroutput> if any test fails. See the documentation for the models of this concept to see the additionnal (if any) validity checks that they implement.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="990" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Input/Output</header>
      <description><para>These operators can be used directly and are called by the I/O operator of class <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. </para></description>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1af61ab73a6b9a28179cdf96ec9e8d56f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; TriangulationDataStructure::FullCell::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Triangulation_ds_full_cell&lt; TriangulationDataStructure &gt; &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Triangulation_ds_full_cell&lt; <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Writes (possibly) non-combinatorial information about full cell <computeroutput>c</computeroutput> to the stream <computeroutput>os</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="1006" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1FullCell_1ae077296e01c165cad1e189bebf8e52d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; TriangulationDataStructure::FullCell::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Triangulation_ds_full_cell&lt; TriangulationDataStructure &gt; &amp;c)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Triangulation_ds_full_cell&lt; <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Reads from stream <computeroutput>is</computeroutput> the full cell information written by <computeroutput>operator&lt;&lt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="1013" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> describes the type used by a <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> to store the full cells. </para>    </briefdescription>
    <detaileddescription>
<para> It sets requirements of combinatorial nature only, as geometry is not concerned here. In the context of triangulation, the term full cell refers to a face of <emphasis>maximal</emphasis> dimension. This maximality characteristic is emphasized by using the adjective <emphasis>full</emphasis>.</para><para>A <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> is responsible for storing handles to the vertices of the full cell as well as handles to the adjacent full cells. Two full cells are said to be adjacent when they share a facet. Adjacent full cells are called hereafter neighbors.</para><para><xrefsect id="hasModels_1_hasModels000005"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__full__cell" kindref="compound">CGAL::Triangulation_ds_full_cell</ref>&lt;TriangulationDataStructure_, DSFullCellStoragePolicy&gt;</computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Triangulation__full__cell" kindref="compound">CGAL::Triangulation_full_cell</ref>&lt;TriangulationTraits_, Data, TriangulationDSFullCell_&gt;</computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">TriangulationDataStructure::Face</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/TriangulationDataStructure.h" line="775" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="775" bodyend="1017"/>
    <listofallmembers>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a80af282e6b1e48960ba7a62e6af20bf8" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>Full_cell_handle</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a1b6b7bcc59dc9f815d3b5b62de0a59cb" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>has_neighbor</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a4991e06ddcd9a30a4a9b1ac1073af3c4" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>has_neighbor</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a6755cb4da606e1910cc3fa9f7dcaaa45" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>has_vertex</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1ab005a686d33a83b03362b8fcab6526a5" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>has_vertex</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a39e603599021f2d79bf4685cedcca857" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>index</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a6d9425e82aed0096ae022b048bec1dae" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>index</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1aac12f9d0c7c7ca8630b816c219a19b38" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>is_valid</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a4123a5143fc7f984cbe6d3fd1e67591c" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>maximal_dimension</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a9d8a7a0d0ac8390621d9029aeba166fc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>mirror_index</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a8b17ef7f715d3870b12dad5f9dc2fa3e" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>mirror_vertex</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a767f0af5bb89ed2661be55190b8928fc" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>neighbor</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1af61ab73a6b9a28179cdf96ec9e8d56f3" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1ae077296e01c165cad1e189bebf8e52d5" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1ab963e3ff68eb2860bbe8e6bbb32ce2d0" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>set_mirror_index</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a4237a06bc492ac7fb221edca956b836c" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>set_neighbor</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a1297d245cc605802cd07fa3c803ab3b9" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>set_vertex</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a260a58b3ec0a88bebaed4d835a615400" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>swap_vertices</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a77ec2c253f1f5e2a4a88840b0a813e86" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>TDS_data</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1ae0c07ac2538bceada47120fb617eff43" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>tds_data</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a349132871d005bd2af491a5a633018d6" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>tds_data</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1af4ca891640fb2b2944c8f1976329e102" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>vertex</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a1c13c97a5b95085355e1c4c8f7fb40cb" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>Vertex_handle</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a727e73f3657b270260445d1be97ea013" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>Vertex_handle_iterator</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1acd7ceb928a525ec9e02df64bfdc5542f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>vertices_begin</name></member>
      <member refid="classTriangulationDataStructure_1_1FullCell_1a4d6f237b590094f72b2ddfe84820371f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::FullCell</scope><name>vertices_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
