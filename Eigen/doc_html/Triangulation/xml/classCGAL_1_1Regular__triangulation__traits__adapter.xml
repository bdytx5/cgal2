<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Regular__triangulation__traits__adapter" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Regular_triangulation_traits_adapter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">RTTraits</basecompoundref>
    <includes local="no">CGAL/Regular_triangulation_traits_adapter.h</includes>
    <templateparamlist>
      <param>
        <type>typename RTTraits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Regular__triangulation__traits__adapter_1a3d5508a607861655be35680a4cda46ce" prot="public" static="no">
        <type>RTTraits</type>
        <definition>typedef RTTraits CGAL::Regular_triangulation_traits_adapter&lt; RTTraits &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
<para>The base traits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Regular_triangulation_traits_adapter.h" line="41" column="1" bodyfile="CGAL/Regular_triangulation_traits_adapter.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Regular__triangulation__traits__adapter_1afc18cbe402862aa6184762f052a5e62b" prot="public" static="no">
        <type>K::Weighted_point_d</type>
        <definition>typedef K::Weighted_point_d CGAL::Regular_triangulation_traits_adapter&lt; RTTraits &gt;::Point_d</definition>
        <argsstring></argsstring>
        <name>Point_d</name>
        <briefdescription>
<para>The weighted point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Regular_triangulation_traits_adapter.h" line="46" column="1" bodyfile="CGAL/Regular_triangulation_traits_adapter.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Regular__triangulation__traits__adapter_1aa8c1596d4f159bdad61bc15040c55a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Regular_triangulation_traits_adapter&lt; RTTraits &gt;::Regular_triangulation_traits_adapter</definition>
        <argsstring>()</argsstring>
        <name>Regular_triangulation_traits_adapter</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Regular_triangulation_traits_adapter.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Regular__triangulation__traits__adapter" kindref="compound">Regular_triangulation_traits_adapter</ref></computeroutput> is used internally by the class <computeroutput><ref refid="classCGAL_1_1Regular__triangulation" kindref="compound">Regular_triangulation</ref></computeroutput> to wrap its first template parameter (<computeroutput>RegularTriangulationTraits_</computeroutput>) so that the base class <computeroutput><ref refid="classCGAL_1_1Triangulation" kindref="compound">Triangulation</ref></computeroutput> manipulates weighted points instead of bare points. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RTTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the <computeroutput><ref refid="classRegularTriangulationTraits" kindref="compound">RegularTriangulationTraits</ref></computeroutput> concept.</para></parameterdescription>
</parameteritem>
</parameterlist>
In addition to the types described below, the following predicates and functors are adapted so that they can be called with weighted points instead of bare points as parameters. In practice, the functors from the base class <computeroutput>RTTraits</computeroutput> are called, ignoring the weights.<itemizedlist>
<listitem><para><computeroutput>Orientation_d</computeroutput></para></listitem><listitem><para><computeroutput>Construct_flat_orientation_d</computeroutput></para></listitem><listitem><para><computeroutput>In_flat_orientation_d</computeroutput></para></listitem><listitem><para><computeroutput>Contained_in_affine_hull_d</computeroutput></para></listitem><listitem><para><computeroutput>Compare_lexicographically_d</computeroutput></para></listitem><listitem><para><computeroutput>Compute_coordinate_d</computeroutput></para></listitem><listitem><para><computeroutput>Point_dimension_d</computeroutput></para></listitem><listitem><para><computeroutput>Less_coordinate_d</computeroutput> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>RTTraits</label>
      </node>
      <node id="12">
        <label>CGAL::Regular_triangulation_traits_adapter&lt; RTTraits &gt;</label>
        <link refid="classCGAL_1_1Regular__triangulation__traits__adapter"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>RTTraits</label>
      </node>
      <node id="14">
        <label>CGAL::Regular_triangulation_traits_adapter&lt; RTTraits &gt;</label>
        <link refid="classCGAL_1_1Regular__triangulation__traits__adapter"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Regular_triangulation_traits_adapter.h" line="32" column="1" bodyfile="CGAL/Regular_triangulation_traits_adapter.h" bodystart="32" bodyend="60"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Regular__triangulation__traits__adapter_1a3d5508a607861655be35680a4cda46ce" prot="public" virt="non-virtual"><scope>CGAL::Regular_triangulation_traits_adapter</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Regular__triangulation__traits__adapter_1afc18cbe402862aa6184762f052a5e62b" prot="public" virt="non-virtual"><scope>CGAL::Regular_triangulation_traits_adapter</scope><name>Point_d</name></member>
      <member refid="classCGAL_1_1Regular__triangulation__traits__adapter_1aa8c1596d4f159bdad61bc15040c55a61" prot="public" virt="non-virtual"><scope>CGAL::Regular_triangulation_traits_adapter</scope><name>Regular_triangulation_traits_adapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
