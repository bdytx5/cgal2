<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_Bezier_curve_traits_2::Curve_2</compoundname>
    <includes local="no">CGAL/Arr_Bezier_curve_traits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1ab241dee7867c581f7e17f7b35fdc5a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::Curve_2</definition>
        <argsstring>()</argsstring>
        <name>Curve_2</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1af990930e984b99207d21fefe033975a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::Curve_2</definition>
        <argsstring>(InputIterator pts_begin, InputIterator pts_end)</argsstring>
        <name>Curve_2</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>pts_begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>pts_end</declname>
        </param>
        <briefdescription>
<para>constructs a B<eacute/>zier curve as defined by the given range of control points. </para>        </briefdescription>
        <detaileddescription>
<para>The value-type of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> is <computeroutput>RatKernel::Point_2</computeroutput>. <simplesect kind="pre"><para>The input range must contain at least two control points. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="111" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a48dc2584f047c6c9abccde97ce23d70c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::number_of_control_points</definition>
        <argsstring>() const</argsstring>
        <name>number_of_control_points</name>
        <briefdescription>
<para>returns the number of control points that define <computeroutput>B</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a4890447562d2abc3e146c9ec3ac02bce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RatKernel::Point_2</type>
        <definition>RatKernel::Point_2 CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::control_point</definition>
        <argsstring>(size_t k) const</argsstring>
        <name>control_point</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>returns the <formula id="80">$ k$</formula>th control point. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the first control point equals the curve source, while the last control point equals its target. The rest of the control points do not lie on the curve. <simplesect kind="pre"><para><formula id="80">$ k$</formula> is smaller than the number of control points. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a2858f5fa7d4ed39441365536ff6f72ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RatKernel::Point_2</type>
        <definition>RatKernel::Point_2 CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::operator()</definition>
        <argsstring>(const Rational &amp;t) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1a156904cec80f52a59169d74e0b7f5645" kindref="member">Rational</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the point <formula id="235">$ B(t)$</formula> on the curve that corresponds to the given rational parameter value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1adcfd7b5eaf35779cb3b00837696fc28b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AlgKernel::Point_2</type>
        <definition>AlgKernel::Point_2 CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Curve_2::operator()</definition>
        <argsstring>(const Algebraic &amp;t) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1a50dc9b97db140ae45d31891a503713d9" kindref="member">Algebraic</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the point <formula id="235">$ B(t)$</formula> on the curve that corresponds to the given algebraic parameter value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2" kindref="compound">Curve_2</ref></computeroutput> class nested within the B<eacute/>zier traits class is used to represent a B<eacute/>zier curve of arbitrary degree, which is defined by a sequence of rational control points. </para>    </briefdescription>
    <detaileddescription>
<para>In addition to the methods listed below, the I/O operators <ref refid="group__PkgArrangement2op__left__shift" kindref="compound"><computeroutput>operator&lt;&lt;</computeroutput> </ref> and <ref refid="group__PkgArrangement2op__right__shift" kindref="compound"><computeroutput>operator&gt;&gt;</computeroutput> </ref> for standard output-streams are also supported. The copy constructor and assignment operator are supported as well. </para>    </detaileddescription>
    <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="93" column="1" bodyfile="CGAL/Arr_Bezier_curve_traits_2.h" bodystart="93" bodyend="145"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a4890447562d2abc3e146c9ec3ac02bce" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>control_point</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1ab241dee7867c581f7e17f7b35fdc5a2b" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1af990930e984b99207d21fefe033975a6" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a48dc2584f047c6c9abccde97ce23d70c" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>number_of_control_points</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1a2858f5fa7d4ed39441365536ff6f72ca" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2_1adcfd7b5eaf35779cb3b00837696fc28b" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2::Curve_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
