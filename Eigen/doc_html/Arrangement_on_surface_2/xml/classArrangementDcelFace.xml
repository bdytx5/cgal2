<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classArrangementDcelFace" kind="class" language="C++" prot="public">
    <compoundname>ArrangementDcelFace</compoundname>
    <includes local="no">Concepts/ArrangementDcelFace.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>The non-mutable iterators <computeroutput>Hole_const_iterator</computeroutput>, and <computeroutput>Isolated_vertex_const_iterator</computeroutput> are also defined. </para></description>
      <memberdef kind="typedef" id="classArrangementDcelFace_1a3cc43fee94aa982c7686252436b5f1dc" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelFace::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <briefdescription>
<para>the corresponding Dcel vertex type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="27" column="1" bodyfile="Concepts/ArrangementDcelFace.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelFace_1abfb4dbcac5d405a70abb5b5cf717c29c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelFace::Halfedge</definition>
        <argsstring></argsstring>
        <name>Halfedge</name>
        <briefdescription>
<para>the corresponding Dcel halfedge type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="32" column="1" bodyfile="Concepts/ArrangementDcelFace.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelFace_1adbca7318cfd2ef6b9ed4e2f92f6236f0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelFace::Hole_iterator</definition>
        <argsstring></argsstring>
        <name>Hole_iterator</name>
        <briefdescription>
<para>a bidirectional iterator over the holes in inside the face. </para>        </briefdescription>
        <detaileddescription>
<para>Its value-type is <computeroutput>Halfedge*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="38" column="1" bodyfile="Concepts/ArrangementDcelFace.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelFace_1afcfd2b91c5e90ea3945505e066af9076" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelFace::Isolated_vertex_iterator</definition>
        <argsstring></argsstring>
        <name>Isolated_vertex_iterator</name>
        <briefdescription>
<para>a bidirectional iterator over the isolated vertices in inside the face. </para>        </briefdescription>
        <detaileddescription>
<para>Its value-type is <computeroutput>Vertex*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="44" column="1" bodyfile="Concepts/ArrangementDcelFace.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classArrangementDcelFace_1a3cefc13765b5253ed3feef4dc017bd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArrangementDcelFace::Arr_dcel_face</definition>
        <argsstring>()</argsstring>
        <name>Arr_dcel_face</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1afbf2cc28a869d63904f688dabc1fe371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::assign</definition>
        <argsstring>(const Self &amp;other)</argsstring>
        <name>assign</name>
        <param>
          <type>const Self &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>assigns <computeroutput>f</computeroutput> with the contents of the <computeroutput>other</computeroutput> face. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <description><para>All functions below also have <computeroutput>const</computeroutput> counterparts, returning non-mutable pointers or iterators: </para></description>
      <memberdef kind="function" id="classArrangementDcelFace_1a27cabc8f81f93bdc15e428cc2ca492c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ArrangementDcelFace::is_unbounded</definition>
        <argsstring>() const</argsstring>
        <name>is_unbounded</name>
        <briefdescription>
<para>returns whether the face is unbounded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1ab8b0a0e7774d150e529483c5d63ce71b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelFace_1abfb4dbcac5d405a70abb5b5cf717c29c" kindref="member">Halfedge</ref> *</type>
        <definition>Halfedge* ArrangementDcelFace::halfedge</definition>
        <argsstring>()</argsstring>
        <name>halfedge</name>
        <briefdescription>
<para>returns an incident halfedge along the outer boundary of the face. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>f</computeroutput> has no outer boundary, the function returns <computeroutput>NULL</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a57d2084d9f427e5727d9f2e2cd86c48c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ArrangementDcelFace::number_of_holes</definition>
        <argsstring>() const</argsstring>
        <name>number_of_holes</name>
        <briefdescription>
<para>returns the number of holes inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a4d19fbf23b382625f80a0c430e7ad503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelFace_1adbca7318cfd2ef6b9ed4e2f92f6236f0" kindref="member">Hole_iterator</ref></type>
        <definition>Hole_iterator ArrangementDcelFace::holes_begin</definition>
        <argsstring>()</argsstring>
        <name>holes_begin</name>
        <briefdescription>
<para>returns a begin-iterator for the holes inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1acb08c547e3381d8ac119061946b5b67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelFace_1adbca7318cfd2ef6b9ed4e2f92f6236f0" kindref="member">Hole_iterator</ref></type>
        <definition>Hole_iterator ArrangementDcelFace::holes_end</definition>
        <argsstring>()</argsstring>
        <name>holes_end</name>
        <briefdescription>
<para>returns a past-the-end iterator for the holes inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1acbdaac192046f30ebefe67558f0f3606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ArrangementDcelFace::number_of_isolated_vertices</definition>
        <argsstring>() const</argsstring>
        <name>number_of_isolated_vertices</name>
        <briefdescription>
<para>returns the number of isolated vertices inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a8da896af0d8de2d12698a7763164fb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelFace_1afcfd2b91c5e90ea3945505e066af9076" kindref="member">Isolated_vertex_iterator</ref></type>
        <definition>Isolated_vertex_iterator ArrangementDcelFace::isolated_vertices_begin</definition>
        <argsstring>()</argsstring>
        <name>isolated_vertices_begin</name>
        <briefdescription>
<para>returns a begin-iterator for the isolated vertices inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a6a7b57f79ce40c0d18f87df10d8f9add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelFace_1afcfd2b91c5e90ea3945505e066af9076" kindref="member">Isolated_vertex_iterator</ref></type>
        <definition>Isolated_vertex_iterator ArrangementDcelFace::isolated_vertices_end</definition>
        <argsstring>()</argsstring>
        <name>isolated_vertices_end</name>
        <briefdescription>
<para>returns a past-the-end iterator for the isolated vertices inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classArrangementDcelFace_1abe5debd6fc099c7dc628baedca15f62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::set_unbounded</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_unbounded</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>sets the face as unbounded (if <computeroutput>flag</computeroutput> is <computeroutput>true</computeroutput>), or as a bounded face (if it is <computeroutput>false</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a3fc3d8bfc4cbdea655a250d4b856a694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::set_halfedge</definition>
        <argsstring>(Halfedge *e)</argsstring>
        <name>set_halfedge</name>
        <param>
          <type><ref refid="classArrangementDcelFace_1abfb4dbcac5d405a70abb5b5cf717c29c" kindref="member">Halfedge</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>sets the incident halfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a229be97b35bf75e4d3b6b10e9d939965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::add_hole</definition>
        <argsstring>(Halfedge *e)</argsstring>
        <name>add_hole</name>
        <param>
          <type><ref refid="classArrangementDcelFace_1abfb4dbcac5d405a70abb5b5cf717c29c" kindref="member">Halfedge</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>adds <computeroutput>e</computeroutput> as a hole inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a6b504bdd5a6be75e44c3061641ca1949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::erase_hole</definition>
        <argsstring>(Hole_iterator it)</argsstring>
        <name>erase_hole</name>
        <param>
          <type><ref refid="classArrangementDcelFace_1adbca7318cfd2ef6b9ed4e2f92f6236f0" kindref="member">Hole_iterator</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>removes the hole that <computeroutput>it</computeroutput> points to from inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a1821829965f4058807a0f9ccd96261b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::add_isolated_vertex</definition>
        <argsstring>(Vertex *v)</argsstring>
        <name>add_isolated_vertex</name>
        <param>
          <type><ref refid="classArrangementDcelFace_1a3cc43fee94aa982c7686252436b5f1dc" kindref="member">Vertex</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>adds <computeroutput>v</computeroutput> as an isolated vertex inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelFace_1a996569d42ff78b6202a70b4ee9cf78b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelFace::erase_isolated_vertex</definition>
        <argsstring>(Isolated_vertex_iterator it)</argsstring>
        <name>erase_isolated_vertex</name>
        <param>
          <type><ref refid="classArrangementDcelFace_1afcfd2b91c5e90ea3945505e066af9076" kindref="member">Isolated_vertex_iterator</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>removes the isolated vertex that <computeroutput>it</computeroutput> points to from inside <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelFace.h" line="144" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A face record in a Dcel data structure. A face may either be unbounded, otherwise it has an incident halfedge along the chain defining its outer boundary. A face may also contain holes and isolated vertices in its interior. </para>    </briefdescription>
    <detaileddescription>
<para> <simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcel" kindref="compound">ArrangementDcel</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcelVertex" kindref="compound">ArrangementDcelVertex</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcelHalfedge" kindref="compound">ArrangementDcelHalfedge</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ArrangementDcelFace.h" line="17" column="1" bodyfile="Concepts/ArrangementDcelFace.h" bodystart="17" bodyend="148"/>
    <listofallmembers>
      <member refid="classArrangementDcelFace_1a229be97b35bf75e4d3b6b10e9d939965" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>add_hole</name></member>
      <member refid="classArrangementDcelFace_1a1821829965f4058807a0f9ccd96261b0" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>add_isolated_vertex</name></member>
      <member refid="classArrangementDcelFace_1a3cefc13765b5253ed3feef4dc017bd48" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>Arr_dcel_face</name></member>
      <member refid="classArrangementDcelFace_1afbf2cc28a869d63904f688dabc1fe371" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>assign</name></member>
      <member refid="classArrangementDcelFace_1a6b504bdd5a6be75e44c3061641ca1949" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>erase_hole</name></member>
      <member refid="classArrangementDcelFace_1a996569d42ff78b6202a70b4ee9cf78b2" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>erase_isolated_vertex</name></member>
      <member refid="classArrangementDcelFace_1ab8b0a0e7774d150e529483c5d63ce71b" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>halfedge</name></member>
      <member refid="classArrangementDcelFace_1abfb4dbcac5d405a70abb5b5cf717c29c" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>Halfedge</name></member>
      <member refid="classArrangementDcelFace_1adbca7318cfd2ef6b9ed4e2f92f6236f0" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>Hole_iterator</name></member>
      <member refid="classArrangementDcelFace_1a4d19fbf23b382625f80a0c430e7ad503" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>holes_begin</name></member>
      <member refid="classArrangementDcelFace_1acb08c547e3381d8ac119061946b5b67f" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>holes_end</name></member>
      <member refid="classArrangementDcelFace_1a27cabc8f81f93bdc15e428cc2ca492c6" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>is_unbounded</name></member>
      <member refid="classArrangementDcelFace_1afcfd2b91c5e90ea3945505e066af9076" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>Isolated_vertex_iterator</name></member>
      <member refid="classArrangementDcelFace_1a8da896af0d8de2d12698a7763164fb50" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>isolated_vertices_begin</name></member>
      <member refid="classArrangementDcelFace_1a6a7b57f79ce40c0d18f87df10d8f9add" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>isolated_vertices_end</name></member>
      <member refid="classArrangementDcelFace_1a57d2084d9f427e5727d9f2e2cd86c48c" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>number_of_holes</name></member>
      <member refid="classArrangementDcelFace_1acbdaac192046f30ebefe67558f0f3606" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>number_of_isolated_vertices</name></member>
      <member refid="classArrangementDcelFace_1a3fc3d8bfc4cbdea655a250d4b856a694" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>set_halfedge</name></member>
      <member refid="classArrangementDcelFace_1abe5debd6fc099c7dc628baedca15f62a" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>set_unbounded</name></member>
      <member refid="classArrangementDcelFace_1a3cc43fee94aa982c7686252436b5f1dc" prot="public" virt="non-virtual"><scope>ArrangementDcelFace</scope><name>Vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
