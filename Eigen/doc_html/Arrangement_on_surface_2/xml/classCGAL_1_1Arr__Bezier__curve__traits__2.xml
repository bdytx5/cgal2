<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Arr__Bezier__curve__traits__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_Bezier_curve_traits_2</compoundname>
    <includes local="no">CGAL/Arr_Bezier_curve_traits_2.h</includes>
    <innerclass refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Curve__2" prot="public">CGAL::Arr_Bezier_curve_traits_2::Curve_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1Point__2" prot="public">CGAL::Arr_Bezier_curve_traits_2::Point_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1_1X__monotone__curve__2" prot="public">CGAL::Arr_Bezier_curve_traits_2::X_monotone_curve_2</innerclass>
    <templateparamlist>
      <param>
        <type>typename RatKernel</type>
      </param>
      <param>
        <type>typename AlgKernel</type>
      </param>
      <param>
        <type>typename NtTraits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1a156904cec80f52a59169d74e0b7f5645" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Rational</definition>
        <argsstring></argsstring>
        <name>Rational</name>
        <briefdescription>
<para>the <computeroutput>NtTraits::Rational</computeroutput> type (and also the <computeroutput>RatKernel::FT</computeroutput> type). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="71" column="1" bodyfile="CGAL/Arr_Bezier_curve_traits_2.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__Bezier__curve__traits__2_1a50dc9b97db140ae45d31891a503713d9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Arr_Bezier_curve_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Algebraic</definition>
        <argsstring></argsstring>
        <name>Algebraic</name>
        <briefdescription>
<para>the <computeroutput>NtTraits::Algebraic</computeroutput> type (and also the <computeroutput>AlgKernel::FT</computeroutput> type). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="77" column="1" bodyfile="CGAL/Arr_Bezier_curve_traits_2.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The traits class <computeroutput><ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2" kindref="compound">Arr_Bezier_curve_traits_2</ref></computeroutput> is a model of the <computeroutput><ref refid="classArrangementTraits__2" kindref="compound">ArrangementTraits_2</ref></computeroutput> concept that handles planar B<eacute/>zier curves. </para>    </briefdescription>
    <detaileddescription>
<para>A planar <emphasis>B<eacute/>zier curve</emphasis> <formula id="193">$ B$</formula> is a parametric curve defined by a sequence of <emphasis>control points</emphasis> <formula id="194">$ p_0, \ldots, p_n$</formula> as follows:</para><para><formula id="195">\begin{eqnarray*} B(t) = \left(X(t), Y(t)\right) = \ccSum{k=0}{n}{p_k \cdot \frac{n!}{k! (n-k)!} \cdot t^k (1-t)^{n-k}}\ . \end{eqnarray*}</formula> where <formula id="196">$ t \in [0, 1]$</formula>. The degree of the curve is therefore <formula id="197">$ n$</formula> - namely, <formula id="198">$ X(t)$</formula> and <formula id="199">$ Y(t)$</formula> are polynomials of degree <formula id="197">$ n$</formula>. B<eacute/>zier curves have numerous applications in computer graphics and solid modelling. They are used, for example, in free-form sketches and for defining the true-type fonts.</para><para>In our representation, we assume that the coordinates of all control points are rational numbers (namely they are given as objects of the <computeroutput>RatKernel::Point_2</computeroutput> type), so both <formula id="198">$ X(t)$</formula> and <formula id="199">$ Y(t)$</formula> are polynomials with rational coefficients. The intersection points between curves are however algebraic numbers, and their exact computation is time-consuming. The traits class therefore contains a layer of geometric filtering that performs all computation in an approximate manner whenever possible, and it resorts to exact computations only when the approximate computation fails to produce an unambiguous result.</para><para>We therefore require separate representations of the control points and the intersection points. The <computeroutput>NtTraits</computeroutput> should be instantiated with a class that defines nested <computeroutput>Integer</computeroutput>, <computeroutput>Rational</computeroutput> and <computeroutput>Algebraic</computeroutput> number types and supports various operations on them, yielding certified computation results (for example, in can convert rational numbers to algebraic numbers and can compute roots of polynomials with integer coefficients). The other template parameters, <computeroutput>RatKernel</computeroutput> and <computeroutput>AlgKernel</computeroutput> should be geometric kernels templated with the <computeroutput>NtTraits::Rational</computeroutput> and <computeroutput>NtTraits::Algebraic</computeroutput> number types, respectively. It is recommended to instantiate the <computeroutput>CORE_algebraic_number_traits</computeroutput> class as the <computeroutput>NtTraits</computeroutput> parameter, with <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt;NtTraits::Rational&gt;</computeroutput> and <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt;NtTraits::Algebraic&gt;</computeroutput> instantiating the two kernel types, respectively. The number types in this case are provided by the Core library, with its ability to exactly represent simple algebraic numbers.</para><para>While <computeroutput><ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2" kindref="compound">Arr_Bezier_curve_traits_2</ref></computeroutput> models the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Boolean_set_operations_2.tag">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>, the implementation of the <computeroutput>Are_mergeable_2</computeroutput> operation does not enforce the input curves to have the same direction as a precondition. Moreover, <computeroutput><ref refid="classCGAL_1_1Arr__Bezier__curve__traits__2" kindref="compound">Arr_Bezier_curve_traits_2</ref></computeroutput> supports the merging of curves of opposite directions.</para><para><xrefsect id="models_1_models000002"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classArrangementTraits__2" kindref="compound">ArrangementTraits_2</ref></computeroutput> </para><para><computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Boolean_set_operations_2.tag">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="CGAL/Arr_Bezier_curve_traits_2.h" line="61" column="1" bodyfile="CGAL/Arr_Bezier_curve_traits_2.h" bodystart="61" bodyend="300"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1a50dc9b97db140ae45d31891a503713d9" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2</scope><name>Algebraic</name></member>
      <member refid="classCGAL_1_1Arr__Bezier__curve__traits__2_1a156904cec80f52a59169d74e0b7f5645" prot="public" virt="non-virtual"><scope>CGAL::Arr_Bezier_curve_traits_2</scope><name>Rational</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
