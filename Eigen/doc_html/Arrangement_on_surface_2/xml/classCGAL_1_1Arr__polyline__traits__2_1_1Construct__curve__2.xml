<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_polyline_traits_2::Construct_curve_2</compoundname>
    <includes local="no">CGAL/Arr_polyline_traits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1a40bbdf3527134bd1ec9163311ef65a87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Curve_2</type>
        <definition>Curve_2 CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Construct_curve_2::operator()</definition>
        <argsstring>(const Point_2 &amp;p, const Point_2 &amp;q) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__polyline__traits__2_1a9bcf8e230ad3ac70bf14484ab47f606b" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__polyline__traits__2_1a9bcf8e230ad3ac70bf14484ab47f606b" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Obtain a polyline connecting the two given endpoints. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The first point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>The second point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> are distinct. </para></simplesect>
<simplesect kind="return"><para>A segment connecting <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1a016ff32c594745c6f696c248207d3c7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Curve_2</type>
        <definition>Curve_2 CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Construct_curve_2::operator()</definition>
        <argsstring>(const Segment_2 &amp;seg) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__polyline__traits__2_1a313dd43061d19056ebcec4152b15dd87" kindref="member">Segment_2</ref> &amp;</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
<para>Obtain a polyline that comprises of one given segment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seg</parametername>
</parameternamelist>
<parameterdescription>
<para>input segment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>seg</computeroutput> is not degenerated (not tested) </para></simplesect>
<simplesect kind="return"><para>A polyline with one segment, namely <computeroutput>seg</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1aa026d066b9ed23f9b77799c3153d350e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          </param>
        </templateparamlist>
        <type>Curve_2</type>
        <definition>Curve_2 CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Construct_curve_2::operator()</definition>
        <argsstring>(ForwardIterator begin, ForwardIterator end) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Construct a well-oriented polyline from a range of either <computeroutput>SegmentTraits_2::Point_2</computeroutput> or <computeroutput>SegmentTraits_2::Segment_2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator pointing to the first element in the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator pointing to the past-the-end element in the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The given range form a continuous and well-oriented polyline (not tested). </para></simplesect>
<simplesect kind="pre"><para>Contains no degenerated segments (not tested) </para></simplesect>
<simplesect kind="return"><para>A polyline using the corresponding construction implementation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Construction functor of a general (not necessarily <formula id="138">$x$</formula>-monotone) polyline. </para>    </briefdescription>
    <detaileddescription>
<para>This functor constructs general polylines. Its <computeroutput>operator()</computeroutput> is oveloaded to support various input types.</para><para>Note that the composing segments, depending on the <computeroutput>SegmentTraits_2</computeroutput>, might not be <formula id="138">$x$</formula>-monotone. </para>    </detaileddescription>
    <location file="CGAL/Arr_polyline_traits_2.h" line="125" column="1" bodyfile="CGAL/Arr_polyline_traits_2.h" bodystart="125" bodyend="159"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1a40bbdf3527134bd1ec9163311ef65a87" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Construct_curve_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1a016ff32c594745c6f696c248207d3c7a" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Construct_curve_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Construct__curve__2_1aa026d066b9ed23f9b77799c3153d350e" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Construct_curve_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
