<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgArrangement2Insert" kind="group">
    <compoundname>PkgArrangement2Insert</compoundname>
    <title>CGAL::insert()</title>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__PkgArrangement2Insert_1gaf7d5aac2640c2a706f8c5e6adc8a7e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class Dcel</type>
          </param>
          <param>
            <type>class Curve</type>
          </param>
          <param>
            <type>class PointLocation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <param>
          <type>Arrangement_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput>insert</computeroutput> inserts one or more curves or <formula id="2">$ x$</formula>-monotone curves into a given arrangement, where no restrictions are imposed on the inserted curves. </para>        </briefdescription>
        <detaileddescription>
<para>If an inserted curve is not <formula id="2">$ x$</formula>-monotone curve, it is subdivided into <formula id="2">$ x$</formula>-monotone subcurves (and perhaps isolated points), which are inserted into the arrangement.</para><para><bold>Requirements</bold><linebreak/>
</para><para><itemizedlist>
<listitem>
<para>If the curve is <formula id="2">$ x$</formula>-monotone curve then The instantiated <computeroutput>Traits</computeroutput> class must model the <computeroutput><ref refid="classArrangementXMonotoneTraits__2" kindref="compound">ArrangementXMonotoneTraits_2</ref></computeroutput> concept. In case that the curve is not <formula id="2">$ x$</formula>-monotone then the instantiated <computeroutput>Traits</computeroutput> class must model the <computeroutput><ref refid="classArrangementTraits__2" kindref="compound">ArrangementTraits_2</ref></computeroutput> concept. That is, it should define the <computeroutput>Curve_2</computeroutput> type, and support its subdivision into <formula id="2">$ x$</formula>-monotone subcurves (and perhaps isolated points). </para></listitem>
<listitem>
<para>The point-location object <computeroutput>pl</computeroutput>, must model the <computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> concept. </para></listitem>
</itemizedlist>
</para><para>Inserts the given curve <computeroutput>c</computeroutput> into the arrangement <computeroutput>arr</computeroutput>. <computeroutput>c</computeroutput> is subdivided into <formula id="2">$ x$</formula>-monotone subcurves (and perhaps isolated points). Each subcurve is in turn inserted into the arrangement by locating its left endpoint and computing its zone until reaching the right endpoint.</para><para>The given point-location object <computeroutput>pl</computeroutput> is used to locate the left endpoints of the <formula id="2">$ x$</formula>-monotone curves. By default, the function uses the &quot;walk along line&quot; point-location strategy - namely an instance of the class <computeroutput><ref refid="classCGAL_1_1Arr__walk__along__line__point__location" kindref="compound">Arr_walk_along_line_point_location</ref>&lt;<ref refid="classCGAL_1_1Arrangement__2" kindref="compound">Arrangement_2</ref>&lt;Traits,Dcel&gt; &gt;</computeroutput>.</para><para><simplesect kind="pre"><para>If provided, <computeroutput>pl</computeroutput> must be attached to the given arrangement <computeroutput>arr</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_2.h" line="1036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangement2Insert_1ga49d05cf84e9a85c58d1c221af03f12fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename Dcel</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, const Object &amp;obj)</argsstring>
        <name>insert</name>
        <param>
          <type>Arrangement_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>const Object &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Inserts the<emphasis> <formula id="2">$ x$</formula>-monotone (only)</emphasis> curve <computeroutput>xc</computeroutput> into the arrangement <computeroutput>arr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The object <computeroutput>obj</computeroutput>, which either wraps a <computeroutput>Vertex_const_handle</computeroutput>, a <computeroutput>Halfedge_const_handle</computeroutput>, or a <computeroutput>Face_const_handle</computeroutput>, represents the location of <computeroutput>xc</computeroutput>&apos;s left endpoint in the arrangement. The zone of <computeroutput>xc</computeroutput> is computed starting from the feature represented by <computeroutput>obj</computeroutput>. As in the case above, the zone computation terminates, when the right endpoint is reached. Thus, point-location is not required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_2.h" line="1051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangement2Insert_1ga25a2ae72727ec4c0680d20477bab7a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class Dcel</type>
          </param>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type>Arrangement_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Aggregately inserts the curves or <formula id="2">$ x$</formula>-monotone curves in the range <computeroutput>[first,last)</computeroutput> into the arrangement <computeroutput>arr</computeroutput> using the sweep-line framework. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_2.h" line="1062" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgArrangement2Insert_1gaa6e1d86b9725db5998dfb358ab1985f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename Dcel</type>
          </param>
          <param>
            <type>typename PointLocation</type>
          </param>
        </templateparamlist>
        <type>Arrangement_with_history_2&lt; Traits, Dcel &gt;::Curve_handle</type>
        <definition>Arrangement_with_history_2&lt;Traits,Dcel&gt;::Curve_handle CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::Curve_2 &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <param>
          <type>Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
<para>Inserts the given curve <computeroutput>c</computeroutput> into the arrangement with history <computeroutput>arr</computeroutput>, and returns a handle to the inserted curve. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>c</computeroutput> is subdivided into <formula id="2">$ x$</formula>-monotone subcurves (and perhaps isolated points). Each subcurve is in turn inserted into the arrangement by locating its left endpoint and computing its zone until reaching the right endpoint.</para><para>The given point-location object <computeroutput>pl</computeroutput> is used to locate the left endpoints of the <formula id="2">$ x$</formula>-monotone curves. By default, the function uses the &quot;walk along line&quot; point-location strategy - namely an instance of the class <computeroutput><ref refid="classCGAL_1_1Arr__walk__along__line__point__location" kindref="compound">Arr_walk_along_line_point_location</ref>&lt;<ref refid="classCGAL_1_1Arrangement__2" kindref="compound">Arrangement_2</ref>&lt;Traits,Dcel&gt; &gt;</computeroutput>.</para><para><simplesect kind="pre"><para>If provided, <computeroutput>pl</computeroutput> is attached to the given arrangement <computeroutput>arr</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_with_history_2.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangement2Insert_1ga744ea4ef5e40e521af139e106b6480f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class Dcel</type>
          </param>
          <param>
            <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <param>
          <type>Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Aggregately inserts the curves in the range <computeroutput>[first,last)</computeroutput> into the arrangement with history <computeroutput>arr</computeroutput> using the sweep-line framework. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_with_history_2.h" line="306" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
