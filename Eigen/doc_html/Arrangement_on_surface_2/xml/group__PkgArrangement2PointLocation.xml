<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__PkgArrangement2PointLocation" kind="group">
    <compoundname>PkgArrangement2PointLocation</compoundname>
    <title>Point Location</title>
    <innerclass refid="classCGAL_1_1Arr__landmarks__point__location" prot="public">CGAL::Arr_landmarks_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__naive__point__location" prot="public">CGAL::Arr_naive_point_location</innerclass>
    <innerclass refid="structCGAL_1_1Arr__point__location__result" prot="public">CGAL::Arr_point_location_result</innerclass>
    <innerclass refid="classCGAL_1_1Arr__trapezoid__ric__point__location" prot="public">CGAL::Arr_trapezoid_ric_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__walk__along__line__point__location" prot="public">CGAL::Arr_walk_along_line_point_location</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgArrangement2PointLocation_1ga81a8e48ebfc5a10a040f3b7d94a4c97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename Dcel</type>
          </param>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::locate</definition>
        <argsstring>(const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator points_begin, InputIterator points_end, OutputIterator oi)</argsstring>
        <name>locate</name>
        <param>
          <type>const Arrangement_2&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>points_begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>points_end</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
<para>Performs a batched point-location operation on a given arrangement. </para>        </briefdescription>
        <detaileddescription>
<para>It accepts a range of query points, and locates each point in the arrangement. The query results are returned through the output iterator. Each query result is given as a pair of the query point and an object representing the arrangement feature that contains it, namely a discriminated union container of the bounded types <computeroutput>Face_const_handle</computeroutput>, <computeroutput>Halfedge_const_handle</computeroutput>, and <computeroutput>Vertex_const_hanlde</computeroutput>. The resulting pairs in the output sequence are sorted in increasing <formula id="13">$ xy$</formula>-lexicographical order of the query points. The function returns a past-the-end iterator of the output sequence.</para><para><bold>Requirements</bold><linebreak/>
</para><para><itemizedlist>
<listitem>
<para><computeroutput>InputIterator::value_type</computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Arrangement__2_1a0510dde537a06aaefc2fc4d1643d9315" kindref="member">Arrangement_2::Point_2</ref></computeroutput>. </para></listitem>
<listitem>
<para><computeroutput>OutputIterator::value_type</computeroutput> must be convertible to <computeroutput>std::pair&lt;<ref refid="classCGAL_1_1Arrangement__2_1a0510dde537a06aaefc2fc4d1643d9315" kindref="member">Arrangement_2::Point_2</ref>, <ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">Arr_point_location_result</ref>&lt;<ref refid="classCGAL_1_1Arrangement__2" kindref="compound">Arrangement_2</ref>&gt;::Type&gt;</computeroutput>. </para></listitem>
</itemizedlist>
</para><para><bold>A Note on Backwards Compatibility</bold><linebreak/>
 This function used to return <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Object</ref></computeroutput> up to CGAL version 4.2. Starting with CGAL version 4.3 the return type is determined by the metafunction <computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref></computeroutput>. To preserve backwards compatibility <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Object</ref></computeroutput> can be constructed from the new return type implicitly, but switching to the new style is recommended. To enable the old style without any overhead, the macro <computeroutput><ref refid="group__PkgArrangement2PointLocation_1ga129054a4fe70ef70f478ca43e3757886" kindref="member">CGAL_ARR_POINT_LOCATION_VERSION</ref></computeroutput> can be defined to 1 before any CGAL header is included.</para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref>&lt;Arrangement&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgArrangement2PointLocation_1ga129054a4fe70ef70f478ca43e3757886" kindref="member">CGAL_ARR_POINT_LOCATION_VERSION</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_batched_point_location.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__PkgArrangement2PointLocation_1ga129054a4fe70ef70f478ca43e3757886" prot="public" static="no">
        <name>CGAL_ARR_POINT_LOCATION_VERSION</name>
        <briefdescription>
<para>The macro <computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> can be used to configure the point-location query API. </para>        </briefdescription>
        <detaileddescription>
<para>In particular, it determines which version of the result type of the point-location and vertical ray-shooting queries should be used by models of the concepts <computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> and <computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput>, and by the free function <computeroutput>locate</computeroutput>. The <computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> should be defined before any CGAL header is included.</para><para><itemizedlist>
<listitem><para><computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> == 1, the result type is set to be <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Object</ref></computeroutput>.</para></listitem><listitem><para><computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> == 2, the result type is set to be <computeroutput>boost::variant&lt;Vertex_const_handle,Halfedge_const_handle,Face_const_handle&gt;</computeroutput>, where <computeroutput>Vertex_const_handle</computeroutput>, <computeroutput>Halfedge_const_handle</computeroutput>, and <computeroutput>Face_const_handle</computeroutput> are the corresponding nested types in a <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound">CGAL::Arrangement_2</ref></computeroutput> instance.</para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref>&lt;Arrangement&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_point_location_result.h" line="22" column="9" bodyfile="CGAL/Arr_point_location_result.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
