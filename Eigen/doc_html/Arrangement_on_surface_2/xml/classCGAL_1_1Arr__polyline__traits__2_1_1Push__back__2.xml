<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_polyline_traits_2::Push_back_2</compoundname>
    <includes local="no">CGAL/Arr_polyline_traits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1ad1234ff653b0d0c6c6bda404a4d8bc34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Push_back_2::operator()</definition>
        <argsstring>(Curve_2 &amp;cv, const Point_2 &amp;p) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Curve_2 &amp;</type>
          <declname>cv</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__polyline__traits__2_1a9bcf8e230ad3ac70bf14484ab47f606b" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Append a point <computeroutput>p</computeroutput> to an existing polyline <computeroutput>cv</computeroutput> at the back. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cv</parametername>
</parameternamelist>
<parameterdescription>
<para>a polyline. Note, <computeroutput>cv</computeroutput> is not (necessarily) <formula id="2">$ x$</formula>-monotone. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>a point to be appended to <computeroutput>cv</computeroutput> at the back. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>cv</computeroutput> contains at least one segment. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1a82800d4ed2bbd8b23e17e5d28bbd60fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Push_back_2::operator()</definition>
        <argsstring>(Curve_2 &amp;cv, const Segment_2 &amp;seg) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Curve_2 &amp;</type>
          <declname>cv</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__polyline__traits__2_1a313dd43061d19056ebcec4152b15dd87" kindref="member">Segment_2</ref> &amp;</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
<para>Append a segment <computeroutput>seg</computeroutput> to an existing polyline <computeroutput>cv</computeroutput> at the back. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>cv</computeroutput> is empty, <computeroutput>seg</computeroutput> will be its first segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cv</parametername>
</parameternamelist>
<parameterdescription>
<para>a polyline. Note, <computeroutput>cv</computeroutput> is (not necessarily) <formula id="138">$x$</formula>-monotone. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seg</parametername>
</parameternamelist>
<parameterdescription>
<para>a segment (not necessarily <formula id="138">$x$</formula>-monotone) to be appended to <computeroutput>cv</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1a273eb8ba53d1f71a55ff8df39ba51c4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Push_back_2::operator()</definition>
        <argsstring>(const X_monotone_curve_2 &amp;xcv, Point_2 &amp;p) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const X_monotone_curve_2 &amp;</type>
          <declname>xcv</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arr__polyline__traits__2_1a9bcf8e230ad3ac70bf14484ab47f606b" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Append a point <computeroutput>p</computeroutput> to an existing <formula id="138">$x$</formula>-monotone polyline <computeroutput>xcv</computeroutput> at the back. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xcv</parametername>
</parameternamelist>
<parameterdescription>
<para>the existing <formula id="138">$x$</formula>-monotone polyline </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the point to be pushed back. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>xcv</computeroutput> contains at least one segment </para></simplesect>
<simplesect kind="pre"><para><computeroutput>p</computeroutput> is either to the right of <computeroutput>xcv</computeroutput> if it is oriented left-to-right or it is to its left if <computeroutput>xcv</computeroutput> is oriented right-to-left. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1ab3dff271d528ac63fa311926b5052f04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Arr_polyline_traits_2&lt; SegmentTraits_2 &gt;::Push_back_2::operator()</definition>
        <argsstring>(const X_monotone_curve_2 &amp;xcv, Segment_2 &amp;seg) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const X_monotone_curve_2 &amp;</type>
          <declname>xcv</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arr__polyline__traits__2_1a313dd43061d19056ebcec4152b15dd87" kindref="member">Segment_2</ref> &amp;</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
<para>Append a segment <computeroutput>seg</computeroutput> to an existing <formula id="138">$x$</formula>-monotone polyline <computeroutput>xcv</computeroutput> at the back. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>xcv</computeroutput> is empty, <computeroutput>seg</computeroutput> will be its first segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xcv</parametername>
</parameternamelist>
<parameterdescription>
<para>existing <formula id="138">$x$</formula>-monotone polyline </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seg</parametername>
</parameternamelist>
<parameterdescription>
<para>the segment to be added </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>If <computeroutput>xcv</computeroutput> is not empty then <computeroutput>seg</computeroutput> extends <computeroutput>xcv</computeroutput> to the right if <computeroutput>xcv</computeroutput> is oriented right-to-left. Otherwise, <computeroutput>seg</computeroutput> extends <computeroutput>xcv</computeroutput> to the left. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>seg</computeroutput> is not degenerated. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>xcv</computeroutput> and <computeroutput>seg</computeroutput> should have the same orientation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_polyline_traits_2.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functor to augment a polyline by either adding a vertex or a segment at the back. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Arr_polyline_traits_2.h" line="176" column="1" bodyfile="CGAL/Arr_polyline_traits_2.h" bodystart="176" bodyend="221"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1ad1234ff653b0d0c6c6bda404a4d8bc34" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Push_back_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1a82800d4ed2bbd8b23e17e5d28bbd60fb" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Push_back_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1a273eb8ba53d1f71a55ff8df39ba51c4b" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Push_back_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Arr__polyline__traits__2_1_1Push__back__2_1ab3dff271d528ac63fa311926b5052f04" prot="public" virt="non-virtual"><scope>CGAL::Arr_polyline_traits_2::Push_back_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
