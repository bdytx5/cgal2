<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Arr__face__overlay__traits" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_face_overlay_traits</compoundname>
    <includes local="no">CGAL/Arr_default_overlay_traits.h</includes>
    <templateparamlist>
      <param>
        <type>typename Arr_A</type>
      </param>
      <param>
        <type>typename Arr_B</type>
      </param>
      <param>
        <type>typename Arr_R</type>
      </param>
      <param>
        <type>typename OvlFaceData</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para>An instance of <computeroutput><ref refid="classCGAL_1_1Arr__face__overlay__traits" kindref="compound">Arr_face_overlay_traits</ref></computeroutput> should be used for overlaying two arrangements of types <computeroutput>Arr_A</computeroutput> and <computeroutput>Arr_B</computeroutput>, which are instantiated using the same geometric traits-class and with the Dcel classes <computeroutput>Dcel_A</computeroutput> and <computeroutput>Dcel_B</computeroutput> respectively, in order to store their overlay in an arrangement of type <computeroutput>Arr_R</computeroutput>, which is instantiated using a third Dcel class <computeroutput>Dcel_R</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>All three Dcel classes are assumed to be instantiations of the <computeroutput><ref refid="classCGAL_1_1Arr__face__extended__dcel" kindref="compound">Arr_face_extended_dcel</ref></computeroutput> template with types <computeroutput>FaceData_A</computeroutput>, <computeroutput>FaceData_B</computeroutput> and <computeroutput>FaceData_R</computeroutput>, respectively.</para><para>This class gives empty implementation for all overlay traits-class functions, except the function that computes the overlay of two faces. In this case, it uses the functor <computeroutput>OvlFaceData</computeroutput>, which accepts a <computeroutput>FaceData_A</computeroutput> object and a <computeroutput>FaceData_B</computeroutput> object and computes a corresponding <computeroutput>FaceData_R</computeroutput> object, in order to set the auxiliary data of the overlay face.</para><para><xrefsect id="models_1_models000015"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classOverlayTraits" kindref="compound">OverlayTraits</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgArrangement2Funcs_1ga339cdba93f54001be303595689002396" kindref="member">overlay</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Arr__face__extended__dcel" kindref="compound">CGAL::Arr_face_extended_dcel</ref>&lt;Traits,FData,V,H,F&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Arr_default_overlay_traits.h" line="55" column="1" bodyfile="CGAL/Arr_default_overlay_traits.h" bodystart="55" bodyend="60"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
