<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classArrangementDcelHalfedge" kind="class" language="C++" prot="public">
    <compoundname>ArrangementDcelHalfedge</compoundname>
    <includes local="no">Concepts/ArrangementDcelHalfedge.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classArrangementDcelHalfedge_1ae345665fa14b70a6664c236e0ca2bae9" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelHalfedge::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <briefdescription>
<para>the corresponding Dcel vertex type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="34" column="1" bodyfile="Concepts/ArrangementDcelHalfedge.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelHalfedge_1a07a04a8ee5198125d46b4ff4546a4ead" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelHalfedge::Face</definition>
        <argsstring></argsstring>
        <name>Face</name>
        <briefdescription>
<para>the corresponding Dcel face type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="39" column="1" bodyfile="Concepts/ArrangementDcelHalfedge.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelHalfedge_1a7a20ff16e9154c43e34085e2b2897018" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelHalfedge::Hole</definition>
        <argsstring></argsstring>
        <name>Hole</name>
        <briefdescription>
<para>the corresponding Dcel hole type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="44" column="1" bodyfile="Concepts/ArrangementDcelHalfedge.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classArrangementDcelHalfedge_1a0f512db6d280ab6e9a958dc9e5459790" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ArrangementDcelHalfedge::X_monotone_curve</definition>
        <argsstring></argsstring>
        <name>X_monotone_curve</name>
        <briefdescription>
<para>the curve type associated with the edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="49" column="1" bodyfile="Concepts/ArrangementDcelHalfedge.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a0b256751cebd007f36a6ab32446e4357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArrangementDcelHalfedge::Arr_dcel_halfedge</definition>
        <argsstring>()</argsstring>
        <name>Arr_dcel_halfedge</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a87f85c52c7882924d059953fd8cbeba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::assign</definition>
        <argsstring>(const Self &amp;other)</argsstring>
        <name>assign</name>
        <param>
          <type>const Self &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>assigns <computeroutput>e</computeroutput> with the contents of the <computeroutput>other</computeroutput> halfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a2bcd73c9eb8383be066161612de98033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Arr_halfedge_direction</type>
        <definition>Arr_halfedge_direction ArrangementDcelHalfedge::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <briefdescription>
<para>returns <computeroutput>ARR_LEFT_TO_RIGHT</computeroutput> if <computeroutput>e</computeroutput>&apos;s source vertex is lexicographically smaller than it target, and <computeroutput>ARR_RIGHT_TO_LEFT</computeroutput> if it is lexicographically larger than the target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a520451918fdf7799864bf0f54393ae5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ArrangementDcelHalfedge::is_on_hole</definition>
        <argsstring>() const</argsstring>
        <name>is_on_hole</name>
        <briefdescription>
<para>determines whether the <computeroutput>e</computeroutput> lies on an outer CCB of a bounded face, or on an inner CCB (a hole inside a face). </para>        </briefdescription>
        <detaileddescription>
<para>The function returns <computeroutput>true</computeroutput> if <computeroutput>e</computeroutput> lies on a hole. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>All functions below also have <computeroutput>const</computeroutput> counterparts, returning non-mutable pointers or references: </para></description>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a0465150545915938f96a902ed2a7cbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge *</type>
        <definition>Halfedge* ArrangementDcelHalfedge::opposite</definition>
        <argsstring>()</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>returns the twin halfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a497b73c8d0b25dc9a7d81114bca3834f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge *</type>
        <definition>Halfedge* ArrangementDcelHalfedge::prev</definition>
        <argsstring>()</argsstring>
        <name>prev</name>
        <briefdescription>
<para>returns the previous halfedge along the chain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a00d3fff1ab3827044624d2e0dd29f880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Halfedge *</type>
        <definition>Halfedge* ArrangementDcelHalfedge::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
<para>returns the next halfedge along the chain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1aa959643476fcffe0bdd12833f9f5cc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelHalfedge_1ae345665fa14b70a6664c236e0ca2bae9" kindref="member">Vertex</ref> *</type>
        <definition>Vertex* ArrangementDcelHalfedge::vertex</definition>
        <argsstring>()</argsstring>
        <name>vertex</name>
        <briefdescription>
<para>returns the target vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a5192b40a9260778b2a9a01f742e00df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelHalfedge_1a07a04a8ee5198125d46b4ff4546a4ead" kindref="member">Face</ref> *</type>
        <definition>Face* ArrangementDcelHalfedge::face</definition>
        <argsstring>()</argsstring>
        <name>face</name>
        <briefdescription>
<para>returns the incident face. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>e</computeroutput> lies on the outer boundary of this face. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a4ab90aa67aff3c3c171d8943b36de3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelHalfedge_1a7a20ff16e9154c43e34085e2b2897018" kindref="member">Hole</ref> *</type>
        <definition>Hole* ArrangementDcelHalfedge::hole</definition>
        <argsstring>()</argsstring>
        <name>hole</name>
        <briefdescription>
<para>returns the hole (inner CCB) <computeroutput>e</computeroutput> belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>e</computeroutput> lies on a hole inside its incident face. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a7860b23d1c02c14f98bda2b787382dbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ArrangementDcelHalfedge::has_null_curve</definition>
        <argsstring>() const</argsstring>
        <name>has_null_curve</name>
        <briefdescription>
<para>returns whether the vertex is not associated with a valid curve. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1aa6ff3ee7d2ecefafad916ed035cb238d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrangementDcelHalfedge_1a0f512db6d280ab6e9a958dc9e5459790" kindref="member">X_monotone_curve</ref> &amp;</type>
        <definition>X_monotone_curve&amp; ArrangementDcelHalfedge::curve</definition>
        <argsstring>()</argsstring>
        <name>curve</name>
        <briefdescription>
<para>returns the associated curve. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>e</computeroutput> is associated with a valid curve. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a862beeb5fbda8b5426d3e23044be78c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_opposite</definition>
        <argsstring>(Halfedge *opp)</argsstring>
        <name>set_opposite</name>
        <param>
          <type>Halfedge *</type>
          <declname>opp</declname>
        </param>
        <briefdescription>
<para>sets the opposite halfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1ab7e1efea5dd01b81f6fed744765390ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_direction</definition>
        <argsstring>(Arr_halfedge_direction dir)</argsstring>
        <name>set_direction</name>
        <param>
          <type>Arr_halfedge_direction</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>sets the lexicographical order between <computeroutput>e</computeroutput>&apos;s source and target vertices to be <computeroutput>dir</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The direction of the opposite halfedge is also set to the opposite direction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1afbc78a66a76118c05654517b78f4b2bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_prev</definition>
        <argsstring>(Halfedge *prev)</argsstring>
        <name>set_prev</name>
        <param>
          <type>Halfedge *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>sets the previous halfedge of <computeroutput>e</computeroutput> along the chain, and updates the cross-pointer <computeroutput>prev-&gt;<ref refid="classArrangementDcelHalfedge_1a00d3fff1ab3827044624d2e0dd29f880" kindref="member">next()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a3d9687b2a73b21469ee238efb25a5662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_next</definition>
        <argsstring>(Halfedge *next)</argsstring>
        <name>set_next</name>
        <param>
          <type>Halfedge *</type>
          <declname>next</declname>
        </param>
        <briefdescription>
<para>sets the next halfedge of <computeroutput>e</computeroutput> along the chain, and updates the cross-pointer <computeroutput>next-&gt;<ref refid="classArrangementDcelHalfedge_1a497b73c8d0b25dc9a7d81114bca3834f" kindref="member">prev()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a71d71babe71adf1e4704f87ea381fc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_vertex</definition>
        <argsstring>(Vertex *v)</argsstring>
        <name>set_vertex</name>
        <param>
          <type><ref refid="classArrangementDcelHalfedge_1ae345665fa14b70a6664c236e0ca2bae9" kindref="member">Vertex</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>sets the target vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1abbc7c3873684bd6b2ea68c3271fe380b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_face</definition>
        <argsstring>(Face *f)</argsstring>
        <name>set_face</name>
        <param>
          <type><ref refid="classArrangementDcelHalfedge_1a07a04a8ee5198125d46b4ff4546a4ead" kindref="member">Face</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>sets the incident face, marking that <computeroutput>e</computeroutput> lies on the outer CCB of the face <computeroutput>f</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1a88e6735a3ae1e302ddaff26fcabcad10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_hole</definition>
        <argsstring>(Hole *ho)</argsstring>
        <name>set_hole</name>
        <param>
          <type><ref refid="classArrangementDcelHalfedge_1a7a20ff16e9154c43e34085e2b2897018" kindref="member">Hole</ref> *</type>
          <declname>ho</declname>
        </param>
        <briefdescription>
<para>sets the incident hole, marking that <computeroutput>e</computeroutput> lies on an inner CCB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrangementDcelHalfedge_1ac7665eb0a1311c55d5355a48b3a7e7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrangementDcelHalfedge::set_curve</definition>
        <argsstring>(X_monotone_curve *c)</argsstring>
        <name>set_curve</name>
        <param>
          <type><ref refid="classArrangementDcelHalfedge_1a0f512db6d280ab6e9a958dc9e5459790" kindref="member">X_monotone_curve</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>sets the associated curve of <computeroutput>e</computeroutput> and its opposite halfedge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrangementDcelHalfedge.h" line="184" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A halfedge record in a Dcel data structure. Two halfedges with opposite directions always form an edge (a halfedge pair). The halfedges form together chains, defining the boundaries of connected components, such that all halfedges along a chain have the same incident face. Note that the chain the halfedge belongs to may form the outer boundary of a bounded face (an outer CCB) or the boundary of a hole inside a face (an inner CCB). </para>    </briefdescription>
    <detaileddescription>
<para> An edge is always associated with a curve, but the halfedge records only store a pointer to the associated curve, and the actual curve objects are stored elsewhere. Two opposite halfedges are always associated with the same curve.</para><para><simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcel" kindref="compound">ArrangementDcel</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcelVertex" kindref="compound">ArrangementDcelVertex</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcelFace" kindref="compound">ArrangementDcelFace</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementDcelHole" kindref="compound">ArrangementDcelHole</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ArrangementDcelHalfedge.h" line="25" column="1" bodyfile="Concepts/ArrangementDcelHalfedge.h" bodystart="25" bodyend="188"/>
    <listofallmembers>
      <member refid="classArrangementDcelHalfedge_1a0b256751cebd007f36a6ab32446e4357" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>Arr_dcel_halfedge</name></member>
      <member refid="classArrangementDcelHalfedge_1a87f85c52c7882924d059953fd8cbeba9" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>assign</name></member>
      <member refid="classArrangementDcelHalfedge_1aa6ff3ee7d2ecefafad916ed035cb238d" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>curve</name></member>
      <member refid="classArrangementDcelHalfedge_1a2bcd73c9eb8383be066161612de98033" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>direction</name></member>
      <member refid="classArrangementDcelHalfedge_1a07a04a8ee5198125d46b4ff4546a4ead" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>Face</name></member>
      <member refid="classArrangementDcelHalfedge_1a5192b40a9260778b2a9a01f742e00df5" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>face</name></member>
      <member refid="classArrangementDcelHalfedge_1a7860b23d1c02c14f98bda2b787382dbb" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>has_null_curve</name></member>
      <member refid="classArrangementDcelHalfedge_1a7a20ff16e9154c43e34085e2b2897018" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>Hole</name></member>
      <member refid="classArrangementDcelHalfedge_1a4ab90aa67aff3c3c171d8943b36de3b0" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>hole</name></member>
      <member refid="classArrangementDcelHalfedge_1a520451918fdf7799864bf0f54393ae5a" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>is_on_hole</name></member>
      <member refid="classArrangementDcelHalfedge_1a00d3fff1ab3827044624d2e0dd29f880" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>next</name></member>
      <member refid="classArrangementDcelHalfedge_1a0465150545915938f96a902ed2a7cbc3" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>opposite</name></member>
      <member refid="classArrangementDcelHalfedge_1a497b73c8d0b25dc9a7d81114bca3834f" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>prev</name></member>
      <member refid="classArrangementDcelHalfedge_1ac7665eb0a1311c55d5355a48b3a7e7cf" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_curve</name></member>
      <member refid="classArrangementDcelHalfedge_1ab7e1efea5dd01b81f6fed744765390ff" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_direction</name></member>
      <member refid="classArrangementDcelHalfedge_1abbc7c3873684bd6b2ea68c3271fe380b" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_face</name></member>
      <member refid="classArrangementDcelHalfedge_1a88e6735a3ae1e302ddaff26fcabcad10" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_hole</name></member>
      <member refid="classArrangementDcelHalfedge_1a3d9687b2a73b21469ee238efb25a5662" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_next</name></member>
      <member refid="classArrangementDcelHalfedge_1a862beeb5fbda8b5426d3e23044be78c3" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_opposite</name></member>
      <member refid="classArrangementDcelHalfedge_1afbc78a66a76118c05654517b78f4b2bb" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_prev</name></member>
      <member refid="classArrangementDcelHalfedge_1a71d71babe71adf1e4704f87ea381fc1a" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>set_vertex</name></member>
      <member refid="classArrangementDcelHalfedge_1aa959643476fcffe0bdd12833f9f5cc49" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>vertex</name></member>
      <member refid="classArrangementDcelHalfedge_1ae345665fa14b70a6664c236e0ca2bae9" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>Vertex</name></member>
      <member refid="classArrangementDcelHalfedge_1a0f512db6d280ab6e9a958dc9e5459790" prot="public" virt="non-virtual"><scope>ArrangementDcelHalfedge</scope><name>X_monotone_curve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
