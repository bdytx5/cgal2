<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classArrTraits_1_1CompareXAtLimit__2" kind="class" language="C++" prot="public">
    <compoundname>ArrTraits::CompareXAtLimit_2</compoundname>
    <includes local="no">Concepts/ArrTraits--CompareXAtLimit_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para></description>
      <memberdef kind="function" id="classArrTraits_1_1CompareXAtLimit__2_1afec0b95faa43a699e95f8c3142658e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result ArrTraits::CompareXAtLimit_2::operator()</definition>
        <argsstring>(const ArrTraits::Point_2 &amp;p, const ArrTraits::X_monotone_curve_2 &amp;xcv, Arr_curve_end ce)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classArrTraits_1_1Point__2" kindref="compound">ArrTraits::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const ArrTraits::X_monotone_curve_2 &amp;</type>
          <declname>xcv</declname>
        </param>
        <param>
          <type>Arr_curve_end</type>
          <declname>ce</declname>
        </param>
        <briefdescription>
<para>Given a point <computeroutput>p</computeroutput>, an <formula id="2">$ x$</formula>-monotone curve <computeroutput>xcv</computeroutput>, and an enumeration <computeroutput>ce</computeroutput> that specifies either the minimum or the maximum end of the curve where the curve has a vertical asymptote, compares the <formula id="2">$ x$</formula>-coordinate of <computeroutput>p</computeroutput> and the <formula id="2">$ x$</formula>-coordinate of the limit of the curve at its specificed end. </para>        </briefdescription>
        <detaileddescription>
<para>The variable <computeroutput>xcv</computeroutput> identifies the parametric curve <formula id="119">$ C(t) = (X(t),Y(t))$</formula> defined over an open or half-open interval with endpoints <formula id="120">$ 0$</formula> and <formula id="121">$ 1$</formula>. The enumeration <computeroutput>ce</computeroutput> identifies an open end <formula id="287">$ d \in\{0,1\}$</formula> of <formula id="3">$ C$</formula>. Formally, compares the <formula id="2">$ x$</formula>-coordinate of <computeroutput>p</computeroutput> and <formula id="125">$ \lim_{t \rightarrow d} X(t)$</formula>. Returns <computeroutput>SMALLER</computeroutput>, <computeroutput>EQUAL</computeroutput>, or <computeroutput>LARGER</computeroutput> accordingly. <simplesect kind="pre"><para><computeroutput>parameter_space_in_y_2</computeroutput>(<computeroutput>xcv</computeroutput>, <computeroutput>ce</computeroutput>) <formula id="288">$ \neq$</formula> <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para>If the parameter space is unbounded, <formula id="3">$ C$</formula> has a vertical asymptote at its <formula id="63">$ d$</formula>-end; that is, <computeroutput>parameter_space_in_x_2</computeroutput>(<computeroutput>xcv</computeroutput>, <computeroutput>ce</computeroutput>) = <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrTraits--CompareXAtLimit_2.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classArrTraits_1_1CompareXAtLimit__2_1a16442a80a2e078af09bffead19563eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result ArrTraits::CompareXAtLimit_2::operator()</definition>
        <argsstring>(const ArrTraits::X_monotone_curve_2 &amp;xcv1, Arr_curve_end ce1, const ArrTraits::X_monotone_curve_2 &amp;xcv2, Arr_curve_end ce2)</argsstring>
        <name>operator()</name>
        <param>
          <type>const ArrTraits::X_monotone_curve_2 &amp;</type>
          <declname>xcv1</declname>
        </param>
        <param>
          <type>Arr_curve_end</type>
          <declname>ce1</declname>
        </param>
        <param>
          <type>const ArrTraits::X_monotone_curve_2 &amp;</type>
          <declname>xcv2</declname>
        </param>
        <param>
          <type>Arr_curve_end</type>
          <declname>ce2</declname>
        </param>
        <briefdescription>
<para>Given two <formula id="2">$ x$</formula>-monotone curves <computeroutput>xcv1</computeroutput> and <computeroutput>xcv2</computeroutput> and two indices <computeroutput>ce1</computeroutput> and <computeroutput>ce2</computeroutput> that specify either the minimum or the maximum ends of <computeroutput>xcv1</computeroutput> and <computeroutput>xcv2</computeroutput>, respectively, where the curves have vertical asymptotes, compares the <formula id="2">$ x$</formula>-coordinates of the limits of the curves at their specificed ends. </para>        </briefdescription>
        <detaileddescription>
<para>The variables <computeroutput>xcv1</computeroutput> and <computeroutput>xcv2</computeroutput> identify the parametric curves <formula id="130">$ C_1(t) = (X_1(t),Y_1(t))$</formula> and <formula id="131">$ C_2(t) = (X_2(t),Y_2(t))$</formula>, respectively, defined over open or half-open intervals with endpoints <formula id="120">$ 0$</formula> and <formula id="121">$ 1$</formula>. The indices <computeroutput>ce1</computeroutput> and <computeroutput>ce2</computeroutput> identify open ends <formula id="289">$ d_1 \in\{0,1\}$</formula> and <formula id="290">$ d_2 \in\{0,1\}$</formula> of <formula id="126">$ C_1$</formula> and <formula id="127">$ C_2$</formula>, respectively. Formally, compares <formula id="134">$ \lim_{t \rightarrow d_1} X_1(t)$</formula> and <formula id="135">$ \lim_{t \rightarrow d_2} X_2(t)$</formula>. Returns <computeroutput>SMALLER</computeroutput>, <computeroutput>EQUAL</computeroutput>, or <computeroutput>LARGER</computeroutput> accordingly. <simplesect kind="pre"><para><computeroutput>parameter_space_in_y_2</computeroutput>(<computeroutput>xcv1</computeroutput>, <computeroutput>ce1</computeroutput>) <formula id="288">$ \neq$</formula> <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para><computeroutput>parameter_space_in_y_2</computeroutput>(<computeroutput>xcv2</computeroutput>, <computeroutput>ce2</computeroutput>) <formula id="288">$ \neq$</formula> <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para>If the parameter space is unbounded, <formula id="126">$ C_1$</formula> has a vertical asymptote at its respective end; that is, <computeroutput>parameter_space_in_x_2</computeroutput>(<computeroutput>xcv1</computeroutput>, <computeroutput>ce1</computeroutput>) = <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
<simplesect kind="pre"><para>If the parameter space is unbounded, <formula id="127">$ C_2$</formula> has a vertical asymptote at its respective end; that is, <computeroutput>parameter_space_in_x_2</computeroutput>(<computeroutput>xcv2</computeroutput>, <computeroutput>ce2</computeroutput>) = <computeroutput>ARR_INTERIOR</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ArrTraits--CompareXAtLimit_2.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="refines_1_refines000014"><xreftitle>Refines</xreftitle><xrefdescription><para><ref refid="classAdaptableFunctor" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref> </para></xrefdescription></xrefsect></para><para><xrefsect id="hasModels_1_hasModels000022"><xreftitle>Has Models</xreftitle><xrefdescription><para><ref refid="classArrangementOpenBoundaryTraits__2_1a4b58f955e826e444231ce4a51c49c843" kindref="member">ArrangementOpenBoundaryTraits_2::Compare_x_at_limit_2</ref> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/ArrTraits--CompareXAtLimit_2.h" line="12" column="1" bodyfile="Concepts/ArrTraits--CompareXAtLimit_2.h" bodystart="12" bodyend="67"/>
    <listofallmembers>
      <member refid="classArrTraits_1_1CompareXAtLimit__2_1afec0b95faa43a699e95f8c3142658e9f" prot="public" virt="non-virtual"><scope>ArrTraits::CompareXAtLimit_2</scope><name>operator()</name></member>
      <member refid="classArrTraits_1_1CompareXAtLimit__2_1a16442a80a2e078af09bffead19563eba" prot="public" virt="non-virtual"><scope>ArrTraits::CompareXAtLimit_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
