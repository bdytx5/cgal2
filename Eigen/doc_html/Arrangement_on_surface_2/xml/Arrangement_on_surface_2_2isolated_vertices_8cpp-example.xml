<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Arrangement_on_surface_2_2isolated_vertices_8cpp-example" kind="example">
    <compoundname>Arrangement_on_surface_2/isolated_vertices.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="comment">//<sp/>Constructing<sp/>an<sp/>arrangement<sp/>with<sp/>isolated<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_inexact_construction_segments.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>isolated<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Arrangement<sp/>arr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Face_handle<sp/>uf<sp/>=<sp/>arr.unbounded_face();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_in_face_interior(Point(3,<sp/>3),<sp/>uf);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_in_face_interior(Point(1,<sp/>5),<sp/>uf);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_in_face_interior(Point(5,<sp/>5),<sp/>uf);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>four<sp/>segments<sp/>that<sp/>form<sp/>a<sp/>square-shaped<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>p1(1,<sp/>3),<sp/>p2(3,<sp/>5),<sp/>p3(5,<sp/>3),<sp/>p4(3,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Segment<sp/>s1(p1,<sp/>p2),<sp/>s2(p2,<sp/>p3),<sp/>s3(p3,<sp/>p4),<sp/>s4(p4,<sp/>p1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e1<sp/>=<sp/>arr.insert_in_face_interior(s1,<sp/>uf);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vertex_handle<sp/><sp/><sp/>v1<sp/>=<sp/>e1-&gt;source();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vertex_handle<sp/><sp/><sp/>v2<sp/>=<sp/>e1-&gt;target();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e2<sp/>=<sp/>arr.insert_from_left_vertex(s2,<sp/>v2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vertex_handle<sp/><sp/><sp/>v3<sp/>=<sp/>e2-&gt;target();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e3<sp/>=<sp/>arr.insert_from_right_vertex(s3,<sp/>v3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vertex_handle<sp/><sp/><sp/>v4<sp/>=<sp/>e3-&gt;target();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_at_vertices(s4,<sp/>v4,<sp/>v1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>isolated<sp/>vertices<sp/>located<sp/>in<sp/>the<sp/>unbounded<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Arrangement::Vertex_iterator<sp/>curr,<sp/>next<sp/>=<sp/>arr.vertices_begin();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(curr<sp/>=<sp/>next++;<sp/>curr<sp/>!=<sp/>arr.vertices_end();<sp/>curr<sp/>=<sp/>next++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>next<sp/>vertex,<sp/>as<sp/>curr<sp/>might<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr-&gt;is_isolated()<sp/>&amp;&amp;<sp/>curr-&gt;face()<sp/>==<sp/>uf)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arr.remove_isolated_vertex(curr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement(arr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
