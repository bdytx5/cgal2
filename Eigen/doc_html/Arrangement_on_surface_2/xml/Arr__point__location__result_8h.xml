<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Arr__point__location__result_8h" kind="file" language="C++">
    <compoundname>Arr_point_location_result.h</compoundname>
    <innerclass refid="structCGAL_1_1Arr__point__location__result" prot="public">CGAL::Arr_point_location_result</innerclass>
    <innernamespace refid="namespaceCGAL">CGAL</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__PkgArrangement2PointLocation_1ga129054a4fe70ef70f478ca43e3757886" prot="public" static="no">
        <name>CGAL_ARR_POINT_LOCATION_VERSION</name>
        <briefdescription>
<para>The macro <computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> can be used to configure the point-location query API. </para>        </briefdescription>
        <detaileddescription>
<para>In particular, it determines which version of the result type of the point-location and vertical ray-shooting queries should be used by models of the concepts <computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> and <computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput>, and by the free function <computeroutput>locate</computeroutput>. The <computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> should be defined before any CGAL header is included.</para><para><itemizedlist>
<listitem><para><computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> == 1, the result type is set to be <computeroutput><ref refid="classCGAL_1_1Object" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Object</ref></computeroutput>.</para></listitem><listitem><para><computeroutput>CGAL_ARR_POINT_LOCATION_VERSION</computeroutput> == 2, the result type is set to be <computeroutput>boost::variant&lt;Vertex_const_handle,Halfedge_const_handle,Face_const_handle&gt;</computeroutput>, where <computeroutput>Vertex_const_handle</computeroutput>, <computeroutput>Halfedge_const_handle</computeroutput>, and <computeroutput>Face_const_handle</computeroutput> are the corresponding nested types in a <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound">CGAL::Arrangement_2</ref></computeroutput> instance.</para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref>&lt;Arrangement&gt;</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_point_location_result.h" line="22" column="9" bodyfile="CGAL/Arr_point_location_result.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Arr_point_location_result.h"/>
  </compounddef>
</doxygen>
