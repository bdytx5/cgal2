<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Algebraic_foundations_2algebraic_structure_dispatch_8cpp-example" kind="example">
    <compoundname>Algebraic_foundations/algebraic_structure_dispatch.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/basic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/IO/io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Algebraic_structure_traits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;<sp/>NT<sp/><ref refid="group__PkgAlgebraicFoundations_1ga46969193a368780228dd0855cdc424b2" kindref="member">unit_part</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;<sp/></highlight></codeline>
<codeline><highlight class="normal">NT<sp/>unit_part_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x,<sp/><ref refid="structCGAL_1_1Field__tag" kindref="compound">CGAL::Field_tag</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;<sp/></highlight></codeline>
<codeline><highlight class="normal">NT<sp/>unit_part_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x,<sp/><ref refid="structCGAL_1_1Integral__domain__without__division__tag" kindref="compound">CGAL::Integral_domain_without_division_tag</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">NT<sp/><ref refid="group__PkgAlgebraicFoundations_1ga46969193a368780228dd0855cdc424b2" kindref="member">unit_part</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unit<sp/>part<sp/>of<sp/>0<sp/>is<sp/>defined<sp/>as<sp/>1.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NT(1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Algebraic__structure__traits" kindref="compound">CGAL::Algebraic_structure_traits&lt;NT&gt;</ref><sp/>AST;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AST::Algebraic_category<sp/>Algebraic_category;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unit_part_(x,Algebraic_category());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">NT<sp/>unit_part_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x,<sp/><ref refid="structCGAL_1_1Integral__domain__without__division__tag" kindref="compound">CGAL::Integral_domain_without_division_tag</ref>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>many<sp/>other<sp/>types<sp/>the<sp/>only<sp/>units<sp/>are<sp/>just<sp/>-1<sp/>and<sp/>+1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="group__PkgAlgebraicFoundations_1gaf3d75d272a29458960987a8f248ec636" kindref="member">CGAL::sign</ref>(x)));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NT<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">NT<sp/>unit_part_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NT&amp;<sp/>x,<sp/><ref refid="structCGAL_1_1Field__tag" kindref="compound">CGAL::Field_tag</ref>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Fields<sp/>every<sp/>x<sp/>!=<sp/>0<sp/>is<sp/>a<sp/>unit.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore,<sp/>every<sp/>x<sp/>!=<sp/>0<sp/>is<sp/>its<sp/>own<sp/>unit<sp/>part.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>call<sp/>for<sp/>a<sp/>model<sp/>of<sp/>EuclideanRing,<sp/>i.e.<sp/>int.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;int:<sp/><sp/><sp/><sp/>unit_part(-3<sp/><sp/>):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__PkgAlgebraicFoundations_1ga46969193a368780228dd0855cdc424b2" kindref="member">unit_part</ref>(-3<sp/><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>call<sp/>for<sp/>a<sp/>model<sp/>of<sp/>FieldWithSqrt,<sp/>i.e.<sp/>double<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;double:<sp/>unit_part(-3.0):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__PkgAlgebraicFoundations_1ga46969193a368780228dd0855cdc424b2" kindref="member">unit_part</ref>(-3.0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>just<sp/>an<sp/>example<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>implementation<sp/>for<sp/>unit<sp/>part<sp/>won&apos;t<sp/>work<sp/>for<sp/>some<sp/>types,<sp/>e.g.,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>types<sp/>that<sp/>are<sp/>not<sp/>RealEmbeddable<sp/>or<sp/>types<sp/>representing<sp/>structures<sp/>that<sp/>have<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>more<sp/>units<sp/>than<sp/>just<sp/>-1<sp/>and<sp/>+1.<sp/>(e.g.<sp/>MP_Float<sp/>representing<sp/>Z[1/2])</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>From<sp/>there<sp/>Algebraic_structure_traits<sp/>provides<sp/>the<sp/>functor<sp/>Unit_part.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
