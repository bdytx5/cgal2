<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classRealEmbeddable" kind="class" language="C++" prot="public">
    <compoundname>RealEmbeddable</compoundname>
    <includes local="no">Concepts/RealEmbeddable.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classRealEmbeddable_1a4255c5fbbeeb0d3c0f685eddcb63afb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RealEmbeddable::operator==</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRealEmbeddable_1a0f3f72df36199c34fecb093ae1ddf600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RealEmbeddable::operator!=</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRealEmbeddable_1a8260145d1e674a44028f8e1a0f3ef14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RealEmbeddable::operator&lt;</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRealEmbeddable_1a3b639b62203afd58df9628820b160fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RealEmbeddable::operator&lt;=</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRealEmbeddable_1a3ee88fbcdfce6ccc6bf55add5854ee19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RealEmbeddable::operator&gt;</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRealEmbeddable_1a2829e52e7fe3a31fdeee6d2756b1fc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const RealEmbeddable &amp;a, const RealEmbeddable &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RealEmbeddable.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A model of this concepts represents numbers that are embeddable on the real axis. The type obeys the algebraic structure and compares two values according to the total order of the real numbers. </para>    </briefdescription>
    <detaileddescription>
<para> Moreover, <computeroutput><ref refid="classCGAL_1_1Real__embeddable__traits" kindref="compound">CGAL::Real_embeddable_traits</ref>&lt; <ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref> &gt;</computeroutput> is a model of <computeroutput><ref refid="classRealEmbeddableTraits" kindref="compound">RealEmbeddableTraits</ref></computeroutput></para><para>with:</para><para><itemizedlist>
<listitem><para><ref refid="classRealEmbeddableTraits_1accb6b922ae1f36fa684f552dcd668271" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Is_real_embeddable</computeroutput> </ref> set to <computeroutput>Tag_true</computeroutput></para></listitem></itemizedlist>
</para><para>and functors :</para><para><itemizedlist>
<listitem><para><ref refid="classRealEmbeddableTraits_1a4786e99294cd21185a554c31f1b43282" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Is_zero</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1IsZero" kindref="compound">RealEmbeddableTraits_::IsZero</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1ac9d15d1c8eb2068021c42c016888c526" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Abs</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1Abs" kindref="compound">RealEmbeddableTraits_::Abs</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1a155667c6a84d3f92507f10ceeae38f47" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Sgn</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1Sgn" kindref="compound">RealEmbeddableTraits_::Sgn</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1a3a39c123ba2ae0844410ff78578d25f8" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Is_positive</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1IsPositive" kindref="compound">RealEmbeddableTraits_::IsPositive</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1a0f5fd64e004f097e44b5c5471db4f1cf" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Is_negative</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1IsNegative" kindref="compound">RealEmbeddableTraits_::IsNegative</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1aa0be471ad6efa53832dbc97e5cb29348" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::Compare</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1Compare" kindref="compound">RealEmbeddableTraits_::Compare</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1aa3e78d202789fed4a9b9ebe988ef0a71" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::To_double</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1ToDouble" kindref="compound">RealEmbeddableTraits_::ToDouble</ref></computeroutput></para></listitem><listitem><para><ref refid="classRealEmbeddableTraits_1a74642a286b40aacb1145cac62dbfc066" kindref="member"><computeroutput>CGAL::Real_embeddable_traits&lt; RealEmbeddable &gt;::To_interval</computeroutput> </ref> which is a model of <computeroutput><ref refid="classRealEmbeddableTraits___1_1ToInterval" kindref="compound">RealEmbeddableTraits_::ToInterval</ref></computeroutput></para></listitem></itemizedlist>
</para><para>Remark:</para><para>If a number type is a model of both <computeroutput><ref refid="classIntegralDomainWithoutDivision" kindref="compound">IntegralDomainWithoutDivision</ref></computeroutput> and <computeroutput><ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref></computeroutput>, it follows that the ring represented by such a number type is a sub-ring of the real numbers and hence has characteristic zero.</para><para><xrefsect id="refines_1_refines000028"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classEqualityComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">EqualityComparable</ref></computeroutput> </para><para><computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classRealEmbeddableTraits" kindref="compound">RealEmbeddableTraits</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/RealEmbeddable.h" line="48" column="1" bodyfile="Concepts/RealEmbeddable.h" bodystart="48" bodyend="95"/>
    <listofallmembers>
      <member refid="classRealEmbeddable_1a0f3f72df36199c34fecb093ae1ddf600" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator!=</name></member>
      <member refid="classRealEmbeddable_1a8260145d1e674a44028f8e1a0f3ef14f" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator&lt;</name></member>
      <member refid="classRealEmbeddable_1a3b639b62203afd58df9628820b160fbd" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator&lt;=</name></member>
      <member refid="classRealEmbeddable_1a4255c5fbbeeb0d3c0f685eddcb63afb8" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator==</name></member>
      <member refid="classRealEmbeddable_1a3ee88fbcdfce6ccc6bf55add5854ee19" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator&gt;</name></member>
      <member refid="classRealEmbeddable_1a2829e52e7fe3a31fdeee6d2756b1fc54" prot="public" virt="non-virtual"><scope>RealEmbeddable</scope><name>operator&gt;=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
