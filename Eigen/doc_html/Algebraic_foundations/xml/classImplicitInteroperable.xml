<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classImplicitInteroperable" kind="class" language="C++" prot="public">
    <compoundname>ImplicitInteroperable</compoundname>
    <includes local="no">Concepts/ImplicitInteroperable.h</includes>
    <briefdescription>
<para>Two types <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> are a model of the concept <computeroutput><ref refid="classImplicitInteroperable" kindref="compound">ImplicitInteroperable</ref></computeroutput>, if there is a superior type, such that binary arithmetic operations involving <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> result in this type. This type is <ref refid="structCGAL_1_1Coercion__traits_1adaa0ff8242fb38714a52ca411dcd5664" kindref="member"><computeroutput>CGAL::Coercion_traits&lt;A,B&gt;::Type</computeroutput></ref>. In case types are <computeroutput><ref refid="classRealEmbeddable" kindref="compound">RealEmbeddable</ref></computeroutput> this also implies that mixed compare operators are available. </para>    </briefdescription>
    <detaileddescription>
<para> The type <ref refid="structCGAL_1_1Coercion__traits_1adaa0ff8242fb38714a52ca411dcd5664" kindref="member"><computeroutput>CGAL::Coercion_traits&lt;A,B&gt;::Type</computeroutput></ref> is required to be implicit constructible from <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput>.</para><para>In this case <ref refid="structCGAL_1_1Coercion__traits_1a57f30b0fa1c313e73ecfefee0a72bcbe" kindref="member"><computeroutput>CGAL::Coercion_traits&lt;A,B&gt;::Are_implicit_interoperable</computeroutput></ref> is <computeroutput><ref refid="group__PkgStlExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>.</para><para><xrefsect id="refines_1_refines000025"><xreftitle>Refines</xreftitle><xrefdescription><para><computeroutput><ref refid="classExplicitInteroperable" kindref="compound">ExplicitInteroperable</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Coercion__traits" kindref="compound">CGAL::Coercion_traits</ref>&lt;A,B&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classExplicitInteroperable" kindref="compound">ExplicitInteroperable</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classAlgebraicStructureTraits" kindref="compound">AlgebraicStructureTraits</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classRealEmbeddableTraits" kindref="compound">RealEmbeddableTraits</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ImplicitInteroperable.h" line="28" column="1" bodyfile="Concepts/ImplicitInteroperable.h" bodystart="28" bodyend="33"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
