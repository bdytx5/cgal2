<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classExplicitInteroperable" kind="class" language="C++" prot="public">
    <compoundname>ExplicitInteroperable</compoundname>
    <includes local="no">Concepts/ExplicitInteroperable.h</includes>
    <briefdescription>
<para>Two types <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> are a model of the <computeroutput><ref refid="classExplicitInteroperable" kindref="compound">ExplicitInteroperable</ref></computeroutput> concept, if it is possible to derive a superior type for <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput>, such that both types are embeddable into this type. This type is <ref refid="structCGAL_1_1Coercion__traits_1adaa0ff8242fb38714a52ca411dcd5664" kindref="member"><computeroutput>CGAL::Coercion_traits&lt;A,B&gt;::Type</computeroutput></ref>. </para>    </briefdescription>
    <detaileddescription>
<para> In this case <ref refid="structCGAL_1_1Coercion__traits_1a1abfb24cfc2de1f449627fc2fb7488dd" kindref="member"><computeroutput>CGAL::Coercion_traits&lt;A,B&gt;::Are_explicit_interoperable</computeroutput></ref> is <computeroutput>Tag_true</computeroutput>.</para><para><computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> are valid argument types for all binary functors in <computeroutput><ref refid="classCGAL_1_1Algebraic__structure__traits" kindref="compound">CGAL::Algebraic_structure_traits</ref>&lt;Type&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Real__embeddable__traits" kindref="compound">CGAL::Real_embeddable_traits</ref>&lt;Type&gt;</computeroutput>. This is also the case for the respective global functions.</para><para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Coercion__traits" kindref="compound">CGAL::Coercion_traits</ref>&lt;A,B&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classImplicitInteroperable" kindref="compound">ImplicitInteroperable</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classAlgebraicStructureTraits" kindref="compound">AlgebraicStructureTraits</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classRealEmbeddableTraits" kindref="compound">RealEmbeddableTraits</ref></computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/ExplicitInteroperable.h" line="26" column="1" bodyfile="Concepts/ExplicitInteroperable.h" bodystart="26" bodyend="31"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
