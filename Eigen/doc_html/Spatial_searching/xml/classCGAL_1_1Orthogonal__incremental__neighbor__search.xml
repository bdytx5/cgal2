<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Orthogonal__incremental__neighbor__search" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Orthogonal_incremental_neighbor_search</compoundname>
    <includes local="no">CGAL/Orthogonal_incremental_neighbor_search.h</includes>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename <ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classSplitter" kindref="compound">Splitter</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a714cfa0ed7729fa8ddec021a4f2e3dbc" prot="public" static="no">
        <type>Traits::Point_d</type>
        <definition>typedef Traits::Point_d CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Point_d</definition>
        <argsstring></argsstring>
        <name>Point_d</name>
        <briefdescription>
<para>Point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="38" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1aba8092581c61dba907b6d58ad44d4092" prot="public" static="no">
        <type>Traits::FT</type>
        <definition>typedef Traits::FT CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Number type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="43" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a7bd16edfd4b58c8147097a99715770a3" prot="public" static="no">
        <type><ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref></type>
        <definition>typedef OrthogonalDistance CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Distance</definition>
        <argsstring></argsstring>
        <name>Distance</name>
        <briefdescription>
<para>Distance type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="48" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a51d7b6c6efd4d6bb6128ab1b5d030bb1" prot="public" static="no">
        <type><ref refid="classOrthogonalDistance_1a11559bc19b225cc766cfb3569784cb5d" kindref="member">OrthogonalDistance::Query_item</ref></type>
        <definition>typedef OrthogonalDistance::Query_item CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Query_item</definition>
        <argsstring></argsstring>
        <name>Query_item</name>
        <briefdescription>
<para>Query item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="53" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a883d518b2e5a2024994f3a4a419aec61" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a714cfa0ed7729fa8ddec021a4f2e3dbc" kindref="member">Point_d</ref>, <ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1aba8092581c61dba907b6d58ad44d4092" kindref="member">FT</ref> &gt;</type>
        <definition>typedef std::pair&lt;Point_d,FT&gt; CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Point_with_transformed_distance</definition>
        <argsstring></argsstring>
        <name>Point_with_transformed_distance</name>
        <briefdescription>
<para>Pair of point and transformed distance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="58" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4deff47bb517da4648ab9978a4b10264" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>const input iterator with value type <computeroutput>Point_with_transformed_distance</computeroutput> for enumerating approximate neighbors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="64" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a0936890bf2f934a7079f3f8eb2319c4d" prot="public" static="no">
        <type><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></type>
        <definition>typedef SpatialTree CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Tree</definition>
        <argsstring></argsstring>
        <name>Tree</name>
        <briefdescription>
<para>The tree type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="69" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1ad62fd251c29f251c185bf6d7a17d39ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::Orthogonal_incremental_neighbor_search</definition>
        <argsstring>(SpatialTree &amp;tree, Query_item query, FT eps=FT(0.0), bool search_nearest=true, OrthogonalDistance d=OrthogonalDistance())</argsstring>
        <name>Orthogonal_incremental_neighbor_search</name>
        <param>
          <type><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a51d7b6c6efd4d6bb6128ab1b5d030bb1" kindref="member">Query_item</ref></type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1aba8092581c61dba907b6d58ad44d4092" kindref="member">FT</ref></type>
          <declname>eps</declname>
          <defval><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1aba8092581c61dba907b6d58ad44d4092" kindref="member">FT</ref>(0.0)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>search_nearest</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref></type>
          <declname>d</declname>
          <defval><ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor for incremental neighbor searching of the query item <computeroutput>query</computeroutput> in the points stored <computeroutput>tree</computeroutput> using a distance <computeroutput>d</computeroutput> and approximation factor <computeroutput>eps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a811808814cf3f6990d4fc0c8b4014bbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4deff47bb517da4648ab9978a4b10264" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a const iterator to the approximate nearest or furthest neighbor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4e02c26f014fb132bc26e095b92f5faf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4deff47bb517da4648ab9978a4b10264" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the appropriate past-the-end const iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Orthogonal__incremental__neighbor__search_1adbbf182494ed8037ae966d84642d5681" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CGAL::Orthogonal_incremental_neighbor_search&lt; Traits, OrthogonalDistance, Splitter, SpatialTree &gt;::statistics</definition>
        <argsstring>(std::ostream &amp;s) const</argsstring>
        <name>statistics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts statistics of the search process into the output stream <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Orthogonal__incremental__neighbor__search" kindref="compound">Orthogonal_incremental_neighbor_search</ref></computeroutput> implements incremental nearest and furthest neighbor searching on a tree. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSearchTraits" kindref="compound">SearchTraits</ref></computeroutput>, for example <computeroutput><ref refid="classCGAL_1_1Search__traits__2" kindref="compound">Search_traits_2</ref>&lt;<ref refid="structCGAL_1_1Simple__cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Simple_cartesian</ref>&lt;double&gt; &gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref></computeroutput>. If <computeroutput>Traits</computeroutput> is <computeroutput><ref refid="classCGAL_1_1Search__traits__adapter" kindref="compound">Search_traits_adapter</ref>&lt;Key,PointPropertyMap,BaseTraits&gt;</computeroutput> the default type is <computeroutput><ref refid="classCGAL_1_1Distance__adapter" kindref="compound">Distance_adapter</ref>&lt;Key,PointPropertyMap,<ref refid="classCGAL_1_1Euclidean__distance" kindref="compound">Euclidean_distance</ref>&lt;BaseTraits&gt; &gt;</computeroutput>, and <computeroutput><ref refid="classCGAL_1_1Euclidean__distance" kindref="compound">Euclidean_distance</ref>&lt;Traits&gt;</computeroutput> otherwise.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classSplitter" kindref="compound">Splitter</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSplitter" kindref="compound">Splitter</ref></computeroutput>. The default type is <computeroutput><ref refid="classCGAL_1_1Sliding__midpoint" kindref="compound">Sliding_midpoint</ref>&lt;Traits&gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></computeroutput>. The default type is <computeroutput><ref refid="classCGAL_1_1Kd__tree" kindref="compound">Kd_tree</ref>&lt;Traits, <ref refid="classSplitter" kindref="compound">Splitter</ref>, Tag_true&gt;</computeroutput>. The template argument must be <computeroutput>Tag_true</computeroutput> because orthogonal search needs extended kd tree nodes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Incremental__neighbor__search" kindref="compound">CGAL::Incremental_neighbor_search</ref>&lt;Traits, <ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref>, <ref refid="classSpatialTree" kindref="compound">SpatialTree</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Orthogonal_incremental_neighbor_search.h" line="29" column="1" bodyfile="CGAL/Orthogonal_incremental_neighbor_search.h" bodystart="29" bodyend="108"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a811808814cf3f6990d4fc0c8b4014bbd" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a7bd16edfd4b58c8147097a99715770a3" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Distance</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4e02c26f014fb132bc26e095b92f5faf" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>end</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1aba8092581c61dba907b6d58ad44d4092" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a4deff47bb517da4648ab9978a4b10264" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1ad62fd251c29f251c185bf6d7a17d39ed" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Orthogonal_incremental_neighbor_search</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a714cfa0ed7729fa8ddec021a4f2e3dbc" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Point_d</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a883d518b2e5a2024994f3a4a419aec61" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Point_with_transformed_distance</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a51d7b6c6efd4d6bb6128ab1b5d030bb1" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Query_item</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1adbbf182494ed8037ae966d84642d5681" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>statistics</name></member>
      <member refid="classCGAL_1_1Orthogonal__incremental__neighbor__search_1a0936890bf2f934a7079f3f8eb2319c4d" prot="public" virt="non-virtual"><scope>CGAL::Orthogonal_incremental_neighbor_search</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
