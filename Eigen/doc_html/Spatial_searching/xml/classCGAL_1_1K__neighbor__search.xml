<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1K__neighbor__search" kind="class" language="C++" prot="public">
    <compoundname>CGAL::K_neighbor_search</compoundname>
    <includes local="no">CGAL/K_neighbor_search.h</includes>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename <ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classSplitter" kindref="compound">Splitter</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1aba164642ca7ff58b8fff33851b5266d9" prot="public" static="no">
        <type>Traits::Point_d</type>
        <definition>typedef Traits::Point_d CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::Point_d</definition>
        <argsstring></argsstring>
        <name>Point_d</name>
        <briefdescription>
<para>Point type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="37" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1affb644e1c094596eb97f10a32834c14a" prot="public" static="no">
        <type>Traits::FT</type>
        <definition>typedef Traits::FT CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Number type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="42" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1a788fb89a2e01dec4bb2463ac209ac713" prot="public" static="no">
        <type><ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref></type>
        <definition>typedef GeneralDistance CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::Distance</definition>
        <argsstring></argsstring>
        <name>Distance</name>
        <briefdescription>
<para>Distance type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="47" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1a7b3a10ce2d56e1a4f33710ddf727f1f6" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classCGAL_1_1K__neighbor__search_1aba164642ca7ff58b8fff33851b5266d9" kindref="member">Point_d</ref>, <ref refid="classCGAL_1_1K__neighbor__search_1affb644e1c094596eb97f10a32834c14a" kindref="member">FT</ref> &gt;</type>
        <definition>typedef std::pair&lt;Point_d,FT&gt; CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::Point_with_transformed_distance</definition>
        <argsstring></argsstring>
        <name>Point_with_transformed_distance</name>
        <briefdescription>
<para>Pair of point and transformed distance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="52" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1ad26a3d2c9da3788a3bd087b1b05ad7eb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Bidirectional const iterator with value type <computeroutput>Point_with_distance</computeroutput> for enumerating approximate neighbors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="58" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1aacb51a07608a32d890241d420929be4f" prot="public" static="no">
        <type><ref refid="classGeneralDistance_1a786e3a3762a57c01f05631c5a8fdfa9c" kindref="member">GeneralDistance::Query_item</ref></type>
        <definition>typedef GeneralDistance::Query_item CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::Query_item</definition>
        <argsstring></argsstring>
        <name>Query_item</name>
        <briefdescription>
<para>Query item type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="63" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1K__neighbor__search_1a3b06c8cef57e8bab082134470343c7e2" prot="public" static="no">
        <type><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></type>
        <definition>typedef SpatialTree CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::Tree</definition>
        <argsstring></argsstring>
        <name>Tree</name>
        <briefdescription>
<para>The tree type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="68" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1K__neighbor__search_1a05bfb7d698b467b4ef301052d7e5cc4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::K_neighbor_search</definition>
        <argsstring>(const Tree &amp;tree, Query_item q, unsigned int k=1, FT eps=FT(0.0), bool search_nearest=true, GeneralDistance d=GeneralDistance(), bool sorted=true)</argsstring>
        <name>K_neighbor_search</name>
        <param>
          <type>const <ref refid="classCGAL_1_1K__neighbor__search_1a3b06c8cef57e8bab082134470343c7e2" kindref="member">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1K__neighbor__search_1aacb51a07608a32d890241d420929be4f" kindref="member">Query_item</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1K__neighbor__search_1affb644e1c094596eb97f10a32834c14a" kindref="member">FT</ref></type>
          <declname>eps</declname>
          <defval><ref refid="classCGAL_1_1K__neighbor__search_1affb644e1c094596eb97f10a32834c14a" kindref="member">FT</ref>(0.0)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>search_nearest</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref></type>
          <declname>d</declname>
          <defval><ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sorted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor for searching approximately <computeroutput>k</computeroutput> neighbors of the query item <computeroutput>q</computeroutput> in the points stored in <computeroutput>tree</computeroutput> using distance class <computeroutput>d</computeroutput> and approximation factor <computeroutput>eps</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>sorted</computeroutput> indicates if the computed sequence of <computeroutput>k</computeroutput>-nearest neighbors needs to be sorted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="81" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1K__neighbor__search_1a29f01eff6f2705912f0834945e401e2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1K__neighbor__search_1ad26a3d2c9da3788a3bd087b1b05ad7eb" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a const iterator to the approximate nearest or furthest neighbor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1K__neighbor__search_1ae1998c0714c5d18ccc31165f7273133a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1K__neighbor__search_1ad26a3d2c9da3788a3bd087b1b05ad7eb" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the appropriate past-the-end const iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1K__neighbor__search_1a60cb71dca4ec29c6ffc8e869dde09991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CGAL::K_neighbor_search&lt; Traits, GeneralDistance, Splitter, SpatialTree &gt;::statistics</definition>
        <argsstring>(std::ostream &amp;s)</argsstring>
        <name>statistics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts statistics of the search process into the output stream <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/K_neighbor_search.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1K__neighbor__search" kindref="compound">K_neighbor_search</ref></computeroutput> implements approximate <computeroutput>k</computeroutput>-nearest and <computeroutput>k</computeroutput>-furthest neighbor searching using standard search on a tree using a general distance class. </para>    </briefdescription>
    <detaileddescription>
<para>The tree may be built with extended or unextended nodes.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an implementation of the concept <computeroutput><ref refid="classSearchTraits" kindref="compound">SearchTraits</ref></computeroutput>, for example <computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Simple_cartesian</ref>&lt;double&gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classSplitter" kindref="compound">Splitter</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classGeneralDistance" kindref="compound">GeneralDistance</ref></computeroutput>. If <computeroutput>Traits</computeroutput> is <computeroutput><ref refid="classCGAL_1_1Search__traits__adapter" kindref="compound">Search_traits_adapter</ref>&lt;Key,PointPropertyMap,BaseTraits&gt;</computeroutput> the default type is <computeroutput><ref refid="classCGAL_1_1Distance__adapter" kindref="compound">Distance_adapter</ref>&lt;Key,PointPropertyMap,<ref refid="classCGAL_1_1Euclidean__distance" kindref="compound">Euclidean_distance</ref>&lt;BaseTraits&gt; &gt;</computeroutput>, and <computeroutput><ref refid="classCGAL_1_1Euclidean__distance" kindref="compound">Euclidean_distance</ref>&lt;Traits&gt;</computeroutput> otherwise.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be an implementation of the concept <computeroutput><ref refid="classSpatialTree" kindref="compound">SpatialTree</ref></computeroutput>. The default type is <computeroutput><ref refid="classCGAL_1_1Kd__tree" kindref="compound">Kd_tree</ref>&lt;Traits, <ref refid="classSplitter" kindref="compound">Splitter</ref>, Tag_false&gt;</computeroutput>. The template argument <computeroutput>Tag_false</computeroutput> makes that the tree is built with unextended nodes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Orthogonal__k__neighbor__search" kindref="compound">CGAL::Orthogonal_k_neighbor_search</ref>&lt;Traits, <ref refid="classOrthogonalDistance" kindref="compound">OrthogonalDistance</ref>, <ref refid="classSplitter" kindref="compound">Splitter</ref>, <ref refid="classSpatialTree" kindref="compound">SpatialTree</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/K_neighbor_search.h" line="28" column="1" bodyfile="CGAL/K_neighbor_search.h" bodystart="28" bodyend="106"/>
    <listofallmembers>
      <member refid="classCGAL_1_1K__neighbor__search_1a29f01eff6f2705912f0834945e401e2c" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>begin</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1a788fb89a2e01dec4bb2463ac209ac713" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>Distance</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1ae1998c0714c5d18ccc31165f7273133a" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>end</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1affb644e1c094596eb97f10a32834c14a" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>FT</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1ad26a3d2c9da3788a3bd087b1b05ad7eb" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1a05bfb7d698b467b4ef301052d7e5cc4d" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>K_neighbor_search</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1aba164642ca7ff58b8fff33851b5266d9" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>Point_d</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1a7b3a10ce2d56e1a4f33710ddf727f1f6" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>Point_with_transformed_distance</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1aacb51a07608a32d890241d420929be4f" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>Query_item</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1a60cb71dca4ec29c6ffc8e869dde09991" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>statistics</name></member>
      <member refid="classCGAL_1_1K__neighbor__search_1a3b06c8cef57e8bab082134470343c7e2" prot="public" virt="non-virtual"><scope>CGAL::K_neighbor_search</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
