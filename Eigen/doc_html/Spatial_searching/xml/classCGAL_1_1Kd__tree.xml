<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Kd__tree" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Kd_tree</compoundname>
    <includes local="no">CGAL/Kd_tree.h</includes>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename <ref refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" kindref="member">Splitter</ref></type>
      </param>
      <param>
        <type>typename UseExtendedNode</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1af2bb094094f1874d1cd0a6da1ac650c4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::D</definition>
        <argsstring></argsstring>
        <name>D</name>
        <briefdescription>
<para>Dimension tag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="33" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" prot="public" static="no">
        <type>Traits::Point_d</type>
        <definition>typedef Traits::Point_d CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Point_d</definition>
        <argsstring></argsstring>
        <name>Point_d</name>
        <briefdescription>
<para>Point class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="38" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1a62f0b462a864125e984ddcab104c902b" prot="public" static="no">
        <type>Traits::FT</type>
        <definition>typedef Traits::FT CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <briefdescription>
<para>Number type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="43" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Splitter</definition>
        <argsstring></argsstring>
        <name>Splitter</name>
        <briefdescription>
<para><ref refid="classSplitter" kindref="compound">Splitter</ref> type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="48" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1af506e9c83db7eb15ad8aaec11914888e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Bidirectional const iterator with value type <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput> that allows to enumerate all points in the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="54" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1aa429c75b62cacc3abdc88bdeaa525f8d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Node_handle</definition>
        <argsstring></argsstring>
        <name>Node_handle</name>
        <briefdescription>
<para>A handle with value type <computeroutput><ref refid="classCGAL_1_1Kd__tree__node" kindref="compound">Kd_tree_node</ref>&lt;Traits,<ref refid="classSplitter" kindref="compound">Splitter</ref>&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="59" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1a9debc8818a1499cc45ad325d20aabc40" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Node_const_handle</definition>
        <argsstring></argsstring>
        <name>Node_const_handle</name>
        <briefdescription>
<para>A const handle with value type <computeroutput><ref refid="classCGAL_1_1Kd__tree__node" kindref="compound">Kd_tree_node</ref>&lt;Traits,<ref refid="classSplitter" kindref="compound">Splitter</ref>&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="64" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1ad27a2e99580b7caa4dca769b76d32133" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Point_d_iterator</definition>
        <argsstring></argsstring>
        <name>Point_d_iterator</name>
        <briefdescription>
<para>Random access const iterator with value type <computeroutput>const Point_d*</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="69" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Kd__tree_1a44d9d3235a6fc450013b22f9a2767ac1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>A type that counts the number of elements in a <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="74" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1affa94b4f024aff3274dfebe44ead61d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Kd_tree</definition>
        <argsstring>(Splitter s=Splitter(), Traits t=Traits())</argsstring>
        <name>Kd_tree</name>
        <param>
          <type><ref refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" kindref="member">Splitter</ref></type>
          <declname>s</declname>
          <defval><ref refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" kindref="member">Splitter</ref>()</defval>
        </param>
        <param>
          <type>Traits</type>
          <declname>t</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>Constructs an empty <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a28783d5ad66d21ea02ac99bd68656895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::Kd_tree</definition>
        <argsstring>(InputIterator first, InputIterator beyond, Splitter s=Splitter(), Traits t=Traits())</argsstring>
        <name>Kd_tree</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" kindref="member">Splitter</ref></type>
          <declname>s</declname>
          <defval><ref refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" kindref="member">Splitter</ref>()</defval>
        </param>
        <param>
          <type>Traits</type>
          <declname>t</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>Constructs a <computeroutput>k-d</computeroutput> tree on the elements from the sequence <computeroutput>[first, beyond)</computeroutput> using the splitting rule implemented by <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The value type of the <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
<para>The constructor does not build the internal data structure, and it is also not updated after calls to <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a2378b3ff1a73a984cd36e145af74f11c" kindref="member">insert()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The method <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" kindref="member">build()</ref></computeroutput> is called implicitly at the first call to a query or removal member function. You can call <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" kindref="member">build()</ref></computeroutput> explicitly to ensure that the next call to query functions will not trigger the reconstruction of the data structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1aeedc970b83fe01315e77620e8d5bef28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::invalidate_build</definition>
        <argsstring>()</argsstring>
        <name>invalidate_build</name>
        <briefdescription>
<para>This clears the internal data structure, which then gets rebuilt either by an explicit call to <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" kindref="member">build()</ref></computeroutput> or implicitly by the next query or removal. </para>        </briefdescription>
        <detaileddescription>
<para>The only reason to call this function explicitly is to rebalance the tree after some number of removals. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a2378b3ff1a73a984cd36e145af74f11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::insert</definition>
        <argsstring>(Point_d p)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" kindref="member">Point_d</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Inserts the point <computeroutput>p</computeroutput> in the <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Insertions do not dynamically update the internal data structure. The next query, or a call to <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" kindref="member">build()</ref></computeroutput>, automatically triggers a rebuild of the whole structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a8100a78b987aa69d2edae40f9b171bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::insert</definition>
        <argsstring>(InputIterator first, InputIterator beyond)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>beyond</declname>
        </param>
        <briefdescription>
<para>Inserts the elements from the sequence <computeroutput>[first, beyond)</computeroutput> in the <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
<para>The value type of the <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> must be <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1adc28d64600c94360392e03f4a251f63c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Identify_point</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::remove</definition>
        <argsstring>(Point_d p, Identify_point equal_to_p)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" kindref="member">Point_d</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>Identify_point</type>
          <declname>equal_to_p</declname>
        </param>
        <briefdescription>
<para>Removes the point <computeroutput>p</computeroutput> from the <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
<para>It uses <computeroutput>equal_to_p</computeroutput> to identify the point after locating it, which can matter in particular when 2 points are in the same place. <computeroutput>Identify_point</computeroutput> is a unary functor that takes a <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput> and returns a <computeroutput>bool</computeroutput>. This is a limited and naive implementation that does not rebalance the tree. On the other hand, the tree remains valid and ready for queries. If the internal data structure is not already built, for instance because the last operation was an insertion, it first calls <computeroutput><ref refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" kindref="member">build()</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1ac477dd4b97981c157466433c11144a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::remove</definition>
        <argsstring>(Point_d p)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" kindref="member">Point_d</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Removes point <computeroutput>p</computeroutput>, calling the 2-argument function <computeroutput><ref refid="classCGAL_1_1Kd__tree_1adc28d64600c94360392e03f4a251f63c" kindref="member">remove()</ref></computeroutput> with a functor that simply compares coordinates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1aa1ee131caff5ac370f1cbfa49b872c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::reserve</definition>
        <argsstring>(size_t size)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1afd162d3376f0c76aaf2cf9a3bcfe86d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a24bc6f7c61dbd30f1b5716c99568598e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classFuzzyQueryItem" kindref="compound">FuzzyQueryItem</ref></type>
          </param>
        </templateparamlist>
        <type>boost::optional&lt; <ref refid="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" kindref="member">Point_d</ref> &gt;</type>
        <definition>boost::optional&lt;Point_d&gt; CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::search_any_point</definition>
        <argsstring>(FuzzyQueryItem q) const</argsstring>
        <name>search_any_point</name>
        <param>
          <type><ref refid="classFuzzyQueryItem" kindref="compound">FuzzyQueryItem</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Reports any point that is approximately contained by <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The types <computeroutput><ref refid="classFuzzyQueryItem_1ae1edf5aef303a1c5e0e4023c01563fa7" kindref="member">FuzzyQueryItem::Point_d</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput> must be equivalent. To use this function <computeroutput>Traits</computeroutput> must be a model of the concept <computeroutput><ref refid="classRangeSearchTraits" kindref="compound">RangeSearchTraits</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1aa3725793cd312ca17378ff2793c3f8c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classFuzzyQueryItem" kindref="compound">FuzzyQueryItem</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::search</definition>
        <argsstring>(OutputIterator it, FuzzyQueryItem q) const</argsstring>
        <name>search</name>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classFuzzyQueryItem" kindref="compound">FuzzyQueryItem</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Reports the points that are approximately contained by <computeroutput>q</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The types <computeroutput><ref refid="classFuzzyQueryItem_1ae1edf5aef303a1c5e0e4023c01563fa7" kindref="member">FuzzyQueryItem::Point_d</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Point__d" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_d.tag">Point_d</ref></computeroutput> must be equivalent. To use this function <computeroutput>Traits</computeroutput> must be a model of the concept <computeroutput><ref refid="classRangeSearchTraits" kindref="compound">RangeSearchTraits</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a6364586e6723ee2b39588602fa6cd3bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Kd__tree_1af506e9c83db7eb15ad8aaec11914888e" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a const iterator to the first point in the tree. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Starting with CGAL 4.6, the order of the points in the iterator range <computeroutput>[<ref refid="classCGAL_1_1Kd__tree_1a6364586e6723ee2b39588602fa6cd3bb" kindref="member">begin()</ref> , <ref refid="classCGAL_1_1Kd__tree_1a2d8c591e28d66f84d71d99431d47958d" kindref="member">end()</ref>)</computeroutput> is not the order of insertion of the points into the tree. This was not guaranteed before but might have beeen observed and exploited. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a2d8c591e28d66f84d71d99431d47958d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Kd__tree_1af506e9c83db7eb15ad8aaec11914888e" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the appropriate past-the-end const iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1ad02056df51298aa0236e92d69af47034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Removes all points from the <computeroutput>k-d</computeroutput> tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1acc7b3a3b238c012e6837a81827d9f253" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Kd__tree_1a44d9d3235a6fc450013b22f9a2767ac1" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of points that are stored in the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a3138e6de1424bf5b60a4cf77a70076aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Traits</type>
        <definition>Traits CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::traits</definition>
        <argsstring>() const</argsstring>
        <name>traits</name>
        <briefdescription>
<para>return the instance of the traits used to construct the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1aca02ee532f9356ce0c26ccd1663bdc3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Kd__tree_1aa429c75b62cacc3abdc88bdeaa525f8d" kindref="member">Node_handle</ref></type>
        <definition>Node_handle CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::root</definition>
        <argsstring>()</argsstring>
        <name>root</name>
        <briefdescription>
<para>Returns a handle to the root node of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a6bec1ef044458c72ed5353759fdefa59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Kd__tree_1a9debc8818a1499cc45ad325d20aabc40" kindref="member">Node_const_handle</ref></type>
        <definition>Node_const_handle CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::root</definition>
        <argsstring>() const</argsstring>
        <name>root</name>
        <briefdescription>
<para>Returns a const handle to the root node of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1aa1d343250b7515e0a81fe9df18010e7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Kd__tree__rectangle" kindref="compound">Kd_tree_rectangle</ref>&lt; <ref refid="classCGAL_1_1Kd__tree_1a62f0b462a864125e984ddcab104c902b" kindref="member">FT</ref>, <ref refid="classCGAL_1_1Kd__tree_1af2bb094094f1874d1cd0a6da1ac650c4" kindref="member">D</ref> &gt; &amp;</type>
        <definition>const Kd_tree_rectangle&lt;FT,D&gt;&amp; CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::bounding_box</definition>
        <argsstring>() const</argsstring>
        <name>bounding_box</name>
        <briefdescription>
<para>Returns a const reference to the bounding box of the root node of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Kd__tree_1a2b32eb515f9fc369cd0424794849cf31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CGAL::Kd_tree&lt; Traits, Splitter, UseExtendedNode &gt;::statistics</definition>
        <argsstring>(std::ostream &amp;s) const</argsstring>
        <name>statistics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts statistics of the tree into the output stream <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kd_tree.h" line="224" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Kd__tree" kindref="compound">Kd_tree</ref></computeroutput> defines a <computeroutput>k-d</computeroutput> tree. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSearchTraits" kindref="compound">SearchTraits</ref></computeroutput>, for example <computeroutput><ref refid="classCGAL_1_1Search__traits__2" kindref="compound">Search_traits_2</ref>&lt;<ref refid="structCGAL_1_1Simple__cartesian" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Simple_cartesian</ref>&lt;double&gt; &gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classSplitter" kindref="compound">Splitter</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model for the concept <computeroutput><ref refid="classSplitter" kindref="compound">Splitter</ref></computeroutput>. It defaults to <computeroutput><ref refid="classCGAL_1_1Sliding__midpoint" kindref="compound">Sliding_midpoint</ref>&lt;Traits&gt;</computeroutput>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UseExtendedNode</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput>Tag_true</computeroutput>, if the tree shall be built with extended nodes, and <computeroutput>Tag_false</computeroutput> otherwise.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Kd__tree__node" kindref="compound">CGAL::Kd_tree_node</ref>&lt;Traits&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Search__traits__2" kindref="compound">CGAL::Search_traits_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Search__traits__3" kindref="compound">CGAL::Search_traits_3</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput> </para></simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Search__traits" kindref="compound">CGAL::Search_traits</ref>&lt;FT_,Point,CartesianIterator,ConstructCartesianIterator&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="CGAL/Kd_tree.h" line="24" column="1" bodyfile="CGAL/Kd_tree.h" bodystart="24" bodyend="228"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Kd__tree_1a6364586e6723ee2b39588602fa6cd3bb" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aa1d343250b7515e0a81fe9df18010e7a" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>bounding_box</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a14e4bfcf00392b6cfad2e78f24c0813d" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>build</name></member>
      <member refid="classCGAL_1_1Kd__tree_1afd162d3376f0c76aaf2cf9a3bcfe86d5" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>capacity</name></member>
      <member refid="classCGAL_1_1Kd__tree_1ad02056df51298aa0236e92d69af47034" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Kd__tree_1af2bb094094f1874d1cd0a6da1ac650c4" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>D</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a2d8c591e28d66f84d71d99431d47958d" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>end</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a62f0b462a864125e984ddcab104c902b" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a2378b3ff1a73a984cd36e145af74f11c" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a8100a78b987aa69d2edae40f9b171bf1" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aeedc970b83fe01315e77620e8d5bef28" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>invalidate_build</name></member>
      <member refid="classCGAL_1_1Kd__tree_1af506e9c83db7eb15ad8aaec11914888e" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Kd__tree_1affa94b4f024aff3274dfebe44ead61d0" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Kd_tree</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a28783d5ad66d21ea02ac99bd68656895" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Kd_tree</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a9debc8818a1499cc45ad325d20aabc40" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Node_const_handle</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aa429c75b62cacc3abdc88bdeaa525f8d" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Node_handle</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a82cb8381a9881c4b495959e9199b6544" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Point_d</name></member>
      <member refid="classCGAL_1_1Kd__tree_1ad27a2e99580b7caa4dca769b76d32133" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Point_d_iterator</name></member>
      <member refid="classCGAL_1_1Kd__tree_1adc28d64600c94360392e03f4a251f63c" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Kd__tree_1ac477dd4b97981c157466433c11144a11" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aa1ee131caff5ac370f1cbfa49b872c0c" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>reserve</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aca02ee532f9356ce0c26ccd1663bdc3c" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>root</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a6bec1ef044458c72ed5353759fdefa59" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>root</name></member>
      <member refid="classCGAL_1_1Kd__tree_1aa3725793cd312ca17378ff2793c3f8c7" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>search</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a24bc6f7c61dbd30f1b5716c99568598e" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>search_any_point</name></member>
      <member refid="classCGAL_1_1Kd__tree_1acc7b3a3b238c012e6837a81827d9f253" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>size</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a44d9d3235a6fc450013b22f9a2767ac1" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1Kd__tree_1ac24fc29d24eb4956bba22814db261f68" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>Splitter</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a2b32eb515f9fc369cd0424794849cf31" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>statistics</name></member>
      <member refid="classCGAL_1_1Kd__tree_1a3138e6de1424bf5b60a4cf77a70076aa" prot="public" virt="non-virtual"><scope>CGAL::Kd_tree</scope><name>traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
