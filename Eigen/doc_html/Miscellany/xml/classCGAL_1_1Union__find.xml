<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCGAL_1_1Union__find" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Union_find</compoundname>
    <includes local="no">CGAL/Union_find.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>There are also constant versions <computeroutput>const_handle</computeroutput> and <computeroutput>const_iterator</computeroutput>. </para></description>
      <memberdef kind="typedef" id="classCGAL_1_1Union__find_1afc9c2b52a877e38771aa2e7ea2b9e7ee" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Union_find&lt; T, A &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>values stored in items (equal to <computeroutput>T</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="31" column="1" bodyfile="CGAL/Union_find.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Union_find&lt; T, A &gt;::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
<para>handle to values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="36" column="1" bodyfile="CGAL/Union_find.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Union__find_1ad867619256d2bba89f56af3e076aeaaf" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Union_find&lt; T, A &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>iterator over values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="41" column="1" bodyfile="CGAL/Union_find.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Union__find_1a295e18e4c801620b90fbf86d864801fd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Union_find&lt; T, A &gt;::allocator</definition>
        <argsstring></argsstring>
        <name>allocator</name>
        <briefdescription>
<para>allocator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="46" column="1" bodyfile="CGAL/Union_find.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a71a9c4c15f21a94f38630bf835bbd6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Union_find&lt; T, A &gt;::Union_find</definition>
        <argsstring>()</argsstring>
        <name>Union_find</name>
        <briefdescription>
<para>creates an instance <computeroutput>P</computeroutput> of type <computeroutput><ref refid="classCGAL_1_1Union__find" kindref="compound">Union_find</ref>&lt;T,A&gt;</computeroutput> and initializes it to the empty partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1aacb9f431b8f1ff63bcf040be370293c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1a295e18e4c801620b90fbf86d864801fd" kindref="member">allocator</ref></type>
        <definition>allocator CGAL::Union_find&lt; T, A &gt;::get_allocator</definition>
        <argsstring>() const</argsstring>
        <name>get_allocator</name>
        <briefdescription>
<para>the allocator of the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1aae4263a04651138da5098b4045e8f40e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Union_find&lt; T, A &gt;::number_of_sets</definition>
        <argsstring>() const</argsstring>
        <name>number_of_sets</name>
        <briefdescription>
<para>returns the number of disjoint sets of the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1ad2140c9f54b78e14de569ae1bfde7bf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Union_find&lt; T, A &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>returns the number of values of the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a32f83bb37ea7be0e80f033e1e0ae350a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Union_find&lt; T, A &gt;::bytes</definition>
        <argsstring>() const</argsstring>
        <name>bytes</name>
        <briefdescription>
<para>returns the memory consumed by the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a772058c5d63f8b5a5dfbb936b3d042e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Union_find&lt; T, A &gt;::size</definition>
        <argsstring>(const_handle h) const</argsstring>
        <name>size</name>
        <param>
          <type>const_handle</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>returns the size of the set containing <computeroutput>h</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a1c2a178f7405de3fd974e2cb727a611d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Union_find&lt; T, A &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>reinitializes to an empty partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a1fc4f1bcc9835cfeb940364d3d17876e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
        <definition>handle CGAL::Union_find&lt; T, A &gt;::make_set</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>make_set</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>creates a new singleton set containing <computeroutput>x</computeroutput> and returns a handle to it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a1e5ff966bacdab662498bc3024939b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
        <definition>handle CGAL::Union_find&lt; T, A &gt;::push_back</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>push_back</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>same as <computeroutput><ref refid="classCGAL_1_1Union__find_1a1fc4f1bcc9835cfeb940364d3d17876e" kindref="member">make_set()</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1adc1f441ba20b48544a1e884ac4ca007c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Forward_iterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Union_find&lt; T, A &gt;::insert</definition>
        <argsstring>(Forward_iterator first, Forward_iterator beyond)</argsstring>
        <name>insert</name>
        <param>
          <type>Forward_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Forward_iterator</type>
          <declname>beyond</declname>
        </param>
        <briefdescription>
<para>inserts the range of values referenced by <computeroutput>[first,beyond)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Forward_iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a forward iterator with value type <computeroutput>T</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1ad6744b75225288c7f4846328e9a0f9cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
        <definition>handle CGAL::Union_find&lt; T, A &gt;::find</definition>
        <argsstring>(handle h) const</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a8e3bdae7d11bbaf5621ee41b484960c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_handle</type>
        <definition>const_handle CGAL::Union_find&lt; T, A &gt;::find</definition>
        <argsstring>(const_handle p) const</argsstring>
        <name>find</name>
        <param>
          <type>const_handle</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns a canonical handle of the set that contains <computeroutput>h</computeroutput>, i.e., <computeroutput>P.same_set(h,h2)</computeroutput> iff <computeroutput>P.find(h) == P.find(h2)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h</computeroutput> is a handle in <computeroutput>P</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a174898f2806fa67bcd4d423e204e3d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Union_find&lt; T, A &gt;::unify_sets</definition>
        <argsstring>(handle h1, handle h2)</argsstring>
        <name>unify_sets</name>
        <param>
          <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
          <declname>h1</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" kindref="member">handle</ref></type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>unites the sets of partition <computeroutput>P</computeroutput> containing <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are in <computeroutput>P</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a180f42c1731c875d67940e865aaeee84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Union_find&lt; T, A &gt;::same_set</definition>
        <argsstring>(const_handle h1, const_handle h2) const</argsstring>
        <name>same_set</name>
        <param>
          <type>const_handle</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const_handle</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> belong to the same set of <computeroutput>P</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are in <computeroutput>P</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a07336ed5d82765f29baee12c069c57fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1ad867619256d2bba89f56af3e076aeaaf" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Union_find&lt; T, A &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns an iterator pointing to the first value of the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Union__find_1a9de56ac4473fa565ccb9b73f5e2f9759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Union__find_1ad867619256d2bba89f56af3e076aeaaf" kindref="member">iterator</ref></type>
        <definition>iterator CGAL::Union_find&lt; T, A &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>returns an iterator pointing beyond the last value of the partition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Union_find.h" line="150" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance <computeroutput>P</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Union__find" kindref="compound">Union_find</ref>&lt;T,A&gt;</computeroutput> is a partition of values of type <computeroutput>T</computeroutput> into disjoint sets. </para>    </briefdescription>
    <detaileddescription>
<para>The template parameter <computeroutput>A</computeroutput> has to be a model of the allocator concept as defined in the C++ standard. It has a default argument <computeroutput><ref refid="group__PkgStlExtension_1ga859086d0e8d189c8c967229e024e5e82" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/STL_Extension.tag">CGAL_ALLOCATOR(T)</ref></computeroutput>.</para><para><bold>Implementation</bold><linebreak/>
</para><para><computeroutput><ref refid="classCGAL_1_1Union__find" kindref="compound">Union_find</ref>&lt;T,A&gt;</computeroutput> is implemented with union by rank and path compression. The running time for <formula id="0">$ m$</formula> set operations on <formula id="1">$ n$</formula> elements is <formula id="2">$ O(n \alpha(m,n))$</formula> where <formula id="3">$ \alpha(m,n)$</formula> is the extremely slow growing inverse of Ackermann&apos;s function. </para>    </detaileddescription>
    <location file="CGAL/Union_find.h" line="21" column="1" bodyfile="CGAL/Union_find.h" bodystart="21" bodyend="154"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Union__find_1a295e18e4c801620b90fbf86d864801fd" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>allocator</name></member>
      <member refid="classCGAL_1_1Union__find_1a07336ed5d82765f29baee12c069c57fd" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Union__find_1a32f83bb37ea7be0e80f033e1e0ae350a" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>bytes</name></member>
      <member refid="classCGAL_1_1Union__find_1a1c2a178f7405de3fd974e2cb727a611d" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Union__find_1a9de56ac4473fa565ccb9b73f5e2f9759" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>end</name></member>
      <member refid="classCGAL_1_1Union__find_1ad6744b75225288c7f4846328e9a0f9cb" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>find</name></member>
      <member refid="classCGAL_1_1Union__find_1a8e3bdae7d11bbaf5621ee41b484960c9" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>find</name></member>
      <member refid="classCGAL_1_1Union__find_1aacb9f431b8f1ff63bcf040be370293c2" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>get_allocator</name></member>
      <member refid="classCGAL_1_1Union__find_1ac08c544b252a924a90eade612a06c8c3" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>handle</name></member>
      <member refid="classCGAL_1_1Union__find_1adc1f441ba20b48544a1e884ac4ca007c" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Union__find_1ad867619256d2bba89f56af3e076aeaaf" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>iterator</name></member>
      <member refid="classCGAL_1_1Union__find_1a1fc4f1bcc9835cfeb940364d3d17876e" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>make_set</name></member>
      <member refid="classCGAL_1_1Union__find_1aae4263a04651138da5098b4045e8f40e" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>number_of_sets</name></member>
      <member refid="classCGAL_1_1Union__find_1a1e5ff966bacdab662498bc3024939b8f" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Union__find_1a180f42c1731c875d67940e865aaeee84" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>same_set</name></member>
      <member refid="classCGAL_1_1Union__find_1ad2140c9f54b78e14de569ae1bfde7bf3" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>size</name></member>
      <member refid="classCGAL_1_1Union__find_1a772058c5d63f8b5a5dfbb936b3d042e0" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>size</name></member>
      <member refid="classCGAL_1_1Union__find_1a174898f2806fa67bcd4d423e204e3d7a" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>unify_sets</name></member>
      <member refid="classCGAL_1_1Union__find_1a71a9c4c15f21a94f38630bf835bbd6cf" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>Union_find</name></member>
      <member refid="classCGAL_1_1Union__find_1afc9c2b52a877e38771aa2e7ea2b9e7ee" prot="public" virt="non-virtual"><scope>CGAL::Union_find</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
