<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Memory__sizer" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Memory_sizer</compoundname>
    <includes local="no">CGAL/Memory_sizer.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Memory__sizer_1a500ce0a317c158f01a046f543a6b5b05" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t CGAL::Memory_sizer::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Memory_sizer.h" line="29" column="1" bodyfile="CGAL/Memory_sizer.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="structCGAL_1_1Memory__sizer_1af3a7518cc6fe3631ad2b1ad7a083a878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Memory_sizer::Memory_sizer</definition>
        <argsstring>()</argsstring>
        <name>Memory_sizer</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Memory_sizer.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="structCGAL_1_1Memory__sizer_1a310b35b1ee98e9f35cff85287ed5d6d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Memory__sizer_1a500ce0a317c158f01a046f543a6b5b05" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Memory_sizer::virtual_size</definition>
        <argsstring>() const</argsstring>
        <name>virtual_size</name>
        <briefdescription>
<para>Returns the virtual memory size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Memory_sizer.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Memory__sizer_1adff42f645902288b5d65d436c5d2edf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Memory__sizer_1a500ce0a317c158f01a046f543a6b5b05" kindref="member">size_type</ref></type>
        <definition>size_type CGAL::Memory_sizer::resident_size</definition>
        <argsstring>() const</argsstring>
        <name>resident_size</name>
        <briefdescription>
<para>Returns the resident memory size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Memory_sizer.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Memory__sizer" kindref="compound">Memory_sizer</ref></computeroutput> allows to measure the memory size used by the process. </para>    </briefdescription>
    <detaileddescription>
<para>Both the virtual memory size and the resident size are available (the resident size does not account for swapped out memory nor for the memory which is not yet paged-in).</para><para><bold>Implementation</bold><linebreak/>
</para><para>Accessing this information requires the use of non-portable code. Currently, there is support for Linux platforms, the Microsoft and Intel compiler on Windows, as well as Mac OS X. If a platform is not supported, the two member functions return 0. </para>    </detaileddescription>
    <location file="CGAL/Memory_sizer.h" line="21" column="1" bodyfile="CGAL/Memory_sizer.h" bodystart="21" bodyend="58"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Memory__sizer_1af3a7518cc6fe3631ad2b1ad7a083a878" prot="public" virt="non-virtual"><scope>CGAL::Memory_sizer</scope><name>Memory_sizer</name></member>
      <member refid="structCGAL_1_1Memory__sizer_1adff42f645902288b5d65d436c5d2edf5" prot="public" virt="non-virtual"><scope>CGAL::Memory_sizer</scope><name>resident_size</name></member>
      <member refid="structCGAL_1_1Memory__sizer_1a500ce0a317c158f01a046f543a6b5b05" prot="public" virt="non-virtual"><scope>CGAL::Memory_sizer</scope><name>size_type</name></member>
      <member refid="structCGAL_1_1Memory__sizer_1a310b35b1ee98e9f35cff85287ed5d6d0" prot="public" virt="non-virtual"><scope>CGAL::Memory_sizer</scope><name>virtual_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
