<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structCGAL_1_1Handle__hash__function" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Handle_hash_function</compoundname>
    <includes local="no">CGAL/Handle_hash_function.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="structCGAL_1_1Handle__hash__function_1affe912c9996eec6a66d6c23fd6fe4157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Handle_hash_function::Handle_hash_function</definition>
        <argsstring>()</argsstring>
        <name>Handle_hash_function</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Handle_hash_function.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="structCGAL_1_1Handle__hash__function_1a425d5da776b0f7d410d7f05b884bbd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref></type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Handle_hash_function::operator()</definition>
        <argsstring>(const Handle &amp;key)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns unique hash value for any <computeroutput><ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref></computeroutput> type for which <computeroutput>&amp;*key</computeroutput> gives a unique address. </para>        </briefdescription>
        <detaileddescription>
<para>The type <computeroutput>std::iterator_traits&lt;<ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref>&gt;::value_type</computeroutput> has to be defined (which it is already for pointers, handles, iterators, and circulators). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Handle_hash_function.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Handle__hash__function" kindref="compound">Handle_hash_function</ref></computeroutput> is a model for the <computeroutput><ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref></computeroutput> concept. </para>    </briefdescription>
    <detaileddescription>
<para>It is applicable for all key types with pointer-like functionality, such as handles, iterators, and circulators. Specifically, for a <computeroutput>key</computeroutput> value the expression <computeroutput>&amp;*key</computeroutput> must return a unique address.</para><para><xrefsect id="models_1_models000001"><xreftitle>Is Model Of</xreftitle><xrefdescription><para><computeroutput><ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref></computeroutput></para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Unique__hash__map" kindref="compound">CGAL::Unique_hash_map</ref>&lt;Key,Data,<ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref>&gt;</computeroutput></para></simplesect>
<bold>Implementation</bold><linebreak/>
</para><para>Plain type cast of <computeroutput>&amp;*key</computeroutput> to <computeroutput>std::size_t</computeroutput> and devided by the size of the <computeroutput>std::iterator_traits&lt;<ref refid="classHandle" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Circulator.tag">Handle</ref>&gt;::value_type</computeroutput> to avoid correlations with the internal table size, which is a power of two. </para>    </detaileddescription>
    <location file="CGAL/Handle_hash_function.h" line="26" column="1" bodyfile="CGAL/Handle_hash_function.h" bodystart="26" bodyend="56"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Handle__hash__function_1affe912c9996eec6a66d6c23fd6fe4157" prot="public" virt="non-virtual"><scope>CGAL::Handle_hash_function</scope><name>Handle_hash_function</name></member>
      <member refid="structCGAL_1_1Handle__hash__function_1a425d5da776b0f7d410d7f05b884bbd8c" prot="public" virt="non-virtual"><scope>CGAL::Handle_hash_function</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
