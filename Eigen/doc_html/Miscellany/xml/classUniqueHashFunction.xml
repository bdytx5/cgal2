<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classUniqueHashFunction" kind="class" language="C++" prot="public">
    <compoundname>UniqueHashFunction</compoundname>
    <includes local="no">Concepts/UniqueHashFunction.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classUniqueHashFunction_1a716526b3d84504b046a8863e637255bb" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t UniqueHashFunction::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
<para>type of the hash value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/UniqueHashFunction.h" line="27" column="1" bodyfile="Concepts/UniqueHashFunction.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classUniqueHashFunction_1ae1cc8f8b6a4da46ffce62d15090def9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UniqueHashFunction::UniqueHashFunction</definition>
        <argsstring>(const UniqueHashFunction &amp;hash2)</argsstring>
        <name>UniqueHashFunction</name>
        <param>
          <type>const <ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref> &amp;</type>
          <declname>hash2</declname>
        </param>
        <briefdescription>
<para>copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/UniqueHashFunction.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classUniqueHashFunction_1a2117d552763783caa893812c892e8679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref> &amp;</type>
        <definition>UniqueHashFunction&amp; UniqueHashFunction::operator=</definition>
        <argsstring>(const UniqueHashFunction &amp;hash2)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref> &amp;</type>
          <declname>hash2</declname>
        </param>
        <briefdescription>
<para>assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/UniqueHashFunction.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classUniqueHashFunction_1a44bd8411856b5495cfb906e80c609fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t UniqueHashFunction::operator()</definition>
        <argsstring>(const Key &amp;key)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Key &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>returns a unique hash value for the <computeroutput>key</computeroutput> value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/UniqueHashFunction.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref></computeroutput> is a concept for a hash function with unique hash values. An instance <computeroutput>hash</computeroutput> for a model of the <computeroutput><ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref></computeroutput> concept is a function object. It maps objects of its domain type <computeroutput>Key</computeroutput> to the integral image type <computeroutput>std::size_t</computeroutput>. The image values have to be unique for all keys in the domain type <computeroutput>Key</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="structCGAL_1_1Handle__hash__function" kindref="compound">CGAL::Handle_hash_function</ref></computeroutput> </para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Unique__hash__map" kindref="compound">CGAL::Unique_hash_map</ref>&lt;Key,Data,<ref refid="classUniqueHashFunction" kindref="compound">UniqueHashFunction</ref>&gt;</computeroutput> </para></simplesect>
</para>    </detaileddescription>
    <location file="Concepts/UniqueHashFunction.h" line="18" column="1" bodyfile="Concepts/UniqueHashFunction.h" bodystart="18" bodyend="58"/>
    <listofallmembers>
      <member refid="classUniqueHashFunction_1a44bd8411856b5495cfb906e80c609fcf" prot="public" virt="non-virtual"><scope>UniqueHashFunction</scope><name>operator()</name></member>
      <member refid="classUniqueHashFunction_1a2117d552763783caa893812c892e8679" prot="public" virt="non-virtual"><scope>UniqueHashFunction</scope><name>operator=</name></member>
      <member refid="classUniqueHashFunction_1a716526b3d84504b046a8863e637255bb" prot="public" virt="non-virtual"><scope>UniqueHashFunction</scope><name>result_type</name></member>
      <member refid="classUniqueHashFunction_1ae1cc8f8b6a4da46ffce62d15090def9e" prot="public" virt="non-virtual"><scope>UniqueHashFunction</scope><name>UniqueHashFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
