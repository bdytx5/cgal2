<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Barycentric_coordinates_2_2Terrain_height_modeling_8cpp-example" kind="example">
    <compoundname>Barycentric_coordinates_2/Terrain_height_modeling.cpp</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Delaunay_mesher_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Interpolation_traits_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Projection_traits_xy_3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/interpolation_functions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Delaunay_mesh_face_base_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Delaunay_mesh_size_criteria_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Constrained_Delaunay_triangulation_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Barycentric_coordinates_2/Mean_value_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Exact_predicates_inexact_constructions_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Barycentric_coordinates_2/Generalized_barycentric_coordinates_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>convenient<sp/>typedefs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>General.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Exact_predicates_inexact_constructions_kernel</ref><sp/>Kernel;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Projection__traits__xy__3" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Kernel_23.tag">CGAL::Projection_traits_xy_3&lt;Kernel&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Projection;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Projection::FT<sp/><sp/><sp/><sp/><sp/><sp/>Scalar;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Projection::Point_2<sp/>Point;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Scalar&gt;<sp/>Scalar_vector;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Point&gt;<sp/><sp/>Point_vector;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Coordinates<sp/>related.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Mean__value__2" kindref="compound">CGAL::Barycentric_coordinates::Mean_value_2&lt;Projection&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mean_value;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Generalized__barycentric__coordinates__2" kindref="compound">CGAL::Barycentric_coordinates::Generalized_barycentric_coordinates_2&lt;Mean_value, Projection&gt;</ref><sp/>Mean_value_coordinates;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Triangulation<sp/>related.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Delaunay__mesh__face__base__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Mesh_2.tag">CGAL::Delaunay_mesh_face_base_2&lt;Projection&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face_base;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Triangulation__vertex__base__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Triangulation_vertex_base_2&lt;Projection&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertex_base;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CGAL::Triangulation_data_structure_2&lt;Vertex_base,<sp/>Face_base&gt;<sp/>TDS;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Triangulation_2.tag">CGAL::Constrained_Delaunay_triangulation_2&lt;Projection, TDS&gt;</ref><sp/><sp/>CDT;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Delaunay__mesh__size__criteria__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Mesh_2.tag">CGAL::Delaunay_mesh_size_criteria_2&lt;CDT&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Criteria;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Delaunay__mesher__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Mesh_2.tag">CGAL::Delaunay_mesher_2&lt;CDT, Criteria&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesher;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CDT::Finite_vertices_iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertex_iterator;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CDT::Vertex_handle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertex_handle;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Interpolation<sp/>related.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Interpolation__traits__2" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Interpolation.tag">CGAL::Interpolation_traits_2&lt;Projection&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Interpolation_traits;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Data__access" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Interpolation.tag">CGAL::Data_access&lt; std::map&lt;Point, Scalar, Projection::Less_xy_2 &gt;</ref><sp/>&gt;<sp/>Value_access;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>STD.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>polygon<sp/>bounding<sp/>a<sp/>piece<sp/>of<sp/>three-dimensional<sp/>terrain.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>z-coordinate<sp/>of<sp/>each<sp/>vertex<sp/>represents<sp/>the<sp/>height<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Projection<sp/>in<sp/>2D<sp/>is<sp/>done<sp/>automatically<sp/>by<sp/>the<sp/>Projection<sp/>traits<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_vertices<sp/>=<sp/>50;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Point_vector<sp/>vertices(number_of_vertices);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0]<sp/><sp/>=<sp/>Point(0.03,<sp/>0.05,<sp/>0.000);<sp/>vertices[1]<sp/><sp/>=<sp/>Point(0.07,<sp/>0.04,<sp/>10.00);<sp/>vertices[2]<sp/><sp/>=<sp/>Point(0.10,<sp/>0.04,<sp/>20.00);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[3]<sp/><sp/>=<sp/>Point(0.14,<sp/>0.04,<sp/>30.00);<sp/>vertices[4]<sp/><sp/>=<sp/>Point(0.17,<sp/>0.07,<sp/>40.00);<sp/>vertices[5]<sp/><sp/>=<sp/>Point(0.19,<sp/>0.09,<sp/>50.00);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[6]<sp/><sp/>=<sp/>Point(0.22,<sp/>0.11,<sp/>60.00);<sp/>vertices[7]<sp/><sp/>=<sp/>Point(0.25,<sp/>0.11,<sp/>70.00);<sp/>vertices[8]<sp/><sp/>=<sp/>Point(0.27,<sp/>0.10,<sp/>80.00);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[9]<sp/><sp/>=<sp/>Point(0.30,<sp/>0.07,<sp/>90.00);<sp/>vertices[10]<sp/>=<sp/>Point(0.31,<sp/>0.04,<sp/>100.0);<sp/>vertices[11]<sp/>=<sp/>Point(0.34,<sp/>0.03,<sp/>110.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[12]<sp/>=<sp/>Point(0.37,<sp/>0.02,<sp/>120.0);<sp/>vertices[13]<sp/>=<sp/>Point(0.40,<sp/>0.03,<sp/>130.0);<sp/>vertices[14]<sp/>=<sp/>Point(0.42,<sp/>0.04,<sp/>140.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[15]<sp/>=<sp/>Point(0.44,<sp/>0.07,<sp/>150.0);<sp/>vertices[16]<sp/>=<sp/>Point(0.45,<sp/>0.10,<sp/>160.0);<sp/>vertices[17]<sp/>=<sp/>Point(0.46,<sp/>0.13,<sp/>170.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[18]<sp/>=<sp/>Point(0.46,<sp/>0.19,<sp/>180.0);<sp/>vertices[19]<sp/>=<sp/>Point(0.47,<sp/>0.26,<sp/>190.0);<sp/>vertices[20]<sp/>=<sp/>Point(0.47,<sp/>0.31,<sp/>200.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[21]<sp/>=<sp/>Point(0.47,<sp/>0.35,<sp/>210.0);<sp/>vertices[22]<sp/>=<sp/>Point(0.45,<sp/>0.37,<sp/>220.0);<sp/>vertices[23]<sp/>=<sp/>Point(0.41,<sp/>0.38,<sp/>230.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[24]<sp/>=<sp/>Point(0.38,<sp/>0.37,<sp/>240.0);<sp/>vertices[25]<sp/>=<sp/>Point(0.35,<sp/>0.36,<sp/>250.0);<sp/>vertices[26]<sp/>=<sp/>Point(0.32,<sp/>0.35,<sp/>260.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[27]<sp/>=<sp/>Point(0.30,<sp/>0.37,<sp/>270.0);<sp/>vertices[28]<sp/>=<sp/>Point(0.28,<sp/>0.39,<sp/>280.0);<sp/>vertices[29]<sp/>=<sp/>Point(0.25,<sp/>0.40,<sp/>290.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[30]<sp/>=<sp/>Point(0.23,<sp/>0.39,<sp/>300.0);<sp/>vertices[31]<sp/>=<sp/>Point(0.21,<sp/>0.37,<sp/>310.0);<sp/>vertices[32]<sp/>=<sp/>Point(0.21,<sp/>0.34,<sp/>320.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[33]<sp/>=<sp/>Point(0.23,<sp/>0.32,<sp/>330.0);<sp/>vertices[34]<sp/>=<sp/>Point(0.24,<sp/>0.29,<sp/>340.0);<sp/>vertices[35]<sp/>=<sp/>Point(0.27,<sp/>0.24,<sp/>350.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[36]<sp/>=<sp/>Point(0.29,<sp/>0.21,<sp/>360.0);<sp/>vertices[37]<sp/>=<sp/>Point(0.29,<sp/>0.18,<sp/>370.0);<sp/>vertices[38]<sp/>=<sp/>Point(0.26,<sp/>0.16,<sp/>380.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[39]<sp/>=<sp/>Point(0.24,<sp/>0.17,<sp/>390.0);<sp/>vertices[40]<sp/>=<sp/>Point(0.23,<sp/>0.19,<sp/>400.0);<sp/>vertices[41]<sp/>=<sp/>Point(0.24,<sp/>0.22,<sp/>410.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[42]<sp/>=<sp/>Point(0.24,<sp/>0.25,<sp/>420.0);<sp/>vertices[43]<sp/>=<sp/>Point(0.21,<sp/>0.26,<sp/>430.0);<sp/>vertices[44]<sp/>=<sp/>Point(0.17,<sp/>0.26,<sp/>440.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[45]<sp/>=<sp/>Point(0.12,<sp/>0.24,<sp/>450.0);<sp/>vertices[46]<sp/>=<sp/>Point(0.07,<sp/>0.20,<sp/>460.0);<sp/>vertices[47]<sp/>=<sp/>Point(0.03,<sp/>0.15,<sp/>470.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[48]<sp/>=<sp/>Point(0.01,<sp/>0.10,<sp/>480.0);<sp/>vertices[49]<sp/>=<sp/>Point(0.02,<sp/>0.07,<sp/>490.0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mesh<sp/>this<sp/>polygon.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>constrained<sp/>Delaunay<sp/>triangulation.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CDT<sp/>cdt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Vertex_handle&gt;<sp/>vertex_handle(number_of_vertices);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>vertices<sp/>of<sp/>the<sp/>polygon<sp/>as<sp/>our<sp/>initial<sp/>point<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>number_of_vertices;<sp/>++i)<sp/>vertex_handle[i]<sp/>=<sp/>cdt.insert(vertices[i]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>constraints<sp/>-<sp/>edges<sp/>of<sp/>the<sp/>polygon<sp/>-<sp/>in<sp/>order<sp/>to<sp/>mesh<sp/>only<sp/>the<sp/>polygon&apos;s<sp/>interior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>number_of_vertices;<sp/>++i)<sp/>cdt.insert_constraint(vertex_handle[i],<sp/>vertex_handle[(i<sp/>+<sp/>1)<sp/>%<sp/>number_of_vertices]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Mesher<sp/>mesher(cdt);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>criteria<sp/>on<sp/>how<sp/>to<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mesher.set_criteria(Criteria(0.01,<sp/>0.01));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mesh<sp/>the<sp/>polygon.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mesher.refine_mesh();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>mean<sp/>value<sp/>coordinates<sp/>and<sp/>use<sp/>them<sp/>to<sp/>interpolate<sp/>data<sp/>from<sp/>the<sp/>polygon&apos;s<sp/>boundary<sp/>to<sp/>its<sp/>interior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Associate<sp/>each<sp/>point<sp/>with<sp/>the<sp/>corresponding<sp/>function<sp/>value<sp/>and<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Point,<sp/>Scalar,<sp/>Projection::Less_xy_2&gt;<sp/>point_function_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;Point,<sp/>Scalar&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_coordinates(number_of_vertices);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>number_of_vertices;<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_function_value.insert(std::make_pair(vertices[i],<sp/>vertices[i].z()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>with<sp/>mean<sp/>value<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Mean_value_coordinates<sp/>mean_value_coordinates(vertices.begin(),<sp/>vertices.end());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>all<sp/>new<sp/>interior<sp/>points<sp/>with<sp/>interpolated<sp/>data<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>points(cdt.number_of_vertices());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>of<sp/>the<sp/>height<sp/>interpolation:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>coordinates<sp/>and<sp/>interpolate<sp/>the<sp/>boundary<sp/>data<sp/>to<sp/>the<sp/>polygon&apos;s<sp/>interior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Vertex_iterator<sp/>vertex_iterator<sp/>=<sp/>cdt.finite_vertices_begin();<sp/>vertex_iterator<sp/>!=<sp/>cdt.finite_vertices_end();<sp/>++vertex_iterator)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar_vector<sp/>coordinates;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Point<sp/>&amp;point<sp/>=<sp/>vertex_iterator-&gt;point();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_value_coordinates(point,<sp/>std::back_inserter(coordinates));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>number_of_vertices;<sp/>++j)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_coordinates[j]<sp/>=<sp/>std::make_pair(vertices[j],<sp/>coordinates[j]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar<sp/>f<sp/>=<sp/><ref refid="group__PkgInterpolation2Interpolation_1ga2f8a2f88b5b91b9f3db2d5e40bfa1df7" kindref="member" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Interpolation.tag">CGAL::linear_interpolation</ref>(point_coordinates.begin(),<sp/>point_coordinates.end(),<sp/>Scalar(1),<sp/>Value_access(point_function_value));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[index]<sp/>=<sp/>Point(point.x(),<sp/>point.y(),<sp/>f);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>interpolated<sp/>height<sp/>with<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
