<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classBarycentricCoordinates__2" kind="class" language="C++" prot="public">
    <compoundname>BarycentricCoordinates_2</compoundname>
    <includes local="no">Concepts/BarycentricCoordinates_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classBarycentricCoordinates__2_1a3b313ef689f63392d3d271352571ccd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BarycentricCoordinates_2::BarycentricCoordinates_2</definition>
        <argsstring>(const std::vector&lt; Traits::Point_2 &gt; &amp;vertices, const Traits &amp;barycentric_traits)</argsstring>
        <name>BarycentricCoordinates_2</name>
        <param>
          <type>const std::vector&lt; Traits::Point_2 &gt; &amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>barycentric_traits</declname>
        </param>
        <briefdescription>
<para>Creates a class that implements generalized barycentric coordinates for any query point that does not belong to the polygon&apos;s boundary. </para>        </briefdescription>
        <detaileddescription>
<para>The polygon is given by a range of vertices of the type <computeroutput>Traits::Point_2</computeroutput> stored in a container of the type <ulink url="http://en.cppreference.com/w/cpp/container/vector"><computeroutput>std::vector</computeroutput></ulink>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="22" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classBarycentricCoordinates__2_1aa5287320b47d8a78e8dd6740b1710edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>boost::optional&lt;OutputIterator&gt; BarycentricCoordinates_2::weights</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output)</argsstring>
        <name>weights</name>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates without normalization that are called generalized baycentric weights (as fast as possible algorithm is used). </para>        </briefdescription>
        <detaileddescription>
<para>Weights are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBarycentricCoordinates__2_1a791bff0dec3137a44323f44afac8d35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>boost::optional&lt;OutputIterator&gt; BarycentricCoordinates_2::coordinates_on_bounded_side</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output, const Type_of_algorithm type_of_algorithm)</argsstring>
        <name>coordinates_on_bounded_side</name>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const Type_of_algorithm</type>
          <declname>type_of_algorithm</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates on the bounded side of a polygon with one of two possible algorithms: one is precise and one is fast. </para>        </briefdescription>
        <detaileddescription>
<para>The algorithm type is specified by the parameter type_of_algorithm. Coordinates are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBarycentricCoordinates__2_1a240e8cd70875751f6480ed072a64250e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>boost::optional&lt;OutputIterator&gt; BarycentricCoordinates_2::coordinates_on_unbounded_side</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output, const Type_of_algorithm type_of_algorithm)</argsstring>
        <name>coordinates_on_unbounded_side</name>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/cgal-testsuite/cgal_doc_build/CGAL-4.13-I-128/doc/scripts/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const Type_of_algorithm</type>
          <declname>type_of_algorithm</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates on the unbounded side of a polygon with one of two possible algorithms: one is precise and one is fast. </para>        </briefdescription>
        <detaileddescription>
<para>The algorithm type is specified by the parameter type_of_algorithm. Coordinates are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Requirements of the template parameter <computeroutput>Coordinate_2</computeroutput> for the class <computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Generalized__barycentric__coordinates__2" kindref="compound">CGAL::Barycentric_coordinates::Generalized_barycentric_coordinates_2</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para> <xrefsect id="hasModels_1_hasModels000001"><xreftitle>Has Models</xreftitle><xrefdescription><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Wachspress__2" kindref="compound">CGAL::Barycentric_coordinates::Wachspress_2</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Mean__value__2" kindref="compound">CGAL::Barycentric_coordinates::Mean_value_2</ref></computeroutput> </para><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Discrete__harmonic__2" kindref="compound">CGAL::Barycentric_coordinates::Discrete_harmonic_2</ref></computeroutput></para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="Concepts/BarycentricCoordinates_2.h" line="13" column="1" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="13" bodyend="51"/>
    <listofallmembers>
      <member refid="classBarycentricCoordinates__2_1a3b313ef689f63392d3d271352571ccd9" prot="public" virt="non-virtual"><scope>BarycentricCoordinates_2</scope><name>BarycentricCoordinates_2</name></member>
      <member refid="classBarycentricCoordinates__2_1a791bff0dec3137a44323f44afac8d35b" prot="public" virt="non-virtual"><scope>BarycentricCoordinates_2</scope><name>coordinates_on_bounded_side</name></member>
      <member refid="classBarycentricCoordinates__2_1a240e8cd70875751f6480ed072a64250e" prot="public" virt="non-virtual"><scope>BarycentricCoordinates_2</scope><name>coordinates_on_unbounded_side</name></member>
      <member refid="classBarycentricCoordinates__2_1aa5287320b47d8a78e8dd6740b1710edf" prot="public" virt="non-virtual"><scope>BarycentricCoordinates_2</scope><name>weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
